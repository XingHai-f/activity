/*! Build time: 11/28/2024, 2:09:36 PM
Package: @bilibili-activity/era-lottery
Version: 1.1.6
Env: production
 */
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value2) => key in obj ? __defProp(obj, key, {
  enumerable: true,
  configurable: true,
  writable: true,
  value: value2
}) : obj[key] = value2;
var __publicField = (obj, key, value2) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value2);
  return value2;
};
(function (global2, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory(require("vue"), require("react")) : typeof define === "function" && define.amd ? define(["vue", "react"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, global2.EraLottery = factory(global2.Vue));
})(this, function (Vue) {
  var _a, _b;
  "use strict";
  function bind$1(fn2, thisArg) {
    return function wrap2() {
      return fn2.apply(thisArg, arguments);
    };
  }
  const {
    toString: toString$3
  } = Object.prototype;
  const {
    getPrototypeOf
  } = Object;
  const kindOf = (cache => thing => {
    const str = toString$3.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
  })(/* @__PURE__ */Object.create(null));
  const kindOfTest = type => {
    type = type.toLowerCase();
    return thing => kindOf(thing) === type;
  };
  const typeOfTest = type => thing => typeof thing === type;
  const {
    isArray: isArray$f
  } = Array;
  const isUndefined = typeOfTest("undefined");
  function isBuffer$5(val2) {
    return val2 !== null && !isUndefined(val2) && val2.constructor !== null && !isUndefined(val2.constructor) && isFunction$4(val2.constructor.isBuffer) && val2.constructor.isBuffer(val2);
  }
  const isArrayBuffer = kindOfTest("ArrayBuffer");
  function isArrayBufferView(val2) {
    let result;
    if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
      result = ArrayBuffer.isView(val2);
    } else {
      result = val2 && val2.buffer && isArrayBuffer(val2.buffer);
    }
    return result;
  }
  const isString = typeOfTest("string");
  const isFunction$4 = typeOfTest("function");
  const isNumber = typeOfTest("number");
  const isObject$e = thing => thing !== null && typeof thing === "object";
  const isBoolean = thing => thing === true || thing === false;
  const isPlainObject$3 = val2 => {
    if (kindOf(val2) !== "object") {
      return false;
    }
    const prototype2 = getPrototypeOf(val2);
    return (prototype2 === null || prototype2 === Object.prototype || Object.getPrototypeOf(prototype2) === null) && !(Symbol.toStringTag in val2) && !(Symbol.iterator in val2);
  };
  const isDate$2 = kindOfTest("Date");
  const isFile = kindOfTest("File");
  const isBlob$1 = kindOfTest("Blob");
  const isFileList = kindOfTest("FileList");
  const isStream = val2 => isObject$e(val2) && isFunction$4(val2.pipe);
  const isFormData$2 = thing => {
    let kind;
    return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction$4(thing.append) && ((kind = kindOf(thing)) === "formdata" ||
    // detect form-data instance
    kind === "object" && isFunction$4(thing.toString) && thing.toString() === "[object FormData]"));
  };
  const isURLSearchParams = kindOfTest("URLSearchParams");
  const [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
  const trim = str => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  function forEach$1(obj, fn2) {
    let {
      allOwnKeys = false
    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    if (obj === null || typeof obj === "undefined") {
      return;
    }
    let i2;
    let l2;
    if (typeof obj !== "object") {
      obj = [obj];
    }
    if (isArray$f(obj)) {
      for (i2 = 0, l2 = obj.length; i2 < l2; i2++) {
        fn2.call(null, obj[i2], i2, obj);
      }
    } else {
      const keys2 = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
      const len = keys2.length;
      let key;
      for (i2 = 0; i2 < len; i2++) {
        key = keys2[i2];
        fn2.call(null, obj[key], key, obj);
      }
    }
  }
  function findKey(obj, key) {
    key = key.toLowerCase();
    const keys2 = Object.keys(obj);
    let i2 = keys2.length;
    let _key;
    while (i2-- > 0) {
      _key = keys2[i2];
      if (key === _key.toLowerCase()) {
        return _key;
      }
    }
    return null;
  }
  const _global = (() => {
    if (typeof globalThis !== "undefined") return globalThis;
    return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
  })();
  const isContextDefined = context => !isUndefined(context) && context !== _global;
  function merge$1() {
    const {
      caseless
    } = isContextDefined(this) && this || {};
    const result = {};
    const assignValue2 = (val2, key) => {
      const targetKey = caseless && findKey(result, key) || key;
      if (isPlainObject$3(result[targetKey]) && isPlainObject$3(val2)) {
        result[targetKey] = merge$1(result[targetKey], val2);
      } else if (isPlainObject$3(val2)) {
        result[targetKey] = merge$1({}, val2);
      } else if (isArray$f(val2)) {
        result[targetKey] = val2.slice();
      } else {
        result[targetKey] = val2;
      }
    };
    for (let i2 = 0, l2 = arguments.length; i2 < l2; i2++) {
      arguments[i2] && forEach$1(arguments[i2], assignValue2);
    }
    return result;
  }
  const extend = function (a2, b2, thisArg) {
    let {
      allOwnKeys
    } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    forEach$1(b2, (val2, key) => {
      if (thisArg && isFunction$4(val2)) {
        a2[key] = bind$1(val2, thisArg);
      } else {
        a2[key] = val2;
      }
    }, {
      allOwnKeys
    });
    return a2;
  };
  const stripBOM = content2 => {
    if (content2.charCodeAt(0) === 65279) {
      content2 = content2.slice(1);
    }
    return content2;
  };
  const inherits = (constructor, superConstructor, props, descriptors2) => {
    constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
    constructor.prototype.constructor = constructor;
    Object.defineProperty(constructor, "super", {
      value: superConstructor.prototype
    });
    props && Object.assign(constructor.prototype, props);
  };
  const toFlatObject = (sourceObj, destObj, filter, propFilter) => {
    let props;
    let i2;
    let prop;
    const merged = {};
    destObj = destObj || {};
    if (sourceObj == null) return destObj;
    do {
      props = Object.getOwnPropertyNames(sourceObj);
      i2 = props.length;
      while (i2-- > 0) {
        prop = props[i2];
        if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
          destObj[prop] = sourceObj[prop];
          merged[prop] = true;
        }
      }
      sourceObj = filter !== false && getPrototypeOf(sourceObj);
    } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);
    return destObj;
  };
  const endsWith = (str, searchString, position) => {
    str = String(str);
    if (position === void 0 || position > str.length) {
      position = str.length;
    }
    position -= searchString.length;
    const lastIndex = str.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  };
  const toArray$1 = thing => {
    if (!thing) return null;
    if (isArray$f(thing)) return thing;
    let i2 = thing.length;
    if (!isNumber(i2)) return null;
    const arr2 = new Array(i2);
    while (i2-- > 0) {
      arr2[i2] = thing[i2];
    }
    return arr2;
  };
  const isTypedArray$3 = (TypedArray => {
    return thing => {
      return TypedArray && thing instanceof TypedArray;
    };
  })(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
  const forEachEntry = (obj, fn2) => {
    const generator = obj && obj[Symbol.iterator];
    const iterator = generator.call(obj);
    let result;
    while ((result = iterator.next()) && !result.done) {
      const pair = result.value;
      fn2.call(obj, pair[0], pair[1]);
    }
  };
  const matchAll = (regExp, str) => {
    let matches;
    const arr2 = [];
    while ((matches = regExp.exec(str)) !== null) {
      arr2.push(matches);
    }
    return arr2;
  };
  const isHTMLForm = kindOfTest("HTMLFormElement");
  const toCamelCase = str => {
    return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function replacer(m2, p1, p2) {
      return p1.toUpperCase() + p2;
    });
  };
  const hasOwnProperty$b = (_ref4 => {
    let {
      hasOwnProperty: hasOwnProperty2
    } = _ref4;
    return (obj, prop) => hasOwnProperty2.call(obj, prop);
  })(Object.prototype);
  const isRegExp$1 = kindOfTest("RegExp");
  const reduceDescriptors = (obj, reducer) => {
    const descriptors2 = Object.getOwnPropertyDescriptors(obj);
    const reducedDescriptors = {};
    forEach$1(descriptors2, (descriptor, name) => {
      let ret;
      if ((ret = reducer(descriptor, name, obj)) !== false) {
        reducedDescriptors[name] = ret || descriptor;
      }
    });
    Object.defineProperties(obj, reducedDescriptors);
  };
  const freezeMethods = obj => {
    reduceDescriptors(obj, (descriptor, name) => {
      if (isFunction$4(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
        return false;
      }
      const value2 = obj[name];
      if (!isFunction$4(value2)) return;
      descriptor.enumerable = false;
      if ("writable" in descriptor) {
        descriptor.writable = false;
        return;
      }
      if (!descriptor.set) {
        descriptor.set = () => {
          throw Error("Can not rewrite read-only method '" + name + "'");
        };
      }
    });
  };
  const toObjectSet = (arrayOrString, delimiter) => {
    const obj = {};
    const define2 = arr2 => {
      arr2.forEach(value2 => {
        obj[value2] = true;
      });
    };
    isArray$f(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter));
    return obj;
  };
  const noop = () => {};
  const toFiniteNumber = (value2, defaultValue) => {
    return value2 != null && Number.isFinite(value2 = +value2) ? value2 : defaultValue;
  };
  const ALPHA = "abcdefghijklmnopqrstuvwxyz";
  const DIGIT = "0123456789";
  const ALPHABET = {
    DIGIT,
    ALPHA,
    ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
  };
  const generateString = function () {
    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;
    let alphabet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ALPHABET.ALPHA_DIGIT;
    let str = "";
    const {
      length
    } = alphabet;
    while (size--) {
      str += alphabet[Math.random() * length | 0];
    }
    return str;
  };
  function isSpecCompliantForm(thing) {
    return !!(thing && isFunction$4(thing.append) && thing[Symbol.toStringTag] === "FormData" && thing[Symbol.iterator]);
  }
  const toJSONObject = obj => {
    const stack = new Array(10);
    const visit = (source, i2) => {
      if (isObject$e(source)) {
        if (stack.indexOf(source) >= 0) {
          return;
        }
        if (!("toJSON" in source)) {
          stack[i2] = source;
          const target = isArray$f(source) ? [] : {};
          forEach$1(source, (value2, key) => {
            const reducedValue = visit(value2, i2 + 1);
            !isUndefined(reducedValue) && (target[key] = reducedValue);
          });
          stack[i2] = void 0;
          return target;
        }
      }
      return source;
    };
    return visit(obj, 0);
  };
  const isAsyncFn = kindOfTest("AsyncFunction");
  const isThenable = thing => thing && (isObject$e(thing) || isFunction$4(thing)) && isFunction$4(thing.then) && isFunction$4(thing.catch);
  const _setImmediate = ((setImmediateSupported, postMessageSupported) => {
    if (setImmediateSupported) {
      return setImmediate;
    }
    return postMessageSupported ? ((token, callbacks) => {
      _global.addEventListener("message", _ref5 => {
        let {
          source,
          data: data2
        } = _ref5;
        if (source === _global && data2 === token) {
          callbacks.length && callbacks.shift()();
        }
      }, false);
      return cb => {
        callbacks.push(cb);
        _global.postMessage(token, "*");
      };
    })(`axios@${Math.random()}`, []) : cb => setTimeout(cb);
  })(typeof setImmediate === "function", isFunction$4(_global.postMessage));
  const asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
  const utils$7 = {
    isArray: isArray$f,
    isArrayBuffer,
    isBuffer: isBuffer$5,
    isFormData: isFormData$2,
    isArrayBufferView,
    isString,
    isNumber,
    isBoolean,
    isObject: isObject$e,
    isPlainObject: isPlainObject$3,
    isReadableStream,
    isRequest,
    isResponse,
    isHeaders,
    isUndefined,
    isDate: isDate$2,
    isFile,
    isBlob: isBlob$1,
    isRegExp: isRegExp$1,
    isFunction: isFunction$4,
    isStream,
    isURLSearchParams,
    isTypedArray: isTypedArray$3,
    isFileList,
    forEach: forEach$1,
    merge: merge$1,
    extend,
    trim,
    stripBOM,
    inherits,
    toFlatObject,
    kindOf,
    kindOfTest,
    endsWith,
    toArray: toArray$1,
    forEachEntry,
    matchAll,
    isHTMLForm,
    hasOwnProperty: hasOwnProperty$b,
    hasOwnProp: hasOwnProperty$b,
    // an alias to avoid ESLint no-prototype-builtins detection
    reduceDescriptors,
    freezeMethods,
    toObjectSet,
    toCamelCase,
    noop,
    toFiniteNumber,
    findKey,
    global: _global,
    isContextDefined,
    ALPHABET,
    generateString,
    isSpecCompliantForm,
    toJSONObject,
    isAsyncFn,
    isThenable,
    setImmediate: _setImmediate,
    asap
  };
  function AxiosError(message, code, config, request2, response) {
    Error.call(this);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    } else {
      this.stack = new Error().stack;
    }
    this.message = message;
    this.name = "AxiosError";
    code && (this.code = code);
    config && (this.config = config);
    request2 && (this.request = request2);
    if (response) {
      this.response = response;
      this.status = response.status ? response.status : null;
    }
  }
  utils$7.inherits(AxiosError, Error, {
    toJSON: function toJSON() {
      return {
        // Standard
        message: this.message,
        name: this.name,
        // Microsoft
        description: this.description,
        number: this.number,
        // Mozilla
        fileName: this.fileName,
        lineNumber: this.lineNumber,
        columnNumber: this.columnNumber,
        stack: this.stack,
        // Axios
        config: utils$7.toJSONObject(this.config),
        code: this.code,
        status: this.status
      };
    }
  });
  const prototype$1 = AxiosError.prototype;
  const descriptors = {};
  ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
  ].forEach(code => {
    descriptors[code] = {
      value: code
    };
  });
  Object.defineProperties(AxiosError, descriptors);
  Object.defineProperty(prototype$1, "isAxiosError", {
    value: true
  });
  AxiosError.from = (error, code, config, request2, response, customProps) => {
    const axiosError = Object.create(prototype$1);
    utils$7.toFlatObject(error, axiosError, function filter(obj) {
      return obj !== Error.prototype;
    }, prop => {
      return prop !== "isAxiosError";
    });
    AxiosError.call(axiosError, error.message, code, config, request2, response);
    axiosError.cause = error;
    axiosError.name = error.name;
    customProps && Object.assign(axiosError, customProps);
    return axiosError;
  };
  const httpAdapter = null;
  function isVisitable(thing) {
    return utils$7.isPlainObject(thing) || utils$7.isArray(thing);
  }
  function removeBrackets(key) {
    return utils$7.endsWith(key, "[]") ? key.slice(0, -2) : key;
  }
  function renderKey(path, key, dots) {
    if (!path) return key;
    return path.concat(key).map(function each(token, i2) {
      token = removeBrackets(token);
      return !dots && i2 ? "[" + token + "]" : token;
    }).join(dots ? "." : "");
  }
  function isFlatArray(arr2) {
    return utils$7.isArray(arr2) && !arr2.some(isVisitable);
  }
  const predicates = utils$7.toFlatObject(utils$7, {}, null, function filter(prop) {
    return /^is[A-Z]/.test(prop);
  });
  function toFormData(obj, formData, options) {
    if (!utils$7.isObject(obj)) {
      throw new TypeError("target must be an object");
    }
    formData = formData || new FormData();
    options = utils$7.toFlatObject(options, {
      metaTokens: true,
      dots: false,
      indexes: false
    }, false, function defined(option, source) {
      return !utils$7.isUndefined(source[option]);
    });
    const metaTokens = options.metaTokens;
    const visitor = options.visitor || defaultVisitor;
    const dots = options.dots;
    const indexes = options.indexes;
    const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
    const useBlob = _Blob && utils$7.isSpecCompliantForm(formData);
    if (!utils$7.isFunction(visitor)) {
      throw new TypeError("visitor must be a function");
    }
    function convertValue(value2) {
      if (value2 === null) return "";
      if (utils$7.isDate(value2)) {
        return value2.toISOString();
      }
      if (!useBlob && utils$7.isBlob(value2)) {
        throw new AxiosError("Blob is not supported. Use a Buffer instead.");
      }
      if (utils$7.isArrayBuffer(value2) || utils$7.isTypedArray(value2)) {
        return useBlob && typeof Blob === "function" ? new Blob([value2]) : Buffer.from(value2);
      }
      return value2;
    }
    function defaultVisitor(value2, key, path) {
      let arr2 = value2;
      if (value2 && !path && typeof value2 === "object") {
        if (utils$7.endsWith(key, "{}")) {
          key = metaTokens ? key : key.slice(0, -2);
          value2 = JSON.stringify(value2);
        } else if (utils$7.isArray(value2) && isFlatArray(value2) || (utils$7.isFileList(value2) || utils$7.endsWith(key, "[]")) && (arr2 = utils$7.toArray(value2))) {
          key = removeBrackets(key);
          arr2.forEach(function each(el, index2) {
            !(utils$7.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index2, dots) : indexes === null ? key : key + "[]", convertValue(el));
          });
          return false;
        }
      }
      if (isVisitable(value2)) {
        return true;
      }
      formData.append(renderKey(path, key, dots), convertValue(value2));
      return false;
    }
    const stack = [];
    const exposedHelpers = Object.assign(predicates, {
      defaultVisitor,
      convertValue,
      isVisitable
    });
    function build(value2, path) {
      if (utils$7.isUndefined(value2)) return;
      if (stack.indexOf(value2) !== -1) {
        throw Error("Circular reference detected in " + path.join("."));
      }
      stack.push(value2);
      utils$7.forEach(value2, function each(el, key) {
        const result = !(utils$7.isUndefined(el) || el === null) && visitor.call(formData, el, utils$7.isString(key) ? key.trim() : key, path, exposedHelpers);
        if (result === true) {
          build(el, path ? path.concat(key) : [key]);
        }
      });
      stack.pop();
    }
    if (!utils$7.isObject(obj)) {
      throw new TypeError("data must be an object");
    }
    build(obj);
    return formData;
  }
  function encode$3(str) {
    const charMap = {
      "!": "%21",
      "'": "%27",
      "(": "%28",
      ")": "%29",
      "~": "%7E",
      "%20": "+",
      "%00": "\0"
    };
    return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
      return charMap[match];
    });
  }
  function AxiosURLSearchParams(params, options) {
    this._pairs = [];
    params && toFormData(params, this, options);
  }
  const prototype = AxiosURLSearchParams.prototype;
  prototype.append = function append(name, value2) {
    this._pairs.push([name, value2]);
  };
  prototype.toString = function toString2(encoder) {
    const _encode = encoder ? function (value2) {
      return encoder.call(this, value2, encode$3);
    } : encode$3;
    return this._pairs.map(function each(pair) {
      return _encode(pair[0]) + "=" + _encode(pair[1]);
    }, "").join("&");
  };
  function encode$2(val2) {
    return encodeURIComponent(val2).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  }
  function buildURL$2(url2, params, options) {
    if (!params) {
      return url2;
    }
    const _encode = options && options.encode || encode$2;
    const serializeFn = options && options.serialize;
    let serializedParams;
    if (serializeFn) {
      serializedParams = serializeFn(params, options);
    } else {
      serializedParams = utils$7.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams(params, options).toString(_encode);
    }
    if (serializedParams) {
      const hashmarkIndex = url2.indexOf("#");
      if (hashmarkIndex !== -1) {
        url2 = url2.slice(0, hashmarkIndex);
      }
      url2 += (url2.indexOf("?") === -1 ? "?" : "&") + serializedParams;
    }
    return url2;
  }
  class InterceptorManager {
    constructor() {
      this.handlers = [];
    }
    /**
     * Add a new interceptor to the stack
     *
     * @param {Function} fulfilled The function to handle `then` for a `Promise`
     * @param {Function} rejected The function to handle `reject` for a `Promise`
     *
     * @return {Number} An ID used to remove interceptor later
     */
    use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    }
    /**
     * Remove an interceptor from the stack
     *
     * @param {Number} id The ID that was returned by `use`
     *
     * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
     */
    eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    }
    /**
     * Clear all interceptors from the stack
     *
     * @returns {void}
     */
    clear() {
      if (this.handlers) {
        this.handlers = [];
      }
    }
    /**
     * Iterate over all the registered interceptors
     *
     * This method is particularly useful for skipping over any
     * interceptors that may have become `null` calling `eject`.
     *
     * @param {Function} fn The function to call for each interceptor
     *
     * @returns {void}
     */
    forEach(fn2) {
      utils$7.forEach(this.handlers, function forEachHandler(h2) {
        if (h2 !== null) {
          fn2(h2);
        }
      });
    }
  }
  const InterceptorManager$1 = InterceptorManager;
  const transitionalDefaults = {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  };
  const URLSearchParams$1 = typeof URLSearchParams !== "undefined" ? URLSearchParams : AxiosURLSearchParams;
  const FormData$1 = typeof FormData !== "undefined" ? FormData : null;
  const Blob$1 = typeof Blob !== "undefined" ? Blob : null;
  const platform$1 = {
    isBrowser: true,
    classes: {
      URLSearchParams: URLSearchParams$1,
      FormData: FormData$1,
      Blob: Blob$1
    },
    protocols: ["http", "https", "file", "blob", "url", "data"]
  };
  const hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
  const _navigator = typeof navigator === "object" && navigator || void 0;
  const hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
  const hasStandardBrowserWebWorkerEnv = (() => {
    return typeof WorkerGlobalScope !== "undefined" &&
    // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
  })();
  const origin$1 = hasBrowserEnv && window.location.href || "http://localhost";
  const utils$6 = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({
    __proto__: null,
    hasBrowserEnv,
    hasStandardBrowserEnv,
    hasStandardBrowserWebWorkerEnv,
    navigator: _navigator,
    origin: origin$1
  }, Symbol.toStringTag, {
    value: "Module"
  }));
  const platform = {
    ...utils$6,
    ...platform$1
  };
  function toURLEncodedForm(data2, options) {
    return toFormData(data2, new platform.classes.URLSearchParams(), Object.assign({
      visitor: function (value2, key, path, helpers) {
        if (platform.isNode && utils$7.isBuffer(value2)) {
          this.append(key, value2.toString("base64"));
          return false;
        }
        return helpers.defaultVisitor.apply(this, arguments);
      }
    }, options));
  }
  function parsePropPath(name) {
    return utils$7.matchAll(/\w+|\[(\w*)]/g, name).map(match => {
      return match[0] === "[]" ? "" : match[1] || match[0];
    });
  }
  function arrayToObject$1(arr2) {
    const obj = {};
    const keys2 = Object.keys(arr2);
    let i2;
    const len = keys2.length;
    let key;
    for (i2 = 0; i2 < len; i2++) {
      key = keys2[i2];
      obj[key] = arr2[key];
    }
    return obj;
  }
  function formDataToJSON(formData) {
    function buildPath(path, value2, target, index2) {
      let name = path[index2++];
      if (name === "__proto__") return true;
      const isNumericKey = Number.isFinite(+name);
      const isLast = index2 >= path.length;
      name = !name && utils$7.isArray(target) ? target.length : name;
      if (isLast) {
        if (utils$7.hasOwnProp(target, name)) {
          target[name] = [target[name], value2];
        } else {
          target[name] = value2;
        }
        return !isNumericKey;
      }
      if (!target[name] || !utils$7.isObject(target[name])) {
        target[name] = [];
      }
      const result = buildPath(path, value2, target[name], index2);
      if (result && utils$7.isArray(target[name])) {
        target[name] = arrayToObject$1(target[name]);
      }
      return !isNumericKey;
    }
    if (utils$7.isFormData(formData) && utils$7.isFunction(formData.entries)) {
      const obj = {};
      utils$7.forEachEntry(formData, (name, value2) => {
        buildPath(parsePropPath(name), value2, obj, 0);
      });
      return obj;
    }
    return null;
  }
  function stringifySafely(rawValue, parser, encoder) {
    if (utils$7.isString(rawValue)) {
      try {
        (parser || JSON.parse)(rawValue);
        return utils$7.trim(rawValue);
      } catch (e2) {
        if (e2.name !== "SyntaxError") {
          throw e2;
        }
      }
    }
    return (encoder || JSON.stringify)(rawValue);
  }
  const defaults$2 = {
    transitional: transitionalDefaults,
    adapter: ["xhr", "http", "fetch"],
    transformRequest: [function transformRequest(data2, headers) {
      const contentType = headers.getContentType() || "";
      const hasJSONContentType = contentType.indexOf("application/json") > -1;
      const isObjectPayload = utils$7.isObject(data2);
      if (isObjectPayload && utils$7.isHTMLForm(data2)) {
        data2 = new FormData(data2);
      }
      const isFormData2 = utils$7.isFormData(data2);
      if (isFormData2) {
        return hasJSONContentType ? JSON.stringify(formDataToJSON(data2)) : data2;
      }
      if (utils$7.isArrayBuffer(data2) || utils$7.isBuffer(data2) || utils$7.isStream(data2) || utils$7.isFile(data2) || utils$7.isBlob(data2) || utils$7.isReadableStream(data2)) {
        return data2;
      }
      if (utils$7.isArrayBufferView(data2)) {
        return data2.buffer;
      }
      if (utils$7.isURLSearchParams(data2)) {
        headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
        return data2.toString();
      }
      let isFileList2;
      if (isObjectPayload) {
        if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
          return toURLEncodedForm(data2, this.formSerializer).toString();
        }
        if ((isFileList2 = utils$7.isFileList(data2)) || contentType.indexOf("multipart/form-data") > -1) {
          const _FormData = this.env && this.env.FormData;
          return toFormData(isFileList2 ? {
            "files[]": data2
          } : data2, _FormData && new _FormData(), this.formSerializer);
        }
      }
      if (isObjectPayload || hasJSONContentType) {
        headers.setContentType("application/json", false);
        return stringifySafely(data2);
      }
      return data2;
    }],
    transformResponse: [function transformResponse(data2) {
      const transitional = this.transitional || defaults$2.transitional;
      const forcedJSONParsing = transitional && transitional.forcedJSONParsing;
      const JSONRequested = this.responseType === "json";
      if (utils$7.isResponse(data2) || utils$7.isReadableStream(data2)) {
        return data2;
      }
      if (data2 && utils$7.isString(data2) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
        const silentJSONParsing = transitional && transitional.silentJSONParsing;
        const strictJSONParsing = !silentJSONParsing && JSONRequested;
        try {
          return JSON.parse(data2);
        } catch (e2) {
          if (strictJSONParsing) {
            if (e2.name === "SyntaxError") {
              throw AxiosError.from(e2, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);
            }
            throw e2;
          }
        }
      }
      return data2;
    }],
    /**
     * A timeout in milliseconds to abort a request. If set to 0 (default) a
     * timeout is not created.
     */
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: platform.classes.FormData,
      Blob: platform.classes.Blob
    },
    validateStatus: function validateStatus(status) {
      return status >= 200 && status < 300;
    },
    headers: {
      common: {
        "Accept": "application/json, text/plain, */*",
        "Content-Type": void 0
      }
    }
  };
  utils$7.forEach(["delete", "get", "head", "post", "put", "patch"], method => {
    defaults$2.headers[method] = {};
  });
  const defaults$3 = defaults$2;
  const ignoreDuplicateOf = utils$7.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]);
  const parseHeaders = rawHeaders => {
    const parsed = {};
    let key;
    let val2;
    let i2;
    rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
      i2 = line.indexOf(":");
      key = line.substring(0, i2).trim().toLowerCase();
      val2 = line.substring(i2 + 1).trim();
      if (!key || parsed[key] && ignoreDuplicateOf[key]) {
        return;
      }
      if (key === "set-cookie") {
        if (parsed[key]) {
          parsed[key].push(val2);
        } else {
          parsed[key] = [val2];
        }
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ", " + val2 : val2;
      }
    });
    return parsed;
  };
  const $internals = Symbol("internals");
  function normalizeHeader(header) {
    return header && String(header).trim().toLowerCase();
  }
  function normalizeValue(value2) {
    if (value2 === false || value2 == null) {
      return value2;
    }
    return utils$7.isArray(value2) ? value2.map(normalizeValue) : String(value2);
  }
  function parseTokens(str) {
    const tokens = /* @__PURE__ */Object.create(null);
    const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let match;
    while (match = tokensRE.exec(str)) {
      tokens[match[1]] = match[2];
    }
    return tokens;
  }
  const isValidHeaderName = str => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
  function matchHeaderValue(context, value2, header, filter, isHeaderNameFilter) {
    if (utils$7.isFunction(filter)) {
      return filter.call(this, value2, header);
    }
    if (isHeaderNameFilter) {
      value2 = header;
    }
    if (!utils$7.isString(value2)) return;
    if (utils$7.isString(filter)) {
      return value2.indexOf(filter) !== -1;
    }
    if (utils$7.isRegExp(filter)) {
      return filter.test(value2);
    }
  }
  function formatHeader(header) {
    return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w2, char, str) => {
      return char.toUpperCase() + str;
    });
  }
  function buildAccessors(obj, header) {
    const accessorName = utils$7.toCamelCase(" " + header);
    ["get", "set", "has"].forEach(methodName => {
      Object.defineProperty(obj, methodName + accessorName, {
        value: function (arg1, arg2, arg3) {
          return this[methodName].call(this, header, arg1, arg2, arg3);
        },
        configurable: true
      });
    });
  }
  class AxiosHeaders {
    constructor(headers) {
      headers && this.set(headers);
    }
    set(header, valueOrRewrite, rewrite) {
      const self2 = this;
      function setHeader(_value, _header, _rewrite) {
        const lHeader = normalizeHeader(_header);
        if (!lHeader) {
          throw new Error("header name must be a non-empty string");
        }
        const key = utils$7.findKey(self2, lHeader);
        if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
          self2[key || _header] = normalizeValue(_value);
        }
      }
      const setHeaders = (headers, _rewrite) => utils$7.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
      if (utils$7.isPlainObject(header) || header instanceof this.constructor) {
        setHeaders(header, valueOrRewrite);
      } else if (utils$7.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
        setHeaders(parseHeaders(header), valueOrRewrite);
      } else if (utils$7.isHeaders(header)) {
        for (const [key, value2] of header.entries()) {
          setHeader(value2, key, rewrite);
        }
      } else {
        header != null && setHeader(valueOrRewrite, header, rewrite);
      }
      return this;
    }
    get(header, parser) {
      header = normalizeHeader(header);
      if (header) {
        const key = utils$7.findKey(this, header);
        if (key) {
          const value2 = this[key];
          if (!parser) {
            return value2;
          }
          if (parser === true) {
            return parseTokens(value2);
          }
          if (utils$7.isFunction(parser)) {
            return parser.call(this, value2, key);
          }
          if (utils$7.isRegExp(parser)) {
            return parser.exec(value2);
          }
          throw new TypeError("parser must be boolean|regexp|function");
        }
      }
    }
    has(header, matcher) {
      header = normalizeHeader(header);
      if (header) {
        const key = utils$7.findKey(this, header);
        return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
      }
      return false;
    }
    delete(header, matcher) {
      const self2 = this;
      let deleted = false;
      function deleteHeader(_header) {
        _header = normalizeHeader(_header);
        if (_header) {
          const key = utils$7.findKey(self2, _header);
          if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
            delete self2[key];
            deleted = true;
          }
        }
      }
      if (utils$7.isArray(header)) {
        header.forEach(deleteHeader);
      } else {
        deleteHeader(header);
      }
      return deleted;
    }
    clear(matcher) {
      const keys2 = Object.keys(this);
      let i2 = keys2.length;
      let deleted = false;
      while (i2--) {
        const key = keys2[i2];
        if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
          delete this[key];
          deleted = true;
        }
      }
      return deleted;
    }
    normalize(format) {
      const self2 = this;
      const headers = {};
      utils$7.forEach(this, (value2, header) => {
        const key = utils$7.findKey(headers, header);
        if (key) {
          self2[key] = normalizeValue(value2);
          delete self2[header];
          return;
        }
        const normalized = format ? formatHeader(header) : String(header).trim();
        if (normalized !== header) {
          delete self2[header];
        }
        self2[normalized] = normalizeValue(value2);
        headers[normalized] = true;
      });
      return this;
    }
    concat() {
      for (var _len3 = arguments.length, targets = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        targets[_key3] = arguments[_key3];
      }
      return this.constructor.concat(this, ...targets);
    }
    toJSON(asStrings) {
      const obj = /* @__PURE__ */Object.create(null);
      utils$7.forEach(this, (value2, header) => {
        value2 != null && value2 !== false && (obj[header] = asStrings && utils$7.isArray(value2) ? value2.join(", ") : value2);
      });
      return obj;
    }
    [Symbol.iterator]() {
      return Object.entries(this.toJSON())[Symbol.iterator]();
    }
    toString() {
      return Object.entries(this.toJSON()).map(_ref6 => {
        let [header, value2] = _ref6;
        return header + ": " + value2;
      }).join("\n");
    }
    get [Symbol.toStringTag]() {
      return "AxiosHeaders";
    }
    static from(thing) {
      return thing instanceof this ? thing : new this(thing);
    }
    static concat(first) {
      const computed = new this(first);
      for (var _len4 = arguments.length, targets = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        targets[_key4 - 1] = arguments[_key4];
      }
      targets.forEach(target => computed.set(target));
      return computed;
    }
    static accessor(header) {
      const internals = this[$internals] = this[$internals] = {
        accessors: {}
      };
      const accessors = internals.accessors;
      const prototype2 = this.prototype;
      function defineAccessor(_header) {
        const lHeader = normalizeHeader(_header);
        if (!accessors[lHeader]) {
          buildAccessors(prototype2, _header);
          accessors[lHeader] = true;
        }
      }
      utils$7.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
      return this;
    }
  }
  AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
  utils$7.reduceDescriptors(AxiosHeaders.prototype, (_ref7, key) => {
    let {
      value: value2
    } = _ref7;
    let mapped = key[0].toUpperCase() + key.slice(1);
    return {
      get: () => value2,
      set(headerValue) {
        this[mapped] = headerValue;
      }
    };
  });
  utils$7.freezeMethods(AxiosHeaders);
  const AxiosHeaders$1 = AxiosHeaders;
  function transformData(fns, response) {
    const config = this || defaults$3;
    const context = response || config;
    const headers = AxiosHeaders$1.from(context.headers);
    let data2 = context.data;
    utils$7.forEach(fns, function transform2(fn2) {
      data2 = fn2.call(config, data2, headers.normalize(), response ? response.status : void 0);
    });
    headers.normalize();
    return data2;
  }
  function isCancel(value2) {
    return !!(value2 && value2.__CANCEL__);
  }
  function CanceledError(message, config, request2) {
    AxiosError.call(this, message == null ? "canceled" : message, AxiosError.ERR_CANCELED, config, request2);
    this.name = "CanceledError";
  }
  utils$7.inherits(CanceledError, AxiosError, {
    __CANCEL__: true
  });
  function settle(resolve, reject, response) {
    const validateStatus = response.config.validateStatus;
    if (!response.status || !validateStatus || validateStatus(response.status)) {
      resolve(response);
    } else {
      reject(new AxiosError("Request failed with status code " + response.status, [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4], response.config, response.request, response));
    }
  }
  function parseProtocol(url2) {
    const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url2);
    return match && match[1] || "";
  }
  function speedometer(samplesCount, min) {
    samplesCount = samplesCount || 10;
    const bytes = new Array(samplesCount);
    const timestamps = new Array(samplesCount);
    let head = 0;
    let tail = 0;
    let firstSampleTS;
    min = min !== void 0 ? min : 1e3;
    return function push2(chunkLength) {
      const now = Date.now();
      const startedAt = timestamps[tail];
      if (!firstSampleTS) {
        firstSampleTS = now;
      }
      bytes[head] = chunkLength;
      timestamps[head] = now;
      let i2 = tail;
      let bytesCount = 0;
      while (i2 !== head) {
        bytesCount += bytes[i2++];
        i2 = i2 % samplesCount;
      }
      head = (head + 1) % samplesCount;
      if (head === tail) {
        tail = (tail + 1) % samplesCount;
      }
      if (now - firstSampleTS < min) {
        return;
      }
      const passed = startedAt && now - startedAt;
      return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
    };
  }
  function throttle$1(fn2, freq) {
    let timestamp = 0;
    let threshold = 1e3 / freq;
    let lastArgs;
    let timer;
    const invoke = function (args) {
      let now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Date.now();
      timestamp = now;
      lastArgs = null;
      if (timer) {
        clearTimeout(timer);
        timer = null;
      }
      fn2.apply(null, args);
    };
    const throttled = function () {
      const now = Date.now();
      const passed = now - timestamp;
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      if (passed >= threshold) {
        invoke(args, now);
      } else {
        lastArgs = args;
        if (!timer) {
          timer = setTimeout(() => {
            timer = null;
            invoke(lastArgs);
          }, threshold - passed);
        }
      }
    };
    const flush = () => lastArgs && invoke(lastArgs);
    return [throttled, flush];
  }
  const progressEventReducer = function (listener, isDownloadStream) {
    let freq = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;
    let bytesNotified = 0;
    const _speedometer = speedometer(50, 250);
    return throttle$1(e2 => {
      const loaded = e2.loaded;
      const total = e2.lengthComputable ? e2.total : void 0;
      const progressBytes = loaded - bytesNotified;
      const rate = _speedometer(progressBytes);
      const inRange = loaded <= total;
      bytesNotified = loaded;
      const data2 = {
        loaded,
        total,
        progress: total ? loaded / total : void 0,
        bytes: progressBytes,
        rate: rate ? rate : void 0,
        estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
        event: e2,
        lengthComputable: total != null,
        [isDownloadStream ? "download" : "upload"]: true
      };
      listener(data2);
    }, freq);
  };
  const progressEventDecorator = (total, throttled) => {
    const lengthComputable = total != null;
    return [loaded => throttled[0]({
      lengthComputable,
      total,
      loaded
    }), throttled[1]];
  };
  const asyncDecorator = fn2 => function () {
    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }
    return utils$7.asap(() => fn2(...args));
  };
  const isURLSameOrigin = platform.hasStandardBrowserEnv ?
  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  function standardBrowserEnv() {
    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);
    const urlParsingNode = document.createElement("a");
    let originURL;
    function resolveURL(url2) {
      let href = url2;
      if (msie) {
        urlParsingNode.setAttribute("href", href);
        href = urlParsingNode.href;
      }
      urlParsingNode.setAttribute("href", href);
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
      };
    }
    originURL = resolveURL(window.location.href);
    return function isURLSameOrigin2(requestURL) {
      const parsed = utils$7.isString(requestURL) ? resolveURL(requestURL) : requestURL;
      return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
    };
  }() :
  // Non standard browser envs (web workers, react-native) lack needed support.
  function nonStandardBrowserEnv() {
    return function isURLSameOrigin2() {
      return true;
    };
  }();
  const cookies = platform.hasStandardBrowserEnv ?
  // Standard browser envs support document.cookie
  {
    write(name, value2, expires, path, domain2, secure) {
      const cookie2 = [name + "=" + encodeURIComponent(value2)];
      utils$7.isNumber(expires) && cookie2.push("expires=" + new Date(expires).toGMTString());
      utils$7.isString(path) && cookie2.push("path=" + path);
      utils$7.isString(domain2) && cookie2.push("domain=" + domain2);
      secure === true && cookie2.push("secure");
      document.cookie = cookie2.join("; ");
    },
    read(name) {
      const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove(name) {
      this.write(name, "", Date.now() - 864e5);
    }
  } :
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {},
    read() {
      return null;
    },
    remove() {}
  };
  function isAbsoluteURL(url2) {
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url2);
  }
  function combineURLs(baseURL, relativeURL) {
    return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
  }
  function buildFullPath(baseURL, requestedURL) {
    if (baseURL && !isAbsoluteURL(requestedURL)) {
      return combineURLs(baseURL, requestedURL);
    }
    return requestedURL;
  }
  const headersToObject = thing => thing instanceof AxiosHeaders$1 ? {
    ...thing
  } : thing;
  function mergeConfig(config1, config2) {
    config2 = config2 || {};
    const config = {};
    function getMergedValue(target, source, caseless) {
      if (utils$7.isPlainObject(target) && utils$7.isPlainObject(source)) {
        return utils$7.merge.call({
          caseless
        }, target, source);
      } else if (utils$7.isPlainObject(source)) {
        return utils$7.merge({}, source);
      } else if (utils$7.isArray(source)) {
        return source.slice();
      }
      return source;
    }
    function mergeDeepProperties(a2, b2, caseless) {
      if (!utils$7.isUndefined(b2)) {
        return getMergedValue(a2, b2, caseless);
      } else if (!utils$7.isUndefined(a2)) {
        return getMergedValue(void 0, a2, caseless);
      }
    }
    function valueFromConfig2(a2, b2) {
      if (!utils$7.isUndefined(b2)) {
        return getMergedValue(void 0, b2);
      }
    }
    function defaultToConfig2(a2, b2) {
      if (!utils$7.isUndefined(b2)) {
        return getMergedValue(void 0, b2);
      } else if (!utils$7.isUndefined(a2)) {
        return getMergedValue(void 0, a2);
      }
    }
    function mergeDirectKeys(a2, b2, prop) {
      if (prop in config2) {
        return getMergedValue(a2, b2);
      } else if (prop in config1) {
        return getMergedValue(void 0, a2);
      }
    }
    const mergeMap = {
      url: valueFromConfig2,
      method: valueFromConfig2,
      data: valueFromConfig2,
      baseURL: defaultToConfig2,
      transformRequest: defaultToConfig2,
      transformResponse: defaultToConfig2,
      paramsSerializer: defaultToConfig2,
      timeout: defaultToConfig2,
      timeoutMessage: defaultToConfig2,
      withCredentials: defaultToConfig2,
      withXSRFToken: defaultToConfig2,
      adapter: defaultToConfig2,
      responseType: defaultToConfig2,
      xsrfCookieName: defaultToConfig2,
      xsrfHeaderName: defaultToConfig2,
      onUploadProgress: defaultToConfig2,
      onDownloadProgress: defaultToConfig2,
      decompress: defaultToConfig2,
      maxContentLength: defaultToConfig2,
      maxBodyLength: defaultToConfig2,
      beforeRedirect: defaultToConfig2,
      transport: defaultToConfig2,
      httpAgent: defaultToConfig2,
      httpsAgent: defaultToConfig2,
      cancelToken: defaultToConfig2,
      socketPath: defaultToConfig2,
      responseEncoding: defaultToConfig2,
      validateStatus: mergeDirectKeys,
      headers: (a2, b2) => mergeDeepProperties(headersToObject(a2), headersToObject(b2), true)
    };
    utils$7.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
      const merge2 = mergeMap[prop] || mergeDeepProperties;
      const configValue = merge2(config1[prop], config2[prop], prop);
      utils$7.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
    });
    return config;
  }
  const resolveConfig = config => {
    const newConfig = mergeConfig({}, config);
    let {
      data: data2,
      withXSRFToken,
      xsrfHeaderName,
      xsrfCookieName,
      headers,
      auth
    } = newConfig;
    newConfig.headers = headers = AxiosHeaders$1.from(headers);
    newConfig.url = buildURL$2(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);
    if (auth) {
      headers.set("Authorization", "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : "")));
    }
    let contentType;
    if (utils$7.isFormData(data2)) {
      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {
        headers.setContentType(void 0);
      } else if ((contentType = headers.getContentType()) !== false) {
        const [type, ...tokens] = contentType ? contentType.split(";").map(token => token.trim()).filter(Boolean) : [];
        headers.setContentType([type || "multipart/form-data", ...tokens].join("; "));
      }
    }
    if (platform.hasStandardBrowserEnv) {
      withXSRFToken && utils$7.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
      if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin(newConfig.url)) {
        const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);
        if (xsrfValue) {
          headers.set(xsrfHeaderName, xsrfValue);
        }
      }
    }
    return newConfig;
  };
  const isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
  const xhrAdapter = isXHRAdapterSupported && function (config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
      const _config2 = resolveConfig(config);
      let requestData = _config2.data;
      const requestHeaders = AxiosHeaders$1.from(_config2.headers).normalize();
      let {
        responseType,
        onUploadProgress,
        onDownloadProgress
      } = _config2;
      let onCanceled;
      let uploadThrottled, downloadThrottled;
      let flushUpload, flushDownload;
      function done() {
        flushUpload && flushUpload();
        flushDownload && flushDownload();
        _config2.cancelToken && _config2.cancelToken.unsubscribe(onCanceled);
        _config2.signal && _config2.signal.removeEventListener("abort", onCanceled);
      }
      let request2 = new XMLHttpRequest();
      request2.open(_config2.method.toUpperCase(), _config2.url, true);
      request2.timeout = _config2.timeout;
      function onloadend() {
        if (!request2) {
          return;
        }
        const responseHeaders = AxiosHeaders$1.from("getAllResponseHeaders" in request2 && request2.getAllResponseHeaders());
        const responseData = !responseType || responseType === "text" || responseType === "json" ? request2.responseText : request2.response;
        const response = {
          data: responseData,
          status: request2.status,
          statusText: request2.statusText,
          headers: responseHeaders,
          config,
          request: request2
        };
        settle(function _resolve(value2) {
          resolve(value2);
          done();
        }, function _reject(err) {
          reject(err);
          done();
        }, response);
        request2 = null;
      }
      if ("onloadend" in request2) {
        request2.onloadend = onloadend;
      } else {
        request2.onreadystatechange = function handleLoad() {
          if (!request2 || request2.readyState !== 4) {
            return;
          }
          if (request2.status === 0 && !(request2.responseURL && request2.responseURL.indexOf("file:") === 0)) {
            return;
          }
          setTimeout(onloadend);
        };
      }
      request2.onabort = function handleAbort() {
        if (!request2) {
          return;
        }
        reject(new AxiosError("Request aborted", AxiosError.ECONNABORTED, config, request2));
        request2 = null;
      };
      request2.onerror = function handleError() {
        reject(new AxiosError("Network Error", AxiosError.ERR_NETWORK, config, request2));
        request2 = null;
      };
      request2.ontimeout = function handleTimeout() {
        let timeoutErrorMessage = _config2.timeout ? "timeout of " + _config2.timeout + "ms exceeded" : "timeout exceeded";
        const transitional = _config2.transitional || transitionalDefaults;
        if (_config2.timeoutErrorMessage) {
          timeoutErrorMessage = _config2.timeoutErrorMessage;
        }
        reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request2));
        request2 = null;
      };
      requestData === void 0 && requestHeaders.setContentType(null);
      if ("setRequestHeader" in request2) {
        utils$7.forEach(requestHeaders.toJSON(), function setRequestHeader(val2, key) {
          request2.setRequestHeader(key, val2);
        });
      }
      if (!utils$7.isUndefined(_config2.withCredentials)) {
        request2.withCredentials = !!_config2.withCredentials;
      }
      if (responseType && responseType !== "json") {
        request2.responseType = _config2.responseType;
      }
      if (onDownloadProgress) {
        [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
        request2.addEventListener("progress", downloadThrottled);
      }
      if (onUploadProgress && request2.upload) {
        [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
        request2.upload.addEventListener("progress", uploadThrottled);
        request2.upload.addEventListener("loadend", flushUpload);
      }
      if (_config2.cancelToken || _config2.signal) {
        onCanceled = cancel => {
          if (!request2) {
            return;
          }
          reject(!cancel || cancel.type ? new CanceledError(null, config, request2) : cancel);
          request2.abort();
          request2 = null;
        };
        _config2.cancelToken && _config2.cancelToken.subscribe(onCanceled);
        if (_config2.signal) {
          _config2.signal.aborted ? onCanceled() : _config2.signal.addEventListener("abort", onCanceled);
        }
      }
      const protocol = parseProtocol(_config2.url);
      if (protocol && platform.protocols.indexOf(protocol) === -1) {
        reject(new AxiosError("Unsupported protocol " + protocol + ":", AxiosError.ERR_BAD_REQUEST, config));
        return;
      }
      request2.send(requestData || null);
    });
  };
  const composeSignals = (signals, timeout2) => {
    const {
      length
    } = signals = signals ? signals.filter(Boolean) : [];
    if (timeout2 || length) {
      let controller = new AbortController();
      let aborted;
      const onabort = function (reason) {
        if (!aborted) {
          aborted = true;
          unsubscribe();
          const err = reason instanceof Error ? reason : this.reason;
          controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));
        }
      };
      let timer = timeout2 && setTimeout(() => {
        timer = null;
        onabort(new AxiosError(`timeout ${timeout2} of ms exceeded`, AxiosError.ETIMEDOUT));
      }, timeout2);
      const unsubscribe = () => {
        if (signals) {
          timer && clearTimeout(timer);
          timer = null;
          signals.forEach(signal2 => {
            signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
          });
          signals = null;
        }
      };
      signals.forEach(signal2 => signal2.addEventListener("abort", onabort));
      const {
        signal
      } = controller;
      signal.unsubscribe = () => utils$7.asap(unsubscribe);
      return signal;
    }
  };
  const composeSignals$1 = composeSignals;
  const streamChunk = function* (chunk, chunkSize) {
    let len = chunk.byteLength;
    if (!chunkSize || len < chunkSize) {
      yield chunk;
      return;
    }
    let pos = 0;
    let end;
    while (pos < len) {
      end = pos + chunkSize;
      yield chunk.slice(pos, end);
      pos = end;
    }
  };
  const readBytes = async function* (iterable, chunkSize) {
    for await (const chunk of readStream(iterable)) {
      yield* streamChunk(chunk, chunkSize);
    }
  };
  const readStream = async function* (stream) {
    if (stream[Symbol.asyncIterator]) {
      yield* stream;
      return;
    }
    const reader = stream.getReader();
    try {
      for (;;) {
        const {
          done,
          value: value2
        } = await reader.read();
        if (done) {
          break;
        }
        yield value2;
      }
    } finally {
      await reader.cancel();
    }
  };
  const trackStream = (stream, chunkSize, onProgress, onFinish) => {
    const iterator = readBytes(stream, chunkSize);
    let bytes = 0;
    let done;
    let _onFinish = e2 => {
      if (!done) {
        done = true;
        onFinish && onFinish(e2);
      }
    };
    return new ReadableStream({
      async pull(controller) {
        try {
          const {
            done: done2,
            value: value2
          } = await iterator.next();
          if (done2) {
            _onFinish();
            controller.close();
            return;
          }
          let len = value2.byteLength;
          if (onProgress) {
            let loadedBytes = bytes += len;
            onProgress(loadedBytes);
          }
          controller.enqueue(new Uint8Array(value2));
        } catch (err) {
          _onFinish(err);
          throw err;
        }
      },
      cancel(reason) {
        _onFinish(reason);
        return iterator.return();
      }
    }, {
      highWaterMark: 2
    });
  };
  const isFetchSupported = typeof fetch === "function" && typeof Request === "function" && typeof Response === "function";
  const isReadableStreamSupported = isFetchSupported && typeof ReadableStream === "function";
  const encodeText = isFetchSupported && (typeof TextEncoder === "function" ? (encoder => str => encoder.encode(str))(new TextEncoder()) : async str => new Uint8Array(await new Response(str).arrayBuffer()));
  const test = function (fn2) {
    try {
      for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
        args[_key7 - 1] = arguments[_key7];
      }
      return !!fn2(...args);
    } catch (e2) {
      return false;
    }
  };
  const supportsRequestStream = isReadableStreamSupported && test(() => {
    let duplexAccessed = false;
    const hasContentType = new Request(platform.origin, {
      body: new ReadableStream(),
      method: "POST",
      get duplex() {
        duplexAccessed = true;
        return "half";
      }
    }).headers.has("Content-Type");
    return duplexAccessed && !hasContentType;
  });
  const DEFAULT_CHUNK_SIZE = 64 * 1024;
  const supportsResponseStream = isReadableStreamSupported && test(() => utils$7.isReadableStream(new Response("").body));
  const resolvers = {
    stream: supportsResponseStream && (res => res.body)
  };
  isFetchSupported && (res => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach(type => {
      !resolvers[type] && (resolvers[type] = utils$7.isFunction(res[type]) ? res2 => res2[type]() : (_2, config) => {
        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);
      });
    });
  })(new Response());
  const getBodyLength = async body2 => {
    if (body2 == null) {
      return 0;
    }
    if (utils$7.isBlob(body2)) {
      return body2.size;
    }
    if (utils$7.isSpecCompliantForm(body2)) {
      const _request = new Request(platform.origin, {
        method: "POST",
        body: body2
      });
      return (await _request.arrayBuffer()).byteLength;
    }
    if (utils$7.isArrayBufferView(body2) || utils$7.isArrayBuffer(body2)) {
      return body2.byteLength;
    }
    if (utils$7.isURLSearchParams(body2)) {
      body2 = body2 + "";
    }
    if (utils$7.isString(body2)) {
      return (await encodeText(body2)).byteLength;
    }
  };
  const resolveBodyLength = async (headers, body2) => {
    const length = utils$7.toFiniteNumber(headers.getContentLength());
    return length == null ? getBodyLength(body2) : length;
  };
  const fetchAdapter = isFetchSupported && (async config => {
    let {
      url: url2,
      method,
      data: data2,
      signal,
      cancelToken,
      timeout: timeout2,
      onDownloadProgress,
      onUploadProgress,
      responseType,
      headers,
      withCredentials = "same-origin",
      fetchOptions
    } = resolveConfig(config);
    responseType = responseType ? (responseType + "").toLowerCase() : "text";
    let composedSignal = composeSignals$1([signal, cancelToken && cancelToken.toAbortSignal()], timeout2);
    let request2;
    const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
      composedSignal.unsubscribe();
    });
    let requestContentLength;
    try {
      if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data2)) !== 0) {
        let _request = new Request(url2, {
          method: "POST",
          body: data2,
          duplex: "half"
        });
        let contentTypeHeader;
        if (utils$7.isFormData(data2) && (contentTypeHeader = _request.headers.get("content-type"))) {
          headers.setContentType(contentTypeHeader);
        }
        if (_request.body) {
          const [onProgress, flush] = progressEventDecorator(requestContentLength, progressEventReducer(asyncDecorator(onUploadProgress)));
          data2 = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
        }
      }
      if (!utils$7.isString(withCredentials)) {
        withCredentials = withCredentials ? "include" : "omit";
      }
      const isCredentialsSupported = "credentials" in Request.prototype;
      request2 = new Request(url2, {
        ...fetchOptions,
        signal: composedSignal,
        method: method.toUpperCase(),
        headers: headers.normalize().toJSON(),
        body: data2,
        duplex: "half",
        credentials: isCredentialsSupported ? withCredentials : void 0
      });
      let response = await fetch(request2);
      const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
      if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
        const options = {};
        ["status", "statusText", "headers"].forEach(prop => {
          options[prop] = response[prop];
        });
        const responseContentLength = utils$7.toFiniteNumber(response.headers.get("content-length"));
        const [onProgress, flush] = onDownloadProgress && progressEventDecorator(responseContentLength, progressEventReducer(asyncDecorator(onDownloadProgress), true)) || [];
        response = new Response(trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
          flush && flush();
          unsubscribe && unsubscribe();
        }), options);
      }
      responseType = responseType || "text";
      let responseData = await resolvers[utils$7.findKey(resolvers, responseType) || "text"](response, config);
      !isStreamResponse && unsubscribe && unsubscribe();
      return await new Promise((resolve, reject) => {
        settle(resolve, reject, {
          data: responseData,
          headers: AxiosHeaders$1.from(response.headers),
          status: response.status,
          statusText: response.statusText,
          config,
          request: request2
        });
      });
    } catch (err) {
      unsubscribe && unsubscribe();
      if (err && err.name === "TypeError" && /fetch/i.test(err.message)) {
        throw Object.assign(new AxiosError("Network Error", AxiosError.ERR_NETWORK, config, request2), {
          cause: err.cause || err
        });
      }
      throw AxiosError.from(err, err && err.code, config, request2);
    }
  });
  const knownAdapters = {
    http: httpAdapter,
    xhr: xhrAdapter,
    fetch: fetchAdapter
  };
  utils$7.forEach(knownAdapters, (fn2, value2) => {
    if (fn2) {
      try {
        Object.defineProperty(fn2, "name", {
          value: value2
        });
      } catch (e2) {}
      Object.defineProperty(fn2, "adapterName", {
        value: value2
      });
    }
  });
  const renderReason = reason => `- ${reason}`;
  const isResolvedHandle = adapter => utils$7.isFunction(adapter) || adapter === null || adapter === false;
  const adapters = {
    getAdapter: adapters2 => {
      adapters2 = utils$7.isArray(adapters2) ? adapters2 : [adapters2];
      const {
        length
      } = adapters2;
      let nameOrAdapter;
      let adapter;
      const rejectedReasons = {};
      for (let i2 = 0; i2 < length; i2++) {
        nameOrAdapter = adapters2[i2];
        let id;
        adapter = nameOrAdapter;
        if (!isResolvedHandle(nameOrAdapter)) {
          adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
          if (adapter === void 0) {
            throw new AxiosError(`Unknown adapter '${id}'`);
          }
        }
        if (adapter) {
          break;
        }
        rejectedReasons[id || "#" + i2] = adapter;
      }
      if (!adapter) {
        const reasons = Object.entries(rejectedReasons).map(_ref8 => {
          let [id, state] = _ref8;
          return `adapter ${id} ` + (state === false ? "is not supported by the environment" : "is not available in the build");
        });
        let s2 = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
        throw new AxiosError(`There is no suitable adapter to dispatch the request ` + s2, "ERR_NOT_SUPPORT");
      }
      return adapter;
    },
    adapters: knownAdapters
  };
  function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
      config.cancelToken.throwIfRequested();
    }
    if (config.signal && config.signal.aborted) {
      throw new CanceledError(null, config);
    }
  }
  function dispatchRequest(config) {
    throwIfCancellationRequested(config);
    config.headers = AxiosHeaders$1.from(config.headers);
    config.data = transformData.call(config, config.transformRequest);
    if (["post", "put", "patch"].indexOf(config.method) !== -1) {
      config.headers.setContentType("application/x-www-form-urlencoded", false);
    }
    const adapter = adapters.getAdapter(config.adapter || defaults$3.adapter);
    return adapter(config).then(function onAdapterResolution(response) {
      throwIfCancellationRequested(config);
      response.data = transformData.call(config, config.transformResponse, response);
      response.headers = AxiosHeaders$1.from(response.headers);
      return response;
    }, function onAdapterRejection(reason) {
      if (!isCancel(reason)) {
        throwIfCancellationRequested(config);
        if (reason && reason.response) {
          reason.response.data = transformData.call(config, config.transformResponse, reason.response);
          reason.response.headers = AxiosHeaders$1.from(reason.response.headers);
        }
      }
      return Promise.reject(reason);
    });
  }
  const VERSION = "1.7.7";
  const validators$1 = {};
  ["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i2) => {
    validators$1[type] = function validator2(thing) {
      return typeof thing === type || "a" + (i2 < 1 ? "n " : " ") + type;
    };
  });
  const deprecatedWarnings = {};
  validators$1.transitional = function transitional(validator2, version, message) {
    function formatMessage(opt, desc) {
      return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
    }
    return (value2, opt, opts) => {
      if (validator2 === false) {
        throw new AxiosError(formatMessage(opt, " has been removed" + (version ? " in " + version : "")), AxiosError.ERR_DEPRECATED);
      }
      if (version && !deprecatedWarnings[opt]) {
        deprecatedWarnings[opt] = true;
        console.warn(formatMessage(opt, " has been deprecated since v" + version + " and will be removed in the near future"));
      }
      return validator2 ? validator2(value2, opt, opts) : true;
    };
  };
  function assertOptions(options, schema, allowUnknown) {
    if (typeof options !== "object") {
      throw new AxiosError("options must be an object", AxiosError.ERR_BAD_OPTION_VALUE);
    }
    const keys2 = Object.keys(options);
    let i2 = keys2.length;
    while (i2-- > 0) {
      const opt = keys2[i2];
      const validator2 = schema[opt];
      if (validator2) {
        const value2 = options[opt];
        const result = value2 === void 0 || validator2(value2, opt, options);
        if (result !== true) {
          throw new AxiosError("option " + opt + " must be " + result, AxiosError.ERR_BAD_OPTION_VALUE);
        }
        continue;
      }
      if (allowUnknown !== true) {
        throw new AxiosError("Unknown option " + opt, AxiosError.ERR_BAD_OPTION);
      }
    }
  }
  const validator = {
    assertOptions,
    validators: validators$1
  };
  const validators = validator.validators;
  class Axios {
    constructor(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager$1(),
        response: new InterceptorManager$1()
      };
    }
    /**
     * Dispatch a request
     *
     * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
     * @param {?Object} config
     *
     * @returns {Promise} The Promise to be fulfilled
     */
    async request(configOrUrl, config) {
      try {
        return await this._request(configOrUrl, config);
      } catch (err) {
        if (err instanceof Error) {
          let dummy;
          Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : dummy = new Error();
          const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
          try {
            if (!err.stack) {
              err.stack = stack;
            } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
              err.stack += "\n" + stack;
            }
          } catch (e2) {}
        }
        throw err;
      }
    }
    _request(configOrUrl, config) {
      if (typeof configOrUrl === "string") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      const {
        transitional,
        paramsSerializer,
        headers
      } = config;
      if (transitional !== void 0) {
        validator.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean),
          forcedJSONParsing: validators.transitional(validators.boolean),
          clarifyTimeoutError: validators.transitional(validators.boolean)
        }, false);
      }
      if (paramsSerializer != null) {
        if (utils$7.isFunction(paramsSerializer)) {
          config.paramsSerializer = {
            serialize: paramsSerializer
          };
        } else {
          validator.assertOptions(paramsSerializer, {
            encode: validators.function,
            serialize: validators.function
          }, true);
        }
      }
      config.method = (config.method || this.defaults.method || "get").toLowerCase();
      let contextHeaders = headers && utils$7.merge(headers.common, headers[config.method]);
      headers && utils$7.forEach(["delete", "get", "head", "post", "put", "patch", "common"], method => {
        delete headers[method];
      });
      config.headers = AxiosHeaders$1.concat(contextHeaders, headers);
      const requestInterceptorChain = [];
      let synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      const responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      let promise;
      let i2 = 0;
      let len;
      if (!synchronousRequestInterceptors) {
        const chain = [dispatchRequest.bind(this), void 0];
        chain.unshift.apply(chain, requestInterceptorChain);
        chain.push.apply(chain, responseInterceptorChain);
        len = chain.length;
        promise = Promise.resolve(config);
        while (i2 < len) {
          promise = promise.then(chain[i2++], chain[i2++]);
        }
        return promise;
      }
      len = requestInterceptorChain.length;
      let newConfig = config;
      i2 = 0;
      while (i2 < len) {
        const onFulfilled = requestInterceptorChain[i2++];
        const onRejected = requestInterceptorChain[i2++];
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected.call(this, error);
          break;
        }
      }
      try {
        promise = dispatchRequest.call(this, newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      i2 = 0;
      len = responseInterceptorChain.length;
      while (i2 < len) {
        promise = promise.then(responseInterceptorChain[i2++], responseInterceptorChain[i2++]);
      }
      return promise;
    }
    getUri(config) {
      config = mergeConfig(this.defaults, config);
      const fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL$2(fullPath, config.params, config.paramsSerializer);
    }
  }
  utils$7.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
    Axios.prototype[method] = function (url2, config) {
      return this.request(mergeConfig(config || {}, {
        method,
        url: url2,
        data: (config || {}).data
      }));
    };
  });
  utils$7.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
    function generateHTTPMethod(isForm) {
      return function httpMethod(url2, data2, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          headers: isForm ? {
            "Content-Type": "multipart/form-data"
          } : {},
          url: url2,
          data: data2
        }));
      };
    }
    Axios.prototype[method] = generateHTTPMethod();
    Axios.prototype[method + "Form"] = generateHTTPMethod(true);
  });
  const Axios$1 = Axios;
  class CancelToken {
    constructor(executor) {
      if (typeof executor !== "function") {
        throw new TypeError("executor must be a function.");
      }
      let resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      const token = this;
      this.promise.then(cancel => {
        if (!token._listeners) return;
        let i2 = token._listeners.length;
        while (i2-- > 0) {
          token._listeners[i2](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = onfulfilled => {
        let _resolve;
        const promise = new Promise(resolve => {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message, config, request2) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError(message, config, request2);
        resolvePromise(token.reason);
      });
    }
    /**
     * Throws a `CanceledError` if cancellation has been requested.
     */
    throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    }
    /**
     * Subscribe to the cancel signal
     */
    subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    }
    /**
     * Unsubscribe from the cancel signal
     */
    unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      const index2 = this._listeners.indexOf(listener);
      if (index2 !== -1) {
        this._listeners.splice(index2, 1);
      }
    }
    toAbortSignal() {
      const controller = new AbortController();
      const abort = err => {
        controller.abort(err);
      };
      this.subscribe(abort);
      controller.signal.unsubscribe = () => this.unsubscribe(abort);
      return controller.signal;
    }
    /**
     * Returns an object that contains a new `CancelToken` and a function that, when called,
     * cancels the `CancelToken`.
     */
    static source() {
      let cancel;
      const token = new CancelToken(function executor(c2) {
        cancel = c2;
      });
      return {
        token,
        cancel
      };
    }
  }
  const CancelToken$1 = CancelToken;
  function spread(callback) {
    return function wrap2(arr2) {
      return callback.apply(null, arr2);
    };
  }
  function isAxiosError(payload) {
    return utils$7.isObject(payload) && payload.isAxiosError === true;
  }
  const HttpStatusCode = {
    Continue: 100,
    SwitchingProtocols: 101,
    Processing: 102,
    EarlyHints: 103,
    Ok: 200,
    Created: 201,
    Accepted: 202,
    NonAuthoritativeInformation: 203,
    NoContent: 204,
    ResetContent: 205,
    PartialContent: 206,
    MultiStatus: 207,
    AlreadyReported: 208,
    ImUsed: 226,
    MultipleChoices: 300,
    MovedPermanently: 301,
    Found: 302,
    SeeOther: 303,
    NotModified: 304,
    UseProxy: 305,
    Unused: 306,
    TemporaryRedirect: 307,
    PermanentRedirect: 308,
    BadRequest: 400,
    Unauthorized: 401,
    PaymentRequired: 402,
    Forbidden: 403,
    NotFound: 404,
    MethodNotAllowed: 405,
    NotAcceptable: 406,
    ProxyAuthenticationRequired: 407,
    RequestTimeout: 408,
    Conflict: 409,
    Gone: 410,
    LengthRequired: 411,
    PreconditionFailed: 412,
    PayloadTooLarge: 413,
    UriTooLong: 414,
    UnsupportedMediaType: 415,
    RangeNotSatisfiable: 416,
    ExpectationFailed: 417,
    ImATeapot: 418,
    MisdirectedRequest: 421,
    UnprocessableEntity: 422,
    Locked: 423,
    FailedDependency: 424,
    TooEarly: 425,
    UpgradeRequired: 426,
    PreconditionRequired: 428,
    TooManyRequests: 429,
    RequestHeaderFieldsTooLarge: 431,
    UnavailableForLegalReasons: 451,
    InternalServerError: 500,
    NotImplemented: 501,
    BadGateway: 502,
    ServiceUnavailable: 503,
    GatewayTimeout: 504,
    HttpVersionNotSupported: 505,
    VariantAlsoNegotiates: 506,
    InsufficientStorage: 507,
    LoopDetected: 508,
    NotExtended: 510,
    NetworkAuthenticationRequired: 511
  };
  Object.entries(HttpStatusCode).forEach(_ref9 => {
    let [key, value2] = _ref9;
    HttpStatusCode[value2] = key;
  });
  const HttpStatusCode$1 = HttpStatusCode;
  function createInstance(defaultConfig) {
    const context = new Axios$1(defaultConfig);
    const instance2 = bind$1(Axios$1.prototype.request, context);
    utils$7.extend(instance2, Axios$1.prototype, context, {
      allOwnKeys: true
    });
    utils$7.extend(instance2, context, null, {
      allOwnKeys: true
    });
    instance2.create = function create(instanceConfig) {
      return createInstance(mergeConfig(defaultConfig, instanceConfig));
    };
    return instance2;
  }
  const axios = createInstance(defaults$3);
  axios.Axios = Axios$1;
  axios.CanceledError = CanceledError;
  axios.CancelToken = CancelToken$1;
  axios.isCancel = isCancel;
  axios.VERSION = VERSION;
  axios.toFormData = toFormData;
  axios.AxiosError = AxiosError;
  axios.Cancel = axios.CanceledError;
  axios.all = function all(promises) {
    return Promise.all(promises);
  };
  axios.spread = spread;
  axios.isAxiosError = isAxiosError;
  axios.mergeConfig = mergeConfig;
  axios.AxiosHeaders = AxiosHeaders$1;
  axios.formToJSON = thing => formDataToJSON(utils$7.isHTMLForm(thing) ? new FormData(thing) : thing);
  axios.getAdapter = adapters.getAdapter;
  axios.HttpStatusCode = HttpStatusCode$1;
  axios.default = axios;
  const axios$1 = axios;
  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  function getDefaultExportFromCjs(x2) {
    return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
  }
  var replace = String.prototype.replace;
  var percentTwenties = /%20/g;
  var Format = {
    RFC1738: "RFC1738",
    RFC3986: "RFC3986"
  };
  var formats$3 = {
    "default": Format.RFC3986,
    formatters: {
      RFC1738: function (value2) {
        return replace.call(value2, percentTwenties, "+");
      },
      RFC3986: function (value2) {
        return String(value2);
      }
    },
    RFC1738: Format.RFC1738,
    RFC3986: Format.RFC3986
  };
  var formats$2 = formats$3;
  var has$2 = Object.prototype.hasOwnProperty;
  var isArray$e = Array.isArray;
  var hexTable = function () {
    var array = [];
    for (var i2 = 0; i2 < 256; ++i2) {
      array.push("%" + ((i2 < 16 ? "0" : "") + i2.toString(16)).toUpperCase());
    }
    return array;
  }();
  var compactQueue = function compactQueue2(queue) {
    while (queue.length > 1) {
      var item = queue.pop();
      var obj = item.obj[item.prop];
      if (isArray$e(obj)) {
        var compacted = [];
        for (var j2 = 0; j2 < obj.length; ++j2) {
          if (typeof obj[j2] !== "undefined") {
            compacted.push(obj[j2]);
          }
        }
        item.obj[item.prop] = compacted;
      }
    }
  };
  var arrayToObject = function arrayToObject2(source, options) {
    var obj = options && options.plainObjects ? /* @__PURE__ */Object.create(null) : {};
    for (var i2 = 0; i2 < source.length; ++i2) {
      if (typeof source[i2] !== "undefined") {
        obj[i2] = source[i2];
      }
    }
    return obj;
  };
  var merge = function merge2(target, source, options) {
    if (!source) {
      return target;
    }
    if (typeof source !== "object") {
      if (isArray$e(target)) {
        target.push(source);
      } else if (target && typeof target === "object") {
        if (options && (options.plainObjects || options.allowPrototypes) || !has$2.call(Object.prototype, source)) {
          target[source] = true;
        }
      } else {
        return [target, source];
      }
      return target;
    }
    if (!target || typeof target !== "object") {
      return [target].concat(source);
    }
    var mergeTarget = target;
    if (isArray$e(target) && !isArray$e(source)) {
      mergeTarget = arrayToObject(target, options);
    }
    if (isArray$e(target) && isArray$e(source)) {
      source.forEach(function (item, i2) {
        if (has$2.call(target, i2)) {
          var targetItem = target[i2];
          if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
            target[i2] = merge2(targetItem, item, options);
          } else {
            target.push(item);
          }
        } else {
          target[i2] = item;
        }
      });
      return target;
    }
    return Object.keys(source).reduce(function (acc, key) {
      var value2 = source[key];
      if (has$2.call(acc, key)) {
        acc[key] = merge2(acc[key], value2, options);
      } else {
        acc[key] = value2;
      }
      return acc;
    }, mergeTarget);
  };
  var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
      acc[key] = source[key];
      return acc;
    }, target);
  };
  var decode = function (str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, " ");
    if (charset === "iso-8859-1") {
      return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    }
    try {
      return decodeURIComponent(strWithoutPlus);
    } catch (e2) {
      return strWithoutPlus;
    }
  };
  var encode$1 = function encode2(str, defaultEncoder, charset, kind, format) {
    if (str.length === 0) {
      return str;
    }
    var string = str;
    if (typeof str === "symbol") {
      string = Symbol.prototype.toString.call(str);
    } else if (typeof str !== "string") {
      string = String(str);
    }
    if (charset === "iso-8859-1") {
      return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
        return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
      });
    }
    var out = "";
    for (var i2 = 0; i2 < string.length; ++i2) {
      var c2 = string.charCodeAt(i2);
      if (c2 === 45 || c2 === 46 || c2 === 95 || c2 === 126 || c2 >= 48 && c2 <= 57 || c2 >= 65 && c2 <= 90 || c2 >= 97 && c2 <= 122 || format === formats$2.RFC1738 && (c2 === 40 || c2 === 41)) {
        out += string.charAt(i2);
        continue;
      }
      if (c2 < 128) {
        out = out + hexTable[c2];
        continue;
      }
      if (c2 < 2048) {
        out = out + (hexTable[192 | c2 >> 6] + hexTable[128 | c2 & 63]);
        continue;
      }
      if (c2 < 55296 || c2 >= 57344) {
        out = out + (hexTable[224 | c2 >> 12] + hexTable[128 | c2 >> 6 & 63] + hexTable[128 | c2 & 63]);
        continue;
      }
      i2 += 1;
      c2 = 65536 + ((c2 & 1023) << 10 | string.charCodeAt(i2) & 1023);
      out += hexTable[240 | c2 >> 18] + hexTable[128 | c2 >> 12 & 63] + hexTable[128 | c2 >> 6 & 63] + hexTable[128 | c2 & 63];
    }
    return out;
  };
  var compact = function compact2(value2) {
    var queue = [{
      obj: {
        o: value2
      },
      prop: "o"
    }];
    var refs = [];
    for (var i2 = 0; i2 < queue.length; ++i2) {
      var item = queue[i2];
      var obj = item.obj[item.prop];
      var keys2 = Object.keys(obj);
      for (var j2 = 0; j2 < keys2.length; ++j2) {
        var key = keys2[j2];
        var val2 = obj[key];
        if (typeof val2 === "object" && val2 !== null && refs.indexOf(val2) === -1) {
          queue.push({
            obj,
            prop: key
          });
          refs.push(val2);
        }
      }
    }
    compactQueue(queue);
    return value2;
  };
  var isRegExp = function isRegExp2(obj) {
    return Object.prototype.toString.call(obj) === "[object RegExp]";
  };
  var isBuffer$4 = function isBuffer2(obj) {
    if (!obj || typeof obj !== "object") {
      return false;
    }
    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
  };
  var combine = function combine2(a2, b2) {
    return [].concat(a2, b2);
  };
  var maybeMap = function maybeMap2(val2, fn2) {
    if (isArray$e(val2)) {
      var mapped = [];
      for (var i2 = 0; i2 < val2.length; i2 += 1) {
        mapped.push(fn2(val2[i2]));
      }
      return mapped;
    }
    return fn2(val2);
  };
  var utils$5 = {
    arrayToObject,
    assign,
    combine,
    compact,
    decode,
    encode: encode$1,
    isBuffer: isBuffer$4,
    isRegExp,
    maybeMap,
    merge
  };
  var utils$4 = utils$5;
  var formats$1 = formats$3;
  var has$1 = Object.prototype.hasOwnProperty;
  var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
      return prefix + "[]";
    },
    comma: "comma",
    indices: function indices(prefix, key) {
      return prefix + "[" + key + "]";
    },
    repeat: function repeat(prefix) {
      return prefix;
    }
  };
  var isArray$d = Array.isArray;
  var split = String.prototype.split;
  var push = Array.prototype.push;
  var pushToArray = function (arr2, valueOrArray) {
    push.apply(arr2, isArray$d(valueOrArray) ? valueOrArray : [valueOrArray]);
  };
  var toISO = Date.prototype.toISOString;
  var defaultFormat = formats$1["default"];
  var defaults$1 = {
    addQueryPrefix: false,
    allowDots: false,
    charset: "utf-8",
    charsetSentinel: false,
    delimiter: "&",
    encode: true,
    encoder: utils$4.encode,
    encodeValuesOnly: false,
    format: defaultFormat,
    formatter: formats$1.formatters[defaultFormat],
    // deprecated
    indices: false,
    serializeDate: function serializeDate(date) {
      return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
  };
  var isNonNullishPrimitive = function isNonNullishPrimitive2(v2) {
    return typeof v2 === "string" || typeof v2 === "number" || typeof v2 === "boolean" || typeof v2 === "symbol" || typeof v2 === "bigint";
  };
  var stringify$2 = function stringify2(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset) {
    var obj = object;
    if (typeof filter === "function") {
      obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
      obj = serializeDate(obj);
    } else if (generateArrayPrefix === "comma" && isArray$d(obj)) {
      obj = utils$4.maybeMap(obj, function (value3) {
        if (value3 instanceof Date) {
          return serializeDate(value3);
        }
        return value3;
      });
    }
    if (obj === null) {
      if (strictNullHandling) {
        return encoder && !encodeValuesOnly ? encoder(prefix, defaults$1.encoder, charset, "key", format) : prefix;
      }
      obj = "";
    }
    if (isNonNullishPrimitive(obj) || utils$4.isBuffer(obj)) {
      if (encoder) {
        var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults$1.encoder, charset, "key", format);
        if (generateArrayPrefix === "comma" && encodeValuesOnly) {
          var valuesArray = split.call(String(obj), ",");
          var valuesJoined = "";
          for (var i2 = 0; i2 < valuesArray.length; ++i2) {
            valuesJoined += (i2 === 0 ? "" : ",") + formatter(encoder(valuesArray[i2], defaults$1.encoder, charset, "value", format));
          }
          return [formatter(keyValue) + "=" + valuesJoined];
        }
        return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults$1.encoder, charset, "value", format))];
      }
      return [formatter(prefix) + "=" + formatter(String(obj))];
    }
    var values = [];
    if (typeof obj === "undefined") {
      return values;
    }
    var objKeys;
    if (generateArrayPrefix === "comma" && isArray$d(obj)) {
      objKeys = [{
        value: obj.length > 0 ? obj.join(",") || null : void 0
      }];
    } else if (isArray$d(filter)) {
      objKeys = filter;
    } else {
      var keys2 = Object.keys(obj);
      objKeys = sort ? keys2.sort(sort) : keys2;
    }
    for (var j2 = 0; j2 < objKeys.length; ++j2) {
      var key = objKeys[j2];
      var value2 = typeof key === "object" && typeof key.value !== "undefined" ? key.value : obj[key];
      if (skipNulls && value2 === null) {
        continue;
      }
      var keyPrefix = isArray$d(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(prefix, key) : prefix : prefix + (allowDots ? "." + key : "[" + key + "]");
      pushToArray(values, stringify2(value2, keyPrefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset));
    }
    return values;
  };
  var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
    if (!opts) {
      return defaults$1;
    }
    if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
      throw new TypeError("Encoder has to be a function.");
    }
    var charset = opts.charset || defaults$1.charset;
    if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
      throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
    }
    var format = formats$1["default"];
    if (typeof opts.format !== "undefined") {
      if (!has$1.call(formats$1.formatters, opts.format)) {
        throw new TypeError("Unknown format option provided.");
      }
      format = opts.format;
    }
    var formatter = formats$1.formatters[format];
    var filter = defaults$1.filter;
    if (typeof opts.filter === "function" || isArray$d(opts.filter)) {
      filter = opts.filter;
    }
    return {
      addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults$1.addQueryPrefix,
      allowDots: typeof opts.allowDots === "undefined" ? defaults$1.allowDots : !!opts.allowDots,
      charset,
      charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults$1.charsetSentinel,
      delimiter: typeof opts.delimiter === "undefined" ? defaults$1.delimiter : opts.delimiter,
      encode: typeof opts.encode === "boolean" ? opts.encode : defaults$1.encode,
      encoder: typeof opts.encoder === "function" ? opts.encoder : defaults$1.encoder,
      encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults$1.encodeValuesOnly,
      filter,
      format,
      formatter,
      serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults$1.serializeDate,
      skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults$1.skipNulls,
      sort: typeof opts.sort === "function" ? opts.sort : null,
      strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults$1.strictNullHandling
    };
  };
  var stringify_1 = function (object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);
    var objKeys;
    var filter;
    if (typeof options.filter === "function") {
      filter = options.filter;
      obj = filter("", obj);
    } else if (isArray$d(options.filter)) {
      filter = options.filter;
      objKeys = filter;
    }
    var keys2 = [];
    if (typeof obj !== "object" || obj === null) {
      return "";
    }
    var arrayFormat;
    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
      arrayFormat = opts.arrayFormat;
    } else if (opts && "indices" in opts) {
      arrayFormat = opts.indices ? "indices" : "repeat";
    } else {
      arrayFormat = "indices";
    }
    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
    if (!objKeys) {
      objKeys = Object.keys(obj);
    }
    if (options.sort) {
      objKeys.sort(options.sort);
    }
    for (var i2 = 0; i2 < objKeys.length; ++i2) {
      var key = objKeys[i2];
      if (options.skipNulls && obj[key] === null) {
        continue;
      }
      pushToArray(keys2, stringify$2(obj[key], key, generateArrayPrefix, options.strictNullHandling, options.skipNulls, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset));
    }
    var joined = keys2.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? "?" : "";
    if (options.charsetSentinel) {
      if (options.charset === "iso-8859-1") {
        prefix += "utf8=%26%2310003%3B&";
      } else {
        prefix += "utf8=%E2%9C%93&";
      }
    }
    return joined.length > 0 ? prefix + joined : "";
  };
  var utils$3 = utils$5;
  var has = Object.prototype.hasOwnProperty;
  var isArray$c = Array.isArray;
  var defaults = {
    allowDots: false,
    allowPrototypes: false,
    arrayLimit: 20,
    charset: "utf-8",
    charsetSentinel: false,
    comma: false,
    decoder: utils$3.decode,
    delimiter: "&",
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1e3,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
  };
  var interpretNumericEntities = function (str) {
    return str.replace(/&#(\d+);/g, function ($0, numberStr) {
      return String.fromCharCode(parseInt(numberStr, 10));
    });
  };
  var parseArrayValue = function (val2, options) {
    if (val2 && typeof val2 === "string" && options.comma && val2.indexOf(",") > -1) {
      return val2.split(",");
    }
    return val2;
  };
  var isoSentinel = "utf8=%26%2310003%3B";
  var charsetSentinel = "utf8=%E2%9C%93";
  var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
    var limit = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1;
    var i2;
    var charset = options.charset;
    if (options.charsetSentinel) {
      for (i2 = 0; i2 < parts.length; ++i2) {
        if (parts[i2].indexOf("utf8=") === 0) {
          if (parts[i2] === charsetSentinel) {
            charset = "utf-8";
          } else if (parts[i2] === isoSentinel) {
            charset = "iso-8859-1";
          }
          skipIndex = i2;
          i2 = parts.length;
        }
      }
    }
    for (i2 = 0; i2 < parts.length; ++i2) {
      if (i2 === skipIndex) {
        continue;
      }
      var part = parts[i2];
      var bracketEqualsPos = part.indexOf("]=");
      var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
      var key, val2;
      if (pos === -1) {
        key = options.decoder(part, defaults.decoder, charset, "key");
        val2 = options.strictNullHandling ? null : "";
      } else {
        key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
        val2 = utils$3.maybeMap(parseArrayValue(part.slice(pos + 1), options), function (encodedVal) {
          return options.decoder(encodedVal, defaults.decoder, charset, "value");
        });
      }
      if (val2 && options.interpretNumericEntities && charset === "iso-8859-1") {
        val2 = interpretNumericEntities(val2);
      }
      if (part.indexOf("[]=") > -1) {
        val2 = isArray$c(val2) ? [val2] : val2;
      }
      if (has.call(obj, key)) {
        obj[key] = utils$3.combine(obj[key], val2);
      } else {
        obj[key] = val2;
      }
    }
    return obj;
  };
  var parseObject = function (chain, val2, options, valuesParsed) {
    var leaf = valuesParsed ? val2 : parseArrayValue(val2, options);
    for (var i2 = chain.length - 1; i2 >= 0; --i2) {
      var obj;
      var root2 = chain[i2];
      if (root2 === "[]" && options.parseArrays) {
        obj = [].concat(leaf);
      } else {
        obj = options.plainObjects ? /* @__PURE__ */Object.create(null) : {};
        var cleanRoot = root2.charAt(0) === "[" && root2.charAt(root2.length - 1) === "]" ? root2.slice(1, -1) : root2;
        var index2 = parseInt(cleanRoot, 10);
        if (!options.parseArrays && cleanRoot === "") {
          obj = {
            0: leaf
          };
        } else if (!isNaN(index2) && root2 !== cleanRoot && String(index2) === cleanRoot && index2 >= 0 && options.parseArrays && index2 <= options.arrayLimit) {
          obj = [];
          obj[index2] = leaf;
        } else if (cleanRoot !== "__proto__") {
          obj[cleanRoot] = leaf;
        }
      }
      leaf = obj;
    }
    return leaf;
  };
  var parseKeys = function parseQueryStringKeys(givenKey, val2, options, valuesParsed) {
    if (!givenKey) {
      return;
    }
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;
    var segment = options.depth > 0 && brackets.exec(key);
    var parent2 = segment ? key.slice(0, segment.index) : key;
    var keys2 = [];
    if (parent2) {
      if (!options.plainObjects && has.call(Object.prototype, parent2)) {
        if (!options.allowPrototypes) {
          return;
        }
      }
      keys2.push(parent2);
    }
    var i2 = 0;
    while (options.depth > 0 && (segment = child.exec(key)) !== null && i2 < options.depth) {
      i2 += 1;
      if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
        if (!options.allowPrototypes) {
          return;
        }
      }
      keys2.push(segment[1]);
    }
    if (segment) {
      keys2.push("[" + key.slice(segment.index) + "]");
    }
    return parseObject(keys2, val2, options, valuesParsed);
  };
  var normalizeParseOptions = function normalizeParseOptions2(opts) {
    if (!opts) {
      return defaults;
    }
    if (opts.decoder !== null && opts.decoder !== void 0 && typeof opts.decoder !== "function") {
      throw new TypeError("Decoder has to be a function.");
    }
    if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
      throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
    }
    var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
    return {
      allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
      allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
      arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
      charset,
      charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
      comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
      decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
      delimiter: typeof opts.delimiter === "string" || utils$3.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
      // eslint-disable-next-line no-implicit-coercion, no-extra-parens
      depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
      ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
      interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
      parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
      parseArrays: opts.parseArrays !== false,
      plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
      strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
    };
  };
  var parse$1 = function (str, opts) {
    var options = normalizeParseOptions(opts);
    if (str === "" || str === null || typeof str === "undefined") {
      return options.plainObjects ? /* @__PURE__ */Object.create(null) : {};
    }
    var tempObj = typeof str === "string" ? parseValues(str, options) : str;
    var obj = options.plainObjects ? /* @__PURE__ */Object.create(null) : {};
    var keys2 = Object.keys(tempObj);
    for (var i2 = 0; i2 < keys2.length; ++i2) {
      var key = keys2[i2];
      var newObj = parseKeys(key, tempObj[key], options, typeof str === "string");
      obj = utils$3.merge(obj, newObj, options);
    }
    return utils$3.compact(obj);
  };
  var stringify$1 = stringify_1;
  var parse = parse$1;
  var formats = formats$3;
  var lib = {
    formats,
    parse,
    stringify: stringify$1
  };
  const qs = /* @__PURE__ */getDefaultExportFromCjs(lib);
  /*!
   * @bilibili/js-bridge (v2.1.18)
   * 哔哩哔哩webview容器内H5页面与APP客户端交互JSB接入包
   * 构建时间：10/28/2024, 12:09:54 PM
   */
  function e$2(e2, i2) {
    (null == i2 || i2 > e2.length) && (i2 = e2.length);
    for (var a2 = 0, t2 = Array(i2); a2 < i2; a2++) t2[a2] = e2[a2];
    return t2;
  }
  function i$2(e2, i2, a2) {
    return (i2 = function (e3) {
      var i3 = function (e4, i4) {
        if ("object" != typeof e4 || !e4) return e4;
        var a3 = e4[Symbol.toPrimitive];
        if (void 0 !== a3) {
          var t2 = a3.call(e4, i4 || "default");
          if ("object" != typeof t2) return t2;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === i4 ? String : Number)(e4);
      }(e3, "string");
      return "symbol" == typeof i3 ? i3 : i3 + "";
    }(i2)) in e2 ? Object.defineProperty(e2, i2, {
      value: a2,
      enumerable: true,
      configurable: true,
      writable: true
    }) : e2[i2] = a2, e2;
  }
  function a$3(e2, i2) {
    var a2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var t2 = Object.getOwnPropertySymbols(e2);
      i2 && (t2 = t2.filter(function (i3) {
        return Object.getOwnPropertyDescriptor(e2, i3).enumerable;
      })), a2.push.apply(a2, t2);
    }
    return a2;
  }
  function t$2(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var n2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? a$3(Object(n2), true).forEach(function (a2) {
        i$2(e2, a2, n2[a2]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(n2)) : a$3(Object(n2)).forEach(function (i2) {
        Object.defineProperty(e2, i2, Object.getOwnPropertyDescriptor(n2, i2));
      });
    }
    return e2;
  }
  function n$2(i2) {
    return function (i3) {
      if (Array.isArray(i3)) return e$2(i3);
    }(i2) || function (e2) {
      if ("undefined" != typeof Symbol && null != e2[Symbol.iterator] || null != e2["@@iterator"]) return Array.from(e2);
    }(i2) || function (i3, a2) {
      if (i3) {
        if ("string" == typeof i3) return e$2(i3, a2);
        var t2 = {}.toString.call(i3).slice(8, -1);
        return "Object" === t2 && i3.constructor && (t2 = i3.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(i3) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? e$2(i3, a2) : void 0;
      }
    }(i2) || function () {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function r$5(e2) {
    return (r$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e3) {
      return typeof e3;
    } : function (e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var s$1,
    l$2,
    o$3 = "object" === ("undefined" == typeof window ? "undefined" : r$5(window)) ? window : null,
    c$2 = function (e2, i2) {
      if (!i2) return true;
      if (e2 === i2) return false;
      for (var a2 = e2.replace(/-[a-z]*/, ".-1").split("."), t2 = i2.replace(/-[a-z]*/, ".-1").split("."), n2 = Math.max(a2.length, t2.length), r2 = 0; r2 < n2; r2++) {
        var s2 = parseInt(a2[r2], 10) || 0,
          l2 = parseInt(t2[r2], 10) || 0;
        if (s2 > l2) return true;
        if (s2 < l2) return false;
      }
      return false;
    };
  if (o$3 && (o$3.BiliJsBridge || (o$3.BiliJsBridge = {
    jsbVersion: "2.1.18",
    sendTasks: [],
    sendTasksV2: [],
    callbacks: [],
    biliInject: null,
    biliInjectV2: null,
    selfCallbackId: 1,
    newVersion: false,
    inited: false,
    initedV2: false,
    noBiliInject: false,
    noBiliInjectV2: false,
    jsbV2Apis: [],
    appSupportApis: [],
    msgCallbacks: {},
    jsbCallbacks: {},
    listenersMap: {},
    msgListener: null,
    msgListenerV: "2.1.18",
    cbReceivedV1: "2.1.18",
    cbReceivedV2: "2.1.18",
    bbVersion: "2.1.18"
  }), c$2("2.1.18", o$3.BiliJsBridge.jsbVersion) && (o$3.BiliJsBridge.jsbVersion = "2.1.18"), ["msgCallbacks", "jsbCallbacks", "listenersMap"].forEach(function (e2) {
    o$3.BiliJsBridge[e2] || (o$3.BiliJsBridge[e2] = {});
  }), !o$3.selfBrowser)) {
    o$3.selfBrowser = {
      version: (l$2 = navigator.userAgent, {
        mobile: /AppleWebKit.*Mobile.*/i.test(l$2),
        ios: /\(i[^;]+;( U;)? CPU.+Mac OS X/i.test(l$2),
        android: /Android/i.test(l$2) || /Linux/i.test(l$2),
        windowsphone: /Windows Phone/i.test(l$2),
        iPhone: /iPhone/i.test(l$2),
        iPad: /iPad/i.test(l$2),
        webApp: !/Safari/i.test(l$2),
        MicroMessenger: /MicroMessenger/i.test(l$2),
        weibo: /Weibo/i.test(l$2),
        uc: /UCBrowser/i.test(l$2),
        qq: /MQQBrowser/i.test(l$2),
        baidu: /Baidu/i.test(l$2),
        mqq: /QQ\/([\d.]+)/i.test(l$2),
        mbaidu: /baiduboxapp/i.test(l$2),
        iqiyi: /iqiyi/i.test(l$2),
        QQLive: /QQLive/i.test(l$2),
        Safari: (s$1 = navigator.userAgent, !(!/ OS \d/.test(s$1) || ~s$1.indexOf("CriOS") || s$1.indexOf("Mozilla") || !/Safari\/[\d.]+$/.test(s$1))),
        Youku: /youku/i.test(l$2),
        chrome: /CriOS/i.test(l$2),
        CMDC: /CMDC/i.test(l$2),
        BiliApp: /BiliApp|BiliComic|hikari/i.test(l$2),
        BiliMallSDK: /mallSdkVersion/i.test(l$2),
        BiliHikari: /hikari/i.test(l$2),
        bStar: /bstar_/i.test(l$2)
      }),
      language: (navigator.browserLanguage || navigator.language).toLowerCase()
    };
  }
  var d$2 = o$3 ? navigator.userAgent : null,
    f$2 = !!o$3 && /BiliApp|BiliComic|hikari/i.test(d$2),
    u$2 = "2.1.18",
    b$1 = !!o$3 && /wbType\/common/i.test(d$2),
    p$2 = false,
    g$1 = function (e2) {
      var i2 = e2.reject,
        a2 = e2.listener,
        t2 = e2.remove;
      if (b$1) return false;
      t2 || (i2 || a2 || function () {})({
        code: 103,
        msg: "not support",
        down: false,
        data: null
      });
      return true;
    },
    m$1 = function (e2, i2, a2, t2) {
      var n2 = o$3.BiliJsBridge.callbacks.findIndex(function (i3) {
        return i3.callbackId === +e2;
      });
      if (n2 >= 0) {
        var r2 = o$3.BiliJsBridge.callbacks[n2];
        if ("global.import" === r2.method && (o$3.BiliJsBridge.appSupportApis = []), "function" == typeof r2.callback) {
          var s2 = a2 || i2;
          if (r2.callback(s2), r2.messageWindow) {
            a2 instanceof Error && (s2 = {
              code: a2.code || 105,
              msg: a2.message,
              data: a2.data,
              stack: a2.stack
            });
            var l2 = JSON.stringify({
              iframeCallbackId: r2.callbackId,
              jsbReceiveArgs: s2
            });
            r2.messageWindow.postMessage(l2, "*");
          }
        }
        t2 && "global.registerChannel" !== r2.method && (o$3.BiliJsBridge.callbacks.splice(n2, 1), r2.messageWindow && r2.messageWindow.postMessage(JSON.stringify({
          iframeRemoveId: r2.callbackId
        }), "*"));
      }
    };
  function B$1(e2) {
    var i2,
      a2 = o$3.BiliJsBridge,
      n2 = a2.biliInject,
      r2 = a2.biliInjectV2,
      s2 = a2.cbReceivedV1,
      l2 = a2.cbReceivedV2;
    !n2 || n2.biliCallbackReceived && !c$2("2.1.18", s2) || (n2.biliCallbackReceived = m$1, o$3.BiliJsBridge.cbReceivedV1 = "2.1.18"), !r2 || r2.biliCallbackReceived && !c$2("2.1.18", l2) || (r2.biliCallbackReceived = function (e3, i3, a3) {
      return m$1(e3, i3, a3, true);
    }, o$3.BiliJsBridge.cbReceivedV2 = "2.1.18");
    var d2 = e2.isApiV2,
      f2 = [];
    for (var u2 in e2) Object.prototype.hasOwnProperty.call(e2, u2) && "function" == typeof e2[u2] && "callback" !== u2 && (f2.push({
      method: e2.method,
      callback: e2[u2],
      callbackId: o$3.BiliJsBridge.selfCallbackId,
      callbackName: u2,
      messageWindow: e2.messageWindow
    }), e2[u2] = "", e2.data[u2 + "CallbackId"] = o$3.BiliJsBridge.selfCallbackId++);
    if (f2.push({
      method: e2.method,
      eventKey: e2.data && e2.data.key,
      callback: e2.callback,
      callbackId: o$3.BiliJsBridge.selfCallbackId,
      callbackName: "callback",
      messageWindow: e2.messageWindow
    }), (i2 = o$3.BiliJsBridge.callbacks).push.apply(i2, f2), e2.iframeMessageId && e2.messageWindow) {
      var b2 = JSON.stringify({
        iframeMessageId: e2.iframeMessageId,
        callbacks: f2.map(function (e3) {
          return {
            callbackId: e3.callbackId,
            callbackName: e3.callbackName
          };
        })
      });
      e2.messageWindow.postMessage(b2, "*");
    }
    var p2 = function () {},
      g2 = function () {};
    if (n2 && "function" == typeof n2.postMessage && (p2 = n2.postMessage.bind(n2)), r2 && "function" == typeof r2.postMessage && (g2 = r2.postMessage.bind(r2)), d2) {
      if ("global.unregisterChannel" === e2.method) {
        var B2 = e2.callback(),
          k2 = o$3.BiliJsBridge.callbacks.findIndex(function (i3) {
            return i3.eventKey === e2.data.key && i3.callback === B2;
          });
        if (k2 > -1) {
          var v2 = o$3.BiliJsBridge.callbacks[k2];
          e2.data.callbackId = v2.callbackId, o$3.BiliJsBridge.callbacks.splice(k2, 1), v2.messageWindow && v2.messageWindow.postMessage(JSON.stringify({
            iframeRemoveId: v2.callbackId
          }), "*");
        }
      }
      g2(JSON.stringify(t$2(t$2({
        method: e2.method,
        data: e2.data
      }, e2.key && {
        key: e2.key
      }), {}, {
        callbackId: o$3.BiliJsBridge.selfCallbackId++
      })));
    } else o$3.selfBrowser.version.android ? p2(JSON.stringify({
      method: e2.method,
      data: Object.assign(e2.data, {
        callbackId: o$3.BiliJsBridge.selfCallbackId++
      })
    })) : p2({
      method: e2.method,
      data: JSON.stringify(Object.assign(e2.data, {
        callbackId: o$3.BiliJsBridge.selfCallbackId++
      }))
    });
  }
  function k$2(e2) {
    return new Promise(function (i2, a2) {
      if (e2()) i2();else var t2 = 0,
        n2 = setInterval(function () {
          t2++, e2() && (i2(), clearInterval(n2)), t2 >= 20 && (a2(), clearInterval(n2));
        }, 500);
    });
  }
  function v$1() {
    return o$3 && (o$3.biliInject || o$3.webkit && o$3.webkit.messageHandlers && o$3.webkit.messageHandlers.biliInject);
  }
  function h$1() {
    return o$3 && (o$3.biliInjectV2 || o$3.webkit && o$3.webkit.messageHandlers && o$3.webkit.messageHandlers.biliInjectV2);
  }
  function y$1(e2) {
    if ("global.import" === e2.method && (o$3.BiliJsBridge.appSupportApis = []), (e2 = e2 || {}).data = e2.data || {}, !e2.method) throw new Error("no method");
    o$3.BiliJsBridge.inited ? o$3.BiliJsBridge.newVersion && B$1(e2) : o$3.BiliJsBridge.noBiliInject || o$3.BiliJsBridge.sendTasks.push(e2);
  }
  function J$1(e2) {
    e2 && e2.method && w$1(e2.method).then(function (i2) {
      i2 && y$1(e2);
    });
  }
  function w$1(e2) {
    return new Promise(function (i2) {
      var a2 = o$3.BiliJsBridge.appSupportApis;
      a2 && a2.length ? i2(a2.includes(e2)) : y$1({
        method: "global.getAllSupport",
        callback: function (a3) {
          a3 && a3.length && (o$3.BiliJsBridge.appSupportApis = a3), i2((o$3.BiliJsBridge.appSupportApis || []).includes(e2));
        }
      });
    });
  }
  function I$1() {
    var e2 = [];
    [].forEach.call(arguments, function (i2) {
      i2 instanceof Array ? e2 = e2.concat(i2) : "string" == typeof i2 && e2.push(i2);
    }), w$1("global.import").then(function (i2) {
      i2 && e2.forEach(function (e3) {
        y$1({
          method: "global.import",
          data: {
            namespace: e3
          }
        });
      });
    });
  }
  function j$1(e2) {
    void 0 === e2.data && (e2.data = {}), o$3.BiliJsBridge.biliInjectV2 ? B$1(e2) : o$3.BiliJsBridge.noBiliInjectV2 || o$3.BiliJsBridge.sendTasksV2.push(e2);
  }
  function C$1(e2, i2) {
    return new Promise(function (a2, t2) {
      K$1({
        method: e2,
        params: i2,
        resolve: a2,
        reject: t2
      }) || j$1({
        method: e2,
        data: i2,
        isApiV2: true,
        callback: function (e3) {
          e3 && 0 === e3.code ? a2(e3) : t2(e3);
        }
      });
    });
  }
  function S$1(e2) {
    return new Promise(function (i2) {
      var a2 = o$3.BiliJsBridge.jsbV2Apis;
      a2 && a2.length ? i2(a2.includes(e2)) : C$1("global.getAllSupport").then(function (a3) {
        var t2 = a3.data.methods;
        t2 && t2.length && (o$3.BiliJsBridge.jsbV2Apis = t2), i2((o$3.BiliJsBridge.jsbV2Apis || []).includes(e2));
      }).catch(function () {
        return i2(false);
      });
    });
  }
  function V$1(e2) {
    if (e2.data) {
      var i2 = {};
      try {
        i2 = JSON.parse(e2.data);
      } catch (p2) {}
      if (i2 && (i2.iframeMessageId || i2.iframeCallbackId || i2.iframeRemoveId)) {
        var a2 = i2.iframeMessageId,
          r2 = o$3.BiliJsBridge.msgCallbacks[a2];
        if (r2) return "function" == typeof r2 && r2(i2), void delete o$3.BiliJsBridge.msgCallbacks[i2.iframeMessageId];
        if (i2.iframeCallbackId) {
          var s2 = o$3.BiliJsBridge.jsbCallbacks[i2.iframeCallbackId];
          "function" == typeof s2 && s2(i2.jsbReceiveArgs);
        } else if (i2.iframeRemoveId) delete o$3.BiliJsBridge.jsbCallbacks[i2.iframeRemoveId];else if (i2.method) {
          var l2 = e2.source,
            c2 = i2.method.replace(/^bili_jsb_/, ""),
            d2 = i2.option || {};
          switch (d2.messageWindow = l2, d2.iframeMessageId = a2, c2) {
            case "isSupport":
            case "canIUse":
              ("isSupport" === c2 ? w$1 : S$1)(i2.api).then(function (e3) {
                l2.postMessage(JSON.stringify(t$2(t$2({}, i2), {}, {
                  support: e3
                })), "*");
              }).catch(function () {
                l2.postMessage(JSON.stringify(t$2(t$2({}, i2), {}, {
                  support: false
                })), "*");
              });
              break;
            case "callNative":
            case "callNativeSafe":
              for (var f2 in d2) "jsbCallbackFn" === d2[f2] && (d2[f2] = function () {});
              "callNative" === c2 ? y$1(d2) : J$1(d2);
              break;
            case "importNameSpace":
              I$1.apply(void 0, n$2(i2.namespaces)), l2.postMessage(JSON.stringify(t$2({}, i2)), "*");
              break;
            case "useNative":
              d2.callback = function () {}, j$1(d2);
              break;
            case "addChannel":
              var u2 = d2.callback;
              d2.callback = function () {}, o$3.BiliJsBridge.listenersMap[u2] = {
                key: d2.data.key,
                listener: d2.callback
              }, j$1(d2);
              break;
            case "removeChannel":
              var b2 = o$3.BiliJsBridge.listenersMap[d2.callback];
              if (!b2) return;
              d2.callback = function () {
                return b2.listener;
              }, j$1(d2);
          }
        }
      }
    }
  }
  if (o$3) {
    var M$1 = o$3.BiliJsBridge,
      O$1 = M$1.msgListener,
      A$1 = M$1.msgListenerV;
    O$1 && !c$2("2.1.18", A$1) || (O$1 && window.removeEventListener("message", O$1), window.addEventListener("message", V$1), o$3.BiliJsBridge.msgListener = V$1, o$3.BiliJsBridge.msgListenerV = "2.1.18");
  }
  var N$1 = function (e2) {
      return p$2 ? Promise.resolve() : (p$2 = true, "function" == typeof e2 && (g$1 = e2), Promise.all([k$2(v$1).then(function () {
        o$3.BiliJsBridge.biliInject = v$1(), o$3.BiliJsBridge.newVersion = true, o$3.BiliJsBridge.sendTasks.forEach(function (e3) {
          return B$1(e3);
        }), o$3.BiliJsBridge.sendTasks = [];
      }).catch(function () {
        o$3.BiliJsBridge.noBiliInject = true;
      }).finally(function () {
        o$3.BiliJsBridge.inited = true;
      }), k$2(h$1).then(function () {
        o$3.BiliJsBridge.biliInjectV2 = h$1(), o$3.BiliJsBridge.sendTasksV2.forEach(function (e3) {
          return B$1(e3);
        }), o$3.BiliJsBridge.sendTasksV2 = [];
      }).catch(function () {
        o$3.BiliJsBridge.noBiliInjectV2 = true;
      }).finally(function () {
        o$3.BiliJsBridge.initedV2 = true;
      })]));
    },
    P$1 = w$1,
    W$1 = y$1,
    R$1 = J$1,
    E$1 = I$1,
    L = S$1,
    T$1 = C$1,
    x$1 = function (e2, i2, a2) {
      K$1({
        event: e2,
        listener: i2,
        params: a2
      }) || j$1({
        method: "global.registerChannel",
        key: e2,
        data: t$2({
          key: e2
        }, a2),
        isApiV2: true,
        callback: i2
      });
    },
    Q$1 = function (e2, i2) {
      K$1({
        event: e2,
        listener: i2,
        remove: true
      }) || j$1({
        method: "global.unregisterChannel",
        key: e2,
        data: {
          key: e2
        },
        isApiV2: true,
        callback: function () {
          return i2;
        }
      });
    },
    D$1 = v$1,
    U$1 = h$1;
  if (o$3 && window !== window.parent && window.top) {
    var q$1 = function (e2, i2) {
      e2.method = "bili_jsb_".concat(e2.method), e2.iframeMessageId = Math.random(), o$3.BiliJsBridge.msgCallbacks[e2.iframeMessageId] = i2 || function () {}, window.top.postMessage(JSON.stringify(e2), "*");
    };
    N$1 = function (e2) {
      return "function" == typeof e2 && (g$1 = e2), Promise.resolve();
    }, P$1 = function (e2) {
      return new Promise(function (i2) {
        q$1({
          method: "isSupport",
          api: e2
        }, function (e3) {
          var a2 = e3.support;
          return i2(a2);
        });
      });
    };
    var H$1 = function (e2, i2) {
      var a2 = t$2({}, i2);
      for (var n2 in a2) "function" == typeof a2[n2] && (a2[n2] = "jsbCallbackFn");
      q$1({
        method: e2,
        option: a2
      }, function (e3) {
        (e3.callbacks || []).forEach(function (e4) {
          o$3.BiliJsBridge.jsbCallbacks[e4.callbackId] = i2[e4.callbackName];
        });
      });
    };
    W$1 = function (e2) {
      return H$1("callNative", e2);
    }, R$1 = function (e2) {
      return H$1("callNativeSafe", e2);
    }, E$1 = function () {
      for (var e2 = arguments.length, i2 = new Array(e2), a2 = 0; a2 < e2; a2++) i2[a2] = arguments[a2];
      return q$1({
        method: "importNameSpace",
        namespaces: i2
      });
    }, L = function (e2) {
      return new Promise(function (i2) {
        q$1({
          method: "canIUse",
          api: e2
        }, function (e3) {
          var a2 = e3.support;
          return i2(a2);
        });
      });
    }, T$1 = function (e2, i2) {
      return new Promise(function (a2, t2) {
        K$1({
          method: e2,
          params: i2,
          resolve: a2,
          reject: t2
        }) || q$1({
          method: "useNative",
          option: {
            method: e2,
            data: i2,
            isApiV2: true,
            callback: "jsbCallbackFn"
          }
        }, function (e3) {
          var i3 = e3.callbacks[0].callbackId;
          o$3.BiliJsBridge.jsbCallbacks[i3] = function (e4) {
            e4 && 0 === e4.code ? a2(e4) : t2(e4);
          };
        });
      });
    }, x$1 = function (e2, i2, a2) {
      if (!K$1({
        event: e2,
        listener: i2,
        params: a2
      })) {
        var n2 = Math.random();
        o$3.BiliJsBridge.listenersMap[n2] = {
          key: e2,
          listener: i2
        };
        var r2 = {
          method: "global.registerChannel",
          key: e2,
          data: t$2({
            key: e2
          }, a2),
          isApiV2: true,
          callback: n2
        };
        q$1({
          method: "addChannel",
          option: r2
        }, function (e3) {
          var a3 = e3.callbacks[0].callbackId;
          o$3.BiliJsBridge.jsbCallbacks[a3] = i2;
        });
      }
    }, Q$1 = function (e2, i2) {
      if (!K$1({
        event: e2,
        listener: i2,
        remove: true
      })) {
        var a2 = Object.keys(o$3.BiliJsBridge.listenersMap).find(function (a3) {
          var t3 = o$3.BiliJsBridge.listenersMap[a3];
          return t3.key === e2 && t3.listener === i2;
        });
        if (a2) {
          var t2 = {
            method: "global.unregisterChannel",
            key: e2,
            data: {
              key: e2
            },
            isApiV2: true,
            callback: a2
          };
          delete o$3.BiliJsBridge.listenersMap[a2], q$1({
            method: "removeChannel",
            option: t2
          }, function (e3) {
            var i3 = e3.callbacks[0].callbackId;
            o$3.BiliJsBridge.jsbCallbacks[i3] = function () {};
          });
        }
      }
    }, D$1 = U$1 = function () {
      return true;
    };
  }
  var _$1 = {
    inBiliApp: f$2,
    jsbVersion: "2.1.18",
    isWbTypeCommon: b$1,
    initEnv: N$1,
    isSupport: P$1,
    callNative: W$1,
    callNativeSafe: R$1,
    importNameSpace: E$1,
    isNewJsBridge: D$1,
    isBiliInjectV2: U$1,
    canIUse: L,
    useNative: T$1,
    addChannel: x$1,
    removeChannel: Q$1
  };
  function K$1(e2) {
    return g$1(t$2({
      biliBridge: _$1,
      inBiliApp: f$2,
      jsbVersion: "2.1.18",
      isWbTypeCommon: b$1,
      isSupport: P$1,
      callNative: W$1,
      callNativeSafe: R$1,
      importNameSpace: E$1
    }, e2));
  }
  !o$3 || o$3.biliBridge && !c$2("2.1.18", o$3.BiliJsBridge.bbVersion) || (o$3.biliBridge = _$1, o$3.BiliJsBridge.bbVersion = "2.1.18");
  const jsb = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({
    __proto__: null,
    get addChannel() {
      return x$1;
    },
    biliBridge: _$1,
    get callNative() {
      return W$1;
    },
    get callNativeSafe() {
      return R$1;
    },
    get canIUse() {
      return L;
    },
    get importNameSpace() {
      return E$1;
    },
    inBiliApp: f$2,
    get initEnv() {
      return N$1;
    },
    get isBiliInjectV2() {
      return U$1;
    },
    get isNewJsBridge() {
      return D$1;
    },
    get isSupport() {
      return P$1;
    },
    isWbTypeCommon: b$1,
    jsbVersion: u$2,
    get removeChannel() {
      return Q$1;
    },
    get useNative() {
      return T$1;
    }
  }, Symbol.toStringTag, {
    value: "Module"
  }));
  const cookie = {
    get(cookieName) {
      var theCookie = "" + document.cookie;
      var ind = theCookie.indexOf(cookieName + "=");
      if (ind == -1 || cookieName == "") return "";
      var ind1 = theCookie.indexOf(";", ind);
      if (ind1 == -1) ind1 = theCookie.length;
      return unescape(theCookie.substring(ind + cookieName.length + 1, ind1));
    },
    set(name, value2, days) {
      days = days !== void 0 ? days : 365;
      var exp = /* @__PURE__ */new Date();
      exp.setTime(exp.getTime() + days * 24 * 60 * 60 * 1e3);
      document.cookie = name + "=" + escape(value2) + ";expires=" + exp.toUTCString() + "; path=/; domain=.bilibili.com";
    },
    delete(name) {
      this.set(name, "", -1);
    }
  };
  const r$4 = (method, url2) => params => {
    let req = null;
    if (method === "get") {
      req = axios$1.get(url2, {
        params,
        withCredentials: true
      });
    } else if (method === "post") {
      req = axios$1.post(url2, qs.stringify({
        ...params,
        csrf: cookie.get("bili_jct")
      }), {
        withCredentials: true
      });
    }
    return req.then(ores => {
      const res = ores.data;
      if (res.code !== 0) {
        throw res;
      }
      return res.data;
    });
  };
  const webp = function () {
    try {
      return document.createElement("canvas").toDataURL("image/webp").indexOf("data:image/webp") == 0;
    } catch (err) {
      return false;
    }
  }();
  const bfsImage = (url2, w2, h2) => {
    if (!url2) {
      return url2;
    }
    const suffix = url2.match(/(.*\.(jpg|jpeg|gif|png|bmp))(\?.*)?/);
    const isBfs = url2.indexOf("/bfs/") !== -1 ? true : false;
    if (!suffix || suffix[2] === "gif" || suffix[2] === "bmp" || !isBfs) {
      return url2;
    }
    const dpr = typeof window !== void 0 && window.devicePixelRatio || 1;
    const cut = w2 && h2 ? "@" + Math.round(w2 * dpr) + "w_" + Math.round(h2 * dpr) + "h" : "@";
    const arg = suffix[3] ? suffix[3] : "";
    if (webp) {
      return suffix[1] + cut + ".webp" + arg;
    } else {
      return suffix[1] + cut + "." + suffix[2] + arg;
    }
  };
  const loginNa = () => new Promise((resolve, reject) => {
    if (f$2) {
      _$1.callNative({
        method: "auth.login",
        data: {
          type: "default"
        },
        onLogin(data2) {
          var _a2;
          if (data2 && Number(data2.state)) {
            resolve();
            (_a2 = window.__match_event_emitter) == null ? void 0 : _a2.emit("login");
          } else {
            reject();
          }
        }
      });
    } else {
      window.location.href = "https://passport.bilibili.com/login?gourl=" + encodeURIComponent(location.href);
    }
  });
  const openScheme = url2 => {
    if (f$2) {
      _$1.callNative({
        method: "ability.openScheme",
        data: {
          url: url2
        }
      });
    } else {
      window.location.href = url2;
    }
  };
  const utils$2 = {
    bfsImage,
    loginNa,
    openScheme
  };
  (() => {
    if (typeof window === "undefined") {
      return () => {};
    }
    if ("IntersectionObserver" in window) {
      const observer = new IntersectionObserver((entries, observer2) => {
        entries.forEach(entry => {
          var _a2, _b2;
          if (entry.isIntersecting) {
            const el = entry.target;
            (_b2 = (_a2 = el.__exposure__) == null ? void 0 : _a2.handler) == null ? void 0 : _b2.call(_a2);
            observer2.unobserve(el);
          }
        });
      }, {
        threshold: 0.5
      });
      return (el, handler) => {
        el.__exposure__ = {
          ...el.__exposure__,
          handler
        };
        observer.observe(el);
        return () => observer.unobserve(el);
      };
    } else {
      const checkInView = function (dom) {
        let preload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        if (!dom) {
          return false;
        }
        const rect = dom.getBoundingClientRect();
        return rect.top < window.innerHeight + preload && rect.bottom + preload > 0 && rect.left < window.innerWidth + preload && rect.right + preload > 0;
      };
      const getScrollParent = dom => {
        let el = dom;
        if (!el) {
          return null;
        }
        while (el && el.tagName !== "HTML" && el.tagName !== "BOYD" && el.nodeType === 1) {
          const overflowY = window.getComputedStyle(el).overflowY;
          if (overflowY === "scroll" || overflowY === "auto") {
            if (el.tagName === "HTML" || el.tagName === "BODY") {
              return document;
            }
            return el;
          }
          el = el.parentNode;
        }
        return document;
      };
      return (el, handler) => {
        if (checkInView(el)) {
          handler();
          return () => {};
        } else {
          const parent2 = getScrollParent(el);
          const handleChange = () => {
            if (checkInView(el)) {
              handler();
              parent2.removeEventListener("resize", handleChange);
              parent2.removeEventListener("scroll", handleChange);
            }
          };
          parent2.addEventListener("resize", handleChange, {
            passive: true
          });
          parent2.addEventListener("scroll", handleChange, {
            passive: true
          });
          return () => {
            parent2.removeEventListener("resize", handleChange);
            parent2.removeEventListener("scroll", handleChange);
          };
        }
      };
    }
  })();
  function mitt(n2) {
    return {
      all: n2 = n2 || /* @__PURE__ */new Map(),
      on: function (t2, e2) {
        var i2 = n2.get(t2);
        i2 && i2.push(e2) || n2.set(t2, [e2]);
      },
      off: function (t2, e2) {
        var i2 = n2.get(t2);
        i2 && i2.splice(i2.indexOf(e2) >>> 0, 1);
      },
      emit: function (t2, e2) {
        (n2.get(t2) || []).slice().map(function (n3) {
          n3(e2);
        }), (n2.get("*") || []).slice().map(function (n3) {
          n3(t2, e2);
        });
      }
    };
  }
  if (typeof window !== "undefined") {
    window.__match_env_deps = {
      axios: axios$1,
      qs,
      jsb,
      api: r$4,
      utils: utils$2
    };
    N$1();
    window.__match_event_emitter = mitt();
    window.__match_components = [];
  }
  var render$t = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      class: {
        active: _vm.active
      },
      attrs: {
        "xmlns": "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        "viewBox": "0 0 14 14",
        "version": "1.1"
      }
    }, [_c("path", {
      attrs: {
        "fill": _vm.textColor,
        "d": "M4.2308252,4.92309951 L1.76927447,4.92309951 C2.6115602,2.89757692 4.71169276,1.53846003 7.05128231,1.53846003 C9.89155462,1.53846003 12.380735,3.5406913 12.6923361,6.30769984 L14,5.66568152 C13.3318648,2.43243561 10.4687073,0 7.05128231,0 C3.41114555,0 0.399513591,2.75988413 0,6.30769984 L0,7 L4.2308252,4.92309951 Z M9.76467066,9.07690049 L12.2287835,9.07690049 C11.3855733,11.1024231 9.2831356,12.46154 6.94097808,12.46154 C4.12245427,12.46154 1.65051838,10.4182064 1.30379077,7.68736789 L0,8.32678306 C0.694991868,11.5346825 3.54410928,14 6.94097808,14 C10.58525,14 13.6000479,11.2401159 14,7.69230016 L14,7 L9.76467066,9.07690049 Z"
      }
    })]);
  };
  var staticRenderFns$t = [];
  const refresh_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
  function normalizeComponent(scriptExports, render2, staticRenderFns2, functionalTemplate, injectStyles, scopeId, moduleIdentifier, shadowMode) {
    var options = typeof scriptExports === "function" ? scriptExports.options : scriptExports;
    if (render2) {
      options.render = render2;
      options.staticRenderFns = staticRenderFns2;
      options._compiled = true;
    }
    if (functionalTemplate) {
      options.functional = true;
    }
    if (scopeId) {
      options._scopeId = "data-v-" + scopeId;
    }
    var hook;
    if (moduleIdentifier) {
      hook = function (context) {
        context = context ||
        // cached call
        this.$vnode && this.$vnode.ssrContext ||
        // stateful
        this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext;
        if (!context && typeof __VUE_SSR_CONTEXT__ !== "undefined") {
          context = __VUE_SSR_CONTEXT__;
        }
        if (injectStyles) {
          injectStyles.call(this, context);
        }
        if (context && context._registeredComponents) {
          context._registeredComponents.add(moduleIdentifier);
        }
      };
      options._ssrRegister = hook;
    } else if (injectStyles) {
      hook = shadowMode ? function () {
        injectStyles.call(this, (options.functional ? this.parent : this).$root.$options.shadowRoot);
      } : injectStyles;
    }
    if (hook) {
      if (options.functional) {
        options._injectStyles = hook;
        var originalRender = options.render;
        options.render = function renderWithStyleInjection(h2, context) {
          hook.call(context);
          return originalRender(h2, context);
        };
      } else {
        var existing = options.beforeCreate;
        options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
      }
    }
    return {
      exports: scriptExports,
      options
    };
  }
  const __vue2_script$t = {
    props: ["active", "textColor"]
  };
  const __cssModules$t = {};
  var __component__$t = /* @__PURE__ */normalizeComponent(__vue2_script$t, render$t, staticRenderFns$t, false, __vue2_injectStyles$t, "6ce8d422", null, null);
  function __vue2_injectStyles$t(context) {
    for (let o2 in __cssModules$t) {
      this[o2] = __cssModules$t[o2];
    }
  }
  const IconRefresh$1 = /* @__PURE__ */function () {
    return __component__$t.exports;
  }();
  var render$s = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      staticClass: "arrow-right-icon",
      style: _vm.iconStyle,
      attrs: {
        "xmlns": "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        "viewBox": "0 0 200 200",
        "version": "1.1"
      }
    }, [_c("path", {
      attrs: {
        "fill": _vm.iconStyle.color,
        "d": "M137.989 100.274l-63.866 64.364c-2.39 2.408-2.206 6.205 0.183 8.613s6.456 2.292 8.845-0.116l68.404-68.937c2.384-2.408 1.912-5.92-0.472-8.322l-68.476-69.010c-2.39-2.408-6.456-2.525-8.845-0.116-2.39 2.402-2.576 6.208-0.186 8.61l64.412 64.915z"
      }
    })]);
  };
  var staticRenderFns$s = [];
  const ArrowRight_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$s = {
    props: ["iconStyle"]
  };
  const __cssModules$s = {};
  var __component__$s = /* @__PURE__ */normalizeComponent(__vue2_script$s, render$s, staticRenderFns$s, false, __vue2_injectStyles$s, "6e7ae2e3", null, null);
  function __vue2_injectStyles$s(context) {
    for (let o2 in __cssModules$s) {
      this[o2] = __cssModules$s[o2];
    }
  }
  const IconArrowRight = /* @__PURE__ */function () {
    return __component__$s.exports;
  }();
  var render$r = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("transition", {
      attrs: {
        "name": "slide"
      }
    }, [_vm.mounted ? _c("div", {
      staticClass: "wrapper",
      on: {
        "click": _vm.handleClick
      }
    }, [_c("div", {
      ref: "content",
      staticClass: "content",
      style: _vm.contentStyle
    }, [_vm._t("default")], 2)]) : _vm._e()]);
  };
  var staticRenderFns$r = [];
  const Layer_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
  const __vue2_script$r = {
    props: ["height", "layerStyle"],
    data() {
      return {
        mounted: false,
        pageConfig: window.__match_page_config || {},
        contentStyle: {}
      };
    },
    mounted() {
      var _a2;
      this.mounted = true;
      const isHalfpage = (_a2 = window.__initialState) == null ? void 0 : _a2["match-env-h5"];
      this.contentStyle = {
        backgroundColor: this.layerStyle.popBgColor || "#3C3F69",
        color: this.layerStyle.popFontColor || "#fff",
        height: this.height,
        maxHeight: isHalfpage ? "100%" : "calc(100% - 1.76rem)"
      };
    },
    methods: {
      handleClick(e2) {
        if (!e2.composedPath) {
          return;
        }
        let p2 = e2.composedPath();
        if (!p2.some(v2 => v2 === this.$refs["content"])) {
          this.$emit("close");
        }
      }
    }
  };
  const __cssModules$r = {};
  var __component__$r = /* @__PURE__ */normalizeComponent(__vue2_script$r, render$r, staticRenderFns$r, false, __vue2_injectStyles$r, "ae95544c", null, null);
  function __vue2_injectStyles$r(context) {
    for (let o2 in __cssModules$r) {
      this[o2] = __cssModules$r[o2];
    }
  }
  const Layer$1 = /* @__PURE__ */function () {
    return __component__$r.exports;
  }();
  var render$q = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      staticClass: "close-icon",
      attrs: {
        "viewBox": "0 0 200 200"
      }
    }, [_c("path", {
      attrs: {
        "stroke": "#fff",
        "stroke-width": "5",
        "fill": "#fff",
        "d": "M40.633 40.633c2.663-2.663 6.98-2.663 9.642 0v0l50.37 50.367 50.371-50.367c2.663-2.663 6.98-2.663 9.642 0s2.663 6.98 0 9.642l-50.368 50.37 50.368 50.371c2.421 2.421 2.641 6.208 0.66 8.878l-0.66 0.765c-2.663 2.663-6.98 2.663-9.642 0v0l-50.371-50.368-50.37 50.368c-2.663 2.663-6.98 2.663-9.642 0s-2.663-6.98 0-9.642l50.367-50.371-50.367-50.37c-2.421-2.421-2.641-6.208-0.66-8.878z"
      }
    })]);
  };
  var staticRenderFns$q = [];
  const close_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
  const __vue2_script$q = {};
  const __cssModules$q = {};
  var __component__$q = /* @__PURE__ */normalizeComponent(__vue2_script$q, render$q, staticRenderFns$q, false, __vue2_injectStyles$q, "66e65548", null, null);
  function __vue2_injectStyles$q(context) {
    for (let o2 in __cssModules$q) {
      this[o2] = __cssModules$q[o2];
    }
  }
  const IconClose$1 = /* @__PURE__ */function () {
    return __component__$q.exports;
  }();
  var render$p = function () {
    var _vm2;
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "logo-pic",
      style: {
        backgroundImage: `url(${(_vm2 = _vm).bfsImage.apply(_vm2, _vm.src)})`
      }
    });
  };
  var staticRenderFns$p = [];
  const PhImage_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$p = {
    props: ["src", "loading", "imgStyle"],
    methods: {
      bfsImage(url2, w2, h2) {
        var _a2;
        return (_a2 = window.__match_env_deps) == null ? void 0 : _a2.utils.bfsImage(url2, w2, h2);
      }
    }
  };
  const __cssModules$p = {};
  var __component__$p = /* @__PURE__ */normalizeComponent(__vue2_script$p, render$p, staticRenderFns$p, false, __vue2_injectStyles$p, "e280e540", null, null);
  function __vue2_injectStyles$p(context) {
    for (let o2 in __cssModules$p) {
      this[o2] = __cssModules$p[o2];
    }
  }
  const PhImage = /* @__PURE__ */function () {
    return __component__$p.exports;
  }();
  var render$o = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": "100%",
        "layerStyle": _vm.options.config
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("奖池")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "rewards"
    }, _vm._l(_vm.options.gifts || [], function (item, i2) {
      return _c("div", {
        key: i2,
        staticClass: "reward"
      }, [_c("div", {
        staticClass: "logo-wrap"
      }, [_c("PhImage", {
        staticClass: "logo",
        attrs: {
          "loading": "lazy",
          "src": [_vm.giftImg(item), 78, 78]
        }
      })], 1), _c("div", {
        staticClass: "name"
      }, [_vm._v(_vm._s(_vm.giftName(item)))])]);
    }), 0)])]) : _vm._e();
  };
  var staticRenderFns$o = [];
  const GiftsLayer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$o = {
    name: "GiftsLayer",
    components: {
      Layer: Layer$1,
      IconClose: IconClose$1,
      PhImage
    },
    data() {
      return {
        options: {},
        visible: false,
        margin: 5
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
        const w2 = window.innerWidth - 14;
        const numRow = Math.floor(w2 / 120);
        this.margin = Math.floor(w2 % 120 / (numRow * 2) + 5);
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
      },
      giftName(item) {
        var _a2;
        return ((_a2 = item == null ? void 0 : item.award_info) == null ? void 0 : _a2.name) || (item == null ? void 0 : item.name);
      },
      giftImg(item) {
        var _a2;
        return ((_a2 = item == null ? void 0 : item.award_info) == null ? void 0 : _a2.icon) || (item == null ? void 0 : item.img_url);
      },
      onConfirm() {
        var _a2, _b2;
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2);
        this.close();
      }
    }
  };
  const __cssModules$o = {};
  var __component__$o = /* @__PURE__ */normalizeComponent(__vue2_script$o, render$o, staticRenderFns$o, false, __vue2_injectStyles$o, "42babd92", null, null);
  function __vue2_injectStyles$o(context) {
    for (let o2 in __cssModules$o) {
      this[o2] = __cssModules$o[o2];
    }
  }
  const GiftsLayer = /* @__PURE__ */function () {
    return __component__$o.exports;
  }();
  const r$3 = typeof window !== "undefined" && window.__match_env_deps.api || (() => () => {});
  const api = {
    // 老抽奖
    // fetchDrawCount: r('get', '//api.bilibili.com/x/activity/lottery/mytimes'),
    // fetchGifts: r('get', '//api.bilibili.com/x/activity/lottery/gift'),
    // fetchWinList: r('get', '//api.bilibili.com/x/activity/lottery/win/list'),
    // draw: r('post', '//api.bilibili.com/x/activity/lottery/do'),
    // 新抽奖
    fetchDrawCount: r$3("get", "//uat-api.bilibili.com/x/lottery/x/mytimes"),
    fetchGifts: r$3("get", "//uat-api.bilibili.com/x/lottery/x/gift"),
    fetchWinList: r$3("get", "//uat-api.bilibili.com/x/lottery/x/win/list"),
    draw: r$3("post", "//uat-api.bilibili.com/x/lottery/x/do"),
    // 获取奖励平台的中奖列表
    fetMyRewardsRecords: r$3("get", "//api.bilibili.com/x/activity/rewards/awards/mylist"),
    // 继续奖励发放
    continueRewards: r$3("get", "//api.bilibili.com/x/activity/rewards/send/continue"),
    addAddress: r$3("post", "//api.bilibili.com/x/activity/rewards/address/add"),
    getAddress: r$3("get", "//api.bilibili.com/x/activity/rewards/address/get"),
    // 直播账号绑定相关
    fetchBindConfig: r$3("get", "//api.bilibili.com/x/activity/bind/config"),
    fetchBindInfo: r$3("get", "//api.bilibili.com/x/activity/bind/info"),
    fetchBindLink: r$3("get", "//api.bilibili.com/x/activity/bind/handler")
  };
  var render$n = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "fallback",
      style: {
        "--match-primary-color": _vm.transRgb
      }
    }, [_c("div", {
      class: ["img", _vm.type]
    }), _c("div", {
      staticClass: "text",
      domProps: {
        "textContent": _vm._s(_vm.text)
      }
    }), _vm.refresh ? _c("div", {
      staticClass: "refresh",
      style: {
        color: _vm.config.bgColor,
        borderColor: _vm.config.bgColor
      },
      on: {
        "click": function ($event) {
          return _vm.refresh();
        }
      }
    }, [_vm._v(" 刷新 ")]) : _vm._e()]);
  };
  var staticRenderFns$n = [];
  const FallbackStatus_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$n = {
    props: {
      type: {
        type: String,
        // empty | error
        default: "empty"
      },
      text: {
        type: String,
        default: ""
      },
      refresh: {
        type: Function
      },
      config: {}
    },
    data() {
      return {};
    },
    computed: {
      transRgb() {
        var _a2, _b2, _c;
        return (_c = (_b2 = (_a2 = this.config.bgColor) == null ? void 0 : _a2.match(/\((.*)\)/)) == null ? void 0 : _b2[1]) == null ? void 0 : _c.split(",").slice(0, 3).map(v2 => parseInt(v2)).join(",");
      }
    }
  };
  const __cssModules$n = {};
  var __component__$n = /* @__PURE__ */normalizeComponent(__vue2_script$n, render$n, staticRenderFns$n, false, __vue2_injectStyles$n, "df00ba1e", null, null);
  function __vue2_injectStyles$n(context) {
    for (let o2 in __cssModules$n) {
      this[o2] = __cssModules$n[o2];
    }
  }
  const FallbackStatus = /* @__PURE__ */function () {
    return __component__$n.exports;
  }();
  var render$m = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("transition", {
      attrs: {
        "name": "v-toast__transition"
      }
    }, [_vm.visible ? _c("div", {
      staticClass: "v-toast__wrap",
      class: {
        "v-toast__mask": _vm.type !== "loading"
      }
    }, [_c("div", {
      staticClass: "v-toast",
      class: `v-toast--${_vm.type}`
    }, [_c("i", {
      staticClass: "v-toast__font bili-font"
    }), _c("span", {
      staticClass: "v-toast__text",
      domProps: {
        "textContent": _vm._s(_vm.message)
      }
    })])]) : _vm._e()]);
  };
  var staticRenderFns$m = [];
  const toast_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
  const __vue2_script$m = {
    data() {
      return {
        id: "",
        type: "",
        message: "",
        visible: false
      };
    },
    methods: {
      show(options) {
        this.message = options.message;
        this.type = options.type;
        const id = Math.random().toString(36).substring(3, 6);
        this.id = id;
        this.visible = true;
        if (options.type !== "loading") {
          setTimeout(() => {
            this.hide(id);
          }, options.duration);
        }
      },
      hide(id) {
        if (id && id !== this.id) {
          return;
        }
        this.visible = false;
      }
    }
  };
  const __cssModules$m = {};
  var __component__$m = /* @__PURE__ */normalizeComponent(__vue2_script$m, render$m, staticRenderFns$m, false, __vue2_injectStyles$m, "0a1fe7fd", null, null);
  function __vue2_injectStyles$m(context) {
    for (let o2 in __cssModules$m) {
      this[o2] = __cssModules$m[o2];
    }
  }
  const VueToast$1 = /* @__PURE__ */function () {
    return __component__$m.exports;
  }();
  function newVue$1() {
    if (typeof window === "undefined") {
      return;
    }
    const el = document.createElement("div");
    document.body.appendChild(el);
    return new Vue(VueToast$1).$mount(el);
  }
  const createToast$1 = function () {
    let {
      duration,
      timeout: timeout2
    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const _vm = newVue$1();
    const _duration = duration || 1500;
    const _timeout = timeout2 || 1500;
    const _promise = duration2 => new Promise(resolve => {
      setTimeout(resolve, duration2);
    });
    return {
      info(tip) {
        let text;
        let time2;
        if (typeof tip === "object") {
          text = tip.tip;
          time2 = tip.time || _duration;
        } else {
          text = tip;
          time2 = _duration;
        }
        _vm.show({
          duration: time2,
          message: text,
          type: "info"
        });
        return _promise(_timeout);
      },
      stop() {
        _vm.hide();
      }
    };
  };
  const toast$2 = createToast$1();
  var render$l = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("transition", {
      attrs: {
        "name": "v-toast__transition"
      }
    }, [_vm.visible ? _c("div", {
      staticClass: "v-toast__wrap",
      class: {
        "v-toast__mask": _vm.type !== "loading"
      }
    }, [_c("div", {
      staticClass: "v-toast",
      class: `v-toast--${_vm.type}`
    }, [_c("i", {
      staticClass: "v-toast__font bili-font"
    }), _c("span", {
      staticClass: "v-toast__text",
      domProps: {
        "textContent": _vm._s(_vm.message)
      }
    })])]) : _vm._e()]);
  };
  var staticRenderFns$l = [];
  const toast_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$l = {
    data() {
      return {
        id: "",
        type: "",
        message: "",
        visible: false
      };
    },
    methods: {
      show(options) {
        this.message = options.message;
        this.type = options.type;
        const id = Math.random().toString(36).substring(3, 6);
        this.id = id;
        this.visible = true;
        if (options.type !== "loading") {
          setTimeout(() => {
            this.hide(id);
          }, options.duration);
        }
      },
      hide(id) {
        if (id && id !== this.id) {
          return;
        }
        this.visible = false;
      }
    }
  };
  const __cssModules$l = {};
  var __component__$l = /* @__PURE__ */normalizeComponent(__vue2_script$l, render$l, staticRenderFns$l, false, __vue2_injectStyles$l, "6089df96", null, null);
  function __vue2_injectStyles$l(context) {
    for (let o2 in __cssModules$l) {
      this[o2] = __cssModules$l[o2];
    }
  }
  const VueToast = /* @__PURE__ */function () {
    return __component__$l.exports;
  }();
  function newVue() {
    if (typeof window === "undefined") {
      return;
    }
    const el = document.createElement("div");
    document.body.appendChild(el);
    return new Vue(VueToast).$mount(el);
  }
  const createToast = function () {
    let {
      duration,
      timeout: timeout2
    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const _vm = newVue();
    const _duration = duration || 1500;
    const _timeout = timeout2 || 1500;
    const _promise = duration2 => new Promise(resolve => {
      setTimeout(resolve, duration2);
    });
    return {
      info(tip) {
        let text;
        let time2;
        if (typeof tip === "object") {
          text = tip.tip;
          time2 = tip.time || _duration;
        } else {
          text = tip;
          time2 = _duration;
        }
        _vm.show({
          duration: time2,
          message: text,
          type: "info"
        });
        return _promise(_timeout);
      },
      stop() {
        _vm.hide();
      }
    };
  };
  const toast$1 = createToast();
  var render$k = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      attrs: {
        "xmlns": "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        "width": "14px",
        "height": "14px",
        "viewBox": "0 0 14 14",
        "version": "1.1"
      }
    }, [_c("path", {
      attrs: {
        "d": "M10.0950686,6.69184099 L12.111194,4.6757156 C12.8784837,3.90639016 12.878485,2.66121723 12.1111941,1.89189993 C11.7358774,1.51614578 11.2415798,1.31142699 10.7157862,1.31142699 C10.1899926,1.31142699 9.69569496,1.51614578 9.32344081,1.88796243 L7.30731542,3.90408782 L6.36339619,2.99241974 L6.37952177,2.97629415 L8.39564717,0.960168757 C9.01548832,0.340327606 9.83960392,-0.000869470341 10.7157807,-0.000869470341 C11.5919575,-0.000869470341 12.4160854,0.340327606 13.0354768,0.960168757 C14.3184648,2.24315677 14.3184648,4.32445197 13.0394137,5.60351205 L11.0232883,7.62007494 L10.0950686,6.69184099 Z M0.964989453,13.0385406 C0.345660774,12.4241215 -0.00186091968,11.5872965 1.48637539e-05,10.7149068 C1.48637539e-05,9.83872998 0.34121194,9.01460206 0.961053091,8.39477322 L2.97717848,6.37864782 L3.92109771,7.29031591 L3.90497213,7.3064415 L1.88884673,9.32256689 C1.51703009,9.69482104 1.3123113,10.1886825 1.3123113,10.7149123 C1.3123113,11.2411433 1.51703009,11.7350035 1.88884673,12.1068201 C2.65773751,12.8773379 3.90553271,12.8790988 4.67660001,12.110757 L6.6927254,10.0946316 L7.62095659,11.0224252 L5.60439369,13.0385506 C4.98944852,13.6540003 4.15470849,13.9991964 3.28469771,13.9978894 C2.41463782,13.9993317 1.57984173,13.6541133 0.964989453,13.0385406 Z",
        "fill-rule": "nonzero"
      }
    }), _c("polygon", {
      attrs: {
        "fill-rule": "nonzero",
        "points": "4.06677957 9.00457494 9.00500564 4.06634886 9.94892448 4.97801734 9.93279931 4.99414252 4.99457323 9.93236859"
      }
    })]);
  };
  var staticRenderFns$k = [];
  const bind_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$k = {};
  const __cssModules$k = {};
  var __component__$k = /* @__PURE__ */normalizeComponent(__vue2_script$k, render$k, staticRenderFns$k, false, __vue2_injectStyles$k, "122da6da", null, null);
  function __vue2_injectStyles$k(context) {
    for (let o2 in __cssModules$k) {
      this[o2] = __cssModules$k[o2];
    }
  }
  const IconBind = /* @__PURE__ */function () {
    return __component__$k.exports;
  }();
  var render$j = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      attrs: {
        "xmlns": "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        "width": "14px",
        "height": "14px",
        "viewBox": "0 0 14 14",
        "version": "1.1"
      }
    }, [_c("polygon", {
      attrs: {
        "fill-rule": "nonzero",
        "points": "11.7594567 6.00085449 13.7270346 6.00085449 7.66315719 1.61857496 8.63134766 4.4855957 0.939917785 4.4855957 0.939917785 6.00085449"
      }
    }), _c("polygon", {
      attrs: {
        "fill-rule": "nonzero",
        "transform": "translate(6.393558, 10.191140) scale(-1, -1) translate(-6.393558, -10.191140) ",
        "points": "10.8195389 12.3822795 12.7871168 12.3822795 6.72323941 8 7.7418508 10.8933879 3.14415161e-13 10.8933879 4.11208884e-13 12.3822795"
      }
    })]);
  };
  var staticRenderFns$j = [];
  const switch_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$j = {};
  const __cssModules$j = {};
  var __component__$j = /* @__PURE__ */normalizeComponent(__vue2_script$j, render$j, staticRenderFns$j, false, __vue2_injectStyles$j, "6045ed7f", null, null);
  function __vue2_injectStyles$j(context) {
    for (let o2 in __cssModules$j) {
      this[o2] = __cssModules$j[o2];
    }
  }
  const IconSwitch = /* @__PURE__ */function () {
    return __component__$j.exports;
  }();
  var render$i = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      class: {
        active: _vm.active
      },
      attrs: {
        "xmlns": "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        "viewBox": "0 0 14 14",
        "version": "1.1"
      }
    }, [_c("path", {
      attrs: {
        "d": "M4.2308252,4.92309951 L1.76927447,4.92309951 C2.6115602,2.89757692 4.71169276,1.53846003 7.05128231,1.53846003 C9.89155462,1.53846003 12.380735,3.5406913 12.6923361,6.30769984 L14,5.66568152 C13.3318648,2.43243561 10.4687073,0 7.05128231,0 C3.41114555,0 0.399513591,2.75988413 0,6.30769984 L0,7 L4.2308252,4.92309951 Z M9.76467066,9.07690049 L12.2287835,9.07690049 C11.3855733,11.1024231 9.2831356,12.46154 6.94097808,12.46154 C4.12245427,12.46154 1.65051838,10.4182064 1.30379077,7.68736789 L0,8.32678306 C0.694991868,11.5346825 3.54410928,14 6.94097808,14 C10.58525,14 13.6000479,11.2401159 14,7.69230016 L14,7 L9.76467066,9.07690049 Z"
      }
    })]);
  };
  var staticRenderFns$i = [];
  const refresh_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$i = {
    props: ["active"]
  };
  const __cssModules$i = {};
  var __component__$i = /* @__PURE__ */normalizeComponent(__vue2_script$i, render$i, staticRenderFns$i, false, __vue2_injectStyles$i, "78500966", null, null);
  function __vue2_injectStyles$i(context) {
    for (let o2 in __cssModules$i) {
      this[o2] = __cssModules$i[o2];
    }
  }
  const IconRefresh = /* @__PURE__ */function () {
    return __component__$i.exports;
  }();
  var render$h = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("transition", {
      attrs: {
        "name": "slide"
      }
    }, [_vm.mounted ? _c("div", {
      staticClass: "wrapper",
      style: _vm.layerStyle,
      on: {
        "click": _vm.handleClick
      }
    }, [_c("div", {
      ref: "content",
      staticClass: "content",
      style: {
        backgroundColor: _vm.pageConfig.bgColor || "#000220",
        height: _vm.height
      }
    }, [_vm._t("default")], 2)]) : _vm._e()]);
  };
  var staticRenderFns$h = [];
  const Layer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$h = {
    props: ["height", "layerStyle"],
    data() {
      return {
        mounted: false,
        pageConfig: window.__match_page_config || {}
      };
    },
    mounted() {
      this.mounted = true;
    },
    methods: {
      handleClick(e2) {
        if (!e2.composedPath) {
          return;
        }
        let p2 = e2.composedPath();
        if (!p2.some(v2 => v2 === this.$refs["content"])) {
          this.$emit("close");
        }
      }
    }
  };
  const __cssModules$h = {};
  var __component__$h = /* @__PURE__ */normalizeComponent(__vue2_script$h, render$h, staticRenderFns$h, false, __vue2_injectStyles$h, "57e698be", null, null);
  function __vue2_injectStyles$h(context) {
    for (let o2 in __cssModules$h) {
      this[o2] = __cssModules$h[o2];
    }
  }
  const Layer = /* @__PURE__ */function () {
    return __component__$h.exports;
  }();
  var render$g = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      staticClass: "close-icon",
      attrs: {
        "viewBox": "0 0 200 200"
      }
    }, [_c("path", {
      attrs: {
        "fill": "",
        "d": "M40.633 40.633c2.663-2.663 6.98-2.663 9.642 0v0l50.37 50.367 50.371-50.367c2.663-2.663 6.98-2.663 9.642 0s2.663 6.98 0 9.642l-50.368 50.37 50.368 50.371c2.421 2.421 2.641 6.208 0.66 8.878l-0.66 0.765c-2.663 2.663-6.98 2.663-9.642 0v0l-50.371-50.368-50.37 50.368c-2.663 2.663-6.98 2.663-9.642 0s-2.663-6.98 0-9.642l50.367-50.371-50.367-50.37c-2.421-2.421-2.641-6.208-0.66-8.878z"
      }
    })]);
  };
  var staticRenderFns$g = [];
  const close_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$g = {};
  const __cssModules$g = {};
  var __component__$g = /* @__PURE__ */normalizeComponent(__vue2_script$g, render$g, staticRenderFns$g, false, __vue2_injectStyles$g, "671485e1", null, null);
  function __vue2_injectStyles$g(context) {
    for (let o2 in __cssModules$g) {
      this[o2] = __cssModules$g[o2];
    }
  }
  const IconClose = /* @__PURE__ */function () {
    return __component__$g.exports;
  }();
  var render$f = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": "240px",
        "layerStyle": this.options.style
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("即将跳出bilibili")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "tip-text"
    }, [_vm._v("前往直播 LiveLink 小程序，绑定游戏账号")]), _c("div", {
      staticClass: "confirm",
      style: {
        backgroundColor: _vm.options.config.bgColor
      },
      on: {
        "click": _vm.onConfirm
      }
    }, [_vm._v("前往绑定")])])]) : _vm._e();
  };
  var staticRenderFns$f = [];
  const BindLayer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$f = {
    components: {
      Layer,
      IconClose
    },
    data() {
      return {
        options: {},
        visible: false
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
      },
      onConfirm() {
        var _a2, _b2;
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2);
        this.close();
      }
    }
  };
  const __cssModules$f = {};
  var __component__$f = /* @__PURE__ */normalizeComponent(__vue2_script$f, render$f, staticRenderFns$f, false, __vue2_injectStyles$f, "e14adf0a", null, null);
  function __vue2_injectStyles$f(context) {
    for (let o2 in __cssModules$f) {
      this[o2] = __cssModules$f[o2];
    }
  }
  const BindLayer = /* @__PURE__ */function () {
    return __component__$f.exports;
  }();
  var render$e = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": "240px",
        "layerStyle": this.options.style
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("绑定手机号")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "tip-text"
    }, [_vm._v("当前未绑定手机号，无法参与活动")]), _c("div", {
      staticClass: "confirm",
      style: {
        backgroundColor: _vm.options.config.bgColor
      },
      on: {
        "click": _vm.onConfirm
      }
    }, [_vm._v("前往绑定")])])]) : _vm._e();
  };
  var staticRenderFns$e = [];
  const PhoneLayer_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
  const __vue2_script$e = {
    components: {
      Layer,
      IconClose
    },
    data() {
      return {
        options: {},
        visible: false
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
        if (window.__match_pull_refresh) {
          window.__match_pull_refresh.disable = true;
        }
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
        if (window.__match_pull_refresh) {
          window.__match_pull_refresh.disable = false;
        }
      },
      onConfirm() {
        var _a2, _b2;
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2);
        this.close();
      }
    }
  };
  const __cssModules$e = {};
  var __component__$e = /* @__PURE__ */normalizeComponent(__vue2_script$e, render$e, staticRenderFns$e, false, __vue2_injectStyles$e, "efbccb06", null, null);
  function __vue2_injectStyles$e(context) {
    for (let o2 in __cssModules$e) {
      this[o2] = __cssModules$e[o2];
    }
  }
  const PhoneLayer$1 = /* @__PURE__ */function () {
    return __component__$e.exports;
  }();
  var render$d = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": "240px",
        "layerStyle": this.options.style
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("提示")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "tip-text"
    }, [_vm._v("当前客户端版本过低，"), _c("br"), _vm._v("请升级至6.29以上版本。")])])]) : _vm._e();
  };
  var staticRenderFns$d = [];
  const VersionLayer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$d = {
    components: {
      Layer,
      IconClose
    },
    data() {
      return {
        options: {},
        visible: false
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
      },
      onConfirm() {
        var _a2, _b2;
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2);
        this.close();
      }
    }
  };
  const __cssModules$d = {};
  var __component__$d = /* @__PURE__ */normalizeComponent(__vue2_script$d, render$d, staticRenderFns$d, false, __vue2_injectStyles$d, "b5ba8630", null, null);
  function __vue2_injectStyles$d(context) {
    for (let o2 in __cssModules$d) {
      this[o2] = __cssModules$d[o2];
    }
  }
  const VersionLayer = /* @__PURE__ */function () {
    return __component__$d.exports;
  }();
  var render$c = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": "240px",
        "layerStyle": this.options.style
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("提示")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "tip-text"
    }, [_vm._v("未安装微信，无法完成绑定")])])]) : _vm._e();
  };
  var staticRenderFns$c = [];
  const WechatLayer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$c = {
    components: {
      Layer,
      IconClose
    },
    data() {
      return {
        options: {},
        visible: false
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
      },
      onConfirm() {
        var _a2, _b2;
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2);
        this.close();
      }
    }
  };
  const __cssModules$c = {};
  var __component__$c = /* @__PURE__ */normalizeComponent(__vue2_script$c, render$c, staticRenderFns$c, false, __vue2_injectStyles$c, "4d368f8a", null, null);
  function __vue2_injectStyles$c(context) {
    for (let o2 in __cssModules$c) {
      this[o2] = __cssModules$c[o2];
    }
  }
  const WechatLayer = /* @__PURE__ */function () {
    return __component__$c.exports;
  }();
  const layers$1 = {
    BindLayer,
    PhoneLayer: PhoneLayer$1,
    VersionLayer,
    WechatLayer
  };
  let instance$1 = null;
  const openLayer$1 = (name, options) => {
    if (!instance$1) {
      instance$1 = new Vue(layers$1[name]);
      const el = document.createElement("div");
      document.body.appendChild(el);
      instance$1.$mount(el);
    }
    instance$1.$data.options = options || {};
    return instance$1.show();
  };
  var render$b = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "match-account-bind"
    }, [_vm.isMounted ? _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "left"
    }, [!(_vm.user && _vm.user.isLogin) ? [_vm._m(0)] : _vm._e(), _vm.user && _vm.user.isLogin ? [_c("div", {
      staticClass: "r1"
    }, [_c("span", {
      staticClass: "label"
    }, [_vm._v(" 哔哩哔哩：")]), _c("span", {
      domProps: {
        "textContent": _vm._s(_vm.user.uname)
      }
    })]), _c("div", {
      staticClass: "r1"
    }, [_c("span", {
      staticClass: "label"
    }, [_vm._v(" 游戏账号：")]), _c("span", {
      domProps: {
        "textContent": _vm._s(_vm.bindText)
      }
    })])] : _vm._e()], 2), _c("div", {
      staticClass: "right"
    }, [_c("span", {
      style: _vm.user && _vm.user.isLogin && _vm.bindConfig.bind_type === _vm.bindInfo.bind_type ? {} : {
        color: _vm.config.bgColor
      },
      on: {
        "click": _vm.start
      }
    }, [!(_vm.user && _vm.user.isLogin) || _vm.bindConfig.bind_type !== _vm.bindInfo.bind_type ? _c("IconBind", {
      staticClass: "icon-bind",
      style: {
        fill: _vm.config.bgColor
      }
    }) : _vm._e(), _vm.user && _vm.user.isLogin && _vm.bindConfig.bind_type === _vm.bindInfo.bind_type ? _c("IconSwitch", {
      staticClass: "icon-bind switch"
    }) : _vm._e(), _vm._v(" " + _vm._s(_vm.bindBtnText) + " ")], 1), _c("span", {
      on: {
        "click": _vm.refresh
      }
    }, [_c("IconRefresh", {
      staticClass: "icon-refresh",
      attrs: {
        "active": _vm.refreshAnimation
      }
    }), _vm._v(" 刷新 ")], 1)])]) : _vm._e()]);
  };
  var staticRenderFns$b = [function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "r1"
    }, [_c("span", [_vm._v("请绑定游戏账号")])]);
  }];
  const index_vue_vue_type_style_index_0_scoped_true_lang$1 = "";
  const __vue2_script$b = {
    name: "MatchAccountBind",
    components: {
      IconBind,
      IconRefresh,
      IconSwitch
    },
    props: ["config"],
    data() {
      return {
        // config: {
        //   bind_config_id: 1,
        //   bind_phone: true,
        //   bgColor: 'rgba(39, 79, 228, 1)'
        // },
        isMounted: false,
        user: null,
        loadStatus: "initializing",
        bindConfig: {},
        bindInfo: {},
        path: "",
        miniProgramId: "",
        refreshAnimation: false
      };
    },
    computed: {
      bindText() {
        var _a2;
        if (this.bindConfig.bind_type === 1) {
          if (this.bindInfo.bind_type === 1) {
            return "已绑定账号";
          } else {
            return "未绑定账号";
          }
        } else if (this.bindConfig.bind_type === 2) {
          if (this.bindInfo.bind_type === 2) {
            return ((_a2 = this.bindInfo.role_info) == null ? void 0 : _a2.role_name) || "";
          } else if (this.bindInfo.bind_type === 1) {
            return "未绑定角色";
          } else {
            return "未绑定账号";
          }
        }
      },
      bindBtnText() {
        if (!(this.user && this.user.isLogin)) {
          return "绑定账号";
        } else if (this.bindConfig.bind_type === 1) {
          if (this.bindInfo.bind_type === 1) {
            return "切换";
          } else {
            return "绑定账号";
          }
        } else if (this.bindConfig.bind_type === 2) {
          if (this.bindInfo.bind_type === 2) {
            return "切换";
          } else if (this.bindInfo.bind_type === 1) {
            return "绑定角色";
          } else {
            return "绑定账号";
          }
        }
      }
    },
    async mounted() {
      this.isMounted = true;
      const emitter = window.__match_event_emitter;
      this.user = window.__match_user;
      emitter.on("userInfoReady", () => {
        this.user = window.__match_user;
        this.fetchBindInfo();
      });
      window.__match_components.push(this);
      this.fetchBindInfo().then(() => {
        this.handleReport("appear", `unit_binding_${this.getExposureType()}_show`);
      });
    },
    methods: {
      login() {
        var _a2, _b2;
        return (_b2 = (_a2 = window.__match_env_deps) == null ? void 0 : _a2.utils) == null ? void 0 : _b2.loginNa();
      },
      async fetchBindInfo() {
        let refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        if (this.loadStatus === "loading") {
          return;
        }
        this.loadStatus = "loading";
        try {
          const res = await api.fetchBindInfo({
            id: this.config.bind_config_id,
            refresh: Number(refresh)
          });
          this.bindConfig = res.config_info;
          this.bindInfo = res.bind_info;
          this.loadStatus = "done";
        } catch (e2) {
          this.loadStatus = "error";
        }
      },
      async start() {
        var _a2;
        this.handleReport("click", this.bindBtnText === "切换" ? "unit_binding_switch_click" : "unit_binding_bind_click", {
          type: this.getExposureType()
        });
        if (!(this.user && this.user.isLogin)) {
          await this.login();
          this.fetchBindInfo();
          return;
        }
        const {
          inBiliApp,
          isSupport,
          biliBridge
        } = (_a2 = window.__match_env_deps) == null ? void 0 : _a2.jsb;
        if (!inBiliApp) {
          toast$1.info("请在 bilibili APP 内使用");
          return;
        }
        const isSupportP = v2 => new Promise(r2 => {
          isSupport(v2).then(res => {
            r2(res);
          });
        });
        if (!(await isSupportP("ability.canOpenApplication"))) {
          openLayer$1("VersionLayer", {
            config: this.config,
            "style": {
              "z-index": 11
            }
          });
          return;
        }
        const canOpenWechat = await new Promise(r2 => {
          biliBridge.callNative({
            method: "ability.canOpenApplication",
            data: {
              url: "wechat://"
            },
            callback: info => {
              r2(info.code);
            }
          });
        });
        if (canOpenWechat < 0) {
          console.log(canOpenWechat);
          openLayer$1("WechatLayer", {
            config: this.config,
            "style": {
              "z-index": 11
            }
          });
          return;
        }
        if (!(await isSupportP("share.launchMiniProgram"))) {
          openLayer$1("VersionLayer", {
            config: this.config,
            "style": {
              "z-index": 11
            }
          });
          return;
        }
        openLayer$1("BindLayer", {
          onConfirm: this.goBind,
          config: this.config,
          "style": {
            "z-index": 11
          }
        });
      },
      async goBind() {
        var _a2;
        const {
          inBiliApp,
          isSupport,
          biliBridge
        } = (_a2 = window.__match_env_deps) == null ? void 0 : _a2.jsb;
        const res = await api.fetchBindLink({
          id: this.config.bind_config_id
        });
        this.miniProgramId = res.origin_id;
        const args = {
          gameIdList: res.game_id_list,
          code: res.code,
          livePlatId: res.live_plat_id,
          t: res.t,
          // actId: this.bindConfig.act_id,
          sig: res.sign,
          faceUrl: res.face_url,
          nickName: res.nick_name,
          redirectUrl: window.location.href
        };
        this.path = `${res.base_path}?${Object.keys(args).map(v2 => `${v2}=${encodeURIComponent(args[v2])}`).join("&")}`;
        console.log(args);
        biliBridge.callNative({
          method: "share.launchMiniProgram",
          data: {
            target: "WEIXIN",
            userName: this.miniProgramId,
            path: this.path,
            type: 0
            // 0: 正式版, 1: 开发版, 2: 体验版
          },
          callback: (info, error) => {
            console.log("callback", info, error);
          },
          onMiniProgram: info => {
            console.log("onMiniProgram", info);
            this.fetchBindInfo();
          }
        });
      },
      pullRefresh() {
        return this.fetchBindInfo();
      },
      refresh() {
        if (this.refreshAnimation) {
          return;
        }
        this.refreshAnimation = true;
        this.handleReport("click", "unit_binding_refresh_click");
        Promise.all([this.fetchBindInfo(true), new Promise(r2 => setTimeout(r2, 500))]).finally(() => this.refreshAnimation = false);
      },
      async handleReport(type, name, extra) {
        var _a2, _b2, _c;
        await window.__match_user_promise;
        if (type === "appear") {
          if (!window.__match_report_cache) {
            window.__match_report_cache = {};
          }
          const key = `${name}_${(_a2 = this.config) == null ? void 0 : _a2.bind_config_id}`;
          if (window.__match_report_cache[key]) {
            return;
          }
          window.__match_report_cache[key] = true;
        }
        const from = (() => {
          var _a3, _b3, _c2;
          if ((_a3 = window.__initialState) == null ? void 0 : _a3["match-env-h5"]) {
            return "live";
          } else if ((_b3 = window.__initialState) == null ? void 0 : _b3["match-env-h5-topic"]) {
            return "project";
          } else if ((_c2 = window.__initialState) == null ? void 0 : _c2["match-env-pc"]) {
            return "web";
          } else {
            return "";
          }
        })();
        (_c = (_b2 = window.reportObserver) == null ? void 0 : _b2.reportCustomData) == null ? void 0 : _c.call(_b2, type, {
          spm_id: `${window.__spm_prefix}.${name}`,
          msg: JSON.stringify({
            ...window.__match_report_base,
            from,
            ...extra
          })
        });
      },
      getExposureType() {
        if (!(this.user && this.user.isLogin)) {
          return "login";
        }
        if (this.bindConfig.bind_type === 1) {
          if (this.bindInfo.bind_type === 1) {
            return "account";
          } else {
            return "start";
          }
        } else if (this.bindConfig.bind_type === 2) {
          if (this.bindInfo.bind_type === 2) {
            return "role";
          } else if (this.bindInfo.bind_type === 1) {
            return "more";
          } else {
            return "start";
          }
        }
      }
    }
  };
  const __cssModules$b = {};
  var __component__$b = /* @__PURE__ */normalizeComponent(__vue2_script$b, render$b, staticRenderFns$b, false, __vue2_injectStyles$b, "60ff4ca4", null, null);
  function __vue2_injectStyles$b(context) {
    for (let o2 in __cssModules$b) {
      this[o2] = __cssModules$b[o2];
    }
  }
  const AccountBindComponent = /* @__PURE__ */function () {
    return __component__$b.exports;
  }();
  const r$2 = typeof window !== "undefined" && window.__match_env_deps.api || (() => () => {});
  ({
    fetchBindConfig: r$2("get", "//api.bilibili.com/x/activity/bind/config"),
    fetchBindInfo: r$2("get", "//api.live.bilibili.com/xlive/app-ucenter/v2/bind/bind/Status"),
    fetchBindLink: r$2("get", "//api.bilibili.com/x/activity/bind/handler")
  });
  const isUat$1 = window.location.hostname.includes("uat");
  const isPre = window.location.hostname.includes("pre");
  const envPrefix = isUat$1 ? "uat-" : isPre ? "pre-" : "";
  const domain = `${envPrefix}api.bilibili.com`;
  const apiPrefix = `${location.protocol}//${domain}/x`;
  const awardLink = "https://www.bilibili.com/blackboard/award-history.html";
  const awardPreviewLink = "https://www.bilibili.com/blackboard/preview/award-history.html";
  const hadPreview = location.pathname.includes("preview");
  const recordLink = hadPreview ? awardPreviewLink : awardLink;
  /*!
   * @bilibili/vanilla-toast v1.1.4
   * Released under the ISC License.
   */
  /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0
  
    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.
  
    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
  var __assign$1 = function () {
    __assign$1 = Object.assign || function __assign2(t2) {
      for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
        s2 = arguments[i2];
        for (var p2 in s2) if (Object.prototype.hasOwnProperty.call(s2, p2)) t2[p2] = s2[p2];
      }
      return t2;
    };
    return __assign$1.apply(this, arguments);
  };
  var ToastType;
  (function (ToastType2) {
    ToastType2["info"] = "info";
    ToastType2["success"] = "success";
    ToastType2["warn"] = "warn";
    ToastType2["error"] = "error";
  })(ToastType || (ToastType = {}));
  var TYPE_STYLE = {
    info: {
      backgroundColor: "rgba(0, 0, 0, .8)"
    },
    success: {
      backgroundColor: "rgba(57, 175, 100, 1)"
    },
    error: {
      backgroundColor: "rgba(228, 12, 12, 1)"
    },
    warn: {
      backgroundColor: "rgba(255, 134, 39, 1)"
    }
  };
  var keyframesName = "vanilla-toast-slide";
  (function appendKeyframes() {
    if (document.querySelector("." + keyframesName)) {
      return;
    }
    var keyframes = "{\n    0% {\n      transform: translate(-50%, 0);\n      -webkit-transform: translate(-50%, 0);\n      opacity: 0;\n    }\n    100% {\n      transform: translate(-50%, -50%);\n      -webkit-transform: translate(-50%, -50%);\n      opacity: 1;\n    }\n  }";
    var runkeyframes = "\n    @keyframes " + keyframesName + " " + keyframes + "\n    @-webkit-keyframes " + keyframesName + " " + keyframes + "\n  ";
    var style = document.createElement("style");
    style.type = "text/css";
    style.className = keyframesName;
    style.innerHTML = runkeyframes;
    var head = document.querySelector("head");
    if (!head) {
      console.warn("head tag does not exist!");
      return;
    }
    head.appendChild(style);
  })();
  var toast = function (msg, options) {
    var defaultOptions2 = {
      duration: 2e3,
      onClose: function () {}
    };
    var _a2 = options || defaultOptions2,
      _b2 = _a2.duration,
      duration = _b2 === void 0 ? 2e3 : _b2,
      customStyle = _a2.customStyle,
      _c = _a2.onClose,
      onClose = _c === void 0 ? function () {} : _c;
    var msgStyle = __assign$1({
      position: "fixed",
      left: "50%",
      top: "50%",
      boxSizing: "border-box",
      width: "auto",
      padding: "6px 12px",
      borderRadius: "8px",
      maxWidth: "80%",
      background: "rgba(0, 0, 0, .7)",
      fontSize: "14px",
      color: "#fff",
      lineHeight: "1.4",
      wordWrap: "break-word",
      textAlign: "justify",
      zIndex: "99999",
      cursor: "default",
      userSelect: "none",
      animation: ".3s ease-int-out both",
      animationName: keyframesName,
      webkitAnimation: ".3s ease-int-out both",
      webkitAnimationName: keyframesName
    }, customStyle);
    var node = document.createElement("div");
    Object.assign(node.style, msgStyle);
    node.innerText = msg;
    document.body.appendChild(node);
    setTimeout(function () {
      typeof onClose === "function" && onClose();
      document.body.removeChild(node);
    }, duration);
  };
  var typeToast = {};
  Object.keys(ToastType).forEach(function (item) {
    typeToast[item] = function (msg, options) {
      var _options = options || {};
      toast(msg, __assign$1(__assign$1({}, _options), {
        customStyle: __assign$1(__assign$1({}, TYPE_STYLE[item]), _options.customStyle || {})
      }));
    };
  });
  var __assign = function () {
    __assign = Object.assign || function __assign2(t2) {
      for (var s2, i2 = 1, n2 = arguments.length; i2 < n2; i2++) {
        s2 = arguments[i2];
        for (var p2 in s2) if (Object.prototype.hasOwnProperty.call(s2, p2)) t2[p2] = s2[p2];
      }
      return t2;
    };
    return __assign.apply(this, arguments);
  };
  function __awaiter(thisArg, _arguments, P2, generator) {
    function adopt(value2) {
      return value2 instanceof P2 ? value2 : new P2(function (resolve) {
        resolve(value2);
      });
    }
    return new (P2 || (P2 = Promise))(function (resolve, reject) {
      function fulfilled(value2) {
        try {
          step(generator.next(value2));
        } catch (e2) {
          reject(e2);
        }
      }
      function rejected(value2) {
        try {
          step(generator["throw"](value2));
        } catch (e2) {
          reject(e2);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __generator(thisArg, body2) {
    var _2 = {
        label: 0,
        sent: function () {
          if (t2[0] & 1) throw t2[1];
          return t2[1];
        },
        trys: [],
        ops: []
      },
      f2,
      y2,
      t2,
      g2 = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g2.next = verb(0), g2["throw"] = verb(1), g2["return"] = verb(2), typeof Symbol === "function" && (g2[Symbol.iterator] = function () {
      return this;
    }), g2;
    function verb(n2) {
      return function (v2) {
        return step([n2, v2]);
      };
    }
    function step(op) {
      if (f2) throw new TypeError("Generator is already executing.");
      while (g2 && (g2 = 0, op[0] && (_2 = 0)), _2) try {
        if (f2 = 1, y2 && (t2 = op[0] & 2 ? y2["return"] : op[0] ? y2["throw"] || ((t2 = y2["return"]) && t2.call(y2), 0) : y2.next) && !(t2 = t2.call(y2, op[1])).done) return t2;
        if (y2 = 0, t2) op = [op[0] & 2, t2.value];
        switch (op[0]) {
          case 0:
          case 1:
            t2 = op;
            break;
          case 4:
            _2.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _2.label++;
            y2 = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t2 = _2.trys, t2 = t2.length > 0 && t2[t2.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t2 || op[1] > t2[0] && op[1] < t2[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t2[1]) {
              _2.label = t2[1];
              t2 = op;
              break;
            }
            if (t2 && _2.label < t2[2]) {
              _2.label = t2[2];
              _2.ops.push(op);
              break;
            }
            if (t2[2]) _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body2.call(thisArg, _2);
      } catch (e2) {
        op = [6, e2];
        y2 = 0;
      } finally {
        f2 = t2 = 0;
      }
      if (op[0] & 5) throw op[1];
      return {
        value: op[0] ? op[1] : void 0,
        done: true
      };
    }
  }
  typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e2 = new Error(message);
    return e2.name = "SuppressedError", e2.error = error, e2.suppressed = suppressed, e2;
  };
  var isArray$b = Array.isArray;
  var isArray_1 = isArray$b;
  var freeGlobal$1 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
  var _freeGlobal = freeGlobal$1;
  var freeGlobal = _freeGlobal;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root$8 = freeGlobal || freeSelf || Function("return this")();
  var _root = root$8;
  var root$7 = _root;
  var Symbol$6 = root$7.Symbol;
  var _Symbol = Symbol$6;
  var Symbol$5 = _Symbol;
  var objectProto$d = Object.prototype;
  var hasOwnProperty$a = objectProto$d.hasOwnProperty;
  var nativeObjectToString$1 = objectProto$d.toString;
  var symToStringTag$1 = Symbol$5 ? Symbol$5.toStringTag : void 0;
  function getRawTag$1(value2) {
    var isOwn = hasOwnProperty$a.call(value2, symToStringTag$1),
      tag = value2[symToStringTag$1];
    try {
      value2[symToStringTag$1] = void 0;
      var unmasked = true;
    } catch (e2) {}
    var result = nativeObjectToString$1.call(value2);
    if (unmasked) {
      if (isOwn) {
        value2[symToStringTag$1] = tag;
      } else {
        delete value2[symToStringTag$1];
      }
    }
    return result;
  }
  var _getRawTag = getRawTag$1;
  var objectProto$c = Object.prototype;
  var nativeObjectToString = objectProto$c.toString;
  function objectToString$1(value2) {
    return nativeObjectToString.call(value2);
  }
  var _objectToString = objectToString$1;
  var Symbol$4 = _Symbol,
    getRawTag = _getRawTag,
    objectToString = _objectToString;
  var nullTag = "[object Null]",
    undefinedTag = "[object Undefined]";
  var symToStringTag = Symbol$4 ? Symbol$4.toStringTag : void 0;
  function baseGetTag$6(value2) {
    if (value2 == null) {
      return value2 === void 0 ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value2) ? getRawTag(value2) : objectToString(value2);
  }
  var _baseGetTag = baseGetTag$6;
  function isObjectLike$8(value2) {
    return value2 != null && typeof value2 == "object";
  }
  var isObjectLike_1 = isObjectLike$8;
  var baseGetTag$5 = _baseGetTag,
    isObjectLike$7 = isObjectLike_1;
  var symbolTag$2 = "[object Symbol]";
  function isSymbol$3(value2) {
    return typeof value2 == "symbol" || isObjectLike$7(value2) && baseGetTag$5(value2) == symbolTag$2;
  }
  var isSymbol_1 = isSymbol$3;
  var isArray$a = isArray_1,
    isSymbol$2 = isSymbol_1;
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;
  function isKey$1(value2, object) {
    if (isArray$a(value2)) {
      return false;
    }
    var type = typeof value2;
    if (type == "number" || type == "symbol" || type == "boolean" || value2 == null || isSymbol$2(value2)) {
      return true;
    }
    return reIsPlainProp.test(value2) || !reIsDeepProp.test(value2) || object != null && value2 in Object(object);
  }
  var _isKey = isKey$1;
  function isObject$d(value2) {
    var type = typeof value2;
    return value2 != null && (type == "object" || type == "function");
  }
  var isObject_1$1 = isObject$d;
  var baseGetTag$4 = _baseGetTag,
    isObject$c = isObject_1$1;
  var asyncTag = "[object AsyncFunction]",
    funcTag$2 = "[object Function]",
    genTag$1 = "[object GeneratorFunction]",
    proxyTag = "[object Proxy]";
  function isFunction$3(value2) {
    if (!isObject$c(value2)) {
      return false;
    }
    var tag = baseGetTag$4(value2);
    return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;
  }
  var isFunction_1 = isFunction$3;
  var root$6 = _root;
  var coreJsData$1 = root$6["__core-js_shared__"];
  var _coreJsData = coreJsData$1;
  var coreJsData = _coreJsData;
  var maskSrcKey = function () {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  function isMasked$1(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  var _isMasked = isMasked$1;
  var funcProto$2 = Function.prototype;
  var funcToString$2 = funcProto$2.toString;
  function toSource$2(func) {
    if (func != null) {
      try {
        return funcToString$2.call(func);
      } catch (e2) {}
      try {
        return func + "";
      } catch (e2) {}
    }
    return "";
  }
  var _toSource = toSource$2;
  var isFunction$2 = isFunction_1,
    isMasked = _isMasked,
    isObject$b = isObject_1$1,
    toSource$1 = _toSource;
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var funcProto$1 = Function.prototype,
    objectProto$b = Object.prototype;
  var funcToString$1 = funcProto$1.toString;
  var hasOwnProperty$9 = objectProto$b.hasOwnProperty;
  var reIsNative = RegExp("^" + funcToString$1.call(hasOwnProperty$9).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  function baseIsNative$1(value2) {
    if (!isObject$b(value2) || isMasked(value2)) {
      return false;
    }
    var pattern = isFunction$2(value2) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource$1(value2));
  }
  var _baseIsNative = baseIsNative$1;
  function getValue$1(object, key) {
    return object == null ? void 0 : object[key];
  }
  var _getValue = getValue$1;
  var baseIsNative = _baseIsNative,
    getValue = _getValue;
  function getNative$7(object, key) {
    var value2 = getValue(object, key);
    return baseIsNative(value2) ? value2 : void 0;
  }
  var _getNative = getNative$7;
  var getNative$6 = _getNative;
  var nativeCreate$4 = getNative$6(Object, "create");
  var _nativeCreate = nativeCreate$4;
  var nativeCreate$3 = _nativeCreate;
  function hashClear$1() {
    this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};
    this.size = 0;
  }
  var _hashClear = hashClear$1;
  function hashDelete$1(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }
  var _hashDelete = hashDelete$1;
  var nativeCreate$2 = _nativeCreate;
  var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
  var objectProto$a = Object.prototype;
  var hasOwnProperty$8 = objectProto$a.hasOwnProperty;
  function hashGet$1(key) {
    var data2 = this.__data__;
    if (nativeCreate$2) {
      var result = data2[key];
      return result === HASH_UNDEFINED$1 ? void 0 : result;
    }
    return hasOwnProperty$8.call(data2, key) ? data2[key] : void 0;
  }
  var _hashGet = hashGet$1;
  var nativeCreate$1 = _nativeCreate;
  var objectProto$9 = Object.prototype;
  var hasOwnProperty$7 = objectProto$9.hasOwnProperty;
  function hashHas$1(key) {
    var data2 = this.__data__;
    return nativeCreate$1 ? data2[key] !== void 0 : hasOwnProperty$7.call(data2, key);
  }
  var _hashHas = hashHas$1;
  var nativeCreate = _nativeCreate;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  function hashSet$1(key, value2) {
    var data2 = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data2[key] = nativeCreate && value2 === void 0 ? HASH_UNDEFINED : value2;
    return this;
  }
  var _hashSet = hashSet$1;
  var hashClear = _hashClear,
    hashDelete = _hashDelete,
    hashGet = _hashGet,
    hashHas = _hashHas,
    hashSet = _hashSet;
  function Hash$1(entries) {
    var index2 = -1,
      length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index2 < length) {
      var entry = entries[index2];
      this.set(entry[0], entry[1]);
    }
  }
  Hash$1.prototype.clear = hashClear;
  Hash$1.prototype["delete"] = hashDelete;
  Hash$1.prototype.get = hashGet;
  Hash$1.prototype.has = hashHas;
  Hash$1.prototype.set = hashSet;
  var _Hash = Hash$1;
  function listCacheClear$1() {
    this.__data__ = [];
    this.size = 0;
  }
  var _listCacheClear = listCacheClear$1;
  function eq$4(value2, other) {
    return value2 === other || value2 !== value2 && other !== other;
  }
  var eq_1 = eq$4;
  var eq$3 = eq_1;
  function assocIndexOf$4(array, key) {
    var length = array.length;
    while (length--) {
      if (eq$3(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }
  var _assocIndexOf = assocIndexOf$4;
  var assocIndexOf$3 = _assocIndexOf;
  var arrayProto = Array.prototype;
  var splice = arrayProto.splice;
  function listCacheDelete$1(key) {
    var data2 = this.__data__,
      index2 = assocIndexOf$3(data2, key);
    if (index2 < 0) {
      return false;
    }
    var lastIndex = data2.length - 1;
    if (index2 == lastIndex) {
      data2.pop();
    } else {
      splice.call(data2, index2, 1);
    }
    --this.size;
    return true;
  }
  var _listCacheDelete = listCacheDelete$1;
  var assocIndexOf$2 = _assocIndexOf;
  function listCacheGet$1(key) {
    var data2 = this.__data__,
      index2 = assocIndexOf$2(data2, key);
    return index2 < 0 ? void 0 : data2[index2][1];
  }
  var _listCacheGet = listCacheGet$1;
  var assocIndexOf$1 = _assocIndexOf;
  function listCacheHas$1(key) {
    return assocIndexOf$1(this.__data__, key) > -1;
  }
  var _listCacheHas = listCacheHas$1;
  var assocIndexOf = _assocIndexOf;
  function listCacheSet$1(key, value2) {
    var data2 = this.__data__,
      index2 = assocIndexOf(data2, key);
    if (index2 < 0) {
      ++this.size;
      data2.push([key, value2]);
    } else {
      data2[index2][1] = value2;
    }
    return this;
  }
  var _listCacheSet = listCacheSet$1;
  var listCacheClear = _listCacheClear,
    listCacheDelete = _listCacheDelete,
    listCacheGet = _listCacheGet,
    listCacheHas = _listCacheHas,
    listCacheSet = _listCacheSet;
  function ListCache$4(entries) {
    var index2 = -1,
      length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index2 < length) {
      var entry = entries[index2];
      this.set(entry[0], entry[1]);
    }
  }
  ListCache$4.prototype.clear = listCacheClear;
  ListCache$4.prototype["delete"] = listCacheDelete;
  ListCache$4.prototype.get = listCacheGet;
  ListCache$4.prototype.has = listCacheHas;
  ListCache$4.prototype.set = listCacheSet;
  var _ListCache = ListCache$4;
  var getNative$5 = _getNative,
    root$5 = _root;
  var Map$4 = getNative$5(root$5, "Map");
  var _Map = Map$4;
  var Hash = _Hash,
    ListCache$3 = _ListCache,
    Map$3 = _Map;
  function mapCacheClear$1() {
    this.size = 0;
    this.__data__ = {
      "hash": new Hash(),
      "map": new (Map$3 || ListCache$3)(),
      "string": new Hash()
    };
  }
  var _mapCacheClear = mapCacheClear$1;
  function isKeyable$1(value2) {
    var type = typeof value2;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value2 !== "__proto__" : value2 === null;
  }
  var _isKeyable = isKeyable$1;
  var isKeyable = _isKeyable;
  function getMapData$4(map, key) {
    var data2 = map.__data__;
    return isKeyable(key) ? data2[typeof key == "string" ? "string" : "hash"] : data2.map;
  }
  var _getMapData = getMapData$4;
  var getMapData$3 = _getMapData;
  function mapCacheDelete$1(key) {
    var result = getMapData$3(this, key)["delete"](key);
    this.size -= result ? 1 : 0;
    return result;
  }
  var _mapCacheDelete = mapCacheDelete$1;
  var getMapData$2 = _getMapData;
  function mapCacheGet$1(key) {
    return getMapData$2(this, key).get(key);
  }
  var _mapCacheGet = mapCacheGet$1;
  var getMapData$1 = _getMapData;
  function mapCacheHas$1(key) {
    return getMapData$1(this, key).has(key);
  }
  var _mapCacheHas = mapCacheHas$1;
  var getMapData = _getMapData;
  function mapCacheSet$1(key, value2) {
    var data2 = getMapData(this, key),
      size = data2.size;
    data2.set(key, value2);
    this.size += data2.size == size ? 0 : 1;
    return this;
  }
  var _mapCacheSet = mapCacheSet$1;
  var mapCacheClear = _mapCacheClear,
    mapCacheDelete = _mapCacheDelete,
    mapCacheGet = _mapCacheGet,
    mapCacheHas = _mapCacheHas,
    mapCacheSet = _mapCacheSet;
  function MapCache$2(entries) {
    var index2 = -1,
      length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index2 < length) {
      var entry = entries[index2];
      this.set(entry[0], entry[1]);
    }
  }
  MapCache$2.prototype.clear = mapCacheClear;
  MapCache$2.prototype["delete"] = mapCacheDelete;
  MapCache$2.prototype.get = mapCacheGet;
  MapCache$2.prototype.has = mapCacheHas;
  MapCache$2.prototype.set = mapCacheSet;
  var _MapCache = MapCache$2;
  var MapCache$1 = _MapCache;
  var FUNC_ERROR_TEXT = "Expected a function";
  function memoize$1(func, resolver) {
    if (typeof func != "function" || resolver != null && typeof resolver != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function () {
      var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;
      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize$1.Cache || MapCache$1)();
    return memoized;
  }
  memoize$1.Cache = MapCache$1;
  var memoize_1 = memoize$1;
  var memoize = memoize_1;
  var MAX_MEMOIZE_SIZE = 500;
  function memoizeCapped$1(func) {
    var result = memoize(func, function (key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });
    var cache = result.cache;
    return result;
  }
  var _memoizeCapped = memoizeCapped$1;
  var memoizeCapped = _memoizeCapped;
  var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath$1 = memoizeCapped(function (string) {
    var result = [];
    if (string.charCodeAt(0) === 46) {
      result.push("");
    }
    string.replace(rePropName, function (match, number, quote, subString) {
      result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
    });
    return result;
  });
  var _stringToPath = stringToPath$1;
  function arrayMap$2(array, iteratee) {
    var index2 = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);
    while (++index2 < length) {
      result[index2] = iteratee(array[index2], index2, array);
    }
    return result;
  }
  var _arrayMap = arrayMap$2;
  var Symbol$3 = _Symbol,
    arrayMap$1 = _arrayMap,
    isArray$9 = isArray_1,
    isSymbol$1 = isSymbol_1;
  var INFINITY$1 = 1 / 0;
  var symbolProto$1 = Symbol$3 ? Symbol$3.prototype : void 0,
    symbolToString = symbolProto$1 ? symbolProto$1.toString : void 0;
  function baseToString$1(value2) {
    if (typeof value2 == "string") {
      return value2;
    }
    if (isArray$9(value2)) {
      return arrayMap$1(value2, baseToString$1) + "";
    }
    if (isSymbol$1(value2)) {
      return symbolToString ? symbolToString.call(value2) : "";
    }
    var result = value2 + "";
    return result == "0" && 1 / value2 == -INFINITY$1 ? "-0" : result;
  }
  var _baseToString = baseToString$1;
  var baseToString = _baseToString;
  function toString$2(value2) {
    return value2 == null ? "" : baseToString(value2);
  }
  var toString_1 = toString$2;
  var isArray$8 = isArray_1,
    isKey = _isKey,
    stringToPath = _stringToPath,
    toString$1 = toString_1;
  function castPath$6(value2, object) {
    if (isArray$8(value2)) {
      return value2;
    }
    return isKey(value2, object) ? [value2] : stringToPath(toString$1(value2));
  }
  var _castPath = castPath$6;
  var isSymbol = isSymbol_1;
  var INFINITY = 1 / 0;
  function toKey$4(value2) {
    if (typeof value2 == "string" || isSymbol(value2)) {
      return value2;
    }
    var result = value2 + "";
    return result == "0" && 1 / value2 == -INFINITY ? "-0" : result;
  }
  var _toKey = toKey$4;
  var castPath$5 = _castPath,
    toKey$3 = _toKey;
  function baseGet$3(object, path) {
    path = castPath$5(path, object);
    var index2 = 0,
      length = path.length;
    while (object != null && index2 < length) {
      object = object[toKey$3(path[index2++])];
    }
    return index2 && index2 == length ? object : void 0;
  }
  var _baseGet = baseGet$3;
  var baseGet$2 = _baseGet;
  function get(object, path, defaultValue) {
    var result = object == null ? void 0 : baseGet$2(object, path);
    return result === void 0 ? defaultValue : result;
  }
  var get_1 = get;
  const get$1 = /* @__PURE__ */getDefaultExportFromCjs(get_1);
  function baseTimes$1(n2, iteratee) {
    var index2 = -1,
      result = Array(n2);
    while (++index2 < n2) {
      result[index2] = iteratee(index2);
    }
    return result;
  }
  var _baseTimes = baseTimes$1;
  var baseGetTag$3 = _baseGetTag,
    isObjectLike$6 = isObjectLike_1;
  var argsTag$2 = "[object Arguments]";
  function baseIsArguments$1(value2) {
    return isObjectLike$6(value2) && baseGetTag$3(value2) == argsTag$2;
  }
  var _baseIsArguments = baseIsArguments$1;
  var baseIsArguments = _baseIsArguments,
    isObjectLike$5 = isObjectLike_1;
  var objectProto$8 = Object.prototype;
  var hasOwnProperty$6 = objectProto$8.hasOwnProperty;
  var propertyIsEnumerable$1 = objectProto$8.propertyIsEnumerable;
  var isArguments$4 = baseIsArguments(function () {
    return arguments;
  }()) ? baseIsArguments : function (value2) {
    return isObjectLike$5(value2) && hasOwnProperty$6.call(value2, "callee") && !propertyIsEnumerable$1.call(value2, "callee");
  };
  var isArguments_1 = isArguments$4;
  var isBuffer$3 = {
    exports: {}
  };
  function stubFalse() {
    return false;
  }
  var stubFalse_1 = stubFalse;
  isBuffer$3.exports;
  (function (module2, exports2) {
    var root2 = _root,
      stubFalse2 = stubFalse_1;
    var freeExports = exports2 && !exports2.nodeType && exports2;
    var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root2.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer2 = nativeIsBuffer || stubFalse2;
    module2.exports = isBuffer2;
  })(isBuffer$3, isBuffer$3.exports);
  var isBufferExports = isBuffer$3.exports;
  var MAX_SAFE_INTEGER$1 = 9007199254740991;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  function isIndex$4(value2, length) {
    var type = typeof value2;
    length = length == null ? MAX_SAFE_INTEGER$1 : length;
    return !!length && (type == "number" || type != "symbol" && reIsUint.test(value2)) && value2 > -1 && value2 % 1 == 0 && value2 < length;
  }
  var _isIndex = isIndex$4;
  var MAX_SAFE_INTEGER = 9007199254740991;
  function isLength$3(value2) {
    return typeof value2 == "number" && value2 > -1 && value2 % 1 == 0 && value2 <= MAX_SAFE_INTEGER;
  }
  var isLength_1 = isLength$3;
  var baseGetTag$2 = _baseGetTag,
    isLength$2 = isLength_1,
    isObjectLike$4 = isObjectLike_1;
  var argsTag$1 = "[object Arguments]",
    arrayTag$1 = "[object Array]",
    boolTag$2 = "[object Boolean]",
    dateTag$2 = "[object Date]",
    errorTag$1 = "[object Error]",
    funcTag$1 = "[object Function]",
    mapTag$4 = "[object Map]",
    numberTag$2 = "[object Number]",
    objectTag$3 = "[object Object]",
    regexpTag$2 = "[object RegExp]",
    setTag$4 = "[object Set]",
    stringTag$2 = "[object String]",
    weakMapTag$2 = "[object WeakMap]";
  var arrayBufferTag$2 = "[object ArrayBuffer]",
    dataViewTag$3 = "[object DataView]",
    float32Tag$2 = "[object Float32Array]",
    float64Tag$2 = "[object Float64Array]",
    int8Tag$2 = "[object Int8Array]",
    int16Tag$2 = "[object Int16Array]",
    int32Tag$2 = "[object Int32Array]",
    uint8Tag$2 = "[object Uint8Array]",
    uint8ClampedTag$2 = "[object Uint8ClampedArray]",
    uint16Tag$2 = "[object Uint16Array]",
    uint32Tag$2 = "[object Uint32Array]";
  var typedArrayTags = {};
  typedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] = typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] = typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] = typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] = typedArrayTags[uint32Tag$2] = true;
  typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag$2] = typedArrayTags[boolTag$2] = typedArrayTags[dataViewTag$3] = typedArrayTags[dateTag$2] = typedArrayTags[errorTag$1] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$4] = typedArrayTags[numberTag$2] = typedArrayTags[objectTag$3] = typedArrayTags[regexpTag$2] = typedArrayTags[setTag$4] = typedArrayTags[stringTag$2] = typedArrayTags[weakMapTag$2] = false;
  function baseIsTypedArray$1(value2) {
    return isObjectLike$4(value2) && isLength$2(value2.length) && !!typedArrayTags[baseGetTag$2(value2)];
  }
  var _baseIsTypedArray = baseIsTypedArray$1;
  function baseUnary$3(func) {
    return function (value2) {
      return func(value2);
    };
  }
  var _baseUnary = baseUnary$3;
  var _nodeUtil = {
    exports: {}
  };
  _nodeUtil.exports;
  (function (module2, exports2) {
    var freeGlobal2 = _freeGlobal;
    var freeExports = exports2 && !exports2.nodeType && exports2;
    var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal2.process;
    var nodeUtil2 = function () {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e2) {}
    }();
    module2.exports = nodeUtil2;
  })(_nodeUtil, _nodeUtil.exports);
  var _nodeUtilExports = _nodeUtil.exports;
  var baseIsTypedArray = _baseIsTypedArray,
    baseUnary$2 = _baseUnary,
    nodeUtil$2 = _nodeUtilExports;
  var nodeIsTypedArray = nodeUtil$2 && nodeUtil$2.isTypedArray;
  var isTypedArray$2 = nodeIsTypedArray ? baseUnary$2(nodeIsTypedArray) : baseIsTypedArray;
  var isTypedArray_1 = isTypedArray$2;
  var baseTimes = _baseTimes,
    isArguments$3 = isArguments_1,
    isArray$7 = isArray_1,
    isBuffer$2 = isBufferExports,
    isIndex$3 = _isIndex,
    isTypedArray$1 = isTypedArray_1;
  var objectProto$7 = Object.prototype;
  var hasOwnProperty$5 = objectProto$7.hasOwnProperty;
  function arrayLikeKeys$2(value2, inherited) {
    var isArr = isArray$7(value2),
      isArg = !isArr && isArguments$3(value2),
      isBuff = !isArr && !isArg && isBuffer$2(value2),
      isType = !isArr && !isArg && !isBuff && isTypedArray$1(value2),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value2.length, String) : [],
      length = result.length;
    for (var key in value2) {
      if ((inherited || hasOwnProperty$5.call(value2, key)) && !(skipIndexes && (
      // Safari 9 has enumerable `arguments.length` in strict mode.
      key == "length" ||
      // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == "offset" || key == "parent") ||
      // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") ||
      // Skip index properties.
      isIndex$3(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }
  var _arrayLikeKeys = arrayLikeKeys$2;
  var objectProto$6 = Object.prototype;
  function isPrototype$3(value2) {
    var Ctor = value2 && value2.constructor,
      proto = typeof Ctor == "function" && Ctor.prototype || objectProto$6;
    return value2 === proto;
  }
  var _isPrototype = isPrototype$3;
  function overArg$2(func, transform2) {
    return function (arg) {
      return func(transform2(arg));
    };
  }
  var _overArg = overArg$2;
  var overArg$1 = _overArg;
  var nativeKeys$1 = overArg$1(Object.keys, Object);
  var _nativeKeys = nativeKeys$1;
  var isPrototype$2 = _isPrototype,
    nativeKeys = _nativeKeys;
  var objectProto$5 = Object.prototype;
  var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
  function baseKeys$1(object) {
    if (!isPrototype$2(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty$4.call(object, key) && key != "constructor") {
        result.push(key);
      }
    }
    return result;
  }
  var _baseKeys = baseKeys$1;
  var isFunction$1 = isFunction_1,
    isLength$1 = isLength_1;
  function isArrayLike$4(value2) {
    return value2 != null && isLength$1(value2.length) && !isFunction$1(value2);
  }
  var isArrayLike_1 = isArrayLike$4;
  var arrayLikeKeys$1 = _arrayLikeKeys,
    baseKeys = _baseKeys,
    isArrayLike$3 = isArrayLike_1;
  function keys$3(object) {
    return isArrayLike$3(object) ? arrayLikeKeys$1(object) : baseKeys(object);
  }
  var keys_1 = keys$3;
  const keys$4 = /* @__PURE__ */getDefaultExportFromCjs(keys_1);
  var client = {
    exports: {}
  };
  var componentEmitter = {
    exports: {}
  };
  (function (module2) {
    {
      module2.exports = Emitter;
    }
    function Emitter(obj) {
      if (obj) return mixin2(obj);
    }
    function mixin2(obj) {
      for (var key in Emitter.prototype) {
        obj[key] = Emitter.prototype[key];
      }
      return obj;
    }
    Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn2) {
      this._callbacks = this._callbacks || {};
      (this._callbacks["$" + event] = this._callbacks["$" + event] || []).push(fn2);
      return this;
    };
    Emitter.prototype.once = function (event, fn2) {
      function on2() {
        this.off(event, on2);
        fn2.apply(this, arguments);
      }
      on2.fn = fn2;
      this.on(event, on2);
      return this;
    };
    Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn2) {
      this._callbacks = this._callbacks || {};
      if (0 == arguments.length) {
        this._callbacks = {};
        return this;
      }
      var callbacks = this._callbacks["$" + event];
      if (!callbacks) return this;
      if (1 == arguments.length) {
        delete this._callbacks["$" + event];
        return this;
      }
      var cb;
      for (var i2 = 0; i2 < callbacks.length; i2++) {
        cb = callbacks[i2];
        if (cb === fn2 || cb.fn === fn2) {
          callbacks.splice(i2, 1);
          break;
        }
      }
      if (callbacks.length === 0) {
        delete this._callbacks["$" + event];
      }
      return this;
    };
    Emitter.prototype.emit = function (event) {
      this._callbacks = this._callbacks || {};
      var args = new Array(arguments.length - 1),
        callbacks = this._callbacks["$" + event];
      for (var i2 = 1; i2 < arguments.length; i2++) {
        args[i2 - 1] = arguments[i2];
      }
      if (callbacks) {
        callbacks = callbacks.slice(0);
        for (var i2 = 0, len = callbacks.length; i2 < len; ++i2) {
          callbacks[i2].apply(this, args);
        }
      }
      return this;
    };
    Emitter.prototype.listeners = function (event) {
      this._callbacks = this._callbacks || {};
      return this._callbacks["$" + event] || [];
    };
    Emitter.prototype.hasListeners = function (event) {
      return !!this.listeners(event).length;
    };
  })(componentEmitter);
  var componentEmitterExports = componentEmitter.exports;
  var fastSafeStringify = stringify;
  stringify.default = stringify;
  stringify.stable = deterministicStringify;
  stringify.stableStringify = deterministicStringify;
  var LIMIT_REPLACE_NODE = "[...]";
  var CIRCULAR_REPLACE_NODE = "[Circular]";
  var arr = [];
  var replacerStack = [];
  function defaultOptions() {
    return {
      depthLimit: Number.MAX_SAFE_INTEGER,
      edgesLimit: Number.MAX_SAFE_INTEGER
    };
  }
  function stringify(obj, replacer, spacer, options) {
    if (typeof options === "undefined") {
      options = defaultOptions();
    }
    decirc(obj, "", 0, [], void 0, 0, options);
    var res;
    try {
      if (replacerStack.length === 0) {
        res = JSON.stringify(obj, replacer, spacer);
      } else {
        res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);
      }
    } catch (_2) {
      return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
    } finally {
      while (arr.length !== 0) {
        var part = arr.pop();
        if (part.length === 4) {
          Object.defineProperty(part[0], part[1], part[3]);
        } else {
          part[0][part[1]] = part[2];
        }
      }
    }
    return res;
  }
  function setReplace(replace2, val2, k2, parent2) {
    var propertyDescriptor = Object.getOwnPropertyDescriptor(parent2, k2);
    if (propertyDescriptor.get !== void 0) {
      if (propertyDescriptor.configurable) {
        Object.defineProperty(parent2, k2, {
          value: replace2
        });
        arr.push([parent2, k2, val2, propertyDescriptor]);
      } else {
        replacerStack.push([val2, k2, replace2]);
      }
    } else {
      parent2[k2] = replace2;
      arr.push([parent2, k2, val2]);
    }
  }
  function decirc(val2, k2, edgeIndex, stack, parent2, depth, options) {
    depth += 1;
    var i2;
    if (typeof val2 === "object" && val2 !== null) {
      for (i2 = 0; i2 < stack.length; i2++) {
        if (stack[i2] === val2) {
          setReplace(CIRCULAR_REPLACE_NODE, val2, k2, parent2);
          return;
        }
      }
      if (typeof options.depthLimit !== "undefined" && depth > options.depthLimit) {
        setReplace(LIMIT_REPLACE_NODE, val2, k2, parent2);
        return;
      }
      if (typeof options.edgesLimit !== "undefined" && edgeIndex + 1 > options.edgesLimit) {
        setReplace(LIMIT_REPLACE_NODE, val2, k2, parent2);
        return;
      }
      stack.push(val2);
      if (Array.isArray(val2)) {
        for (i2 = 0; i2 < val2.length; i2++) {
          decirc(val2[i2], i2, i2, stack, val2, depth, options);
        }
      } else {
        var keys2 = Object.keys(val2);
        for (i2 = 0; i2 < keys2.length; i2++) {
          var key = keys2[i2];
          decirc(val2[key], key, i2, stack, val2, depth, options);
        }
      }
      stack.pop();
    }
  }
  function compareFunction(a2, b2) {
    if (a2 < b2) {
      return -1;
    }
    if (a2 > b2) {
      return 1;
    }
    return 0;
  }
  function deterministicStringify(obj, replacer, spacer, options) {
    if (typeof options === "undefined") {
      options = defaultOptions();
    }
    var tmp = deterministicDecirc(obj, "", 0, [], void 0, 0, options) || obj;
    var res;
    try {
      if (replacerStack.length === 0) {
        res = JSON.stringify(tmp, replacer, spacer);
      } else {
        res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);
      }
    } catch (_2) {
      return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]");
    } finally {
      while (arr.length !== 0) {
        var part = arr.pop();
        if (part.length === 4) {
          Object.defineProperty(part[0], part[1], part[3]);
        } else {
          part[0][part[1]] = part[2];
        }
      }
    }
    return res;
  }
  function deterministicDecirc(val2, k2, edgeIndex, stack, parent2, depth, options) {
    depth += 1;
    var i2;
    if (typeof val2 === "object" && val2 !== null) {
      for (i2 = 0; i2 < stack.length; i2++) {
        if (stack[i2] === val2) {
          setReplace(CIRCULAR_REPLACE_NODE, val2, k2, parent2);
          return;
        }
      }
      try {
        if (typeof val2.toJSON === "function") {
          return;
        }
      } catch (_2) {
        return;
      }
      if (typeof options.depthLimit !== "undefined" && depth > options.depthLimit) {
        setReplace(LIMIT_REPLACE_NODE, val2, k2, parent2);
        return;
      }
      if (typeof options.edgesLimit !== "undefined" && edgeIndex + 1 > options.edgesLimit) {
        setReplace(LIMIT_REPLACE_NODE, val2, k2, parent2);
        return;
      }
      stack.push(val2);
      if (Array.isArray(val2)) {
        for (i2 = 0; i2 < val2.length; i2++) {
          deterministicDecirc(val2[i2], i2, i2, stack, val2, depth, options);
        }
      } else {
        var tmp = {};
        var keys2 = Object.keys(val2).sort(compareFunction);
        for (i2 = 0; i2 < keys2.length; i2++) {
          var key = keys2[i2];
          deterministicDecirc(val2[key], key, i2, stack, val2, depth, options);
          tmp[key] = val2[key];
        }
        if (typeof parent2 !== "undefined") {
          arr.push([parent2, k2, val2]);
          parent2[k2] = tmp;
        } else {
          return tmp;
        }
      }
      stack.pop();
    }
  }
  function replaceGetterValues(replacer) {
    replacer = typeof replacer !== "undefined" ? replacer : function (k2, v2) {
      return v2;
    };
    return function (key, val2) {
      if (replacerStack.length > 0) {
        for (var i2 = 0; i2 < replacerStack.length; i2++) {
          var part = replacerStack[i2];
          if (part[1] === key && part[0] === val2) {
            val2 = part[2];
            replacerStack.splice(i2, 1);
            break;
          }
        }
      }
      return replacer.call(this, key, val2);
    };
  }
  function _typeof$2(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof$2 = function _typeof2(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof$2 = function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof$2(obj);
  }
  function isObject$a(obj) {
    return obj !== null && _typeof$2(obj) === "object";
  }
  var isObject_1 = isObject$a;
  function _typeof$1(obj) {
    "@babel/helpers - typeof";

    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof$1 = function _typeof2(obj2) {
        return typeof obj2;
      };
    } else {
      _typeof$1 = function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof$1(obj);
  }
  var isObject$9 = isObject_1;
  var requestBase = RequestBase;
  function RequestBase(object) {
    if (object) return mixin$1(object);
  }
  function mixin$1(object) {
    for (var key in RequestBase.prototype) {
      if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key)) object[key] = RequestBase.prototype[key];
    }
    return object;
  }
  RequestBase.prototype.clearTimeout = function () {
    clearTimeout(this._timer);
    clearTimeout(this._responseTimeoutTimer);
    clearTimeout(this._uploadTimeoutTimer);
    delete this._timer;
    delete this._responseTimeoutTimer;
    delete this._uploadTimeoutTimer;
    return this;
  };
  RequestBase.prototype.parse = function (fn2) {
    this._parser = fn2;
    return this;
  };
  RequestBase.prototype.responseType = function (value2) {
    this._responseType = value2;
    return this;
  };
  RequestBase.prototype.serialize = function (fn2) {
    this._serializer = fn2;
    return this;
  };
  RequestBase.prototype.timeout = function (options) {
    if (!options || _typeof$1(options) !== "object") {
      this._timeout = options;
      this._responseTimeout = 0;
      this._uploadTimeout = 0;
      return this;
    }
    for (var option in options) {
      if (Object.prototype.hasOwnProperty.call(options, option)) {
        switch (option) {
          case "deadline":
            this._timeout = options.deadline;
            break;
          case "response":
            this._responseTimeout = options.response;
            break;
          case "upload":
            this._uploadTimeout = options.upload;
            break;
          default:
            console.warn("Unknown timeout option", option);
        }
      }
    }
    return this;
  };
  RequestBase.prototype.retry = function (count, fn2) {
    if (arguments.length === 0 || count === true) count = 1;
    if (count <= 0) count = 0;
    this._maxRetries = count;
    this._retries = 0;
    this._retryCallback = fn2;
    return this;
  };
  var ERROR_CODES = /* @__PURE__ */new Set(["ETIMEDOUT", "ECONNRESET", "EADDRINUSE", "ECONNREFUSED", "EPIPE", "ENOTFOUND", "ENETUNREACH", "EAI_AGAIN"]);
  var STATUS_CODES = /* @__PURE__ */new Set([408, 413, 429, 500, 502, 503, 504, 521, 522, 524]);
  RequestBase.prototype._shouldRetry = function (err, res) {
    if (!this._maxRetries || this._retries++ >= this._maxRetries) {
      return false;
    }
    if (this._retryCallback) {
      try {
        var override = this._retryCallback(err, res);
        if (override === true) return true;
        if (override === false) return false;
      } catch (err_) {
        console.error(err_);
      }
    }
    if (res && res.status && STATUS_CODES.has(res.status)) return true;
    if (err) {
      if (err.code && ERROR_CODES.has(err.code)) return true;
      if (err.timeout && err.code === "ECONNABORTED") return true;
      if (err.crossDomain) return true;
    }
    return false;
  };
  RequestBase.prototype._retry = function () {
    this.clearTimeout();
    if (this.req) {
      this.req = null;
      this.req = this.request();
    }
    this._aborted = false;
    this.timedout = false;
    this.timedoutError = null;
    return this._end();
  };
  RequestBase.prototype.then = function (resolve, reject) {
    var _this = this;
    if (!this._fullfilledPromise) {
      var self2 = this;
      if (this._endCalled) {
        console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises");
      }
      this._fullfilledPromise = new Promise(function (resolve2, reject2) {
        self2.on("abort", function () {
          if (_this._maxRetries && _this._maxRetries > _this._retries) {
            return;
          }
          if (_this.timedout && _this.timedoutError) {
            reject2(_this.timedoutError);
            return;
          }
          var err = new Error("Aborted");
          err.code = "ABORTED";
          err.status = _this.status;
          err.method = _this.method;
          err.url = _this.url;
          reject2(err);
        });
        self2.end(function (err, res) {
          if (err) reject2(err);else resolve2(res);
        });
      });
    }
    return this._fullfilledPromise.then(resolve, reject);
  };
  RequestBase.prototype.catch = function (cb) {
    return this.then(void 0, cb);
  };
  RequestBase.prototype.use = function (fn2) {
    fn2(this);
    return this;
  };
  RequestBase.prototype.ok = function (cb) {
    if (typeof cb !== "function") throw new Error("Callback required");
    this._okCallback = cb;
    return this;
  };
  RequestBase.prototype._isResponseOK = function (res) {
    if (!res) {
      return false;
    }
    if (this._okCallback) {
      return this._okCallback(res);
    }
    return res.status >= 200 && res.status < 300;
  };
  RequestBase.prototype.get = function (field) {
    return this._header[field.toLowerCase()];
  };
  RequestBase.prototype.getHeader = RequestBase.prototype.get;
  RequestBase.prototype.set = function (field, value2) {
    if (isObject$9(field)) {
      for (var key in field) {
        if (Object.prototype.hasOwnProperty.call(field, key)) this.set(key, field[key]);
      }
      return this;
    }
    this._header[field.toLowerCase()] = value2;
    this.header[field] = value2;
    return this;
  };
  RequestBase.prototype.unset = function (field) {
    delete this._header[field.toLowerCase()];
    delete this.header[field];
    return this;
  };
  RequestBase.prototype.field = function (name, value2) {
    if (name === null || void 0 === name) {
      throw new Error(".field(name, val) name can not be empty");
    }
    if (this._data) {
      throw new Error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");
    }
    if (isObject$9(name)) {
      for (var key in name) {
        if (Object.prototype.hasOwnProperty.call(name, key)) this.field(key, name[key]);
      }
      return this;
    }
    if (Array.isArray(value2)) {
      for (var i2 in value2) {
        if (Object.prototype.hasOwnProperty.call(value2, i2)) this.field(name, value2[i2]);
      }
      return this;
    }
    if (value2 === null || void 0 === value2) {
      throw new Error(".field(name, val) val can not be empty");
    }
    if (typeof value2 === "boolean") {
      value2 = String(value2);
    }
    this._getFormData().append(name, value2);
    return this;
  };
  RequestBase.prototype.abort = function () {
    if (this._aborted) {
      return this;
    }
    this._aborted = true;
    if (this.xhr) this.xhr.abort();
    if (this.req) this.req.abort();
    this.clearTimeout();
    this.emit("abort");
    return this;
  };
  RequestBase.prototype._auth = function (user, pass, options, base64Encoder) {
    switch (options.type) {
      case "basic":
        this.set("Authorization", "Basic ".concat(base64Encoder("".concat(user, ":").concat(pass))));
        break;
      case "auto":
        this.username = user;
        this.password = pass;
        break;
      case "bearer":
        this.set("Authorization", "Bearer ".concat(user));
        break;
    }
    return this;
  };
  RequestBase.prototype.withCredentials = function (on2) {
    if (on2 === void 0) on2 = true;
    this._withCredentials = on2;
    return this;
  };
  RequestBase.prototype.redirects = function (n2) {
    this._maxRedirects = n2;
    return this;
  };
  RequestBase.prototype.maxResponseSize = function (n2) {
    if (typeof n2 !== "number") {
      throw new TypeError("Invalid argument");
    }
    this._maxResponseSize = n2;
    return this;
  };
  RequestBase.prototype.toJSON = function () {
    return {
      method: this.method,
      url: this.url,
      data: this._data,
      headers: this._header
    };
  };
  RequestBase.prototype.send = function (data2) {
    var isObject_ = isObject$9(data2);
    var type = this._header["content-type"];
    if (this._formData) {
      throw new Error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");
    }
    if (isObject_ && !this._data) {
      if (Array.isArray(data2)) {
        this._data = [];
      } else if (!this._isHost(data2)) {
        this._data = {};
      }
    } else if (data2 && this._data && this._isHost(this._data)) {
      throw new Error("Can't merge these send calls");
    }
    if (isObject_ && isObject$9(this._data)) {
      for (var key in data2) {
        if (Object.prototype.hasOwnProperty.call(data2, key)) this._data[key] = data2[key];
      }
    } else if (typeof data2 === "string") {
      if (!type) this.type("form");
      type = this._header["content-type"];
      if (type) type = type.toLowerCase().trim();
      if (type === "application/x-www-form-urlencoded") {
        this._data = this._data ? "".concat(this._data, "&").concat(data2) : data2;
      } else {
        this._data = (this._data || "") + data2;
      }
    } else {
      this._data = data2;
    }
    if (!isObject_ || this._isHost(data2)) {
      return this;
    }
    if (!type) this.type("json");
    return this;
  };
  RequestBase.prototype.sortQuery = function (sort) {
    this._sort = typeof sort === "undefined" ? true : sort;
    return this;
  };
  RequestBase.prototype._finalizeQueryString = function () {
    var query = this._query.join("&");
    if (query) {
      this.url += (this.url.includes("?") ? "&" : "?") + query;
    }
    this._query.length = 0;
    if (this._sort) {
      var index2 = this.url.indexOf("?");
      if (index2 >= 0) {
        var queryArray = this.url.slice(index2 + 1).split("&");
        if (typeof this._sort === "function") {
          queryArray.sort(this._sort);
        } else {
          queryArray.sort();
        }
        this.url = this.url.slice(0, index2) + "?" + queryArray.join("&");
      }
    }
  };
  RequestBase.prototype._appendQueryString = function () {
    console.warn("Unsupported");
  };
  RequestBase.prototype._timeoutError = function (reason, timeout2, errno) {
    if (this._aborted) {
      return;
    }
    var err = new Error("".concat(reason + timeout2, "ms exceeded"));
    err.timeout = timeout2;
    err.code = "ECONNABORTED";
    err.errno = errno;
    this.timedout = true;
    this.timedoutError = err;
    this.abort();
    this.callback(err);
  };
  RequestBase.prototype._setTimeouts = function () {
    var self2 = this;
    if (this._timeout && !this._timer) {
      this._timer = setTimeout(function () {
        self2._timeoutError("Timeout of ", self2._timeout, "ETIME");
      }, this._timeout);
    }
    if (this._responseTimeout && !this._responseTimeoutTimer) {
      this._responseTimeoutTimer = setTimeout(function () {
        self2._timeoutError("Response timeout of ", self2._responseTimeout, "ETIMEDOUT");
      }, this._responseTimeout);
    }
  };
  var utils$1 = {};
  function _createForOfIteratorHelper(o2, allowArrayLike) {
    var it2;
    if (typeof Symbol === "undefined" || o2[Symbol.iterator] == null) {
      if (Array.isArray(o2) || (it2 = _unsupportedIterableToArray$1(o2)) || allowArrayLike && o2 && typeof o2.length === "number") {
        if (it2) o2 = it2;
        var i2 = 0;
        var F2 = function F3() {};
        return {
          s: F2,
          n: function n2() {
            if (i2 >= o2.length) return {
              done: true
            };
            return {
              done: false,
              value: o2[i2++]
            };
          },
          e: function e2(_e2) {
            throw _e2;
          },
          f: F2
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true,
      didErr = false,
      err;
    return {
      s: function s2() {
        it2 = o2[Symbol.iterator]();
      },
      n: function n2() {
        var step = it2.next();
        normalCompletion = step.done;
        return step;
      },
      e: function e2(_e2) {
        didErr = true;
        err = _e2;
      },
      f: function f2() {
        try {
          if (!normalCompletion && it2.return != null) it2.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
  function _unsupportedIterableToArray$1(o2, minLen) {
    if (!o2) return;
    if (typeof o2 === "string") return _arrayLikeToArray$1(o2, minLen);
    var n2 = Object.prototype.toString.call(o2).slice(8, -1);
    if (n2 === "Object" && o2.constructor) n2 = o2.constructor.name;
    if (n2 === "Map" || n2 === "Set") return Array.from(o2);
    if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return _arrayLikeToArray$1(o2, minLen);
  }
  function _arrayLikeToArray$1(arr2, len) {
    if (len == null || len > arr2.length) len = arr2.length;
    for (var i2 = 0, arr22 = new Array(len); i2 < len; i2++) {
      arr22[i2] = arr2[i2];
    }
    return arr22;
  }
  utils$1.type = function (str) {
    return str.split(/ *; */).shift();
  };
  utils$1.params = function (val2) {
    var obj = {};
    var _iterator = _createForOfIteratorHelper(val2.split(/ *; */)),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var str = _step.value;
        var parts = str.split(/ *= */);
        var key = parts.shift();
        var _val = parts.shift();
        if (key && _val) obj[key] = _val;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return obj;
  };
  utils$1.parseLinks = function (val2) {
    var obj = {};
    var _iterator2 = _createForOfIteratorHelper(val2.split(/ *, */)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var str = _step2.value;
        var parts = str.split(/ *; */);
        var url2 = parts[0].slice(1, -1);
        var rel = parts[1].split(/ *= */)[1].slice(1, -1);
        obj[rel] = url2;
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return obj;
  };
  utils$1.cleanHeader = function (header, changesOrigin) {
    delete header["content-type"];
    delete header["content-length"];
    delete header["transfer-encoding"];
    delete header.host;
    if (changesOrigin) {
      delete header.authorization;
      delete header.cookie;
    }
    return header;
  };
  var utils = utils$1;
  var responseBase = ResponseBase;
  function ResponseBase(obj) {
    if (obj) return mixin(obj);
  }
  function mixin(obj) {
    for (var key in ResponseBase.prototype) {
      if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key)) obj[key] = ResponseBase.prototype[key];
    }
    return obj;
  }
  ResponseBase.prototype.get = function (field) {
    return this.header[field.toLowerCase()];
  };
  ResponseBase.prototype._setHeaderProperties = function (header) {
    var ct2 = header["content-type"] || "";
    this.type = utils.type(ct2);
    var params = utils.params(ct2);
    for (var key in params) {
      if (Object.prototype.hasOwnProperty.call(params, key)) this[key] = params[key];
    }
    this.links = {};
    try {
      if (header.link) {
        this.links = utils.parseLinks(header.link);
      }
    } catch (_unused) {}
  };
  ResponseBase.prototype._setStatusProperties = function (status) {
    var type = status / 100 | 0;
    this.statusCode = status;
    this.status = this.statusCode;
    this.statusType = type;
    this.info = type === 1;
    this.ok = type === 2;
    this.redirect = type === 3;
    this.clientError = type === 4;
    this.serverError = type === 5;
    this.error = type === 4 || type === 5 ? this.toError() : false;
    this.created = status === 201;
    this.accepted = status === 202;
    this.noContent = status === 204;
    this.badRequest = status === 400;
    this.unauthorized = status === 401;
    this.notAcceptable = status === 406;
    this.forbidden = status === 403;
    this.notFound = status === 404;
    this.unprocessableEntity = status === 422;
  };
  function _toConsumableArray$1(arr2) {
    return _arrayWithoutHoles$1(arr2) || _iterableToArray$1(arr2) || _unsupportedIterableToArray(arr2) || _nonIterableSpread$1();
  }
  function _nonIterableSpread$1() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _unsupportedIterableToArray(o2, minLen) {
    if (!o2) return;
    if (typeof o2 === "string") return _arrayLikeToArray(o2, minLen);
    var n2 = Object.prototype.toString.call(o2).slice(8, -1);
    if (n2 === "Object" && o2.constructor) n2 = o2.constructor.name;
    if (n2 === "Map" || n2 === "Set") return Array.from(o2);
    if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return _arrayLikeToArray(o2, minLen);
  }
  function _iterableToArray$1(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
  }
  function _arrayWithoutHoles$1(arr2) {
    if (Array.isArray(arr2)) return _arrayLikeToArray(arr2);
  }
  function _arrayLikeToArray(arr2, len) {
    if (len == null || len > arr2.length) len = arr2.length;
    for (var i2 = 0, arr22 = new Array(len); i2 < len; i2++) {
      arr22[i2] = arr2[i2];
    }
    return arr22;
  }
  function Agent() {
    this._defaults = [];
  }
  ["use", "on", "once", "set", "query", "type", "accept", "auth", "withCredentials", "sortQuery", "retry", "ok", "redirects", "timeout", "buffer", "serialize", "parse", "ca", "key", "pfx", "cert", "disableTLSCerts"].forEach(function (fn2) {
    Agent.prototype[fn2] = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this._defaults.push({
        fn: fn2,
        args
      });
      return this;
    };
  });
  Agent.prototype._setDefaults = function (req) {
    this._defaults.forEach(function (def) {
      req[def.fn].apply(req, _toConsumableArray$1(def.args));
    });
  };
  var agentBase = Agent;
  (function (module2, exports2) {
    function _typeof2(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof2 = function _typeof3(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof2 = function _typeof3(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof2(obj);
    }
    var root2;
    if (typeof window !== "undefined") {
      root2 = window;
    } else if (typeof self === "undefined") {
      console.warn("Using browser-only version of superagent in non-browser environment");
      root2 = void 0;
    } else {
      root2 = self;
    }
    var Emitter = componentEmitterExports;
    var safeStringify = fastSafeStringify;
    var qs2 = lib;
    var RequestBase2 = requestBase;
    var isObject2 = isObject_1;
    var ResponseBase2 = responseBase;
    var Agent2 = agentBase;
    function noop2() {}
    module2.exports = function (method, url2) {
      if (typeof url2 === "function") {
        return new exports2.Request("GET", method).end(url2);
      }
      if (arguments.length === 1) {
        return new exports2.Request("GET", method);
      }
      return new exports2.Request(method, url2);
    };
    exports2 = module2.exports;
    var request2 = exports2;
    exports2.Request = Request2;
    request2.getXHR = function () {
      if (root2.XMLHttpRequest && (!root2.location || root2.location.protocol !== "file:" || !root2.ActiveXObject)) {
        return new XMLHttpRequest();
      }
      try {
        return new ActiveXObject("Microsoft.XMLHTTP");
      } catch (_unused) {}
      try {
        return new ActiveXObject("Msxml2.XMLHTTP.6.0");
      } catch (_unused2) {}
      try {
        return new ActiveXObject("Msxml2.XMLHTTP.3.0");
      } catch (_unused3) {}
      try {
        return new ActiveXObject("Msxml2.XMLHTTP");
      } catch (_unused4) {}
      throw new Error("Browser-only version of superagent could not find XHR");
    };
    var trim2 = "".trim ? function (s2) {
      return s2.trim();
    } : function (s2) {
      return s2.replace(/(^\s*|\s*$)/g, "");
    };
    function serialize(obj) {
      if (!isObject2(obj)) return obj;
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) pushEncodedKeyValuePair(pairs, key, obj[key]);
      }
      return pairs.join("&");
    }
    function pushEncodedKeyValuePair(pairs, key, val2) {
      if (val2 === void 0) return;
      if (val2 === null) {
        pairs.push(encodeURI(key));
        return;
      }
      if (Array.isArray(val2)) {
        val2.forEach(function (v2) {
          pushEncodedKeyValuePair(pairs, key, v2);
        });
      } else if (isObject2(val2)) {
        for (var subkey in val2) {
          if (Object.prototype.hasOwnProperty.call(val2, subkey)) pushEncodedKeyValuePair(pairs, "".concat(key, "[").concat(subkey, "]"), val2[subkey]);
        }
      } else {
        pairs.push(encodeURI(key) + "=" + encodeURIComponent(val2));
      }
    }
    request2.serializeObject = serialize;
    function parseString(str) {
      var obj = {};
      var pairs = str.split("&");
      var pair;
      var pos;
      for (var i2 = 0, len = pairs.length; i2 < len; ++i2) {
        pair = pairs[i2];
        pos = pair.indexOf("=");
        if (pos === -1) {
          obj[decodeURIComponent(pair)] = "";
        } else {
          obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));
        }
      }
      return obj;
    }
    request2.parseString = parseString;
    request2.types = {
      html: "text/html",
      json: "application/json",
      xml: "text/xml",
      urlencoded: "application/x-www-form-urlencoded",
      form: "application/x-www-form-urlencoded",
      "form-data": "application/x-www-form-urlencoded"
    };
    request2.serialize = {
      "application/x-www-form-urlencoded": qs2.stringify,
      "application/json": safeStringify
    };
    request2.parse = {
      "application/x-www-form-urlencoded": parseString,
      "application/json": JSON.parse
    };
    function parseHeader(str) {
      var lines = str.split(/\r?\n/);
      var fields = {};
      var index2;
      var line;
      var field;
      var val2;
      for (var i2 = 0, len = lines.length; i2 < len; ++i2) {
        line = lines[i2];
        index2 = line.indexOf(":");
        if (index2 === -1) {
          continue;
        }
        field = line.slice(0, index2).toLowerCase();
        val2 = trim2(line.slice(index2 + 1));
        fields[field] = val2;
      }
      return fields;
    }
    function isJSON(mime) {
      return /[/+]json($|[^-\w])/i.test(mime);
    }
    function Response2(req) {
      this.req = req;
      this.xhr = this.req.xhr;
      this.text = this.req.method !== "HEAD" && (this.xhr.responseType === "" || this.xhr.responseType === "text") || typeof this.xhr.responseType === "undefined" ? this.xhr.responseText : null;
      this.statusText = this.req.xhr.statusText;
      var status = this.xhr.status;
      if (status === 1223) {
        status = 204;
      }
      this._setStatusProperties(status);
      this.headers = parseHeader(this.xhr.getAllResponseHeaders());
      this.header = this.headers;
      this.header["content-type"] = this.xhr.getResponseHeader("content-type");
      this._setHeaderProperties(this.header);
      if (this.text === null && req._responseType) {
        this.body = this.xhr.response;
      } else {
        this.body = this.req.method === "HEAD" ? null : this._parseBody(this.text ? this.text : this.xhr.response);
      }
    }
    ResponseBase2(Response2.prototype);
    Response2.prototype._parseBody = function (str) {
      var parse2 = request2.parse[this.type];
      if (this.req._parser) {
        return this.req._parser(this, str);
      }
      if (!parse2 && isJSON(this.type)) {
        parse2 = request2.parse["application/json"];
      }
      return parse2 && str && (str.length > 0 || str instanceof Object) ? parse2(str) : null;
    };
    Response2.prototype.toError = function () {
      var req = this.req;
      var method = req.method;
      var url2 = req.url;
      var msg = "cannot ".concat(method, " ").concat(url2, " (").concat(this.status, ")");
      var err = new Error(msg);
      err.status = this.status;
      err.method = method;
      err.url = url2;
      return err;
    };
    request2.Response = Response2;
    function Request2(method, url2) {
      var self2 = this;
      this._query = this._query || [];
      this.method = method;
      this.url = url2;
      this.header = {};
      this._header = {};
      this.on("end", function () {
        var err = null;
        var res = null;
        try {
          res = new Response2(self2);
        } catch (err_) {
          err = new Error("Parser is unable to parse the response");
          err.parse = true;
          err.original = err_;
          if (self2.xhr) {
            err.rawResponse = typeof self2.xhr.responseType === "undefined" ? self2.xhr.responseText : self2.xhr.response;
            err.status = self2.xhr.status ? self2.xhr.status : null;
            err.statusCode = err.status;
          } else {
            err.rawResponse = null;
            err.status = null;
          }
          return self2.callback(err);
        }
        self2.emit("response", res);
        var new_err;
        try {
          if (!self2._isResponseOK(res)) {
            new_err = new Error(res.statusText || res.text || "Unsuccessful HTTP response");
          }
        } catch (err_) {
          new_err = err_;
        }
        if (new_err) {
          new_err.original = err;
          new_err.response = res;
          new_err.status = res.status;
          self2.callback(new_err, res);
        } else {
          self2.callback(null, res);
        }
      });
    }
    Emitter(Request2.prototype);
    RequestBase2(Request2.prototype);
    Request2.prototype.type = function (type) {
      this.set("Content-Type", request2.types[type] || type);
      return this;
    };
    Request2.prototype.accept = function (type) {
      this.set("Accept", request2.types[type] || type);
      return this;
    };
    Request2.prototype.auth = function (user, pass, options) {
      if (arguments.length === 1) pass = "";
      if (_typeof2(pass) === "object" && pass !== null) {
        options = pass;
        pass = "";
      }
      if (!options) {
        options = {
          type: typeof btoa === "function" ? "basic" : "auto"
        };
      }
      var encoder = function encoder2(string) {
        if (typeof btoa === "function") {
          return btoa(string);
        }
        throw new Error("Cannot use basic auth, btoa is not a function");
      };
      return this._auth(user, pass, options, encoder);
    };
    Request2.prototype.query = function (val2) {
      if (typeof val2 !== "string") val2 = serialize(val2);
      if (val2) this._query.push(val2);
      return this;
    };
    Request2.prototype.attach = function (field, file, options) {
      if (file) {
        if (this._data) {
          throw new Error("superagent can't mix .send() and .attach()");
        }
        this._getFormData().append(field, file, options || file.name);
      }
      return this;
    };
    Request2.prototype._getFormData = function () {
      if (!this._formData) {
        this._formData = new root2.FormData();
      }
      return this._formData;
    };
    Request2.prototype.callback = function (err, res) {
      if (this._shouldRetry(err, res)) {
        return this._retry();
      }
      var fn2 = this._callback;
      this.clearTimeout();
      if (err) {
        if (this._maxRetries) err.retries = this._retries - 1;
        this.emit("error", err);
      }
      fn2(err, res);
    };
    Request2.prototype.crossDomainError = function () {
      var err = new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");
      err.crossDomain = true;
      err.status = this.status;
      err.method = this.method;
      err.url = this.url;
      this.callback(err);
    };
    Request2.prototype.agent = function () {
      console.warn("This is not supported in browser version of superagent");
      return this;
    };
    Request2.prototype.ca = Request2.prototype.agent;
    Request2.prototype.buffer = Request2.prototype.ca;
    Request2.prototype.write = function () {
      throw new Error("Streaming is not supported in browser version of superagent");
    };
    Request2.prototype.pipe = Request2.prototype.write;
    Request2.prototype._isHost = function (obj) {
      return obj && _typeof2(obj) === "object" && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== "[object Object]";
    };
    Request2.prototype.end = function (fn2) {
      if (this._endCalled) {
        console.warn("Warning: .end() was called twice. This is not supported in superagent");
      }
      this._endCalled = true;
      this._callback = fn2 || noop2;
      this._finalizeQueryString();
      this._end();
    };
    Request2.prototype._setUploadTimeout = function () {
      var self2 = this;
      if (this._uploadTimeout && !this._uploadTimeoutTimer) {
        this._uploadTimeoutTimer = setTimeout(function () {
          self2._timeoutError("Upload timeout of ", self2._uploadTimeout, "ETIMEDOUT");
        }, this._uploadTimeout);
      }
    };
    Request2.prototype._end = function () {
      if (this._aborted) return this.callback(new Error("The request has been aborted even before .end() was called"));
      var self2 = this;
      this.xhr = request2.getXHR();
      var xhr = this.xhr;
      var data2 = this._formData || this._data;
      this._setTimeouts();
      xhr.onreadystatechange = function () {
        var readyState = xhr.readyState;
        if (readyState >= 2 && self2._responseTimeoutTimer) {
          clearTimeout(self2._responseTimeoutTimer);
        }
        if (readyState !== 4) {
          return;
        }
        var status;
        try {
          status = xhr.status;
        } catch (_unused5) {
          status = 0;
        }
        if (!status) {
          if (self2.timedout || self2._aborted) return;
          return self2.crossDomainError();
        }
        self2.emit("end");
      };
      var handleProgress = function handleProgress2(direction, e2) {
        if (e2.total > 0) {
          e2.percent = e2.loaded / e2.total * 100;
          if (e2.percent === 100) {
            clearTimeout(self2._uploadTimeoutTimer);
          }
        }
        e2.direction = direction;
        self2.emit("progress", e2);
      };
      if (this.hasListeners("progress")) {
        try {
          xhr.addEventListener("progress", handleProgress.bind(null, "download"));
          if (xhr.upload) {
            xhr.upload.addEventListener("progress", handleProgress.bind(null, "upload"));
          }
        } catch (_unused6) {}
      }
      if (xhr.upload) {
        this._setUploadTimeout();
      }
      try {
        if (this.username && this.password) {
          xhr.open(this.method, this.url, true, this.username, this.password);
        } else {
          xhr.open(this.method, this.url, true);
        }
      } catch (err) {
        return this.callback(err);
      }
      if (this._withCredentials) xhr.withCredentials = true;
      if (!this._formData && this.method !== "GET" && this.method !== "HEAD" && typeof data2 !== "string" && !this._isHost(data2)) {
        var contentType = this._header["content-type"];
        var _serialize = this._serializer || request2.serialize[contentType ? contentType.split(";")[0] : ""];
        if (!_serialize && isJSON(contentType)) {
          _serialize = request2.serialize["application/json"];
        }
        if (_serialize) data2 = _serialize(data2);
      }
      for (var field in this.header) {
        if (this.header[field] === null) continue;
        if (Object.prototype.hasOwnProperty.call(this.header, field)) xhr.setRequestHeader(field, this.header[field]);
      }
      if (this._responseType) {
        xhr.responseType = this._responseType;
      }
      this.emit("request", this);
      xhr.send(typeof data2 === "undefined" ? null : data2);
    };
    request2.agent = function () {
      return new Agent2();
    };
    ["GET", "POST", "OPTIONS", "PATCH", "PUT", "DELETE"].forEach(function (method) {
      Agent2.prototype[method.toLowerCase()] = function (url2, fn2) {
        var req = new request2.Request(method, url2);
        this._setDefaults(req);
        if (fn2) {
          req.end(fn2);
        }
        return req;
      };
    });
    Agent2.prototype.del = Agent2.prototype.delete;
    request2.get = function (url2, data2, fn2) {
      var req = request2("GET", url2);
      if (typeof data2 === "function") {
        fn2 = data2;
        data2 = null;
      }
      if (data2) req.query(data2);
      if (fn2) req.end(fn2);
      return req;
    };
    request2.head = function (url2, data2, fn2) {
      var req = request2("HEAD", url2);
      if (typeof data2 === "function") {
        fn2 = data2;
        data2 = null;
      }
      if (data2) req.query(data2);
      if (fn2) req.end(fn2);
      return req;
    };
    request2.options = function (url2, data2, fn2) {
      var req = request2("OPTIONS", url2);
      if (typeof data2 === "function") {
        fn2 = data2;
        data2 = null;
      }
      if (data2) req.send(data2);
      if (fn2) req.end(fn2);
      return req;
    };
    function del(url2, data2, fn2) {
      var req = request2("DELETE", url2);
      if (typeof data2 === "function") {
        fn2 = data2;
        data2 = null;
      }
      if (data2) req.send(data2);
      if (fn2) req.end(fn2);
      return req;
    }
    request2.del = del;
    request2.delete = del;
    request2.patch = function (url2, data2, fn2) {
      var req = request2("PATCH", url2);
      if (typeof data2 === "function") {
        fn2 = data2;
        data2 = null;
      }
      if (data2) req.send(data2);
      if (fn2) req.end(fn2);
      return req;
    };
    request2.post = function (url2, data2, fn2) {
      var req = request2("POST", url2);
      if (typeof data2 === "function") {
        fn2 = data2;
        data2 = null;
      }
      if (data2) req.send(data2);
      if (fn2) req.end(fn2);
      return req;
    };
    request2.put = function (url2, data2, fn2) {
      var req = request2("PUT", url2);
      if (typeof data2 === "function") {
        fn2 = data2;
        data2 = null;
      }
      if (data2) req.send(data2);
      if (fn2) req.end(fn2);
      return req;
    };
  })(client, client.exports);
  var clientExports = client.exports;
  const superagent = /* @__PURE__ */getDefaultExportFromCjs(clientExports);
  var superagentJsonp = {
    exports: {}
  };
  (function (module2) {
    var removeCallback = function removeCallback2(_ref) {
      var script = _ref.script,
        callbackName = _ref.callbackName,
        timeout2 = _ref.timeout;
      if (script && script.parentNode) script.parentNode.removeChild(script);
      delete window[callbackName];
      clearTimeout(timeout2);
    };
    var jsonp2 = function jsonp3(requestOrConfig) {
      var end = function end2() {
        var config = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return function handler(callback) {
          var _this = this;
          var callbackParam = config.callbackParam || "callback";
          var callbackName = config.callbackName || "superagentCallback" + ((/* @__PURE__ */new Date()).valueOf() + parseInt(Math.random() * 1e3, 10));
          var timeoutLimit = config.timeout || 1e3;
          var timeout2 = setTimeout(jsonp3.errorWrapper.bind(this), timeoutLimit);
          this._jsonp = {
            callbackName,
            callback,
            timeout: timeout2
          };
          window[callbackName] = jsonp3.callbackWrapper.bind(this);
          this._query.push(encodeURIComponent(callbackParam) + "=" + encodeURIComponent(callbackName));
          var queryString2 = this._query.join("&");
          var s2 = document.createElement("script");
          {
            var separator = this.url.indexOf("?") > -1 ? "&" : "?";
            var url2 = this.url + separator + queryString2;
            s2.src = url2;
            s2.onerror = function (e2) {
              jsonp3.errorWrapper.call(_this, e2);
            };
          }
          document.head.appendChild(s2);
          this._jsonp.script = s2;
          return this;
        };
      };
      var reqFunc = function reqFunc2(request2) {
        if (typeof window === "undefined") return request2;
        request2.end = end.call(request2, requestOrConfig);
        return request2;
      };
      if (typeof requestOrConfig.end === "function") {
        return reqFunc(requestOrConfig);
      }
      return reqFunc;
    };
    jsonp2.callbackWrapper = function callbackWrapper(body2) {
      var err = null;
      var res = {
        body: body2
      };
      removeCallback(this._jsonp);
      this._jsonp.callback.call(this, err, res);
    };
    jsonp2.errorWrapper = function errorWrapper(error) {
      var err = new Error("404 Not found");
      if (error && error instanceof Event && error.type === "error") {
        err = new Error("Connection issue");
      }
      removeCallback(this._jsonp);
      this._jsonp.callback.call(this, err, null);
    };
    {
      module2.exports = jsonp2;
    }
  })(superagentJsonp);
  var superagentJsonpExports = superagentJsonp.exports;
  const jsonp = /* @__PURE__ */getDefaultExportFromCjs(superagentJsonpExports);
  function getCookie$2(name) {
    if (!name) {
      return "";
    }
    var cookie2 = "".concat(document.cookie);
    var indexStart = cookie2.indexOf("".concat(name, "="));
    if (indexStart === -1) {
      return "";
    }
    var indexEnd = cookie2.indexOf(";", indexStart);
    if (indexEnd === -1) {
      indexEnd = cookie2.length;
    }
    return decodeURIComponent(cookie2.substring(indexStart + name.length + 1, indexEnd));
  }
  var requestPayload = {};
  var _requestQueue = [];
  function removeFromRequestQueue(req) {
    var findIndex = _requestQueue.findIndex(function (item) {
      return item.idx === req.idx;
    });
    _requestQueue.splice(findIndex, 1);
  }
  function resposneHandler(res) {
    removeFromRequestQueue(res.req);
  }
  function request$1(options) {
    return __awaiter(this, void 0, void 0, function () {
      var param, pendingRequest, throttleType, useCache, req, d2, result, r2;
      return __generator(this, function (_a2) {
        switch (_a2.label) {
          case 0:
            param = __assign(__assign({}, options), {
              method: options.method || "GET",
              idx: options.idx || JSON.stringify(options),
              cache: options.cache === void 0 ? false : options.cache,
              noCredentials: options.noCredentials === void 0 ? false : options.noCredentials
            });
            pendingRequest = _requestQueue.find(function (item) {
              return item.idx === param.idx;
            });
            throttleType = options.throttleType || "drop";
            useCache = param.cache && param.method.toLocaleLowerCase() === "get";
            req = superagent(param.method, param.url);
            if (param.jsonp) {
              req = superagent(param.method || "GET", param.url).use(jsonp({
                callbackParam: param.callbackParam || "callback",
                callbackName: param.callbackName || "supercallback",
                timeout: param.jsonpTimeout || 1e4
              }));
            }
            if (!param.noCredentials) {
              req.withCredentials();
            }
            req.timeout(param.timeout || 1e4);
            if (param.method.toLowerCase() === "post" && !param.form) {
              d2 = get$1(param, "data", "");
              if (!d2) {
                param.data = {};
              }
              if (!param.data.csrf) {
                param.data.csrf = getCookie$2("bili_jct");
              }
              req.set("Content-Type", "application/x-www-form-urlencoded");
            }
            if (param.headers) {
              keys$4(param.headers).forEach(function (k2) {
                req.set(k2, param.headers[k2]);
              });
            }
            if (param.query) {
              req.query(param.query);
            }
            if (!param.files) return [3, 1];
            keys$4(param.data).forEach(function (key) {
              req.field(key, param.data[key]);
            });
            keys$4(param.files).forEach(function (key) {
              req.attach(key, param.files[key]);
            });
            return [3, 6];
          case 1:
            if (!useCache) return [3, 5];
            if (!(requestPayload[param.url] || pendingRequest)) return [3, 4];
            if (!(pendingRequest && throttleType)) return [3, 4];
            if (!(throttleType === "abort")) return [3, 2];
            pendingRequest._req.abort();
            removeFromRequestQueue(pendingRequest);
            return [3, 4];
          case 2:
            if (!(throttleType === "drop")) return [3, 4];
            result = requestPayload[param.url] || pendingRequest._req;
            return [4, result];
          case 3:
            r2 = _a2.sent();
            return [2, r2.body || r2];
          case 4:
            req.send(param.data);
            if (throttleType) {
              req.idx = param.idx;
              _requestQueue.push({
                idx: param.idx,
                _req: req
              });
            }
            _a2.label = 5;
          case 5:
            req.send(param.data);
            _a2.label = 6;
          case 6:
            return [2, req.then(function (res) {
              if (param.customResolve) {
                return param.customResolve(res);
              }
              var body2 = res.body;
              if (useCache) {
                requestPayload[param.url] = body2;
              }
              if (!body2.code) {
                return Promise.resolve(body2);
              }
              if (+body2.code !== 0) {
                return Promise.reject(body2);
              }
              resposneHandler(res);
              return Promise.resolve(body2);
            }).catch(function (error) {
              return Promise.reject(error);
            })];
        }
      });
    });
  }
  var u$1 = navigator.userAgent;
  var biliVersion = (u$1.match(/BiliApp\/([^ ]*)/) || [])[1] || "0";
  var isMobile = /Phone|Android|iPhone|iPad|PlayBook|Mobile|Tablet/.test(u$1);
  var isPC = !isMobile;
  var isApp = u$1.indexOf("Bili") > -1;
  var isUat = window.location.href.indexOf("uat") >= 0;
  window.location.href.indexOf("preview") > -1;
  biliVersion.length > 4 ? Number(biliVersion.toString().substr(0, 4)) : Number(biliVersion);
  function openQuickLogin() {
    var script = document.createElement("script");
    script.src = "//".concat(isUat ? "uat-" : "", "s1.hdslb.com/bfs/seed/jinkela/short/mini-login/miniLogin.umd.min.js");
    script.onload = function () {
      var miniLogin = new window.MiniLogin();
      miniLogin.showComponent();
      miniLogin.addEventListener("success", function () {
        window.location.reload();
      });
    };
    document.body.appendChild(script);
  }
  if (isApp) {
    N$1();
  }
  _$1.callNative({
    method: "global.import",
    data: {
      namespace: "auth"
    }
  });
  function jumpLogin(_a2) {
    return new Promise(function (resolve, reject) {
      if (!isMobile) {
        openQuickLogin();
        return;
      }
      if (isApp && window.biliapp) {
        _$1.callNative({
          method: "auth.login",
          data: {
            type: "default"
          },
          onLogin: function (data2) {
            console.log("onLoginCallback", data2);
            if (data2) {
              if (data2.state === 0) {
                reject({
                  reason: "cancel"
                });
              } else {
                resolve(data2);
              }
            } else {
              reject();
            }
          },
          callback: function () {
            console.log("调起登陆窗口");
          }
        });
      } else {
        location.href = "https://".concat(isUat ? "uat-" : "", "passport.bilibili.com/login?gourl=").concat(encodeURIComponent(location.href));
      }
    });
  }
  var bundle = {
    exports: {}
  };
  (function (module2, exports2) {
    (function (global2, factory) {
      factory(exports2);
    })(commonjsGlobal, function (exports3) {
      function isMobileSafari() {
        var ua2 = navigator.userAgent;
        var isIos = / OS \d/.test(ua2);
        var notChrome = !~ua2.indexOf("CriOS");
        var notMozilla = !ua2.indexOf("Mozilla");
        var isSafari2 = /Safari\/[\d\.]+$/.test(ua2);
        return isIos && notChrome && notMozilla && isSafari2;
      }
      var getBrowserVersion = function getBrowserVersion2() {
        var ua2 = navigator.userAgent;
        return {
          baiduspider: /Baiduspider/.test(ua2),
          QQLive: /QQLive/i.test(ua2),
          mqq: /QQ\/([\d\.]+)/i.test(ua2),
          //是否为手机QQ
          weibo: /Weibo/i.test(ua2),
          //是否为微博
          MicroMessenger: /MicroMessenger/i.test(ua2),
          //是否为微信
          mbaidu: /baiduboxapp/i.test(ua2),
          //是否为手机百度
          iqiyi: /iqiyi/i.test(ua2),
          qq: /MQQBrowser/i.test(ua2),
          //是否为QQ浏览器
          mobile: /AppleWebKit.*Mobile.*/i.test(ua2),
          //是否为移动终端
          uc: /UCBrowser/i.test(ua2),
          //是否为UC
          xiaomiqjs: /MiuiQuickSearchBox/.test(ua2),
          dianping: /dianping/.test(ua2),
          ios: /\(i[^;]+;( U;)? CPU.+Mac OS X/i.test(ua2),
          //ios终端
          android: /Android/i.test(ua2) || /Linux/i.test(ua2),
          //android终端或者uc浏览器
          windowsphone: /Windows Phone/i.test(ua2),
          //Windows Phone
          iPhone: /iPhone/i.test(ua2),
          //是否为iPhone或者QQHD浏览器
          iPad: /iPad/i.test(ua2),
          //是否iPad
          webApp: !/Safari/i.test(ua2),
          //是否web应该程序，没有头部与底部
          baidu: /Baidu/i.test(ua2),
          //是否为百度浏览器
          Safari: isMobileSafari(),
          Youku: /youku/i.test(ua2),
          chrome: /CriOS/i.test(ua2),
          CMDC: /CMDC/i.test(ua2),
          BiliApp: /BiliApp/i.test(ua2),
          Mac: /Macintosh/.test(ua2)
        };
      };
      var customReport = function customReport2(name, ops) {
        if (window.reportConfig && window[reportConfig["msgObjects"]]) {
          var reportObj = window[reportConfig["msgObjects"]];
          var obj = ops ? ops : name;
          reportObj[name] = obj;
        }
        if (window.reportObserver) {
          window.reportObserver.forceCommit();
        }
      };
      var ajax = function ajax2(url2, callback) {
        var req = new XMLHttpRequest();
        req.onreadystatechange = function (e2) {
          if (this.readyState === 4 && this.status === 200) {
            var data2 = JSON.parse(this.response);
            callback(data2);
          }
        };
        req.onerror = function () {};
        req.ontimeout = function () {};
        req.open("GET", url2);
        req.send();
      };
      var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
      function getDownloadLink(schema, directDownload, delayDownload, extra, wxDownloadKey) {
        var browser = getBrowserVersion();
        if (browser.MicroMessenger) {
          var keyMap = {
            share_source_weixinchat: "CK1463338442777",
            share_source_weixin_moments: "CK1463338350392",
            share_source_more: "CK1463338994314",
            share_source_copy_link: "CK1474482145968",
            wechat: "CK1385399615180"
          };
          if ((typeof wxDownloadKey === "undefined" ? "undefined" : _typeof2(wxDownloadKey)) === "object") {
            for (var i2 in wxDownloadKey) {
              keyMap[i2] = wxDownloadKey[i2];
            }
          }
          var ckey = keyMap[window.bsource] || "CK1389719810898";
          if (window.bsource === "app_bili") {
            return "//a.app.qq.com/o/simple.jsp?pkgname=tv.danmaku.bili&ckey=" + ckey;
          } else if (browser.android) {
            var downloadLink = "//a.app.qq.com/o/simple.jsp?pkgname=tv.danmaku.bili&ckey=" + ckey;
            var realSchema = schema.indexOf("?") > 0 ? schema + "&" + extra : schema + "?" + extra;
            return downloadLink + "&android_schema=" + encodeURIComponent(realSchema);
          } else {
            return "//a.app.qq.com/o/simple.jsp?pkgname=tv.danmaku.bili&ckey=" + ckey;
          }
        }
        if (browser.android) {
          var href = "//dl.hdslb.com/mobile/latest/iBiliPlayer-bilih5.apk";
          if (window.isOverSea) {
            href = "https://dl.hdslb.com/mobile/upload/iBiliPlayer-internation-default.apk";
          }
          if (browser.weibo || window.WeiboJSBridge || window.WebViewJavascriptBridge || window.__WeiboJSBridge) {
            href = "https://dl.hdslb.com/mobile/latest/iBiliPlayer-html5_weibo.apk";
          }
          if (browser.baidu || window.bd_searchbox_interface || window.bdbox_android_common) {
            href = "https://dl.hdslb.com/mobile/latest/iBiliPlayer-html5_bdbox.apk";
          }
          if ((browser.uc || window.ucbrowser || window.ucapi) && document.referrer && document.referrer.indexOf("tv.uc.cn") >= 0) {
            href = "https://dl.hdslb.com/mobile/latest/iBiliPlayer-html5_uc_video.apk";
          }
          if (window.bsource) {
            href = "https://dl.hdslb.com/mobile/latest/iBiliPlayer-html5_" + window.bsource + ".apk";
          }
          if (!directDownload && !delayDownload) {
            href = "https://d.bilibili.com/download_app.html?download_url=" + encodeURIComponent(href) + "&schema=" + encodeURIComponent(schema);
          }
          var timestamp = (/* @__PURE__ */new Date()).getTime();
          if (/.apk$/g.test(href)) {
            return href + "?key=" + timestamp;
          }
          return href;
        }
        if (browser.ios || browser.Mac) {
          var _href = "https://itunes.apple.com/cn/app/bi-li-bi-li-dong-hua/id736536022";
          if (browser.weibo || browser.chrome) {
            _href = "https://itunes.apple.com/cn/app/id736536022?mt=8#id1047562725";
          }
          if (!directDownload) {
            return "https://d.bilibili.com/download_app.html?download_url=" + encodeURIComponent(_href) + "&schema=" + encodeURIComponent(schema);
          }
          return _href;
        }
        if (browser.windowsphone) {
          return "https://www.windowsphone.com/zh-cn/store/purchase/validate?app=75620dee-4a7a-4dae-8677-0d930e05f57e&apptype=regular&offer=3869edb1-e34c-469a-af6e-2c8a7856cb61";
        }
      }
      function openAppLink(redirectLink, downloadLink, autoDownload, delayDownload) {
        if (!redirectLink || !downloadLink) {
          return;
        }
        if (delayDownload) {
          if (autoDownload) {
            setTimeout(function () {
              if (!document.hidden) {
                location.href = downloadLink;
              }
            }, 2e3);
          }
          location.href = redirectLink;
        } else {
          if (autoDownload) {
            setTimeout(function () {
              location.href = downloadLink;
            }, 500);
          }
          location.href = redirectLink;
        }
      }
      var openApp = function openApp2(options) {
        options = options || {};
        var _options = options,
          schema = _options.schema,
          universalLink = _options.universalLink,
          autoDownload = _options.autoDownload,
          onlySchema = _options.onlySchema,
          directDownload = _options.directDownload,
          delayDownload = _options.delayDownload,
          downloadUrl = _options.downloadUrl,
          extra = _options.extra,
          wxDownloadKey = _options.wxDownloadKey;
        if (typeof autoDownload === "undefined") {
          autoDownload = true;
        }
        extra = extra || "";
        schema = schema || "bilibili://rank";
        universalLink = universalLink || "https://m.bilibili.com/index.html";
        var browser = getBrowserVersion();
        if (browser.BiliApp) {
          location.href = schema;
          return;
        }
        var downloadLink = downloadUrl || getDownloadLink(schema, directDownload, delayDownload, extra, wxDownloadKey);
        if (downloadLink.indexOf(".apk") > 0 || downloadLink.indexOf("d.bilibili.com") > 0 || downloadLink.indexOf("app.qq.com") > 0) {
          customReport("request_download", 1);
        }
        if (browser.android && browser.MicroMessenger) {
          location.href = downloadLink;
          return;
        }
        var needJumpMiddlePage = browser.weibo || browser.qq || browser.wechat || window.bsource === "xxqg1";
        if ((browser.ios || needJumpMiddlePage || browser.Mac) && !onlySchema && !directDownload) {
          location.href = "https://d.bilibili.com/download_app.html?preUrl=" + encodeURIComponent(universalLink) + "&schema=" + encodeURIComponent(schema) + "&" + extra;
          return;
        }
        var realSchema = schema.indexOf("?") > 0 ? schema + "&" + extra : schema + "?" + extra;
        openAppLink(realSchema, downloadLink, autoDownload, delayDownload);
      };
      var judgeOverSea = function judgeOverSea2() {
        ajax("//api.bilibili.com/x/web-interface/zone?jsonp=jsonp", function (data2) {
          if (data2.code === 0 && data2.data && data2.data.country && data2.data.country !== "中国") {
            window.isOverSea = true;
          }
        });
      };
      var createOpenAppBtn = function createOpenAppBtn2(options) {
        var el = options.el,
          onClick = options.onClick,
          onWxLaunch = options.onWxLaunch,
          onWxError = options.onWxError,
          schema = options.schema,
          extra = options.extra;
        if (!el instanceof HTMLElement) {
          return;
        }
        var browser = getBrowserVersion();
        if (browser.MicroMessenger) {
          var realSchema = schema.indexOf("?") > 0 ? schema + "&" + extra : schema + "?" + extra;
          var container = document.createElement("div");
          container.className = "wx-open-app";
          container.innerHTML = '<wx-open-launch-app\n      appid="' + options.appid + '"\n      extinfo="' + realSchema + '"\n      class="wx-open-app-btn"\n    >\n      <script type="text/wxtag-template">\n        <style>\n          .template {\n            width: 100%;\n            height: 100%;\n          }\n        </style>\n        <div class="template"><br><br><br><br><br><br><br><br><br><br><br><br></div>\n      <\/script>\n    </wx-open-launch-app>';
          el.appendChild(container);
          var wxBtn = container.querySelector(".wx-open-app-btn");
          wxBtn.addEventListener("launch", function (e2) {
            if (typeof onWxLaunch === "function") {
              onWxLaunch(e2);
            }
          });
          wxBtn.addEventListener("error", function (e2) {
            if (typeof onWxError === "function") {
              onWxError(e2);
            }
            openApp(options);
          });
          return;
        }
        el.addEventListener("click", function (e2) {
          if (typeof onClick === "function") {
            onClick(e2);
          }
          openApp(options);
        });
      };
      var init = function init2() {
        var style = document.createElement("style");
        style.innerHTML = "\n    .wx-open-app, .wx-open-app-btn {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 20;\n      overflow: hidden;\n    }\n  ";
        document.body.appendChild(style);
      };
      exports3.createOpenAppBtn = createOpenAppBtn;
      exports3.init = init;
      exports3.judgeOverSea = judgeOverSea;
      exports3.openApp = openApp;
      Object.defineProperty(exports3, "__esModule", {
        value: true
      });
    });
  })(bundle, bundle.exports);
  var getUserInfo = function () {
    return new Promise(function (resolve, reject) {
      if (f$2) {
        _$1.callNative({
          method: "auth.getUserInfo",
          data: {
            type: "default"
          },
          callback: function (userInfo) {
            try {
              if (userInfo.state.toString() === "0") {
                resolve(null);
                return;
              }
              resolve({
                mid: userInfo.mid,
                avatar: userInfo.face,
                nickname: userInfo.userName
              });
            } catch (e2) {
              reject(userInfo);
            }
          }
        });
      } else {
        request$1({
          url: "https://api.bilibili.com/x/web-interface/nav",
          method: "GET"
        }).then(function (res) {
          if (res.code) {
            reject(res);
            return;
          }
          if (!res.data.isLogin) {
            resolve(null);
            return;
          }
          resolve({
            mid: res.data.mid,
            avatar: res.data.face,
            nickname: res.data.uname
          });
        }).catch(reject);
      }
    });
  };
  var ListCache$2 = _ListCache;
  function stackClear$1() {
    this.__data__ = new ListCache$2();
    this.size = 0;
  }
  var _stackClear = stackClear$1;
  function stackDelete$1(key) {
    var data2 = this.__data__,
      result = data2["delete"](key);
    this.size = data2.size;
    return result;
  }
  var _stackDelete = stackDelete$1;
  function stackGet$1(key) {
    return this.__data__.get(key);
  }
  var _stackGet = stackGet$1;
  function stackHas$1(key) {
    return this.__data__.has(key);
  }
  var _stackHas = stackHas$1;
  var ListCache$1 = _ListCache,
    Map$2 = _Map,
    MapCache = _MapCache;
  var LARGE_ARRAY_SIZE = 200;
  function stackSet$1(key, value2) {
    var data2 = this.__data__;
    if (data2 instanceof ListCache$1) {
      var pairs = data2.__data__;
      if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value2]);
        this.size = ++data2.size;
        return this;
      }
      data2 = this.__data__ = new MapCache(pairs);
    }
    data2.set(key, value2);
    this.size = data2.size;
    return this;
  }
  var _stackSet = stackSet$1;
  var ListCache = _ListCache,
    stackClear = _stackClear,
    stackDelete = _stackDelete,
    stackGet = _stackGet,
    stackHas = _stackHas,
    stackSet = _stackSet;
  function Stack$2(entries) {
    var data2 = this.__data__ = new ListCache(entries);
    this.size = data2.size;
  }
  Stack$2.prototype.clear = stackClear;
  Stack$2.prototype["delete"] = stackDelete;
  Stack$2.prototype.get = stackGet;
  Stack$2.prototype.has = stackHas;
  Stack$2.prototype.set = stackSet;
  var _Stack = Stack$2;
  var getNative$4 = _getNative;
  var defineProperty$2 = function () {
    try {
      var func = getNative$4(Object, "defineProperty");
      func({}, "", {});
      return func;
    } catch (e2) {}
  }();
  var _defineProperty = defineProperty$2;
  var defineProperty$1 = _defineProperty;
  function baseAssignValue$3(object, key, value2) {
    if (key == "__proto__" && defineProperty$1) {
      defineProperty$1(object, key, {
        "configurable": true,
        "enumerable": true,
        "value": value2,
        "writable": true
      });
    } else {
      object[key] = value2;
    }
  }
  var _baseAssignValue = baseAssignValue$3;
  var baseAssignValue$2 = _baseAssignValue,
    eq$2 = eq_1;
  function assignMergeValue$2(object, key, value2) {
    if (value2 !== void 0 && !eq$2(object[key], value2) || value2 === void 0 && !(key in object)) {
      baseAssignValue$2(object, key, value2);
    }
  }
  var _assignMergeValue = assignMergeValue$2;
  function createBaseFor$1(fromRight) {
    return function (object, iteratee, keysFunc) {
      var index2 = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;
      while (length--) {
        var key = props[fromRight ? length : ++index2];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }
  var _createBaseFor = createBaseFor$1;
  var createBaseFor = _createBaseFor;
  var baseFor$1 = createBaseFor();
  var _baseFor = baseFor$1;
  var _cloneBuffer = {
    exports: {}
  };
  _cloneBuffer.exports;
  (function (module2, exports2) {
    var root2 = _root;
    var freeExports = exports2 && !exports2.nodeType && exports2;
    var freeModule = freeExports && true && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root2.Buffer : void 0,
      allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
    function cloneBuffer2(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module2.exports = cloneBuffer2;
  })(_cloneBuffer, _cloneBuffer.exports);
  var _cloneBufferExports = _cloneBuffer.exports;
  var root$4 = _root;
  var Uint8Array$2 = root$4.Uint8Array;
  var _Uint8Array = Uint8Array$2;
  var Uint8Array$1 = _Uint8Array;
  function cloneArrayBuffer$3(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array$1(result).set(new Uint8Array$1(arrayBuffer));
    return result;
  }
  var _cloneArrayBuffer = cloneArrayBuffer$3;
  var cloneArrayBuffer$2 = _cloneArrayBuffer;
  function cloneTypedArray$2(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer$2(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }
  var _cloneTypedArray = cloneTypedArray$2;
  function copyArray$2(source, array) {
    var index2 = -1,
      length = source.length;
    array || (array = Array(length));
    while (++index2 < length) {
      array[index2] = source[index2];
    }
    return array;
  }
  var _copyArray = copyArray$2;
  var isObject$8 = isObject_1$1;
  var objectCreate = Object.create;
  var baseCreate$1 = function () {
    function object() {}
    return function (proto) {
      if (!isObject$8(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object.prototype = proto;
      var result = new object();
      object.prototype = void 0;
      return result;
    };
  }();
  var _baseCreate = baseCreate$1;
  var overArg = _overArg;
  var getPrototype$3 = overArg(Object.getPrototypeOf, Object);
  var _getPrototype = getPrototype$3;
  var baseCreate = _baseCreate,
    getPrototype$2 = _getPrototype,
    isPrototype$1 = _isPrototype;
  function initCloneObject$2(object) {
    return typeof object.constructor == "function" && !isPrototype$1(object) ? baseCreate(getPrototype$2(object)) : {};
  }
  var _initCloneObject = initCloneObject$2;
  var isArrayLike$2 = isArrayLike_1,
    isObjectLike$3 = isObjectLike_1;
  function isArrayLikeObject$1(value2) {
    return isObjectLike$3(value2) && isArrayLike$2(value2);
  }
  var isArrayLikeObject_1 = isArrayLikeObject$1;
  var baseGetTag$1 = _baseGetTag,
    getPrototype$1 = _getPrototype,
    isObjectLike$2 = isObjectLike_1;
  var objectTag$2 = "[object Object]";
  var funcProto = Function.prototype,
    objectProto$4 = Object.prototype;
  var funcToString = funcProto.toString;
  var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
  var objectCtorString = funcToString.call(Object);
  function isPlainObject$2(value2) {
    if (!isObjectLike$2(value2) || baseGetTag$1(value2) != objectTag$2) {
      return false;
    }
    var proto = getPrototype$1(value2);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty$3.call(proto, "constructor") && proto.constructor;
    return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }
  var isPlainObject_1 = isPlainObject$2;
  function safeGet$2(object, key) {
    if (key === "constructor" && typeof object[key] === "function") {
      return;
    }
    if (key == "__proto__") {
      return;
    }
    return object[key];
  }
  var _safeGet = safeGet$2;
  var baseAssignValue$1 = _baseAssignValue,
    eq$1 = eq_1;
  var objectProto$3 = Object.prototype;
  var hasOwnProperty$2 = objectProto$3.hasOwnProperty;
  function assignValue$3(object, key, value2) {
    var objValue = object[key];
    if (!(hasOwnProperty$2.call(object, key) && eq$1(objValue, value2)) || value2 === void 0 && !(key in object)) {
      baseAssignValue$1(object, key, value2);
    }
  }
  var _assignValue = assignValue$3;
  var assignValue$2 = _assignValue,
    baseAssignValue = _baseAssignValue;
  function copyObject$6(source, props, object, customizer) {
    var isNew = !object;
    object || (object = {});
    var index2 = -1,
      length = props.length;
    while (++index2 < length) {
      var key = props[index2];
      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
      if (newValue === void 0) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue(object, key, newValue);
      } else {
        assignValue$2(object, key, newValue);
      }
    }
    return object;
  }
  var _copyObject = copyObject$6;
  function nativeKeysIn$1(object) {
    var result = [];
    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }
    return result;
  }
  var _nativeKeysIn = nativeKeysIn$1;
  var isObject$7 = isObject_1$1,
    isPrototype = _isPrototype,
    nativeKeysIn = _nativeKeysIn;
  var objectProto$2 = Object.prototype;
  var hasOwnProperty$1 = objectProto$2.hasOwnProperty;
  function baseKeysIn$1(object) {
    if (!isObject$7(object)) {
      return nativeKeysIn(object);
    }
    var isProto = isPrototype(object),
      result = [];
    for (var key in object) {
      if (!(key == "constructor" && (isProto || !hasOwnProperty$1.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }
  var _baseKeysIn = baseKeysIn$1;
  var arrayLikeKeys = _arrayLikeKeys,
    baseKeysIn = _baseKeysIn,
    isArrayLike$1 = isArrayLike_1;
  function keysIn$5(object) {
    return isArrayLike$1(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
  }
  var keysIn_1 = keysIn$5;
  var copyObject$5 = _copyObject,
    keysIn$4 = keysIn_1;
  function toPlainObject$1(value2) {
    return copyObject$5(value2, keysIn$4(value2));
  }
  var toPlainObject_1 = toPlainObject$1;
  var assignMergeValue$1 = _assignMergeValue,
    cloneBuffer$1 = _cloneBufferExports,
    cloneTypedArray$1 = _cloneTypedArray,
    copyArray$1 = _copyArray,
    initCloneObject$1 = _initCloneObject,
    isArguments$2 = isArguments_1,
    isArray$6 = isArray_1,
    isArrayLikeObject = isArrayLikeObject_1,
    isBuffer$1 = isBufferExports,
    isFunction = isFunction_1,
    isObject$6 = isObject_1$1,
    isPlainObject$1 = isPlainObject_1,
    isTypedArray = isTypedArray_1,
    safeGet$1 = _safeGet,
    toPlainObject = toPlainObject_1;
  function baseMergeDeep$1(object, source, key, srcIndex, mergeFunc, customizer, stack) {
    var objValue = safeGet$1(object, key),
      srcValue = safeGet$1(source, key),
      stacked = stack.get(srcValue);
    if (stacked) {
      assignMergeValue$1(object, key, stacked);
      return;
    }
    var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
    var isCommon = newValue === void 0;
    if (isCommon) {
      var isArr = isArray$6(srcValue),
        isBuff = !isArr && isBuffer$1(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
      newValue = srcValue;
      if (isArr || isBuff || isTyped) {
        if (isArray$6(objValue)) {
          newValue = objValue;
        } else if (isArrayLikeObject(objValue)) {
          newValue = copyArray$1(objValue);
        } else if (isBuff) {
          isCommon = false;
          newValue = cloneBuffer$1(srcValue, true);
        } else if (isTyped) {
          isCommon = false;
          newValue = cloneTypedArray$1(srcValue, true);
        } else {
          newValue = [];
        }
      } else if (isPlainObject$1(srcValue) || isArguments$2(srcValue)) {
        newValue = objValue;
        if (isArguments$2(objValue)) {
          newValue = toPlainObject(objValue);
        } else if (!isObject$6(objValue) || isFunction(objValue)) {
          newValue = initCloneObject$1(srcValue);
        }
      } else {
        isCommon = false;
      }
    }
    if (isCommon) {
      stack.set(srcValue, newValue);
      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      stack["delete"](srcValue);
    }
    assignMergeValue$1(object, key, newValue);
  }
  var _baseMergeDeep = baseMergeDeep$1;
  var Stack$1 = _Stack,
    assignMergeValue = _assignMergeValue,
    baseFor = _baseFor,
    baseMergeDeep = _baseMergeDeep,
    isObject$5 = isObject_1$1,
    keysIn$3 = keysIn_1,
    safeGet = _safeGet;
  function baseMerge$1(object, source, srcIndex, customizer, stack) {
    if (object === source) {
      return;
    }
    baseFor(source, function (srcValue, key) {
      stack || (stack = new Stack$1());
      if (isObject$5(srcValue)) {
        baseMergeDeep(object, source, key, srcIndex, baseMerge$1, customizer, stack);
      } else {
        var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
        if (newValue === void 0) {
          newValue = srcValue;
        }
        assignMergeValue(object, key, newValue);
      }
    }, keysIn$3);
  }
  var _baseMerge = baseMerge$1;
  function identity$2(value2) {
    return value2;
  }
  var identity_1 = identity$2;
  function apply$1(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }
  var _apply = apply$1;
  var apply = _apply;
  var nativeMax = Math.max;
  function overRest$2(func, start, transform2) {
    start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
    return function () {
      var args = arguments,
        index2 = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);
      while (++index2 < length) {
        array[index2] = args[start + index2];
      }
      index2 = -1;
      var otherArgs = Array(start + 1);
      while (++index2 < start) {
        otherArgs[index2] = args[index2];
      }
      otherArgs[start] = transform2(array);
      return apply(func, this, otherArgs);
    };
  }
  var _overRest = overRest$2;
  function constant$1(value2) {
    return function () {
      return value2;
    };
  }
  var constant_1 = constant$1;
  var constant = constant_1,
    defineProperty = _defineProperty,
    identity$1 = identity_1;
  var baseSetToString$1 = !defineProperty ? identity$1 : function (func, string) {
    return defineProperty(func, "toString", {
      "configurable": true,
      "enumerable": false,
      "value": constant(string),
      "writable": true
    });
  };
  var _baseSetToString = baseSetToString$1;
  var HOT_COUNT = 800,
    HOT_SPAN = 16;
  var nativeNow = Date.now;
  function shortOut$1(func) {
    var count = 0,
      lastCalled = 0;
    return function () {
      var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);
      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(void 0, arguments);
    };
  }
  var _shortOut = shortOut$1;
  var baseSetToString = _baseSetToString,
    shortOut = _shortOut;
  var setToString$2 = shortOut(baseSetToString);
  var _setToString = setToString$2;
  var identity = identity_1,
    overRest$1 = _overRest,
    setToString$1 = _setToString;
  function baseRest$1(func, start) {
    return setToString$1(overRest$1(func, start, identity), func + "");
  }
  var _baseRest = baseRest$1;
  var eq = eq_1,
    isArrayLike = isArrayLike_1,
    isIndex$2 = _isIndex,
    isObject$4 = isObject_1$1;
  function isIterateeCall$1(value2, index2, object) {
    if (!isObject$4(object)) {
      return false;
    }
    var type = typeof index2;
    if (type == "number" ? isArrayLike(object) && isIndex$2(index2, object.length) : type == "string" && index2 in object) {
      return eq(object[index2], value2);
    }
    return false;
  }
  var _isIterateeCall = isIterateeCall$1;
  var baseRest = _baseRest,
    isIterateeCall = _isIterateeCall;
  function createAssigner$1(assigner) {
    return baseRest(function (object, sources) {
      var index2 = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : void 0,
        guard = length > 2 ? sources[2] : void 0;
      customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length < 3 ? void 0 : customizer;
        length = 1;
      }
      object = Object(object);
      while (++index2 < length) {
        var source = sources[index2];
        if (source) {
          assigner(object, source, index2, customizer);
        }
      }
      return object;
    });
  }
  var _createAssigner = createAssigner$1;
  var baseMerge = _baseMerge,
    createAssigner = _createAssigner;
  createAssigner(function (object, source, srcIndex, customizer) {
    baseMerge(object, source, srcIndex, customizer);
  });
  const _HttpSvcMiddleware = class _HttpSvcMiddleware {
    constructor(handlerOrConfig) {
      __publicField(this, "whitelist", []);
      __publicField(this, "blacklist", []);
      __publicField(this, "handler", () => Promise.resolve("Please set a handler for middleware"));
      let handler;
      let payload;
      if (typeof handlerOrConfig === "function") {
        handler = handlerOrConfig;
      } else {
        this.whitelist = (handlerOrConfig == null ? void 0 : handlerOrConfig.whitelist) || [];
        this.blacklist = (handlerOrConfig == null ? void 0 : handlerOrConfig.blacklist) || [];
        handler = handlerOrConfig == null ? void 0 : handlerOrConfig.handler;
        if (handlerOrConfig == null ? void 0 : handlerOrConfig.payload) payload = handlerOrConfig.payload;
      }
      this.handler = async (ctx, next, config) => {
        if ((config == null ? void 0 : config.disabled) !== true) {
          const url2 = ctx.config.url;
          if (this.whitelist.length) {
            if (!this.match(url2, this.whitelist)) return await next();
          } else if (this.blacklist.length) {
            if (this.match(url2, this.blacklist)) return await next();
          }
        } else {
          return await next();
        }
        return await (handler || this.handler).bind(this)(ctx, next, _HttpSvcMiddleware.mergeConfig(config, payload));
      };
    }
    match(item, list) {
      let matched = false;
      for (let i2 = 0; i2 < list.length; i2++) {
        if (item.indexOf(list[i2]) > -1) {
          matched = true;
          break;
        }
      }
      return matched;
    }
  };
  __publicField(_HttpSvcMiddleware, "handler");
  __publicField(_HttpSvcMiddleware, "mergeConfig", (config, payload) => {
    return {
      ...(config || {}),
      payload: {
        ...((config == null ? void 0 : config.payload) || {}),
        ...(payload || {})
      }
    };
  });
  let HttpSvcMiddleware = _HttpSvcMiddleware;
  const getBuiltInMiddlewareName = name => `BUILT_IN_${name}`;
  const createError = (ctx, message) => {
    var _a2;
    const error = new Error(message || `Request Error: ${((_a2 = ctx.response) == null ? void 0 : _a2.status) || "unknow status"}`);
    error.config = ctx.request;
    if (ctx.response) {
      error.response = ctx.response;
      if (!ctx.response.ok) {
        error.code = ctx.response.status;
      }
    }
    return error;
  };
  const isMiddleware = middleware => {
    if (middleware.name && middleware.handler) return true;
    return false;
  };
  const isNode = typeof window === "undefined";
  const isArray$5 = val2 => toString.call(val2) === "[object Array]";
  const isObject$3 = val2 => val2 !== null && typeof val2 === "object";
  const isRecordObj$1 = obj => Object.prototype.toString.call(obj) === "[object Object]";
  const isFormData$1 = val2 => typeof FormData !== "undefined" && val2 instanceof FormData;
  const isDate$1 = val2 => toString.call(val2) === "[object Date]";
  const encodeParams = val2 => {
    return encodeURIComponent(val2).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  };
  const buildURL$1 = (url2, params) => {
    const parts = [];
    Object.keys(params).forEach(key => {
      let val2 = params[key];
      if (val2 === null || typeof val2 === "undefined") {
        return;
      }
      if (isArray$5(val2)) {
        key = key + "[]";
      } else {
        val2 = [val2];
      }
      val2.forEach(v2 => {
        if (isDate$1(v2)) {
          v2 = v2.toString();
        } else if (isObject$3(v2)) {
          v2 = JSON.stringify(v2);
        }
        parts.push(encodeParams(key) + "=" + encodeParams(v2));
      });
    });
    const serializedParams = parts.join("&");
    if (serializedParams) {
      const hashMarkIndex = url2.indexOf("#");
      if (hashMarkIndex !== -1) {
        url2 = url2.slice(0, hashMarkIndex);
      }
      url2 += (url2.indexOf("?") === -1 ? "?" : "&") + serializedParams;
    }
    return url2;
  };
  const parseUrl = url2 => {
    const [u2, s2] = url2.split("?");
    if (s2) {
      const searchParams = s2.split("&");
      if (searchParams.length) {
        const params = {};
        for (const searchParam of searchParams) {
          const [key, value2] = searchParam.split("=");
          if (key && typeof value2 !== "undefined") {
            if (typeof value2 === "string") {
              params[key] = decodeURIComponent(value2);
            } else {
              params[key] = value2;
            }
          }
        }
        return {
          url: u2,
          params
        };
      }
    }
    return {
      url: url2
    };
  };
  const formatString = input => {
    let afterFormat = "";
    for (let i2 = 0; i2 < input.length; i2++) {
      afterFormat += String.fromCharCode(input.charCodeAt(i2) - 1);
    }
    return afterFormat;
  };
  const CONTENT_TYPE_KEY$1 = "Content-Type";
  const getContentType$1 = headers => (headers == null ? void 0 : headers[CONTENT_TYPE_KEY$1]) || (headers == null ? void 0 : headers["content-type"]);
  const setContentType = (headers, contentType) => {
    if (!contentType) return;
    headers[CONTENT_TYPE_KEY$1] = contentType;
  };
  const initCtx = async function (ctx, next) {
    if (!ctx.request) return next();
    const {
      baseURL,
      headers,
      params,
      data: data2,
      credentials = "include"
    } = ctx.config;
    let url2 = ctx.config.url;
    const method = ctx.request.method;
    const {
      url: originUrl,
      params: originParams
    } = parseUrl(url2);
    if (originParams) {
      url2 = ctx.request.url = originUrl;
      ctx.request.params = {
        ...originParams,
        ...(params || {})
      };
    } else {
      ctx.request.url = url2;
      ctx.request.params = {
        ...(params || {})
      };
    }
    if (baseURL && /^(https?:)?\/\//.test(url2) === false) {
      ctx.request.url = `${baseURL}${url2}`;
    }
    ctx.request.headers = {
      ...(headers || {})
    };
    if (method === "POST" || method === "PUT") {
      if (data2) {
        if (typeof data2 === "object") {
          if (typeof FormData !== "undefined" && data2 instanceof FormData) {
            const form = new FormData();
            for (const [key, value2] of data2.entries()) {
              form.append(key, value2);
            }
            ctx.request.data = form;
          } else if (Object.keys(data2)) {
            ctx.request.data = JSON.parse(JSON.stringify(data2));
          }
        } else {
          ctx.request.data = data2;
        }
      }
    }
    ctx.request.credentials = credentials;
    return await next();
  };
  class HttpSvcInitCtx extends HttpSvcMiddleware {
    constructor() {
      super(...arguments);
      __publicField(this, "handler", initCtx);
      __publicField(this, "name", getBuiltInMiddlewareName("INIT_CTX"));
    }
  }
  __publicField(HttpSvcInitCtx, "handler", initCtx);
  var BUTILS_CACHE = "__butils_cache";
  var CACHED_STYLES = "__butils_styles";
  var CACHED_SCRIPTS = "__butils_scripts";
  var DAY_TIME = 864e5;
  var RE_URL = /^(https?:)?(\/\/)?(((25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(25[0-5]|2[0-4]\d|[01]?\d\d?)|([0-9a-z_!~*'()-]+\.)*([0-9a-z][0-9a-z-]{0,61})?[0-9a-z]\.[a-z]{2,6})(:[0-9]{1-6})?([-0-9a-zA-Z+&@#/%=~_|?!:,.;]*)?$/;
  function isUrl(value2) {
    return RE_URL.test(value2);
  }
  function isStr(value2) {
    return typeof value2 === "string";
  }
  function isNum(value2, isLoose) {
    var isNumType = typeof value2 === "number";
    if (isLoose) return isNumType;
    return isNumType && !Number.isNaN(value2) && Number.isFinite(value2);
  }
  function getStringHash(string) {
    var hash = 0;
    var i2 = -1;
    var _char;
    if (string.length === 0) return hash;
    while (++i2 < string.length) {
      _char = string.charCodeAt(i2);
      hash = (hash << 5) - hash + _char;
      hash |= 0;
    }
    return Math.abs(hash) * 10 + string.length % 10;
  }
  function getCookie$1(key, options) {
    if (!options) options = {};
    var isNoDecode = options.decode === false;
    var template = options.template || document.cookie;
    var decodedCookie = isNoDecode ? template : decodeURIComponent(template);
    var cookieItems = {};
    var cookies2 = decodedCookie.split(";");
    var isGetAll = key === true;
    for (var i2 = 0; i2 < cookies2.length; i2++) {
      var cookie2 = cookies2[i2];
      while (cookie2.charAt(0) === " ") {
        cookie2 = cookie2.substring(1);
      }
      var keyVal = cookie2.split("=");
      var name = keyVal[0];
      var value2 = keyVal[1];
      cookieItems[name] = value2;
      if (key === name) return cookieItems[key];
    }
    return isGetAll ? cookieItems : "";
  }
  function setCookie(key, value2, options) {
    var expires = "",
      exTime = 0;
    options = options || {};
    if (options.encode !== false) {
      value2 = encodeURIComponent(value2);
    }
    if (isNum(options.exMinuts)) {
      exTime += options.exMinuts * 6e4;
    }
    if (isNum(options.exDays)) {
      exTime += options.exDays * DAY_TIME;
    }
    if (exTime) {
      var date = /* @__PURE__ */new Date();
      date.setTime(date.getTime() + exTime);
      expires = ";expires=".concat(date.toUTCString());
    }
    var domain2 = isStr(options.domain) ? ";domain=".concat(options.domain) : "";
    document.cookie = "".concat(key, "=").concat(value2).concat(expires, ";path=/").concat(domain2);
  }
  function getCache(key) {
    var caches = window[BUTILS_CACHE] || {};
    if (caches.hasOwnProperty(key)) {
      return caches[key];
    }
    return null;
  }
  function setCache(key, value2) {
    var caches = window[BUTILS_CACHE] || {};
    window[BUTILS_CACHE] = caches;
    caches[key] = value2;
  }
  function cachedStyleOrScript(cacheId, reload, isStyle) {
    return new Promise(function (resolve) {
      reload = reload !== false;
      var cacheKey = isStyle ? CACHED_STYLES : CACHED_SCRIPTS;
      var caches = getCache(cacheKey) || [];
      if (!reload && caches.indexOf(cacheId) > -1) {
        return resolve(true);
      }
      var el = document.querySelector("#".concat(cacheId));
      if (el) el.parentNode.removeChild(el);
      caches = caches.filter(function (item) {
        return item !== cacheId;
      });
      caches.push(cacheId);
      setCache(cacheKey, caches);
      return resolve(false);
    });
  }
  function loadScript(src, reload) {
    return new Promise(function (resolve, reject) {
      if (!isUrl(src)) return reject(new Error("src不是一个正确的url地址！"));
      var scriptId = "bs_url_".concat(getStringHash(src));
      cachedStyleOrScript(scriptId, reload, false).then(function (cached) {
        if (cached) return resolve();
        var scriptEl = document.createElement("script");
        scriptEl.id = scriptId;
        scriptEl.type = "text/JavaScript";
        scriptEl.src = src;
        scriptEl.onload = function () {
          return resolve();
        };
        scriptEl.onreadystatechange = function () {
          if (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") {
            resolve();
          }
        };
        document.querySelector("head").appendChild(scriptEl);
      });
    }).then();
  }
  const timeout = async function (ctx, next) {
    let ms = ctx.config.timeout;
    if (!isNum(ctx.config.timeout)) {
      ms = isNode ? 350 : 1e4;
    }
    if (!ctx.abortController && ms && typeof AbortController !== "undefined") {
      const abortController = new AbortController();
      ctx.abortController = abortController;
      ctx.timeoutId = setTimeout(() => {
        abortController.abort();
      }, ms);
      await next();
      clearTimeout(ctx.timeoutId);
    } else {
      await next();
    }
  };
  class HttpSvcTimeout extends HttpSvcMiddleware {
    constructor() {
      super(timeout);
      __publicField(this, "name", getBuiltInMiddlewareName("TIMEOUT"));
    }
  }
  __publicField(HttpSvcTimeout, "handler", timeout);
  var ContentType$1 = /* @__PURE__ */(ContentType2 => {
    ContentType2["JSON"] = "application/json";
    ContentType2["Form"] = "application/x-www-form-urlencoded";
    ContentType2["FormData"] = "multipart/form-data";
    return ContentType2;
  })(ContentType$1 || {});
  const isEqualContentType$1 = (target, current) => {
    if (!current) return false;
    return current.indexOf(target) > -1;
  };
  const jsonBody$1 = (ctx, data2, contentType) => {
    if (!ctx.request) return;
    ctx.request.data = JSON.stringify(data2);
    if (!ctx.request.headers) {
      const headers = {};
      setContentType(headers, "application/json"
      /* JSON */);
      ctx.request.headers = headers;
    } else if (!contentType) {
      setContentType(ctx.request.headers, "application/json"
      /* JSON */);
    }
  };
  const body$1 = async function (ctx, next, config) {
    var _a2;
    if (!ctx.request) return next();
    const {
      method,
      params,
      headers
    } = ctx.request;
    ctx.request.url = buildURL$1(ctx.request.url, params || {});
    if (method === "POST" || method === "PUT") {
      const isContinue = Object.prototype.toString.call(ctx.request.data) !== "[object Object]";
      if (!isContinue) {
        const contentType = getContentType$1(headers);
        const data2 = ctx.request.data;
        if ((_a2 = config == null ? void 0 : config.payload) == null ? void 0 : _a2.stringify) {
          jsonBody$1(ctx, data2, contentType);
          return await next();
        }
        if (isEqualContentType$1("application/x-www-form-urlencoded", contentType)) {
          ctx.request.data = buildURL$1("", data2).slice(1);
        }
        if (isEqualContentType$1("application/json", contentType || "application/json"
        /* JSON */)) {
          jsonBody$1(ctx, data2, contentType);
        }
        if (isEqualContentType$1("multipart/form-data", contentType)) {
          const keys2 = Object.keys(data2);
          if (keys2.length) {
            ctx.request.data = keys2.reduce((form, key) => {
              form.append(key, data2[key]);
              return form;
            }, new FormData());
          }
        }
      }
    }
    return await next();
  };
  let HttpSvcBody$1 = (_a = class extends HttpSvcMiddleware {
    constructor() {
      super(body$1);
      __publicField(this, "name", getBuiltInMiddlewareName("BODY"));
    }
  }, __publicField(_a, "handler", body$1), _a);
  const csrf$1 = async function (ctx, next, config) {
    if (!ctx.request) return next();
    const {
      method,
      data: data2,
      headers
    } = ctx.request;
    const payload = (config == null ? void 0 : config.payload) || {};
    let csrf2 = "";
    let csrfGetted = false;
    const getCsrf = () => {
      if (csrf2 || csrfGetted) return;
      try {
        if (!isNode) {
          csrf2 = getCookie$1("bili_jct", {
            decode: false
          });
        } else {
          csrf2 = getCookie$1("bili_jct", {
            template: (headers == null ? void 0 : headers["cookie"]) || (headers == null ? void 0 : headers["Cookie"]) || "_",
            decode: false
          });
        }
        csrfGetted = true;
      } catch (error) {
        if (!isNode) {
          console.warn(error);
        }
      }
    };
    const key = payload.key || "csrf";
    const setCsrf = pos => {
      getCsrf();
      if (!csrf2 || !ctx.request) return;
      if (pos === "params") {
        if (!ctx.request.params) {
          ctx.request.params = {
            [key]: csrf2
          };
        } else {
          ctx.request.params[key] = csrf2;
        }
        return;
      }
      if (!data2) {
        return;
      }
      switch (true) {
        case isFormData$1(data2):
          data2.append(key, csrf2);
          break;
        case isRecordObj$1(data2):
          data2[key] = csrf2;
          break;
      }
    };
    if (method === "GET") {
      if (payload.params === true) {
        setCsrf("params");
      }
    } else if (method === "POST" || method === "PUT") {
      const contentType = getContentType$1(headers) || "";
      if (typeof payload.data === "undefined" && typeof payload.params === "undefined") {
        if (!contentType) {
          if (typeof data2 === "undefined" || isRecordObj$1(data2)) {
            setCsrf("params");
          } else {
            setCsrf("data");
          }
        } else if (isEqualContentType$1(ContentType$1.JSON, contentType)) {
          setCsrf("params");
        } else {
          setCsrf("data");
        }
      } else {
        if (payload.params) {
          setCsrf("params");
        }
        if (payload.data) {
          if (typeof data2 === "undefined") {
            if (isEqualContentType$1(ContentType$1.FormData, contentType)) {
              ctx.request.data = new FormData();
            } else {
              ctx.request.data = {};
            }
          }
          setCsrf("data");
        }
      }
    }
    return await next();
  };
  let HttpSvcCsrf$1 = (_b = class extends HttpSvcMiddleware {
    constructor() {
      super(csrf$1);
      __publicField(this, "name", getBuiltInMiddlewareName("CSRF"));
    }
  }, __publicField(_b, "handler", csrf$1), _b);
  const fetch$2 = async (ctx, next) => {
    var _a2;
    if (isNode) {
      throw new Error("When you are in a Node environment, please use server-side fetch middleware.");
    }
    if (!window.fetch) {
      throw new Error("When you are in a non-modern browser, please manually polyfill fetch.");
    }
    if (!ctx.request) return await next();
    if (ctx.response) return await next();
    const {
      url: url2,
      method,
      headers,
      credentials
    } = ctx.request;
    const body2 = ctx.request.data;
    ctx.response = await window.fetch(url2, {
      method,
      body: body2,
      headers,
      credentials,
      signal: (_a2 = ctx.abortController) == null ? void 0 : _a2.signal
    });
    return await next();
  };
  class HttpSvcFetch extends HttpSvcMiddleware {
    constructor() {
      super(...arguments);
      __publicField(this, "handler", fetch$2);
      __publicField(this, "name", getBuiltInMiddlewareName("FETCH"));
    }
  }
  __publicField(HttpSvcFetch, "handler", fetch$2);
  const resData = async function (ctx, next, config) {
    var _a2, _b2;
    await next();
    if ((_a2 = ctx.response) == null ? void 0 : _a2.ok) {
      if (typeof ctx.response.data === "undefined") {
        try {
          const responseType = ((_b2 = config == null ? void 0 : config.payload) == null ? void 0 : _b2.type) || "json";
          ctx.response.data = await ctx.response[responseType]();
        } catch (error) {
          console.warn(error);
        }
      }
    }
  };
  class HttpSvcResData extends HttpSvcMiddleware {
    constructor() {
      super(resData);
      __publicField(this, "name", getBuiltInMiddlewareName("RES_DATA"));
    }
  }
  __publicField(HttpSvcResData, "handler", resData);
  const spray = async (ctx, next) => {
    await next();
  };
  class HttpSvcSprayMiddleware extends HttpSvcMiddleware {
    constructor(handler, payload) {
      super();
      __publicField(this, "name", getBuiltInMiddlewareName("SPRAY"));
      this.handler = async (ctx, next) => {
        return await handler(ctx, next, {
          payload
        });
      };
    }
  }
  __publicField(HttpSvcSprayMiddleware, "handler", spray);
  const retry = async (ctx, next, config) => {
    var _a2;
    const requestFn = (_a2 = ctx.request) == null ? void 0 : _a2.function;
    const {
      times,
      condition,
      onRetry
    } = (config == null ? void 0 : config.payload) || {
      times: 0
    };
    const isDone = () => {
      return !times || ctx.retry === times;
    };
    const doRetry = async extra => {
      var _a3;
      if (!requestFn) {
        throw createError(ctx, "Missing request function");
      }
      if (isDone() && !((_a3 = config == null ? void 0 : config.payload) == null ? void 0 : _a3.runtimeShortCircuit)) {
        throw createError(ctx);
      }
      ctx.retry = ctx.retry ? ctx.retry + 1 : 1;
      try {
        if (onRetry) {
          const newConfig = await onRetry(ctx.config, extra);
          if (newConfig) {
            ctx.config = newConfig;
          }
        }
        if (ctx.response) delete ctx.response;
        await requestFn(ctx);
      } catch (error) {
        throw createError(ctx, error.message);
      }
    };
    try {
      await next();
    } catch (error) {
      if (isDone()) {
        throw createError(ctx, error == null ? void 0 : error.message);
      }
      await doRetry();
      return;
    }
    if (condition) {
      const isMeetTheCondition = await condition(ctx.response);
      if (isMeetTheCondition) {
        await doRetry(isMeetTheCondition);
        return;
      }
    }
    if (!ctx.response || !ctx.response.ok) {
      await doRetry();
    }
  };
  class HttpSvcRetry extends HttpSvcMiddleware {
    constructor() {
      super(...arguments);
      __publicField(this, "name", getBuiltInMiddlewareName("RETRY"));
      __publicField(this, "handler", retry);
    }
  }
  __publicField(HttpSvcRetry, "handler", retry);
  let isFetching = false;
  const TICKET_COOKIE_KEY = "bili_ticket";
  const TICKET_COOKIE_KEY_EXP = "bili_ticket_expires";
  const BEFORE_UPDATE_MINUTES = 30;
  const LOCAL_STORAGE_KEY = "wbi_img_urls";
  const detectTicketAndWbi = async ctx => {
    var _a2;
    const biliTicket = getCookie$1(TICKET_COOKIE_KEY, {
      decode: false
    });
    let wbiImgUrl = "";
    let wbiSubUrl = "";
    if (window == null ? void 0 : window.UNIFY_HTTP_WBI_CONFIG) {
      [wbiImgUrl, wbiSubUrl] = ((_a2 = window.UNIFY_HTTP_WBI_CONFIG) == null ? void 0 : _a2.split("-")) || [];
    } else {
      [wbiImgUrl, wbiSubUrl] = (localStorage.getItem(LOCAL_STORAGE_KEY) || "").split("-");
    }
    const isTicketExpired = isExpired();
    if (isTicketExpired || !biliTicket || !wbiImgUrl || !wbiSubUrl) {
      if (isFetching) return;
      ctx.useAsyncRequest(async req => {
        var _a3, _b2;
        try {
          isFetching = true;
          const api2 = await buildTicketURL();
          const response = await req({
            url: api2,
            method: "POST",
            credentials: "include"
          });
          if ((response == null ? void 0 : response.code) === 0 && ((_a3 = response.data) == null ? void 0 : _a3.ticket) && ((_b2 = response.data) == null ? void 0 : _b2.nav)) {
            setTicketAndNavInLocalStorage(response.data);
          }
        } finally {
          isFetching = false;
        }
      });
    }
  };
  const isExpired = () => {
    const biliTicketExp = getCookie$1(TICKET_COOKIE_KEY_EXP, {
      decode: false
    });
    const thresholdMilliseconds = BEFORE_UPDATE_MINUTES * 60 * 1e3;
    const currentTime = (/* @__PURE__ */new Date()).getTime();
    return biliTicketExp * 1e3 - currentTime <= thresholdMilliseconds || biliTicketExp * 1e3 < currentTime;
  };
  const setTicketInCookie = (key, value2, ttl) => {
    var _a2;
    if ((_a2 = window == null ? void 0 : window.biliBridgePc) == null ? void 0 : _a2.callNative) {
      window.biliBridgePc.callNative("auth/setCookies", [{
        name: key,
        value: value2,
        expirationDate: Math.ceil(Date.now() / 1e3) + ttl,
        isExpiredRemove: true
      }]);
      return;
    }
    setCookie(key, value2, {
      domain: ".bilibili.com",
      exMinuts: ttl / 60
    });
  };
  const setTicketAndNavInLocalStorage = data2 => {
    const {
      ticket,
      nav,
      ttl,
      created_at
    } = data2;
    setTicketInCookie(TICKET_COOKIE_KEY, ticket, ttl);
    setTicketInCookie(TICKET_COOKIE_KEY_EXP, String(created_at + ttl), ttl);
    window.UNIFY_HTTP_WBI_CONFIG = `${nav.img}-${nav.sub}`;
    localStorage.setItem(LOCAL_STORAGE_KEY, `${nav.img}-${nav.sub}`);
  };
  const buildTicketURL = async () => {
    const ts = Math.floor((/* @__PURE__ */new Date()).getTime() / 1e3);
    const key = "YhxToH[2q";
    await loadScript("//s1.hdslb.com/bfs/static/jinkela/long/unify-http-request/forticket.min.js");
    if (!window.CryptoJS) {
      throw new Error("CryptoJS is not found");
    }
    if (!window.CryptoJS.HmacSHA256) {
      throw new Error("CryptoJS.HmacSHA256 is not found");
    }
    if (!window.CryptoJS.enc) {
      throw new Error("CryptoJS.enc is not found");
    }
    const hamc = window.CryptoJS.HmacSHA256(`ts${ts}`, formatString(key));
    const sign = window.CryptoJS.enc.Hex.stringify(hamc);
    const api2 = await buildURL$1("//api.bilibili.com/bapis/bilibili.api.ticket.v1.Ticket/GenWebTicket", {
      key_id: "ec02",
      hexsign: sign,
      "context[ts]": ts,
      csrf: getCookie$1("bili_jct", {
        decode: false
      })
    });
    return api2;
  };
  const updateTicketAndWbi = async (ctx, next) => {
    var _a2;
    if (typeof window === "undefined") return await next();
    if (ctx.request) {
      const {
        method,
        params
      } = ctx.request;
      if (!(params == null ? void 0 : params.web_location) && method === "GET") {
        ctx.request.params = {
          ...(ctx.request.params || {}),
          web_location: ((_a2 = document.getElementsByTagName("meta")["spm_prefix"]) == null ? void 0 : _a2.content) || "0.0"
        };
      }
    }
    try {
      detectTicketAndWbi(ctx);
    } catch (error) {
      console.log("[updateTicketAndWbi]", error);
    }
    await next();
  };
  class HttpSvcTicketWbiUpdate extends HttpSvcMiddleware {
    constructor() {
      super(updateTicketAndWbi);
      __publicField(this, "name", getBuiltInMiddlewareName("TICKET_WBI"));
    }
  }
  __publicField(HttpSvcTicketWbiUpdate, "handler", updateTicketAndWbi);
  class HttpSvcControl {
    constructor(httpSvc) {
      this.httpSvc = httpSvc;
    }
  }
  class ConfigControl extends HttpSvcControl {
    provide() {
      let ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      const provider = {
        inject: (key, value2) => {
          this.inject(ctx, key, value2);
          return provider;
        },
        disable: key => {
          this.disable(ctx, key);
          return provider;
        },
        get: () => {
          return ctx;
        }
      };
      return provider;
    }
    inject(ctx, name, config) {
      ctx[name] = config;
    }
    disable(ctx, name) {
      ctx[name] = {
        ...(ctx[name] || {}),
        disabled: true
      };
    }
    get(ctx, name) {
      return ctx[name] || {};
    }
  }
  const BUILT_IN_MIDDLEWARE = {
    INIT_CTX: getBuiltInMiddlewareName("INIT_CTX"),
    TIMEOUT: getBuiltInMiddlewareName("TIMEOUT"),
    BODY: getBuiltInMiddlewareName("BODY"),
    CSRF: getBuiltInMiddlewareName("CSRF"),
    FETCH: getBuiltInMiddlewareName("FETCH"),
    RETRY: getBuiltInMiddlewareName("RETRY"),
    SPRAY: getBuiltInMiddlewareName("SPRAY"),
    RES_DATA: getBuiltInMiddlewareName("RES_DATA"),
    RES_EXTRACT: getBuiltInMiddlewareName("RES_EXTRACT"),
    TICKET_WBI: getBuiltInMiddlewareName("TICKET_WBI"),
    LOG: getBuiltInMiddlewareName("LOG"),
    CACHE: getBuiltInMiddlewareName("CACHE")
  };
  const ORDER_PRIFIX = "$ORDER_";
  class AssembleDispatcher {
    constructor(control) {
      __publicField(this, "middlewares", []);
      __publicField(this, "middlewareConfigCtxProvider");
      this.control = control;
      this.middlewareConfigCtxProvider = this.control.httpSvc.configCtrl.provide();
    }
    with(middleware, payload) {
      if (!middleware) return this;
      if (typeof middleware === "string") {
        this.middlewares.push({
          name: `${ORDER_PRIFIX}${middleware}`,
          handler: HttpSvcSprayMiddleware.handler
        });
        if (payload) {
          this.inject(middleware, payload);
        }
      } else if (typeof middleware === "function") {
        this.middlewares.push(new HttpSvcSprayMiddleware(middleware, payload));
      } else if (isMiddleware(middleware)) {
        this.middlewares.push(middleware);
        if (payload) {
          this.inject(middleware.name, payload);
        }
      }
      return this;
    }
    inject(name, payload) {
      this.middlewareConfigCtxProvider.inject(name, {
        payload
      });
      return this;
    }
    disable(name) {
      this.middlewareConfigCtxProvider.disable(name);
      return this;
    }
    request(config) {
      const fn2 = this.control.compose(this.middlewares);
      return this.control.httpSvc.requestCtrl.request(config, this.middlewareConfigCtxProvider.get(), fn2);
    }
  }
  class AssembleControl extends HttpSvcControl {
    constructor() {
      super(...arguments);
      __publicField(this, "middlewares", []);
    }
    alreadyExistsIdx(middlewareName) {
      return this.middlewares.findIndex(m2 => m2.name === middlewareName);
    }
    register(middlewares) {
      if (Array.isArray(middlewares)) {
        let reset = false;
        middlewares.forEach(m2 => {
          if (isMiddleware(m2)) {
            reset = true;
            const idx = this.alreadyExistsIdx(m2.name);
            if (idx > -1) {
              this.middlewares[idx] = m2;
            } else {
              this.middlewares.push(m2);
            }
          }
        });
        if (reset) {
          this.httpSvc.requestCtrl.reset();
        }
      }
    }
    setup() {
      return new AssembleDispatcher(this);
    }
    disable(middlewareName) {
      return this.setup().disable(middlewareName);
    }
    with(middleware, payload) {
      return this.setup().with(middleware, payload);
    }
    compose(middlewares) {
      const list1 = [...this.middlewares];
      const list2 = [];
      const builtInOverride = {
        [BUILT_IN_MIDDLEWARE.RETRY]: null,
        [BUILT_IN_MIDDLEWARE.BODY]: null,
        [BUILT_IN_MIDDLEWARE.RES_DATA]: null
      };
      const builtInNames = Object.keys(builtInOverride);
      const unique = {};
      (middlewares || []).forEach(m2 => {
        if (isMiddleware(m2)) {
          let middlewareName = m2.name;
          if (builtInNames.includes(middlewareName)) {
            if (!builtInOverride[middlewareName]) {
              builtInOverride[middlewareName] = m2;
            }
          } else {
            if (middlewareName.startsWith(ORDER_PRIFIX)) {
              middlewareName = middlewareName.substring(ORDER_PRIFIX.length);
              if (!unique[middlewareName] && !(middlewareName in builtInOverride)) {
                const globalMiddlewareIndex = list1.findIndex(m22 => m22.name === middlewareName);
                if (globalMiddlewareIndex > -1) {
                  const realM = list1[globalMiddlewareIndex];
                  list1.splice(globalMiddlewareIndex, 1);
                  unique[middlewareName] = realM;
                  list2.push(realM);
                }
              }
            } else {
              if (BUILT_IN_MIDDLEWARE.SPRAY === middlewareName) {
                list2.push(m2);
              } else if (!unique[middlewareName]) {
                unique[middlewareName] = m2;
                list2.push(m2);
              }
            }
          }
        }
      });
      const list = [];
      list1.forEach(m2 => {
        if (builtInNames.includes(m2.name)) {
          if (!builtInOverride[m2.name]) {
            builtInOverride[m2.name] = m2;
          }
        } else if (!unique[m2.name]) {
          list.push(m2);
        }
      });
      list.push(...list2);
      const middlewareList = [builtInOverride[BUILT_IN_MIDDLEWARE.RETRY] || new HttpSvcRetry(), new HttpSvcInitCtx(), ...list, builtInOverride[BUILT_IN_MIDDLEWARE.RES_DATA] || new HttpSvcResData(), builtInOverride[BUILT_IN_MIDDLEWARE.BODY] || new HttpSvcBody$1(), new HttpSvcTimeout(), this.httpSvc.fetch];
      return async context => {
        var _a2, _b2;
        let index2 = -1;
        const configCtrl = this.httpSvc.configCtrl;
        const debug = configCtrl.get(context.middleware, "DEBUG").payload;
        await dispatch(0);
        if (debug) {
          return context;
        }
        const disableResExtract = configCtrl.get(context.middleware, BUILT_IN_MIDDLEWARE.RES_EXTRACT).disabled;
        if (!disableResExtract && ((_a2 = context.response) == null ? void 0 : _a2.ok)) {
          return ((_b2 = context.response) == null ? void 0 : _b2.data) || null;
        }
        return context.response;
        async function dispatch(i2) {
          if (i2 === middlewareList.length) return;
          if (i2 <= index2) throw createError(context, "The next() called multiple times");
          index2 = i2;
          const middleware = middlewareList[index2];
          if (!middleware) {
            throw createError(context, "Middleware is not exist");
          }
          await middleware.handler(context, dispatch.bind(null, i2 + 1), configCtrl.get(context.middleware, middleware.name));
        }
      };
    }
  }
  class RequestControl extends HttpSvcControl {
    constructor() {
      super(...arguments);
      __publicField(this, "fn", null);
    }
    async request(config) {
      let middlewareCtx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      let fn2 = arguments.length > 2 ? arguments[2] : undefined;
      if (!fn2) {
        if (!this.fn) {
          this.generateRequestFunction();
        }
        fn2 = this.fn;
      }
      return await fn2(this.createContext(config, middlewareCtx, fn2));
    }
    generateRequestFunction() {
      this.fn = this.httpSvc.assembleCtrl.compose();
    }
    reset() {
      this.fn = null;
    }
    get useAsyncRequest() {
      return (asyncRequest, config) => {
        const inst = this.httpSvc.create(config);
        asyncRequest(inst.request.bind(inst));
      };
    }
    createContext(config) {
      let middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      let requestFn = arguments.length > 2 ? arguments[2] : undefined;
      const {
        url: url2,
        method
      } = config;
      const ctx = {
        config: {
          baseURL: this.httpSvc.baseURL,
          ...config
        },
        useAsyncRequest: this.useAsyncRequest,
        middleware,
        request: {
          url: url2,
          method: (method || "get").toUpperCase(),
          function: requestFn
        }
      };
      return ctx;
    }
  }
  class HttpService$1 {
    constructor(initConfig) {
      __publicField(this, "fetch");
      __publicField(this, "assembleCtrl", new AssembleControl(this));
      __publicField(this, "configCtrl", new ConfigControl(this));
      __publicField(this, "requestCtrl", new RequestControl(this));
      __publicField(this, "baseURL", "//api.domain.com");
      if (initConfig) {
        if (Array.isArray(initConfig)) {
          this.fetch = new HttpSvcFetch();
          this.register(initConfig);
        } else {
          const {
            middlewares,
            fetch: fetch2,
            baseURL
          } = initConfig;
          this.fetch = fetch2 || new HttpSvcFetch();
          this.register(middlewares || []);
          if (baseURL) this.baseURL = baseURL;
        }
      } else {
        this.fetch = new HttpSvcFetch();
        this.register([]);
      }
    }
    register(middlewares) {
      this.assembleCtrl.register(middlewares);
    }
    request(config) {
      return this.requestCtrl.request(config);
    }
    disable(middlewareName) {
      return this.assembleCtrl.disable(middlewareName);
    }
    with(middleware, payload) {
      return this.assembleCtrl.with(middleware, payload);
    }
    setFetch(fetch2) {
      this.fetch = fetch2;
      this.requestCtrl.reset();
    }
    create(config) {
      return new HttpService$1({
        fetch: this.fetch,
        ...(config || {})
      });
    }
  }
  class HttpService extends HttpService$1 {
    constructor(initConfig) {
      const baseURL = "//api.bilibili.com";
      const commonMiddlewares = [new HttpSvcTicketWbiUpdate(), new HttpSvcCsrf$1()];
      if (initConfig) {
        const middlewares = [];
        const isArr = Array.isArray(initConfig);
        (isArr ? initConfig : initConfig.middlewares || []).forEach(m2 => {
          const idx = commonMiddlewares.findIndex(cm => m2.name === cm.name);
          if (idx > -1) {
            commonMiddlewares.splice(idx, 1);
          }
          middlewares.push(m2);
        });
        super({
          fetch: isArr ? void 0 : initConfig.fetch,
          baseURL: !isArr && initConfig.baseURL || baseURL,
          middlewares: [...commonMiddlewares, ...middlewares]
        });
      } else {
        super({
          baseURL,
          middlewares: [...commonMiddlewares]
        });
      }
    }
  }
  var k$1 = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof commonjsGlobal != "undefined" ? commonjsGlobal : typeof self != "undefined" ? self : {};
  (function () {
    (function (l2) {
      (function (h2) {
        var d2 = {
          searchParams: "URLSearchParams" in l2,
          iterable: "Symbol" in l2 && "iterator" in Symbol,
          blob: "FileReader" in l2 && "Blob" in l2 && function () {
            try {
              return new Blob(), true;
            } catch (e2) {
              return false;
            }
          }(),
          formData: "FormData" in l2,
          arrayBuffer: "ArrayBuffer" in l2
        };
        function D2(e2) {
          return e2 && DataView.prototype.isPrototypeOf(e2);
        }
        if (d2.arrayBuffer) var v2 = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
          _2 = ArrayBuffer.isView || function (e2) {
            return e2 && v2.indexOf(Object.prototype.toString.call(e2)) > -1;
          };
        function w2(e2) {
          if (typeof e2 != "string" && (e2 = String(e2)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e2)) throw new TypeError("Invalid character in header field name");
          return e2.toLowerCase();
        }
        function m2(e2) {
          return typeof e2 != "string" && (e2 = String(e2)), e2;
        }
        function O2(e2) {
          var t2 = {
            next: function () {
              var a2 = e2.shift();
              return {
                done: a2 === void 0,
                value: a2
              };
            }
          };
          return d2.iterable && (t2[Symbol.iterator] = function () {
            return t2;
          }), t2;
        }
        function u2(e2) {
          this.map = {}, e2 instanceof u2 ? e2.forEach(function (t2, a2) {
            this.append(a2, t2);
          }, this) : Array.isArray(e2) ? e2.forEach(function (t2) {
            this.append(t2[0], t2[1]);
          }, this) : e2 && Object.getOwnPropertyNames(e2).forEach(function (t2) {
            this.append(t2, e2[t2]);
          }, this);
        }
        u2.prototype.append = function (e2, t2) {
          e2 = w2(e2), t2 = m2(t2);
          var a2 = this.map[e2];
          this.map[e2] = a2 ? a2 + ", " + t2 : t2;
        }, u2.prototype.delete = function (e2) {
          delete this.map[w2(e2)];
        }, u2.prototype.get = function (e2) {
          return e2 = w2(e2), this.has(e2) ? this.map[e2] : null;
        }, u2.prototype.has = function (e2) {
          return this.map.hasOwnProperty(w2(e2));
        }, u2.prototype.set = function (e2, t2) {
          this.map[w2(e2)] = m2(t2);
        }, u2.prototype.forEach = function (e2, t2) {
          for (var a2 in this.map) this.map.hasOwnProperty(a2) && e2.call(t2, this.map[a2], a2, this);
        }, u2.prototype.keys = function () {
          var e2 = [];
          return this.forEach(function (t2, a2) {
            e2.push(a2);
          }), O2(e2);
        }, u2.prototype.values = function () {
          var e2 = [];
          return this.forEach(function (t2) {
            e2.push(t2);
          }), O2(e2);
        }, u2.prototype.entries = function () {
          var e2 = [];
          return this.forEach(function (t2, a2) {
            e2.push([a2, t2]);
          }), O2(e2);
        }, d2.iterable && (u2.prototype[Symbol.iterator] = u2.prototype.entries);
        function A2(e2) {
          if (e2.bodyUsed) return Promise.reject(new TypeError("Already read"));
          e2.bodyUsed = true;
        }
        function g2(e2) {
          return new Promise(function (t2, a2) {
            e2.onload = function () {
              t2(e2.result);
            }, e2.onerror = function () {
              a2(e2.error);
            };
          });
        }
        function B2(e2) {
          var t2 = new FileReader(),
            a2 = g2(t2);
          return t2.readAsArrayBuffer(e2), a2;
        }
        function P2(e2) {
          var t2 = new FileReader(),
            a2 = g2(t2);
          return t2.readAsText(e2), a2;
        }
        function S2(e2) {
          for (var t2 = new Uint8Array(e2), a2 = new Array(t2.length), p2 = 0; p2 < t2.length; p2++) a2[p2] = String.fromCharCode(t2[p2]);
          return a2.join("");
        }
        function j2(e2) {
          if (e2.slice) return e2.slice(0);
          var t2 = new Uint8Array(e2.byteLength);
          return t2.set(new Uint8Array(e2)), t2.buffer;
        }
        function r2() {
          return this.bodyUsed = false, this._initBody = function (e2) {
            this._bodyInit = e2, e2 ? typeof e2 == "string" ? this._bodyText = e2 : d2.blob && Blob.prototype.isPrototypeOf(e2) ? this._bodyBlob = e2 : d2.formData && FormData.prototype.isPrototypeOf(e2) ? this._bodyFormData = e2 : d2.searchParams && URLSearchParams.prototype.isPrototypeOf(e2) ? this._bodyText = e2.toString() : d2.arrayBuffer && d2.blob && D2(e2) ? (this._bodyArrayBuffer = j2(e2.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : d2.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(e2) || _2(e2)) ? this._bodyArrayBuffer = j2(e2) : this._bodyText = e2 = Object.prototype.toString.call(e2) : this._bodyText = "", this.headers.get("content-type") || (typeof e2 == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : d2.searchParams && URLSearchParams.prototype.isPrototypeOf(e2) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, d2.blob && (this.blob = function () {
            var e2 = A2(this);
            if (e2) return e2;
            if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData) throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }, this.arrayBuffer = function () {
            return this._bodyArrayBuffer ? A2(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(B2);
          }), this.text = function () {
            var e2 = A2(this);
            if (e2) return e2;
            if (this._bodyBlob) return P2(this._bodyBlob);
            if (this._bodyArrayBuffer) return Promise.resolve(S2(this._bodyArrayBuffer));
            if (this._bodyFormData) throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, d2.formData && (this.formData = function () {
            return this.text().then(s2);
          }), this.json = function () {
            return this.text().then(JSON.parse);
          }, this;
        }
        var o2 = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function i2(e2) {
          var t2 = e2.toUpperCase();
          return o2.indexOf(t2) > -1 ? t2 : e2;
        }
        function n2(e2, t2) {
          t2 = t2 || {};
          var a2 = t2.body;
          if (e2 instanceof n2) {
            if (e2.bodyUsed) throw new TypeError("Already read");
            this.url = e2.url, this.credentials = e2.credentials, t2.headers || (this.headers = new u2(e2.headers)), this.method = e2.method, this.mode = e2.mode, this.signal = e2.signal, !a2 && e2._bodyInit != null && (a2 = e2._bodyInit, e2.bodyUsed = true);
          } else this.url = String(e2);
          if (this.credentials = t2.credentials || this.credentials || "same-origin", (t2.headers || !this.headers) && (this.headers = new u2(t2.headers)), this.method = i2(t2.method || this.method || "GET"), this.mode = t2.mode || this.mode || null, this.signal = t2.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && a2) throw new TypeError("Body not allowed for GET or HEAD requests");
          this._initBody(a2);
        }
        n2.prototype.clone = function () {
          return new n2(this, {
            body: this._bodyInit
          });
        };
        function s2(e2) {
          var t2 = new FormData();
          return e2.trim().split("&").forEach(function (a2) {
            if (a2) {
              var p2 = a2.split("="),
                y2 = p2.shift().replace(/\+/g, " "),
                f2 = p2.join("=").replace(/\+/g, " ");
              t2.append(decodeURIComponent(y2), decodeURIComponent(f2));
            }
          }), t2;
        }
        function c2(e2) {
          var t2 = new u2(),
            a2 = e2.replace(/\r?\n[\t ]+/g, " ");
          return a2.split(/\r?\n/).forEach(function (p2) {
            var y2 = p2.split(":"),
              f2 = y2.shift().trim();
            if (f2) {
              var L2 = y2.join(":").trim();
              t2.append(f2, L2);
            }
          }), t2;
        }
        r2.call(n2.prototype);
        function b2(e2, t2) {
          t2 || (t2 = {}), this.type = "default", this.status = t2.status === void 0 ? 200 : t2.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in t2 ? t2.statusText : "OK", this.headers = new u2(t2.headers), this.url = t2.url || "", this._initBody(e2);
        }
        r2.call(b2.prototype), b2.prototype.clone = function () {
          return new b2(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new u2(this.headers),
            url: this.url
          });
        }, b2.error = function () {
          var e2 = new b2(null, {
            status: 0,
            statusText: ""
          });
          return e2.type = "error", e2;
        };
        var E2 = [301, 302, 303, 307, 308];
        b2.redirect = function (e2, t2) {
          if (E2.indexOf(t2) === -1) throw new RangeError("Invalid status code");
          return new b2(null, {
            status: t2,
            headers: {
              location: e2
            }
          });
        }, h2.DOMException = l2.DOMException;
        try {
          new h2.DOMException();
        } catch (e2) {
          h2.DOMException = function (t2, a2) {
            this.message = t2, this.name = a2;
            var p2 = Error(t2);
            this.stack = p2.stack;
          }, h2.DOMException.prototype = Object.create(Error.prototype), h2.DOMException.prototype.constructor = h2.DOMException;
        }
        function T2(e2, t2) {
          return new Promise(function (a2, p2) {
            var y2 = new n2(e2, t2);
            if (y2.signal && y2.signal.aborted) return p2(new h2.DOMException("Aborted", "AbortError"));
            var f2 = new XMLHttpRequest();
            function L2() {
              f2.abort();
            }
            f2.onload = function () {
              var R2 = {
                status: f2.status,
                statusText: f2.statusText,
                headers: c2(f2.getAllResponseHeaders() || "")
              };
              R2.url = "responseURL" in f2 ? f2.responseURL : R2.headers.get("X-Request-URL");
              var x2 = "response" in f2 ? f2.response : f2.responseText;
              a2(new b2(x2, R2));
            }, f2.onerror = function () {
              p2(new TypeError("Network request failed"));
            }, f2.ontimeout = function () {
              p2(new TypeError("Network request failed"));
            }, f2.onabort = function () {
              p2(new h2.DOMException("Aborted", "AbortError"));
            }, f2.open(y2.method, y2.url, true), y2.credentials === "include" ? f2.withCredentials = true : y2.credentials === "omit" && (f2.withCredentials = false), "responseType" in f2 && d2.blob && (f2.responseType = "blob"), y2.headers.forEach(function (R2, x2) {
              f2.setRequestHeader(x2, R2);
            }), y2.signal && (y2.signal.addEventListener("abort", L2), f2.onreadystatechange = function () {
              f2.readyState === 4 && y2.signal.removeEventListener("abort", L2);
            }), f2.send(typeof y2._bodyInit == "undefined" ? null : y2._bodyInit);
          });
        }
        return T2.polyfill = true, l2.fetch || (l2.fetch = T2, l2.Headers = u2, l2.Request = n2, l2.Response = b2), h2.Headers = u2, h2.Request = n2, h2.Response = b2, h2.fetch = T2, Object.defineProperty(h2, "__esModule", {
          value: true
        }), h2;
      })({});
    })(typeof self != "undefined" ? self : k$1);
  })();
  (function (l2) {
    l2();
  })(function () {
    function l2(r2, o2) {
      if (!(r2 instanceof o2)) throw new TypeError("Cannot call a class as a function");
    }
    function h2(r2, o2) {
      for (var i2 = 0; i2 < o2.length; i2++) {
        var n2 = o2[i2];
        n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(r2, n2.key, n2);
      }
    }
    function d2(r2, o2, i2) {
      return o2 && h2(r2.prototype, o2), i2 && h2(r2, i2), Object.defineProperty(r2, "prototype", {
        writable: false
      }), r2;
    }
    function D2(r2, o2) {
      if (typeof o2 != "function" && o2 !== null) throw new TypeError("Super expression must either be null or a function");
      r2.prototype = Object.create(o2 && o2.prototype, {
        constructor: {
          value: r2,
          writable: true,
          configurable: true
        }
      }), Object.defineProperty(r2, "prototype", {
        writable: false
      }), o2 && _2(r2, o2);
    }
    function v2(r2) {
      return v2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (i2) {
        return i2.__proto__ || Object.getPrototypeOf(i2);
      }, v2(r2);
    }
    function _2(r2, o2) {
      return _2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (n2, s2) {
        return n2.__proto__ = s2, n2;
      }, _2(r2, o2);
    }
    function w2() {
      if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham) return false;
      if (typeof Proxy == "function") return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), true;
      } catch (r2) {
        return false;
      }
    }
    function m2(r2) {
      if (r2 === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return r2;
    }
    function O2(r2, o2) {
      if (o2 && (typeof o2 == "object" || typeof o2 == "function")) return o2;
      if (o2 !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
      return m2(r2);
    }
    function u2(r2) {
      var o2 = w2();
      return function () {
        var n2 = v2(r2),
          s2;
        if (o2) {
          var c2 = v2(this).constructor;
          s2 = Reflect.construct(n2, arguments, c2);
        } else s2 = n2.apply(this, arguments);
        return O2(this, s2);
      };
    }
    function A2(r2, o2) {
      for (; !Object.prototype.hasOwnProperty.call(r2, o2) && (r2 = v2(r2), r2 !== null););
      return r2;
    }
    function g2() {
      return typeof Reflect != "undefined" && Reflect.get ? g2 = Reflect.get.bind() : g2 = function (o2, i2, n2) {
        var s2 = A2(o2, i2);
        if (!!s2) {
          var c2 = Object.getOwnPropertyDescriptor(s2, i2);
          return c2.get ? c2.get.call(arguments.length < 3 ? o2 : n2) : c2.value;
        }
      }, g2.apply(this, arguments);
    }
    var B2 = function () {
        function r2() {
          l2(this, r2), Object.defineProperty(this, "listeners", {
            value: {},
            writable: true,
            configurable: true
          });
        }
        return d2(r2, [{
          key: "addEventListener",
          value: function (i2, n2, s2) {
            i2 in this.listeners || (this.listeners[i2] = []), this.listeners[i2].push({
              callback: n2,
              options: s2
            });
          }
        }, {
          key: "removeEventListener",
          value: function (i2, n2) {
            if (i2 in this.listeners) {
              for (var s2 = this.listeners[i2], c2 = 0, b2 = s2.length; c2 < b2; c2++) if (s2[c2].callback === n2) {
                s2.splice(c2, 1);
                return;
              }
            }
          }
        }, {
          key: "dispatchEvent",
          value: function (i2) {
            if (i2.type in this.listeners) {
              for (var n2 = this.listeners[i2.type], s2 = n2.slice(), c2 = 0, b2 = s2.length; c2 < b2; c2++) {
                var E2 = s2[c2];
                try {
                  E2.callback.call(this, i2);
                } catch (T2) {
                  Promise.resolve().then(function () {
                    throw T2;
                  });
                }
                E2.options && E2.options.once && this.removeEventListener(i2.type, E2.callback);
              }
              return !i2.defaultPrevented;
            }
          }
        }]), r2;
      }(),
      P2 = function (r2) {
        D2(i2, r2);
        var o2 = u2(i2);
        function i2() {
          var n2;
          return l2(this, i2), n2 = o2.call(this), n2.listeners || B2.call(m2(n2)), Object.defineProperty(m2(n2), "aborted", {
            value: false,
            writable: true,
            configurable: true
          }), Object.defineProperty(m2(n2), "onabort", {
            value: null,
            writable: true,
            configurable: true
          }), Object.defineProperty(m2(n2), "reason", {
            value: void 0,
            writable: true,
            configurable: true
          }), n2;
        }
        return d2(i2, [{
          key: "toString",
          value: function () {
            return "[object AbortSignal]";
          }
        }, {
          key: "dispatchEvent",
          value: function (s2) {
            s2.type === "abort" && (this.aborted = true, typeof this.onabort == "function" && this.onabort.call(this, s2)), g2(v2(i2.prototype), "dispatchEvent", this).call(this, s2);
          }
        }]), i2;
      }(B2),
      S2 = function () {
        function r2() {
          l2(this, r2), Object.defineProperty(this, "signal", {
            value: new P2(),
            writable: true,
            configurable: true
          });
        }
        return d2(r2, [{
          key: "abort",
          value: function (i2) {
            var n2;
            try {
              n2 = new Event("abort");
            } catch (c2) {
              typeof document != "undefined" ? document.createEvent ? (n2 = document.createEvent("Event"), n2.initEvent("abort", false, false)) : (n2 = document.createEventObject(), n2.type = "abort") : n2 = {
                type: "abort",
                bubbles: false,
                cancelable: false
              };
            }
            var s2 = i2;
            if (s2 === void 0) if (typeof document == "undefined") s2 = new Error("This operation was aborted"), s2.name = "AbortError";else try {
              s2 = new DOMException("signal is aborted without reason");
            } catch (c2) {
              s2 = new Error("This operation was aborted"), s2.name = "AbortError";
            }
            this.signal.reason = s2, this.signal.dispatchEvent(n2);
          }
        }, {
          key: "toString",
          value: function () {
            return "[object AbortController]";
          }
        }]), r2;
      }();
    typeof Symbol != "undefined" && Symbol.toStringTag && (S2.prototype[Symbol.toStringTag] = "AbortController", P2.prototype[Symbol.toStringTag] = "AbortSignal");
    function j2(r2) {
      return r2.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL ? (console.log("__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill"), true) : typeof r2.Request == "function" && !r2.Request.prototype.hasOwnProperty("signal") || !r2.AbortController;
    }
    (function (r2) {
      !j2(r2) || (r2.AbortController = S2, r2.AbortSignal = P2);
    })(typeof self != "undefined" ? self : k$1);
  });
  const IS_NODE = typeof window === "undefined";
  const IS_ANDROID = IS_NODE ? true : /android/i.test(window.navigator.userAgent);
  const CONTENT_TYPE_KEY = "Content-Type";
  var ContentType = /* @__PURE__ */(ContentType2 => {
    ContentType2["JSON"] = "application/json";
    ContentType2["Form"] = "application/x-www-form-urlencoded";
    ContentType2["FormData"] = "multipart/form-data";
    return ContentType2;
  })(ContentType || {});
  var BridgeMethod = /* @__PURE__ */(BridgeMethod2 => {
    BridgeMethod2["Request"] = "net.request";
    BridgeMethod2["RequestV2"] = "net.requestV2";
    BridgeMethod2["RequestWithSign"] = "net.requestWithSign";
    BridgeMethod2["RequestWithSignV2"] = "net.requestWithSignV2";
    BridgeMethod2["GetCsrf"] = "net.getCsrf";
    BridgeMethod2["UploadImage"] = "net.uploadImage";
    BridgeMethod2["UploadImageV2"] = "net.uploadImageV2";
    BridgeMethod2["GetContainerInfo"] = "global.getContainerInfo";
    return BridgeMethod2;
  })(BridgeMethod || {});
  var AppMiddlewareName = /* @__PURE__ */(AppMiddlewareName2 => {
    AppMiddlewareName2["Runtime"] = "APP_RUNTIME";
    AppMiddlewareName2["Csrf"] = "BUILT_IN_CSRF";
    AppMiddlewareName2["Body"] = "BUILT_IN_BODY";
    AppMiddlewareName2["AppFetch"] = "APP_FETCH";
    return AppMiddlewareName2;
  })(AppMiddlewareName || {});
  const getCookie = (key, from) => {
    let result = "";
    if (IS_NODE && !from) {
      return result;
    }
    const cookies2 = from || document.cookie;
    if (!cookies2) {
      return result;
    }
    const arr2 = cookies2.split(";");
    const reg = new RegExp(`^${key}=`);
    for (let i2 = 0; i2 < arr2.length; i2++) {
      const tmp = arr2[i2].trim();
      if (reg.test(tmp)) {
        result = tmp.split("=")[1];
        break;
      }
    }
    return result;
  };
  const getMiddlewarePayloadFromCtx = (ctx, name) => {
    var _a2;
    return ((_a2 = ctx.middleware[name]) == null ? void 0 : _a2.payload) || {};
  };
  const setMiddlewarePayloadToCtx = (ctx, name, payload) => {
    ctx.middleware[name] = {
      payload
    };
  };
  const getContentType = headers => (headers == null ? void 0 : headers[CONTENT_TYPE_KEY]) || (headers == null ? void 0 : headers["content-type"]);
  const getContentTypeFromData = data2 => {
    if (isFormData(data2)) {
      return ContentType.FormData;
    }
    if (isRecordObj(data2)) {
      return ContentType.JSON;
    }
    return "";
  };
  const isArray$4 = val2 => toString.call(val2) === "[object Array]";
  const isObject$2 = val2 => val2 !== null && typeof val2 === "object";
  const isRecordObj = obj => Object.prototype.toString.call(obj) === "[object Object]";
  const isDate = val2 => toString.call(val2) === "[object Date]";
  const isFormData = val2 => typeof FormData !== "undefined" && val2 instanceof FormData;
  const isBlob = val2 => toString.call(val2) === "[object Blob]" || toString.call(val2) === "[object File]";
  const isBase64 = val2 => val2 && typeof val2 === "string" && val2.indexOf("base64") !== -1 && /^data:/.test(val2);
  const blob2Base64 = blob => {
    return new Promise(resolve => {
      const reader = new FileReader();
      reader.onload = event => {
        var _a2;
        resolve((_a2 = event.target) == null ? void 0 : _a2.result);
      };
      reader.readAsDataURL(blob);
    });
  };
  const encode = val2 => {
    return encodeURIComponent(val2).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  };
  function forEach(obj, fn2) {
    if (obj === null || typeof obj === "undefined") {
      return;
    }
    if (typeof obj !== "object") {
      obj = [obj];
    }
    if (isArray$4(obj)) {
      for (let i2 = 0, l2 = obj.length; i2 < l2; i2++) {
        fn2.call(null, obj[i2], i2, obj);
      }
    } else {
      for (const key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          fn2.call(null, obj[key], key, obj);
        }
      }
    }
  }
  const paramSerializer = (dataObj, runtime2) => {
    const parts = [];
    const useQS = !IS_ANDROID && ((runtime2 == null ? void 0 : runtime2.version) === 6 || (runtime2 == null ? void 0 : runtime2.version) === 7);
    if (useQS) {
      return qs.stringify(dataObj);
    }
    forEach(dataObj, function serialize(val2, key) {
      if (val2 === null || typeof val2 === "undefined") {
        return;
      }
      if (isArray$4(val2)) {
        key = key + "[]";
      } else {
        val2 = [val2];
      }
      forEach(val2, function parseValue(v2) {
        if (isDate(v2)) {
          v2 = v2.toISOString();
        } else if (isObject$2(v2)) {
          v2 = JSON.stringify(v2);
        }
        if ((runtime2 == null ? void 0 : runtime2.version) === 1 && /^(pwd|password|seccode)/.test(key)) {
          parts.push(encode(key) + "=" + v2);
        } else {
          parts.push(encode(key) + "=" + encode(v2));
        }
      });
    });
    return parts.sort((a2, b2) => a2 > b2 ? 1 : -1).join("&");
  };
  const buildURL = (url2, params, runtime2) => {
    const serializedParams = paramSerializer(params, runtime2);
    if (!url2) return serializedParams;
    if (serializedParams) {
      const hashMarkIndex = url2.indexOf("#");
      if (hashMarkIndex !== -1) {
        url2 = url2.slice(0, hashMarkIndex);
      }
      url2 += (url2.indexOf("?") === -1 ? "?" : "&") + serializedParams;
    }
    if ((runtime2 == null ? void 0 : runtime2.version) && !/^http/.test(url2)) {
      url2 = `${IS_NODE ? "http:" : window.location.protocol}//${url2}`.replace("////", "//");
    }
    return url2;
  };
  const form2obj = form => {
    const obj = {};
    for (const [key, value2] of form.entries()) {
      obj[key] = value2;
    }
    return obj;
  };
  const obj2form = obj => {
    const form = new FormData();
    for (const key in obj) {
      form.append(key, obj[key]);
    }
    return form;
  };
  const setWindowRuntime = runtime2 => {
    window.__HTTP_SVC_APP_RUNTIME__ = runtime2;
  };
  const getWindowRuntime = () => {
    if (IS_NODE) return null;
    return window.__HTTP_SVC_APP_RUNTIME__ || null;
  };
  const execRuntime = async () => {
    let version = 0;
    let device = "";
    let bridgeIsV1 = false;
    let bridgeIsV2 = false;
    let bridgeIsV3 = false;
    let bridgeIsV4 = false;
    let bridgeIsV5 = false;
    let bridgeIsV6 = false;
    let bridgeIsV7 = false;
    const result = {
      version: 0,
      uaDevice: "",
      uaVersion: 0,
      isMainApp: false,
      isWbTypeCommon: b$1
    };
    if (IS_NODE || !f$2) {
      return result;
    }
    if (getWindowRuntime()) {
      return getWindowRuntime();
    }
    const _parseUA = () => {
      window.navigator.userAgent.split(" ").forEach(item => {
        if (/^biliapp/i.test(item)) {
          version = +item.split("/")[1];
        } else if (/^mobi_app/i.test(item)) {
          device = item.split("/")[1];
        } else if (/^bilicomic/i.test(item)) {
          version = +item.split("/")[1];
        }
      });
    };
    const _detectBridgeIsV1 = async () => {
      bridgeIsV1 = device === "android_i" ||
      // 哔哩哔哩 Android 国际版
      device === "android_comic" && version >= 214e5;
      const disableV1 = device === "iphone" && version < 8930 ||
      // 哔哩哔哩 iOS 版
      device === "ipad" && version < 12350 ||
      // 哔哩哔哩 iPad 版
      device === "iphone_b" && version < 8110;
      if (disableV1) {
        bridgeIsV1 = false;
        return;
      }
      bridgeIsV1 = await P$1(BridgeMethod.Request);
    };
    const _detectBridgeIsV2 = async () => {
      bridgeIsV2 = device === "bstar_i" && version >= 1e6 ||
      // iOS 新国际版
      device === "ios_bbs" || device === "UNKNOWN" ||
      // 必剪 hot-fix
      device === "bstar_a" && version >= 1000013 ||
      // Android 新国际版
      device === "iphone_i" && version >= 1e4 ||
      // iOS 旧国际版
      device === "android_i" && version >= 2050400 ||
      // Android 旧国际版
      device === "android" && version > 551e4 ||
      // 哔哩哔哩 Android
      device === "android_b" && version >= 535e4 ||
      // 哔哩哔哩 Android 概念版
      device === "iphone" && version > 8960 ||
      // 哔哩哔哩 iOS 版
      device === "ipad" && version > 12300 ||
      // 哔哩哔哩 iPad 版
      device === "iphone_b" && version > 8990 ||
      // 哔哩哔哩 iOS 概念版
      device === "android_comic" && version >= 2161e4 ||
      // 哔哩哔哩漫画 Android
      device === "android_bbs" && version >= 1000200;
      if (bridgeIsV2) {
        bridgeIsV2 = await P$1(BridgeMethod.Request);
      }
    };
    const _detectBridgeIsV3 = async () => {
      if (IS_ANDROID) {
        return;
      }
      if (device !== "iphone_comic" && device !== "ipad_comic") {
        return;
      }
      bridgeIsV3 = true;
      bridgeIsV3 = await P$1(BridgeMethod.RequestWithSign);
    };
    const _detectBridgeIsV4 = async () => {
      bridgeIsV4 = device === "iphone" && version > 1e4 ||
      // 哔哩哔哩 iOS 版
      device === "iphone_i" && version >= 1e4 ||
      // 哔哩哔哩 iOS 国际版
      device === "iphone_b" && version > 9360 ||
      // 哔哩哔哩 iOS 概念版
      device === "ipad" && version > 12390 ||
      // 哔哩哔哩 iPad 版
      device === "android" && version >= 601e4 ||
      // 哔哩哔哩 Android
      device === "android_b" && version >= 541e4 ||
      // 哔哩哔哩 Android 概念版
      device === "android_bbs" && version >= 1000200;
      if (bridgeIsV4) {
        bridgeIsV4 = await P$1(BridgeMethod.RequestWithSign);
      }
    };
    const _detectBridgeIsV5 = async () => {
      bridgeIsV5 = device === "android" && version >= 6060100 && version <= 6060210;
      if (bridgeIsV5) {
        bridgeIsV5 = await P$1(BridgeMethod.RequestWithSign);
      }
    };
    const _detectBridgeIsV6 = async () => {
      bridgeIsV6 = device === "android" && version >= 6070600 ||
      // 哔哩哔哩 Android 版
      device === "android_b" && version >= 6070520 ||
      // 哔哩哔哩 Android 概念版
      device === "bstar_a" && version >= 1041e3 ||
      // 新 Android 国际版
      device === "bstar_i" && version >= 1041e3 ||
      // 新 iOS 国际版
      device === "iphone" && version >= 10180 ||
      // 哔哩哔哩 iOS 版
      device === "iphone_b" && version >= 10182 ||
      // 哔哩哔哩 iOS 概念版
      device === "ipad" && version >= 12391;
      if (bridgeIsV6) {
        bridgeIsV6 = await P$1(BridgeMethod.RequestV2);
      }
    };
    const _detectBridgeIsV7 = async () => {
      bridgeIsV7 = device === "harmony" ||
      // Huawei 鸿蒙
      device === "pangu_android" ||
      // 盘古 android
      device === "pangu_ios" ||
      // 盘古 iOS
      device === "android_tv_yst" ||
      // Android TV
      device === "android_hd" ||
      // Android HD 版
      device === "ios_hikari" ||
      // 光呆ios
      device === "android_hikari" ||
      // 光呆安卓
      device === "android_tv_bst" ||
      // Android 百世通
      device === "iphone" && version >= 10030 ||
      // 哔哩哔哩 iOS 版
      device === "iphone_b" && version >= 10030 ||
      // 哔哩哔哩 iOS 概念版
      device === "iphone_i" && version >= 7e7 ||
      // 哔哩哔哩 iOS 国际版
      device === "ipad" && version >= 12420 ||
      // 哔哩哔哩 iPad 版
      device === "biliLink" && version >= 506e4 ||
      // iOS 直播姬 APP
      device === "biliLink_Android" && version >= 5070020;
      if (bridgeIsV7) {
        bridgeIsV7 = await P$1(BridgeMethod.RequestV2);
      }
    };
    _parseUA();
    await _detectBridgeIsV7();
    await _detectBridgeIsV6();
    await _detectBridgeIsV5();
    await _detectBridgeIsV4();
    await _detectBridgeIsV3();
    await _detectBridgeIsV2();
    await _detectBridgeIsV1();
    if (bridgeIsV1) {
      result.version = 1;
    }
    if (bridgeIsV2) {
      result.version = 2;
    }
    if (bridgeIsV3) {
      result.version = 3;
    }
    if (bridgeIsV4) {
      result.version = 4;
    }
    if (bridgeIsV5) {
      result.version = 5;
    }
    if (bridgeIsV6) {
      result.version = 6;
    }
    if (bridgeIsV7) {
      result.version = 7;
    }
    result.isMainApp = ["iphone", "iphone_b", "ipad", "android", "android_b", "harmony"].indexOf(device) !== -1;
    result.uaDevice = device;
    result.uaVersion = version;
    setWindowRuntime(result);
    return result;
  };
  const runtime = async function (ctx, next) {
    setMiddlewarePayloadToCtx(ctx, AppMiddlewareName.Runtime, await execRuntime());
    return await next();
  };
  class HttpSvcRuntime extends HttpSvcMiddleware {
    constructor() {
      super(...arguments);
      __publicField(this, "handler", runtime);
      __publicField(this, "name", AppMiddlewareName.Runtime);
    }
  }
  __publicField(HttpSvcRuntime, "handler", runtime);
  const jsonBody = (ctx, data2, contentType) => {
    if (!ctx.request) return;
    ctx.request.data = JSON.stringify(data2);
    if (!ctx.request.headers) {
      ctx.request.headers = {
        [CONTENT_TYPE_KEY]: ContentType.JSON
      };
    } else if (!contentType) {
      ctx.request.headers[CONTENT_TYPE_KEY] = ContentType.JSON;
    }
  };
  const isEqualContentType = (target, current) => {
    if (!current) return false;
    return current.indexOf(target) > -1;
  };
  const updatePayload = (ctx, rawData) => {
    const payload = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Body);
    setMiddlewarePayloadToCtx(ctx, AppMiddlewareName.Body, {
      ...(payload || {}),
      rawData
    });
  };
  function getDeviceInfo(injectDeviceInfo) {
    return new Promise(resolve => {
      if (IS_NODE) {
        resolve({});
        return;
      }
      if (!f$2) {
        resolve({
          buvid: getCookie("buvid3")
        });
        return;
      }
      P$1(BridgeMethod.GetContainerInfo).then(support => {
        if (support) {
          if (b$1) {
            T$1("global.getContainerInfo", {}).then(res => {
              if (res.code !== 0) return resolve({});
              const info = res.data || {};
              const result = {
                ...info,
                device_id: info.fingerprint,
                build: info.build,
                buvid: info.buvid,
                device_name: info.deviceName ? decodeURIComponent(info.deviceName) : "",
                device_platform: IS_ANDROID ? info.devicePlatform : info.modelName,
                local_id: info.buvid,
                bili_local_id: info.localFingerprint
              };
              if (injectDeviceInfo === true || !isArray$4(injectDeviceInfo)) {
                resolve(result);
                return;
              }
              const append = {};
              injectDeviceInfo.forEach(key => {
                if (result[key]) {
                  append[key] = result[key];
                }
              });
              resolve(append);
            });
            return;
          }
          W$1({
            method: BridgeMethod.GetContainerInfo,
            callback: info => {
              const result = {
                ...info,
                device_id: info.fingerprint,
                build: info.build,
                buvid: info.buvid,
                device_name: decodeURIComponent(info.deviceName),
                device_platform: IS_ANDROID ? info.devicePlatform : info.modelName,
                local_id: info.buvid,
                bili_local_id: info.localFingerprint
              };
              if (injectDeviceInfo === true || !isArray$4(injectDeviceInfo)) {
                resolve(result);
                return;
              }
              const append = {};
              injectDeviceInfo.forEach(key => {
                if (result[key]) {
                  append[key] = result[key];
                }
              });
              resolve(append);
            }
          });
        } else {
          resolve({});
        }
      }).catch(() => {
        resolve({});
      });
    });
  }
  const body = async function (ctx, next, config) {
    if (!ctx.request) return next();
    const {
      method,
      params,
      headers,
      data: data2
    } = ctx.request;
    const runtime2 = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Runtime);
    const {
      stringify: stringify2,
      noTsParams,
      injectDeviceInfo
    } = (config == null ? void 0 : config.payload) || {};
    const suppData = {};
    if (!IS_NODE) {
      if (injectDeviceInfo) {
        Object.assign(suppData, await getDeviceInfo(injectDeviceInfo));
      }
      if (f$2 && D$1()) {
        Object.assign(headers, {
          Accept: "application/json, text/plain, */*"
        }, runtime2.version ? {
          Referer: window.location.href,
          "User-Agent": window.navigator.userAgent
        } : {});
        if ((runtime2.version === 6 || runtime2.version === 7) && noTsParams !== true) {
          suppData.ts = Date.now() / 1e3 | 0;
        }
        if (!IS_ANDROID && runtime2.version === 4 && method === "POST") {
          suppData._bridge_v4_fixed_ = "1";
        }
      }
    }
    if (method === "GET") {
      if (params) {
        Object.assign(params, suppData);
      } else {
        ctx.request.params = {
          ...suppData
        };
      }
    }
    ctx.request.url = buildURL(ctx.request.url, Object.assign(params || {}, method === "GET" && suppData || {}), runtime2);
    if (method === "POST") {
      const isContinue = !["[object Object]", "[object FormData]"].includes(Object.prototype.toString.call(data2));
      if (!isContinue) {
        const rawData = data2;
        const contentType = getContentType(headers);
        if (isFormData(rawData)) {
          const raw2 = {
            ...form2obj(rawData),
            ...suppData
          };
          if (!runtime2.version) {
            const cloneFormData = new FormData();
            Object.keys(raw2).forEach(k2 => {
              cloneFormData.append(k2, raw2[k2]);
            });
            ctx.request.data = cloneFormData;
            updatePayload(ctx, cloneFormData);
            return await next();
          }
          updatePayload(ctx, raw2);
          if (stringify2) {
            jsonBody(ctx, raw2, ContentType.JSON);
            return await next();
          }
          if (!contentType) {
            if (ctx.request.headers) {
              ctx.request.headers[CONTENT_TYPE_KEY] = ContentType.FormData;
            } else {
              ctx.request.headers = {
                [CONTENT_TYPE_KEY]: ContentType.FormData
              };
            }
          }
          ctx.request.data = paramSerializer(raw2, runtime2);
          return await next();
        }
        const raw = {
          ...rawData,
          ...suppData
        };
        updatePayload(ctx, raw);
        if (stringify2) {
          jsonBody(ctx, raw, ContentType.JSON);
          return await next();
        }
        if (isEqualContentType(ContentType.Form, contentType)) {
          ctx.request.data = paramSerializer(raw, runtime2);
        } else if (isEqualContentType(ContentType.JSON, contentType || ContentType.JSON)) {
          jsonBody(ctx, raw, contentType);
        }
      }
    }
    return await next();
  };
  class HttpSvcBody extends HttpSvcMiddleware {
    constructor() {
      super(body);
      __publicField(this, "name", AppMiddlewareName.Body);
    }
  }
  __publicField(HttpSvcBody, "handler", body);
  const getCsrfToken = from => {
    return new Promise(resolve => {
      const token = getCookie("bili_jct", IS_NODE ? from || "_" : "");
      if (!f$2) {
        resolve(token);
        return;
      }
      P$1(BridgeMethod.GetCsrf).then(support => {
        if (!support) {
          resolve(token);
          return;
        }
        if (b$1) {
          T$1(BridgeMethod.GetCsrf, {}).then(res => {
            if (res.code !== 0) return resolve(token);
            return resolve(res.data.csrf || "");
          });
          return;
        }
        W$1({
          method: BridgeMethod.GetCsrf,
          callback: info => {
            resolve((info == null ? void 0 : info.csrf) || "");
          }
        });
      });
    });
  };
  const csrf = async function (ctx, next, config) {
    var _a2, _b2, _c, _d;
    if (!ctx.request) return next();
    const {
      method,
      data: data2,
      headers
    } = ctx.request;
    const runtime2 = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Runtime);
    let csrf2 = "";
    const def = runtime2.version !== 2 && runtime2.version !== 3;
    let paramsFlag = false;
    let dataFlag = false;
    if (method === "GET") {
      if (((_a2 = config == null ? void 0 : config.payload) == null ? void 0 : _a2.params) || def) {
        paramsFlag = true;
      }
    } else if (method === "POST") {
      const contentType = getContentType(headers) || (data2 ? getContentTypeFromData(data2) : ContentType.JSON);
      const isJsonPost = isEqualContentType(ContentType.JSON, contentType);
      if ((_b2 = config == null ? void 0 : config.payload) == null ? void 0 : _b2.params) {
        paramsFlag = true;
      } else if (isJsonPost) {
        paramsFlag = true;
      }
      if ((_c = config == null ? void 0 : config.payload) == null ? void 0 : _c.data) {
        dataFlag = true;
      } else if (!isJsonPost) {
        dataFlag = true;
      }
    }
    if (paramsFlag || dataFlag) {
      csrf2 = await getCsrfToken((headers == null ? void 0 : headers["cookie"]) || (headers == null ? void 0 : headers["Cookie"]));
    }
    if (csrf2) {
      if (config == null ? void 0 : config.payload) {
        config.payload.cache = csrf2;
      } else {
        setMiddlewarePayloadToCtx(ctx, AppMiddlewareName.Csrf, {
          cache: csrf2
        });
      }
      const key = ((_d = config == null ? void 0 : config.payload) == null ? void 0 : _d.key) || "csrf";
      if (paramsFlag) {
        if (ctx.request.params) {
          ctx.request.params[key] = csrf2;
        } else {
          ctx.request.params = {
            [key]: csrf2
          };
        }
      }
      if (dataFlag && data2) {
        if (isFormData(data2)) {
          data2.append(key, csrf2);
        } else {
          if (data2) {
            data2[key] = csrf2;
          } else {
            ctx.request.data = {
              [key]: csrf2
            };
          }
        }
      }
    }
    return await next();
  };
  class HttpSvcCsrf extends HttpSvcMiddleware {
    constructor() {
      super(...arguments);
      __publicField(this, "handler", csrf);
      __publicField(this, "name", AppMiddlewareName.Csrf);
    }
  }
  __publicField(HttpSvcCsrf, "handler", csrf);
  const execSupport = async () => {
    const result = {
      v1: false,
      v2: false
    };
    if (IS_NODE || !f$2 || !D$1()) {
      return result;
    }
    if (window.__HTTP_SVC_APP_UPLOAD_SUPPORT__) {
      return window.__HTTP_SVC_APP_UPLOAD_SUPPORT__;
    }
    if (!IS_ANDROID) {
      result.v1 = await P$1(BridgeMethod.UploadImage);
    }
    result.v2 = await P$1(BridgeMethod.UploadImageV2);
    window.__HTTP_SVC_APP_UPLOAD_SUPPORT__ = result;
    return result;
  };
  const parseData = async (data2, bridgeMethod) => {
    let fileKey = "";
    let fileName = "";
    let fileValue = "";
    const dataObj = {};
    Object.keys(data2).forEach(key => {
      const val2 = data2[key];
      if (isBlob(val2) || isBase64(val2)) {
        fileKey = key;
        fileValue = val2;
        if (isBlob(fileValue)) {
          fileName = fileValue.name || "";
        } else {
          fileName = `upload.${fileValue.substring("data:image/".length, fileValue.indexOf(";base64"))}`;
        }
      } else {
        dataObj[key] = val2;
      }
    });
    if (!fileKey) {
      return null;
    }
    if (fileKey !== "file" && bridgeMethod === BridgeMethod.UploadImage && !b$1) {
      return null;
    }
    if (isBlob(fileValue)) {
      fileValue = await blob2Base64(fileValue);
    }
    return {
      fileKey,
      fileName,
      fileValue,
      dataObj
    };
  };
  const callNativeUpload = async (bridgeMethod, uploadData) => {
    return new Promise((resolve, reject) => {
      const handleData = data2 => {
        if (typeof data2 === "string") {
          return resolve(new Response(null, {
            statusText: data2,
            status: 444,
            headers: {}
          }));
        }
        const {
          response,
          httpStatus
        } = data2;
        if (httpStatus < 200 || httpStatus >= 400) {
          let statusText = "";
          try {
            const res = JSON.parse(response);
            statusText = res.message || response;
          } catch {
            statusText = response;
          }
          resolve(new Response(null, {
            statusText,
            status: httpStatus,
            headers: data2.headers || {}
          }));
          return;
        }
        resolve(new Response(response, {
          status: httpStatus,
          headers: data2.headers || {}
        }));
      };
      if (b$1) {
        T$1(bridgeMethod, uploadData).then(res => {
          if (res.code !== 0) {
            reject(new Error(res.message || `Request error, The callback status is not ok! code: ${res.code}`));
            return;
          }
          handleData(res.data);
        });
        return;
      }
      W$1({
        method: bridgeMethod,
        data: uploadData,
        callback: (status, message) => {
          if (status !== "ok") {
            reject(new Error(message || "Request callback status is not ok!"));
          }
        },
        onLoad: data2 => {
          handleData(data2);
        }
      });
    });
  };
  const appUpload = async ctx => {
    if (IS_NODE) {
      throw new Error("When you are in a Node environment, please use server-side fetch middleware.");
    }
    if (ctx.request && f$2) {
      const {
        url: url2,
        headers
      } = ctx.request;
      const support = await execSupport();
      const bridgeMethod = b$1 ? BridgeMethod.UploadImage : support.v2 ? BridgeMethod.UploadImageV2 : support.v1 ? BridgeMethod.UploadImage : "";
      if (bridgeMethod) {
        const {
          rawData
        } = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Body);
        const uploadData = {
          url: url2,
          base64Data: "",
          header: Object.assign({
            "Content-Type": ContentType.Form
          }, headers || {})
        };
        let result;
        try {
          result = await parseData(rawData || ctx.request.data, bridgeMethod);
        } catch {
          result = null;
        }
        if (result) {
          uploadData.fileName = result.fileName;
          uploadData.name = result.fileKey;
          uploadData.base64Data = result.fileValue;
          uploadData.formData = result.dataObj;
          ctx.response = await callNativeUpload(bridgeMethod, uploadData);
          return true;
        }
      }
    }
    return false;
  };
  const getBridgeMethod = (request2, runtime2, payload) => {
    const contentType = getContentType(request2.headers) || ContentType.JSON;
    const isJsonPost = request2.method === "POST" && contentType === ContentType.JSON;
    if (isJsonPost) {
      if (runtime2.version < 6) {
        return "";
      }
      if (b$1) {
        return BridgeMethod.Request;
      }
      return BridgeMethod.RequestV2;
    }
    if (payload.auth === "app") {
      if (runtime2.version < 3) {
        return BridgeMethod.Request;
      }
      if (runtime2.version < 6) {
        return BridgeMethod.RequestWithSign;
      }
      if (b$1) {
        return BridgeMethod.RequestWithSign;
      }
      return BridgeMethod.RequestWithSignV2;
    }
    if (payload.auth === "web") {
      if (b$1) {
        return BridgeMethod.Request;
      }
      const isOldMainApp = runtime2.version < 6 && runtime2.isMainApp;
      if (isOldMainApp && !IS_ANDROID) {
        return "";
      }
      if (runtime2.version < 3) {
        return BridgeMethod.Request;
      }
      if (runtime2.version < 6) {
        return BridgeMethod.RequestWithSign;
      }
      return BridgeMethod.RequestV2;
    }
    if (runtime2.version < 3) {
      return BridgeMethod.Request;
    }
    if (runtime2.version < 6) {
      return BridgeMethod.RequestWithSign;
    }
    if (b$1) {
      return BridgeMethod.RequestWithSign;
    }
    return BridgeMethod.RequestWithSignV2;
  };
  const appFetch = async (bridgeMethod, ctx, runtime2, payload) => new Promise((resolve, reject) => {
    const {
      data: data2,
      method,
      url: url2,
      headers,
      params
    } = ctx.request;
    const connectData = {
      method,
      url: url2,
      timeout: (ctx.config.timeout || 0) / 1e3,
      header: headers
    };
    if (bridgeMethod === BridgeMethod.Request) {
      connectData.policy = payload.auth === "web" ? "0" : "1";
      if (b$1) {
        connectData.policy = Number(connectData.policy);
      }
    }
    const csrfPayload = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Csrf);
    if (runtime2.version < 6 && (csrfPayload == null ? void 0 : csrfPayload.cache)) {
      connectData.csrfKey = csrfPayload.cache;
    }
    if (b$1) {
      connectData.data = data2 || "";
    } else {
      if (bridgeMethod === BridgeMethod.RequestWithSign) {
        if (method === "GET") {
          connectData.params = params;
        } else {
          const {
            rawData
          } = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Body);
          connectData.params = rawData || {};
        }
      } else if (method === "POST") {
        connectData.data = data2;
      }
    }
    const handleData = data22 => {
      if (typeof data22 === "string") {
        return resolve(new Response(null, {
          statusText: data22,
          status: 444,
          headers: {}
        }));
      }
      const {
        response
      } = data22;
      let httpStatus = data22.httpStatus;
      if (httpStatus < 200 || httpStatus >= 400) {
        let statusText = "";
        try {
          const data3 = JSON.parse(response);
          statusText = data3.message || response;
        } catch {
          statusText = response;
        }
        if (httpStatus > 599 || httpStatus < 200) {
          statusText = `[Status: ${httpStatus}] ${statusText}`;
          httpStatus = 444;
        }
        resolve(new Response(null, {
          statusText,
          status: httpStatus,
          headers: data22.headers || {}
        }));
        return;
      }
      resolve(new Response(response, {
        status: httpStatus,
        headers: data22.headers || {}
      }));
    };
    if (b$1) {
      T$1(bridgeMethod, connectData).then(res => {
        if (res.code !== 0) {
          reject(new Error(res.message || `Request $${connectData.method}:"${connectData.url}" error, The callback status is not ok! code: ${res.code}`));
          return;
        }
        handleData(res.data);
      }).catch(err => {
        reject(err);
      });
      return;
    }
    W$1({
      method: bridgeMethod,
      data: connectData,
      callback: (status, message) => {
        if (status !== "ok") {
          reject(new Error(message || `Request $${connectData.method}:"${connectData.url}" error, The callback status is not ok!`));
        }
      },
      onLoad: data22 => {
        handleData(data22);
      }
    });
  });
  const fetch$1 = async (ctx, next, config) => {
    var _a2, _b2;
    if (IS_NODE) {
      throw new Error("When you are in a Node environment, please use server-side fetch middleware.");
    }
    if (!ctx.request) return await next();
    if (ctx.response) return await next();
    const {
      url: url2,
      method,
      headers,
      credentials
    } = ctx.request;
    const upload = (_a2 = config == null ? void 0 : config.payload) == null ? void 0 : _a2.upload;
    if (f$2 && D$1()) {
      if (upload) {
        const uploadWork = await appUpload(ctx);
        if (uploadWork) return await next();
      } else {
        const runtime2 = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Runtime);
        if (runtime2 == null ? void 0 : runtime2.version) {
          const bridgeMethod = getBridgeMethod(ctx.request, runtime2, (config == null ? void 0 : config.payload) || {});
          if (bridgeMethod) {
            ctx.response = await appFetch(bridgeMethod, ctx, runtime2, (config == null ? void 0 : config.payload) || {});
            return await next();
          }
        }
      }
    }
    if (!window.fetch) {
      throw new Error("When you are in a non-modern browser, please manually polyfill fetch.");
    }
    let body2 = ctx.request.data;
    const {
      rawData
    } = getMiddlewarePayloadFromCtx(ctx, AppMiddlewareName.Body);
    const contentType = getContentType(headers);
    if (contentType === ContentType.FormData && rawData) {
      body2 = obj2form(rawData);
    }
    ctx.response = await window.fetch(url2, {
      method,
      body: body2,
      headers,
      credentials,
      signal: (_b2 = ctx.abortController) == null ? void 0 : _b2.signal
    });
    return await next();
  };
  class HttpSvcAppFetch extends HttpSvcMiddleware {
    constructor(payload) {
      super({
        handler: fetch$1,
        payload
      });
      __publicField(this, "name", AppMiddlewareName.AppFetch);
    }
  }
  __publicField(HttpSvcAppFetch, "handler", fetch$1);
  N$1();
  const IS_UAT = location.hostname.includes("uat-") || location.search.includes("_apiEnv_=uat");
  const IS_PRE = location.hostname.includes("pre-") || location.search.includes("_apiEnv_=pre");
  const origin = `${location.protocol}//${IS_UAT ? "uat-" : IS_PRE ? "pre-" : ""}activity-template.bilibili.co`;
  const managerOrigin = `//${IS_UAT ? "uat-" : IS_PRE ? "pre-" : ""}manager.bilibili.co`;
  new HttpService({
    baseURL: origin
  });
  new HttpService({
    baseURL: managerOrigin
  });
  new HttpService([{
    name: "SET_DEFAULT_HEADERS",
    async handler(ctx, next) {
      if (ctx.request) {
        const {
          method,
          headers
        } = ctx.request;
        if (method === "POST") {
          const key = "Content-Type";
          ctx.request.headers = {
            // assign
            ...(headers || {}),
            // 默认逻辑
            [key]: (headers == null ? void 0 : headers[key]) || "application/x-www-form-urlencoded"
          };
        }
      }
      await next();
    }
  }]);
  const baseRequest = new HttpService({
    fetch: new HttpSvcAppFetch(),
    middlewares: [new HttpSvcRuntime(), new HttpSvcCsrf(), new HttpSvcBody()]
  });
  const request = async params => {
    const res = await baseRequest.request(params);
    if ("_ts_rpc_return_" in res) {
      if (res._ts_rpc_return_.code === 0) {
        return res._ts_rpc_return_.data;
      }
      throw res;
    }
    if (res.code !== 0) {
      throw res;
    }
    return res.data;
  };
  function arrayEach$1(array, iteratee) {
    var index2 = -1,
      length = array == null ? 0 : array.length;
    while (++index2 < length) {
      if (iteratee(array[index2], index2, array) === false) {
        break;
      }
    }
    return array;
  }
  var _arrayEach = arrayEach$1;
  var copyObject$4 = _copyObject,
    keys$2 = keys_1;
  function baseAssign$1(object, source) {
    return object && copyObject$4(source, keys$2(source), object);
  }
  var _baseAssign = baseAssign$1;
  var copyObject$3 = _copyObject,
    keysIn$2 = keysIn_1;
  function baseAssignIn$1(object, source) {
    return object && copyObject$3(source, keysIn$2(source), object);
  }
  var _baseAssignIn = baseAssignIn$1;
  function arrayFilter$1(array, predicate) {
    var index2 = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];
    while (++index2 < length) {
      var value2 = array[index2];
      if (predicate(value2, index2, array)) {
        result[resIndex++] = value2;
      }
    }
    return result;
  }
  var _arrayFilter = arrayFilter$1;
  function stubArray$2() {
    return [];
  }
  var stubArray_1 = stubArray$2;
  var arrayFilter = _arrayFilter,
    stubArray$1 = stubArray_1;
  var objectProto$1 = Object.prototype;
  var propertyIsEnumerable = objectProto$1.propertyIsEnumerable;
  var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
  var getSymbols$3 = !nativeGetSymbols$1 ? stubArray$1 : function (object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols$1(object), function (symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };
  var _getSymbols = getSymbols$3;
  var copyObject$2 = _copyObject,
    getSymbols$2 = _getSymbols;
  function copySymbols$1(source, object) {
    return copyObject$2(source, getSymbols$2(source), object);
  }
  var _copySymbols = copySymbols$1;
  function arrayPush$3(array, values) {
    var index2 = -1,
      length = values.length,
      offset = array.length;
    while (++index2 < length) {
      array[offset + index2] = values[index2];
    }
    return array;
  }
  var _arrayPush = arrayPush$3;
  var arrayPush$2 = _arrayPush,
    getPrototype = _getPrototype,
    getSymbols$1 = _getSymbols,
    stubArray = stubArray_1;
  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var getSymbolsIn$2 = !nativeGetSymbols ? stubArray : function (object) {
    var result = [];
    while (object) {
      arrayPush$2(result, getSymbols$1(object));
      object = getPrototype(object);
    }
    return result;
  };
  var _getSymbolsIn = getSymbolsIn$2;
  var copyObject$1 = _copyObject,
    getSymbolsIn$1 = _getSymbolsIn;
  function copySymbolsIn$1(source, object) {
    return copyObject$1(source, getSymbolsIn$1(source), object);
  }
  var _copySymbolsIn = copySymbolsIn$1;
  var arrayPush$1 = _arrayPush,
    isArray$3 = isArray_1;
  function baseGetAllKeys$2(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray$3(object) ? result : arrayPush$1(result, symbolsFunc(object));
  }
  var _baseGetAllKeys = baseGetAllKeys$2;
  var baseGetAllKeys$1 = _baseGetAllKeys,
    getSymbols = _getSymbols,
    keys$1 = keys_1;
  function getAllKeys$1(object) {
    return baseGetAllKeys$1(object, keys$1, getSymbols);
  }
  var _getAllKeys = getAllKeys$1;
  var baseGetAllKeys = _baseGetAllKeys,
    getSymbolsIn = _getSymbolsIn,
    keysIn$1 = keysIn_1;
  function getAllKeysIn$2(object) {
    return baseGetAllKeys(object, keysIn$1, getSymbolsIn);
  }
  var _getAllKeysIn = getAllKeysIn$2;
  var getNative$3 = _getNative,
    root$3 = _root;
  var DataView$2 = getNative$3(root$3, "DataView");
  var _DataView = DataView$2;
  var getNative$2 = _getNative,
    root$2 = _root;
  var Promise$2 = getNative$2(root$2, "Promise");
  var _Promise = Promise$2;
  var getNative$1 = _getNative,
    root$1 = _root;
  var Set$2 = getNative$1(root$1, "Set");
  var _Set = Set$2;
  var getNative = _getNative,
    root = _root;
  var WeakMap$2 = getNative(root, "WeakMap");
  var _WeakMap = WeakMap$2;
  var DataView$1 = _DataView,
    Map$1 = _Map,
    Promise$1 = _Promise,
    Set$1 = _Set,
    WeakMap$1 = _WeakMap,
    baseGetTag = _baseGetTag,
    toSource = _toSource;
  var mapTag$3 = "[object Map]",
    objectTag$1 = "[object Object]",
    promiseTag = "[object Promise]",
    setTag$3 = "[object Set]",
    weakMapTag$1 = "[object WeakMap]";
  var dataViewTag$2 = "[object DataView]";
  var dataViewCtorString = toSource(DataView$1),
    mapCtorString = toSource(Map$1),
    promiseCtorString = toSource(Promise$1),
    setCtorString = toSource(Set$1),
    weakMapCtorString = toSource(WeakMap$1);
  var getTag$3 = baseGetTag;
  if (DataView$1 && getTag$3(new DataView$1(new ArrayBuffer(1))) != dataViewTag$2 || Map$1 && getTag$3(new Map$1()) != mapTag$3 || Promise$1 && getTag$3(Promise$1.resolve()) != promiseTag || Set$1 && getTag$3(new Set$1()) != setTag$3 || WeakMap$1 && getTag$3(new WeakMap$1()) != weakMapTag$1) {
    getTag$3 = function (value2) {
      var result = baseGetTag(value2),
        Ctor = result == objectTag$1 ? value2.constructor : void 0,
        ctorString = Ctor ? toSource(Ctor) : "";
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag$2;
          case mapCtorString:
            return mapTag$3;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag$3;
          case weakMapCtorString:
            return weakMapTag$1;
        }
      }
      return result;
    };
  }
  var _getTag = getTag$3;
  var objectProto = Object.prototype;
  var hasOwnProperty = objectProto.hasOwnProperty;
  function initCloneArray$1(array) {
    var length = array.length,
      result = new array.constructor(length);
    if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  }
  var _initCloneArray = initCloneArray$1;
  var cloneArrayBuffer$1 = _cloneArrayBuffer;
  function cloneDataView$1(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer$1(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }
  var _cloneDataView = cloneDataView$1;
  var reFlags = /\w*$/;
  function cloneRegExp$1(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }
  var _cloneRegExp = cloneRegExp$1;
  var Symbol$2 = _Symbol;
  var symbolProto = Symbol$2 ? Symbol$2.prototype : void 0,
    symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
  function cloneSymbol$1(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  }
  var _cloneSymbol = cloneSymbol$1;
  var cloneArrayBuffer = _cloneArrayBuffer,
    cloneDataView = _cloneDataView,
    cloneRegExp = _cloneRegExp,
    cloneSymbol = _cloneSymbol,
    cloneTypedArray = _cloneTypedArray;
  var boolTag$1 = "[object Boolean]",
    dateTag$1 = "[object Date]",
    mapTag$2 = "[object Map]",
    numberTag$1 = "[object Number]",
    regexpTag$1 = "[object RegExp]",
    setTag$2 = "[object Set]",
    stringTag$1 = "[object String]",
    symbolTag$1 = "[object Symbol]";
  var arrayBufferTag$1 = "[object ArrayBuffer]",
    dataViewTag$1 = "[object DataView]",
    float32Tag$1 = "[object Float32Array]",
    float64Tag$1 = "[object Float64Array]",
    int8Tag$1 = "[object Int8Array]",
    int16Tag$1 = "[object Int16Array]",
    int32Tag$1 = "[object Int32Array]",
    uint8Tag$1 = "[object Uint8Array]",
    uint8ClampedTag$1 = "[object Uint8ClampedArray]",
    uint16Tag$1 = "[object Uint16Array]",
    uint32Tag$1 = "[object Uint32Array]";
  function initCloneByTag$1(object, tag, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag$1:
        return cloneArrayBuffer(object);
      case boolTag$1:
      case dateTag$1:
        return new Ctor(+object);
      case dataViewTag$1:
        return cloneDataView(object, isDeep);
      case float32Tag$1:
      case float64Tag$1:
      case int8Tag$1:
      case int16Tag$1:
      case int32Tag$1:
      case uint8Tag$1:
      case uint8ClampedTag$1:
      case uint16Tag$1:
      case uint32Tag$1:
        return cloneTypedArray(object, isDeep);
      case mapTag$2:
        return new Ctor();
      case numberTag$1:
      case stringTag$1:
        return new Ctor(object);
      case regexpTag$1:
        return cloneRegExp(object);
      case setTag$2:
        return new Ctor();
      case symbolTag$1:
        return cloneSymbol(object);
    }
  }
  var _initCloneByTag = initCloneByTag$1;
  var getTag$2 = _getTag,
    isObjectLike$1 = isObjectLike_1;
  var mapTag$1 = "[object Map]";
  function baseIsMap$1(value2) {
    return isObjectLike$1(value2) && getTag$2(value2) == mapTag$1;
  }
  var _baseIsMap = baseIsMap$1;
  var baseIsMap = _baseIsMap,
    baseUnary$1 = _baseUnary,
    nodeUtil$1 = _nodeUtilExports;
  var nodeIsMap = nodeUtil$1 && nodeUtil$1.isMap;
  var isMap$1 = nodeIsMap ? baseUnary$1(nodeIsMap) : baseIsMap;
  var isMap_1 = isMap$1;
  var getTag$1 = _getTag,
    isObjectLike = isObjectLike_1;
  var setTag$1 = "[object Set]";
  function baseIsSet$1(value2) {
    return isObjectLike(value2) && getTag$1(value2) == setTag$1;
  }
  var _baseIsSet = baseIsSet$1;
  var baseIsSet = _baseIsSet,
    baseUnary = _baseUnary,
    nodeUtil = _nodeUtilExports;
  var nodeIsSet = nodeUtil && nodeUtil.isSet;
  var isSet$1 = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
  var isSet_1 = isSet$1;
  var Stack = _Stack,
    arrayEach = _arrayEach,
    assignValue$1 = _assignValue,
    baseAssign = _baseAssign,
    baseAssignIn = _baseAssignIn,
    cloneBuffer = _cloneBufferExports,
    copyArray = _copyArray,
    copySymbols = _copySymbols,
    copySymbolsIn = _copySymbolsIn,
    getAllKeys = _getAllKeys,
    getAllKeysIn$1 = _getAllKeysIn,
    getTag = _getTag,
    initCloneArray = _initCloneArray,
    initCloneByTag = _initCloneByTag,
    initCloneObject = _initCloneObject,
    isArray$2 = isArray_1,
    isBuffer = isBufferExports,
    isMap = isMap_1,
    isObject$1 = isObject_1$1,
    isSet = isSet_1,
    keys = keys_1,
    keysIn = keysIn_1;
  var CLONE_DEEP_FLAG$1 = 1,
    CLONE_FLAT_FLAG$1 = 2,
    CLONE_SYMBOLS_FLAG$1 = 4;
  var argsTag = "[object Arguments]",
    arrayTag = "[object Array]",
    boolTag = "[object Boolean]",
    dateTag = "[object Date]",
    errorTag = "[object Error]",
    funcTag = "[object Function]",
    genTag = "[object GeneratorFunction]",
    mapTag = "[object Map]",
    numberTag = "[object Number]",
    objectTag = "[object Object]",
    regexpTag = "[object RegExp]",
    setTag = "[object Set]",
    stringTag = "[object String]",
    symbolTag = "[object Symbol]",
    weakMapTag = "[object WeakMap]";
  var arrayBufferTag = "[object ArrayBuffer]",
    dataViewTag = "[object DataView]",
    float32Tag = "[object Float32Array]",
    float64Tag = "[object Float64Array]",
    int8Tag = "[object Int8Array]",
    int16Tag = "[object Int16Array]",
    int32Tag = "[object Int32Array]",
    uint8Tag = "[object Uint8Array]",
    uint8ClampedTag = "[object Uint8ClampedArray]",
    uint16Tag = "[object Uint16Array]",
    uint32Tag = "[object Uint32Array]";
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
  function baseClone$1(value2, bitmask, customizer, key, object, stack) {
    var result,
      isDeep = bitmask & CLONE_DEEP_FLAG$1,
      isFlat = bitmask & CLONE_FLAT_FLAG$1,
      isFull = bitmask & CLONE_SYMBOLS_FLAG$1;
    if (customizer) {
      result = object ? customizer(value2, key, object, stack) : customizer(value2);
    }
    if (result !== void 0) {
      return result;
    }
    if (!isObject$1(value2)) {
      return value2;
    }
    var isArr = isArray$2(value2);
    if (isArr) {
      result = initCloneArray(value2);
      if (!isDeep) {
        return copyArray(value2, result);
      }
    } else {
      var tag = getTag(value2),
        isFunc = tag == funcTag || tag == genTag;
      if (isBuffer(value2)) {
        return cloneBuffer(value2, isDeep);
      }
      if (tag == objectTag || tag == argsTag || isFunc && !object) {
        result = isFlat || isFunc ? {} : initCloneObject(value2);
        if (!isDeep) {
          return isFlat ? copySymbolsIn(value2, baseAssignIn(result, value2)) : copySymbols(value2, baseAssign(result, value2));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value2 : {};
        }
        result = initCloneByTag(value2, tag, isDeep);
      }
    }
    stack || (stack = new Stack());
    var stacked = stack.get(value2);
    if (stacked) {
      return stacked;
    }
    stack.set(value2, result);
    if (isSet(value2)) {
      value2.forEach(function (subValue) {
        result.add(baseClone$1(subValue, bitmask, customizer, subValue, value2, stack));
      });
    } else if (isMap(value2)) {
      value2.forEach(function (subValue, key2) {
        result.set(key2, baseClone$1(subValue, bitmask, customizer, key2, value2, stack));
      });
    }
    var keysFunc = isFull ? isFlat ? getAllKeysIn$1 : getAllKeys : isFlat ? keysIn : keys;
    var props = isArr ? void 0 : keysFunc(value2);
    arrayEach(props || value2, function (subValue, key2) {
      if (props) {
        key2 = subValue;
        subValue = value2[key2];
      }
      assignValue$1(result, key2, baseClone$1(subValue, bitmask, customizer, key2, value2, stack));
    });
    return result;
  }
  var _baseClone = baseClone$1;
  function last$1(array) {
    var length = array == null ? 0 : array.length;
    return length ? array[length - 1] : void 0;
  }
  var last_1 = last$1;
  function baseSlice$1(array, start, end) {
    var index2 = -1,
      length = array.length;
    if (start < 0) {
      start = -start > length ? 0 : length + start;
    }
    end = end > length ? length : end;
    if (end < 0) {
      end += length;
    }
    length = start > end ? 0 : end - start >>> 0;
    start >>>= 0;
    var result = Array(length);
    while (++index2 < length) {
      result[index2] = array[index2 + start];
    }
    return result;
  }
  var _baseSlice = baseSlice$1;
  var baseGet$1 = _baseGet,
    baseSlice = _baseSlice;
  function parent$1(object, path) {
    return path.length < 2 ? object : baseGet$1(object, baseSlice(path, 0, -1));
  }
  var _parent = parent$1;
  var castPath$4 = _castPath,
    last = last_1,
    parent = _parent,
    toKey$2 = _toKey;
  function baseUnset$1(object, path) {
    path = castPath$4(path, object);
    object = parent(object, path);
    return object == null || delete object[toKey$2(last(path))];
  }
  var _baseUnset = baseUnset$1;
  var isPlainObject = isPlainObject_1;
  function customOmitClone$1(value2) {
    return isPlainObject(value2) ? void 0 : value2;
  }
  var _customOmitClone = customOmitClone$1;
  var Symbol$1 = _Symbol,
    isArguments$1 = isArguments_1,
    isArray$1 = isArray_1;
  var spreadableSymbol = Symbol$1 ? Symbol$1.isConcatSpreadable : void 0;
  function isFlattenable$1(value2) {
    return isArray$1(value2) || isArguments$1(value2) || !!(spreadableSymbol && value2 && value2[spreadableSymbol]);
  }
  var _isFlattenable = isFlattenable$1;
  var arrayPush = _arrayPush,
    isFlattenable = _isFlattenable;
  function baseFlatten$1(array, depth, predicate, isStrict, result) {
    var index2 = -1,
      length = array.length;
    predicate || (predicate = isFlattenable);
    result || (result = []);
    while (++index2 < length) {
      var value2 = array[index2];
      if (depth > 0 && predicate(value2)) {
        if (depth > 1) {
          baseFlatten$1(value2, depth - 1, predicate, isStrict, result);
        } else {
          arrayPush(result, value2);
        }
      } else if (!isStrict) {
        result[result.length] = value2;
      }
    }
    return result;
  }
  var _baseFlatten = baseFlatten$1;
  var baseFlatten = _baseFlatten;
  function flatten$1(array) {
    var length = array == null ? 0 : array.length;
    return length ? baseFlatten(array, 1) : [];
  }
  var flatten_1 = flatten$1;
  var flatten = flatten_1,
    overRest = _overRest,
    setToString = _setToString;
  function flatRest$2(func) {
    return setToString(overRest(func, void 0, flatten), func + "");
  }
  var _flatRest = flatRest$2;
  var arrayMap = _arrayMap,
    baseClone = _baseClone,
    baseUnset = _baseUnset,
    castPath$3 = _castPath,
    copyObject = _copyObject,
    customOmitClone = _customOmitClone,
    flatRest$1 = _flatRest,
    getAllKeysIn = _getAllKeysIn;
  var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;
  flatRest$1(function (object, paths) {
    var result = {};
    if (object == null) {
      return result;
    }
    var isDeep = false;
    paths = arrayMap(paths, function (path) {
      path = castPath$3(path, object);
      isDeep || (isDeep = path.length > 1);
      return path;
    });
    copyObject(object, getAllKeysIn(object), result);
    if (isDeep) {
      result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
    }
    var length = paths.length;
    while (length--) {
      baseUnset(result, paths[length]);
    }
    return result;
  });
  var assignValue = _assignValue,
    castPath$2 = _castPath,
    isIndex$1 = _isIndex,
    isObject = isObject_1$1,
    toKey$1 = _toKey;
  function baseSet$1(object, path, value2, customizer) {
    if (!isObject(object)) {
      return object;
    }
    path = castPath$2(path, object);
    var index2 = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;
    while (nested != null && ++index2 < length) {
      var key = toKey$1(path[index2]),
        newValue = value2;
      if (key === "__proto__" || key === "constructor" || key === "prototype") {
        return object;
      }
      if (index2 != lastIndex) {
        var objValue = nested[key];
        newValue = customizer ? customizer(objValue, key, nested) : void 0;
        if (newValue === void 0) {
          newValue = isObject(objValue) ? objValue : isIndex$1(path[index2 + 1]) ? [] : {};
        }
      }
      assignValue(nested, key, newValue);
      nested = nested[key];
    }
    return object;
  }
  var _baseSet = baseSet$1;
  var baseGet = _baseGet,
    baseSet = _baseSet,
    castPath$1 = _castPath;
  function basePickBy$1(object, paths, predicate) {
    var index2 = -1,
      length = paths.length,
      result = {};
    while (++index2 < length) {
      var path = paths[index2],
        value2 = baseGet(object, path);
      if (predicate(value2, path)) {
        baseSet(result, castPath$1(path, object), value2);
      }
    }
    return result;
  }
  var _basePickBy = basePickBy$1;
  function baseHasIn$1(object, key) {
    return object != null && key in Object(object);
  }
  var _baseHasIn = baseHasIn$1;
  var castPath = _castPath,
    isArguments = isArguments_1,
    isArray = isArray_1,
    isIndex = _isIndex,
    isLength = isLength_1,
    toKey = _toKey;
  function hasPath$1(object, path, hasFunc) {
    path = castPath(path, object);
    var index2 = -1,
      length = path.length,
      result = false;
    while (++index2 < length) {
      var key = toKey(path[index2]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index2 != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
  }
  var _hasPath = hasPath$1;
  var baseHasIn = _baseHasIn,
    hasPath = _hasPath;
  function hasIn$1(object, path) {
    return object != null && hasPath(object, path, baseHasIn);
  }
  var hasIn_1 = hasIn$1;
  var basePickBy = _basePickBy,
    hasIn = hasIn_1;
  function basePick$1(object, paths) {
    return basePickBy(object, paths, function (value2, path) {
      return hasIn(object, path);
    });
  }
  var _basePick = basePick$1;
  var basePick = _basePick,
    flatRest = _flatRest;
  flatRest(function (object, paths) {
    return object == null ? {} : basePick(object, paths);
  });
  const dateUtil = {
    // 解决在 safari 中，某些时间字符串生成时间失败的问题
    convertDateStr(dateStr) {
      return dateStr.replace(/-/g, "/");
    },
    new(time2) {
      if (typeof time2 === "string") {
        return new Date(dateUtil.convertDateStr(time2));
      }
      return new Date(time2);
    },
    format(date, format) {
      if (!dateUtil.isValid(date)) {
        console.error(new Error("无效的 date 对象"));
        return format;
      }
      const formatMap = {
        YYYY: () => {
          return String(date.getFullYear());
        },
        YY: () => {
          return formatMap.YYYY().slice(2, 4);
        },
        MM: () => {
          return formatMap.M().padStart(2, "0");
        },
        M: () => {
          return String(date.getMonth() + 1);
        },
        DD: () => {
          return formatMap.D().padStart(2, "0");
        },
        D: () => {
          return String(date.getDate());
        },
        HH: () => {
          return formatMap.H().padStart(2, "0");
        },
        H: () => {
          return String(date.getHours());
        },
        mm: () => {
          return formatMap.m().padStart(2, "0");
        },
        m: () => {
          return String(date.getMinutes());
        },
        ss: () => {
          return formatMap.s().padStart(2, "0");
        },
        s: () => {
          return String(date.getSeconds());
        }
      };
      return Object.keys(formatMap).reduce((res, key) => {
        const regexp = new RegExp(key, "g");
        return res.replace(regexp, formatMap[key]());
      }, format);
    },
    isValid(date) {
      return date instanceof Date && !Number.isNaN(date.getTime());
    },
    startOf(date, unit) {
      const dateCopy = new Date(date);
      const unitMap = {
        millisecond() {
          dateCopy.setMilliseconds(0);
        },
        second() {
          dateCopy.setSeconds(0);
        },
        minute() {
          dateCopy.setMinutes(0);
        },
        hour() {
          dateCopy.setHours(0);
        },
        day() {
          dateCopy.setDate(1);
        }
      };
      const weekUnitMap = {
        millisecond: unitMap.millisecond,
        second: unitMap.second,
        minute: unitMap.minute,
        hour: unitMap.hour,
        week() {
          const dayIndex = dateCopy.getDay();
          const diff = (dayIndex === 0 ? 7 : dayIndex) - 1;
          dateCopy.setDate(dateCopy.getDate() - diff);
        }
      };
      if (unit === "week") {
        for (const key in weekUnitMap) {
          weekUnitMap[key]();
        }
      } else {
        for (const key in unitMap) {
          if (key === unit) {
            break;
          }
          unitMap[key]();
        }
      }
      return dateCopy;
    },
    endOf(date, unit) {
      const dateCopy = new Date(date);
      const unitMap = {
        millisecond() {
          dateCopy.setMilliseconds(999);
        },
        second() {
          dateCopy.setSeconds(59);
        },
        minute() {
          dateCopy.setMinutes(59);
        },
        hour() {
          dateCopy.setHours(23);
        },
        day() {
          const tempDate = new Date(dateCopy.getFullYear(), dateCopy.getMonth() + 1, 0);
          dateCopy.setDate(tempDate.getDate());
        }
      };
      const weekUnitMap = {
        millisecond: unitMap.millisecond,
        second: unitMap.second,
        minute: unitMap.minute,
        hour: unitMap.hour,
        week() {
          const dayIndex = dateCopy.getDay();
          const diff = 7 - (dayIndex === 0 ? 7 : dayIndex);
          dateCopy.setDate(dateCopy.getDate() + diff);
        }
      };
      if (unit === "week") {
        for (const key in weekUnitMap) {
          weekUnitMap[key]();
        }
      } else {
        for (const key in unitMap) {
          if (key === unit) {
            break;
          }
          unitMap[key]();
        }
      }
      return dateCopy;
    },
    add(date, value2, unit) {
      const dateCopy = new Date(date);
      const unitStrMap = {
        second: "seconds",
        minute: "minutes",
        hour: "hours",
        day: "days",
        week: "weeks",
        month: "months"
      };
      unit = unitStrMap[unit] || unit;
      const unitMap = {
        seconds() {
          dateCopy.setSeconds(dateCopy.getSeconds() + value2);
        },
        minutes() {
          dateCopy.setMinutes(dateCopy.getMinutes() + value2);
        },
        hours() {
          dateCopy.setHours(dateCopy.getHours() + value2);
        },
        days() {
          dateCopy.setDate(dateCopy.getDate() + value2);
        },
        weeks() {
          dateCopy.setDate(dateCopy.getDate() + value2 * 7);
        },
        months() {
          dateCopy.setMonth(dateCopy.getMonth() + value2);
        }
      };
      unitMap[unit]();
      return dateCopy;
    }
  };
  N$1();
  function e$1(e2, t2) {
    if (null == e2) return {};
    var n2 = {};
    for (var r2 in e2) if ({}.hasOwnProperty.call(e2, r2)) {
      if (t2.includes(r2)) continue;
      n2[r2] = e2[r2];
    }
    return n2;
  }
  function t$1(e2, t2, n2, r2, a2, i2, o2) {
    try {
      var s2 = e2[i2](o2),
        u2 = s2.value;
    } catch (e3) {
      return void n2(e3);
    }
    s2.done ? t2(u2) : Promise.resolve(u2).then(r2, a2);
  }
  function n$1(e2) {
    return function () {
      var n2 = this,
        r2 = arguments;
      return new Promise(function (a2, i2) {
        var o2 = e2.apply(n2, r2);
        function s2(e3) {
          t$1(o2, a2, i2, s2, u2, "next", e3);
        }
        function u2(e3) {
          t$1(o2, a2, i2, s2, u2, "throw", e3);
        }
        s2(void 0);
      });
    };
  }
  var r$1 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
  function a$2(e2) {
    return e2 && e2.__esModule && Object.prototype.hasOwnProperty.call(e2, "default") ? e2.default : e2;
  }
  function i$1(e2, t2) {
    return e2(t2 = {
      exports: {}
    }, t2.exports), t2.exports;
  }
  var o$2 = i$1(function (e2) {
    function t2(n2) {
      return e2.exports = t2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e3) {
        return typeof e3;
      } : function (e3) {
        return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
      }, e2.exports.__esModule = true, e2.exports.default = e2.exports, t2(n2);
    }
    e2.exports = t2, e2.exports.__esModule = true, e2.exports.default = e2.exports;
  });
  a$2(o$2);
  var s = i$1(function (e2) {
    var t2 = o$2.default;
    function n2() {
      e2.exports = n2 = function () {
        return a2;
      }, e2.exports.__esModule = true, e2.exports.default = e2.exports;
      var r2,
        a2 = {},
        i2 = Object.prototype,
        o2 = i2.hasOwnProperty,
        s2 = Object.defineProperty || function (e3, t3, n3) {
          e3[t3] = n3.value;
        },
        u2 = "function" == typeof Symbol ? Symbol : {},
        c2 = u2.iterator || "@@iterator",
        l2 = u2.asyncIterator || "@@asyncIterator",
        f2 = u2.toStringTag || "@@toStringTag";
      function p2(e3, t3, n3) {
        return Object.defineProperty(e3, t3, {
          value: n3,
          enumerable: true,
          configurable: true,
          writable: true
        }), e3[t3];
      }
      try {
        p2({}, "");
      } catch (r3) {
        p2 = function (e3, t3, n3) {
          return e3[t3] = n3;
        };
      }
      function d2(e3, t3, n3, r3) {
        var a3 = Object.create((t3 && t3.prototype instanceof y2 ? t3 : y2).prototype),
          i3 = new M2(r3 || []);
        return s2(a3, "_invoke", {
          value: x2(e3, n3, i3)
        }), a3;
      }
      function v2(e3, t3, n3) {
        try {
          return {
            type: "normal",
            arg: e3.call(t3, n3)
          };
        } catch (e4) {
          return {
            type: "throw",
            arg: e4
          };
        }
      }
      a2.wrap = d2;
      var h2 = "suspendedStart",
        _2 = "suspendedYield",
        m2 = "executing",
        b2 = "completed",
        g2 = {};
      function y2() {}
      function I2() {}
      function P2() {}
      var w2 = {};
      p2(w2, c2, function () {
        return this;
      });
      var L2 = Object.getPrototypeOf,
        E2 = L2 && L2(L2(R2([])));
      E2 && E2 !== i2 && o2.call(E2, c2) && (w2 = E2);
      var O2 = P2.prototype = y2.prototype = Object.create(w2);
      function k2(e3) {
        ["next", "throw", "return"].forEach(function (t3) {
          p2(e3, t3, function (e4) {
            return this._invoke(t3, e4);
          });
        });
      }
      function A2(e3, n3) {
        function r3(a4, i3, s3, u3) {
          var c3 = v2(e3[a4], e3, i3);
          if ("throw" !== c3.type) {
            var l3 = c3.arg,
              f3 = l3.value;
            return f3 && "object" == t2(f3) && o2.call(f3, "__await") ? n3.resolve(f3.__await).then(function (e4) {
              r3("next", e4, s3, u3);
            }, function (e4) {
              r3("throw", e4, s3, u3);
            }) : n3.resolve(f3).then(function (e4) {
              l3.value = e4, s3(l3);
            }, function (e4) {
              return r3("throw", e4, s3, u3);
            });
          }
          u3(c3.arg);
        }
        var a3;
        s2(this, "_invoke", {
          value: function (e4, t3) {
            function i3() {
              return new n3(function (n4, a4) {
                r3(e4, t3, n4, a4);
              });
            }
            return a3 = a3 ? a3.then(i3, i3) : i3();
          }
        });
      }
      function x2(e3, t3, n3) {
        var a3 = h2;
        return function (i3, o3) {
          if (a3 === m2) throw Error("Generator is already running");
          if (a3 === b2) {
            if ("throw" === i3) throw o3;
            return {
              value: r2,
              done: true
            };
          }
          for (n3.method = i3, n3.arg = o3;;) {
            var s3 = n3.delegate;
            if (s3) {
              var u3 = N2(s3, n3);
              if (u3) {
                if (u3 === g2) continue;
                return u3;
              }
            }
            if ("next" === n3.method) n3.sent = n3._sent = n3.arg;else if ("throw" === n3.method) {
              if (a3 === h2) throw a3 = b2, n3.arg;
              n3.dispatchException(n3.arg);
            } else "return" === n3.method && n3.abrupt("return", n3.arg);
            a3 = m2;
            var c3 = v2(e3, t3, n3);
            if ("normal" === c3.type) {
              if (a3 = n3.done ? b2 : _2, c3.arg === g2) continue;
              return {
                value: c3.arg,
                done: n3.done
              };
            }
            "throw" === c3.type && (a3 = b2, n3.method = "throw", n3.arg = c3.arg);
          }
        };
      }
      function N2(e3, t3) {
        var n3 = t3.method,
          a3 = e3.iterator[n3];
        if (a3 === r2) return t3.delegate = null, "throw" === n3 && e3.iterator.return && (t3.method = "return", t3.arg = r2, N2(e3, t3), "throw" === t3.method) || "return" !== n3 && (t3.method = "throw", t3.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), g2;
        var i3 = v2(a3, e3.iterator, t3.arg);
        if ("throw" === i3.type) return t3.method = "throw", t3.arg = i3.arg, t3.delegate = null, g2;
        var o3 = i3.arg;
        return o3 ? o3.done ? (t3[e3.resultName] = o3.value, t3.next = e3.nextLoc, "return" !== t3.method && (t3.method = "next", t3.arg = r2), t3.delegate = null, g2) : o3 : (t3.method = "throw", t3.arg = new TypeError("iterator result is not an object"), t3.delegate = null, g2);
      }
      function S2(e3) {
        var t3 = {
          tryLoc: e3[0]
        };
        1 in e3 && (t3.catchLoc = e3[1]), 2 in e3 && (t3.finallyLoc = e3[2], t3.afterLoc = e3[3]), this.tryEntries.push(t3);
      }
      function C2(e3) {
        var t3 = e3.completion || {};
        t3.type = "normal", delete t3.arg, e3.completion = t3;
      }
      function M2(e3) {
        this.tryEntries = [{
          tryLoc: "root"
        }], e3.forEach(S2, this), this.reset(true);
      }
      function R2(e3) {
        if (e3 || "" === e3) {
          var n3 = e3[c2];
          if (n3) return n3.call(e3);
          if ("function" == typeof e3.next) return e3;
          if (!isNaN(e3.length)) {
            var a3 = -1,
              i3 = function t3() {
                for (; ++a3 < e3.length;) if (o2.call(e3, a3)) return t3.value = e3[a3], t3.done = false, t3;
                return t3.value = r2, t3.done = true, t3;
              };
            return i3.next = i3;
          }
        }
        throw new TypeError(t2(e3) + " is not iterable");
      }
      return I2.prototype = P2, s2(O2, "constructor", {
        value: P2,
        configurable: true
      }), s2(P2, "constructor", {
        value: I2,
        configurable: true
      }), I2.displayName = p2(P2, f2, "GeneratorFunction"), a2.isGeneratorFunction = function (e3) {
        var t3 = "function" == typeof e3 && e3.constructor;
        return !!t3 && (t3 === I2 || "GeneratorFunction" === (t3.displayName || t3.name));
      }, a2.mark = function (e3) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(e3, P2) : (e3.__proto__ = P2, p2(e3, f2, "GeneratorFunction")), e3.prototype = Object.create(O2), e3;
      }, a2.awrap = function (e3) {
        return {
          __await: e3
        };
      }, k2(A2.prototype), p2(A2.prototype, l2, function () {
        return this;
      }), a2.AsyncIterator = A2, a2.async = function (e3, t3, n3, r3, i3) {
        void 0 === i3 && (i3 = Promise);
        var o3 = new A2(d2(e3, t3, n3, r3), i3);
        return a2.isGeneratorFunction(t3) ? o3 : o3.next().then(function (e4) {
          return e4.done ? e4.value : o3.next();
        });
      }, k2(O2), p2(O2, f2, "Generator"), p2(O2, c2, function () {
        return this;
      }), p2(O2, "toString", function () {
        return "[object Generator]";
      }), a2.keys = function (e3) {
        var t3 = Object(e3),
          n3 = [];
        for (var r3 in t3) n3.push(r3);
        return n3.reverse(), function e4() {
          for (; n3.length;) {
            var r4 = n3.pop();
            if (r4 in t3) return e4.value = r4, e4.done = false, e4;
          }
          return e4.done = true, e4;
        };
      }, a2.values = R2, M2.prototype = {
        constructor: M2,
        reset: function (e3) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = r2, this.done = false, this.delegate = null, this.method = "next", this.arg = r2, this.tryEntries.forEach(C2), !e3) for (var t3 in this) "t" === t3.charAt(0) && o2.call(this, t3) && !isNaN(+t3.slice(1)) && (this[t3] = r2);
        },
        stop: function () {
          this.done = true;
          var e3 = this.tryEntries[0].completion;
          if ("throw" === e3.type) throw e3.arg;
          return this.rval;
        },
        dispatchException: function (e3) {
          if (this.done) throw e3;
          var t3 = this;
          function n3(n4, a4) {
            return s3.type = "throw", s3.arg = e3, t3.next = n4, a4 && (t3.method = "next", t3.arg = r2), !!a4;
          }
          for (var a3 = this.tryEntries.length - 1; a3 >= 0; --a3) {
            var i3 = this.tryEntries[a3],
              s3 = i3.completion;
            if ("root" === i3.tryLoc) return n3("end");
            if (i3.tryLoc <= this.prev) {
              var u3 = o2.call(i3, "catchLoc"),
                c3 = o2.call(i3, "finallyLoc");
              if (u3 && c3) {
                if (this.prev < i3.catchLoc) return n3(i3.catchLoc, true);
                if (this.prev < i3.finallyLoc) return n3(i3.finallyLoc);
              } else if (u3) {
                if (this.prev < i3.catchLoc) return n3(i3.catchLoc, true);
              } else {
                if (!c3) throw Error("try statement without catch or finally");
                if (this.prev < i3.finallyLoc) return n3(i3.finallyLoc);
              }
            }
          }
        },
        abrupt: function (e3, t3) {
          for (var n3 = this.tryEntries.length - 1; n3 >= 0; --n3) {
            var r3 = this.tryEntries[n3];
            if (r3.tryLoc <= this.prev && o2.call(r3, "finallyLoc") && this.prev < r3.finallyLoc) {
              var a3 = r3;
              break;
            }
          }
          a3 && ("break" === e3 || "continue" === e3) && a3.tryLoc <= t3 && t3 <= a3.finallyLoc && (a3 = null);
          var i3 = a3 ? a3.completion : {};
          return i3.type = e3, i3.arg = t3, a3 ? (this.method = "next", this.next = a3.finallyLoc, g2) : this.complete(i3);
        },
        complete: function (e3, t3) {
          if ("throw" === e3.type) throw e3.arg;
          return "break" === e3.type || "continue" === e3.type ? this.next = e3.arg : "return" === e3.type ? (this.rval = this.arg = e3.arg, this.method = "return", this.next = "end") : "normal" === e3.type && t3 && (this.next = t3), g2;
        },
        finish: function (e3) {
          for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
            var n3 = this.tryEntries[t3];
            if (n3.finallyLoc === e3) return this.complete(n3.completion, n3.afterLoc), C2(n3), g2;
          }
        },
        catch: function (e3) {
          for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
            var n3 = this.tryEntries[t3];
            if (n3.tryLoc === e3) {
              var r3 = n3.completion;
              if ("throw" === r3.type) {
                var a3 = r3.arg;
                C2(n3);
              }
              return a3;
            }
          }
          throw Error("illegal catch attempt");
        },
        delegateYield: function (e3, t3, n3) {
          return this.delegate = {
            iterator: R2(e3),
            resultName: t3,
            nextLoc: n3
          }, "next" === this.method && (this.arg = r2), g2;
        }
      }, a2;
    }
    e2.exports = n2, e2.exports.__esModule = true, e2.exports.default = e2.exports;
  });
  a$2(s);
  var u = s(),
    c$1 = u;
  try {
    regeneratorRuntime = u;
  } catch (e2) {
    "object" == typeof globalThis ? globalThis.regeneratorRuntime = u : Function("r", "regeneratorRuntime = r")(u);
  }
  var l$1 = function (e2, t2) {
    return Object.prototype.hasOwnProperty.call(e2, t2);
  };
  function f$1(e2, t2, n2) {
    for (var r2 = Reflect.ownKeys(t2), a2 = Object.defineProperty, i2 = Object.getOwnPropertyDescriptor, o2 = 0; o2 < r2.length; o2++) {
      var s2 = r2[o2];
      l$1(e2, s2) || n2 && l$1(n2, s2) || a2(e2, s2, i2(t2, s2));
    }
  }
  function p$1(e2, t2) {
    return {
      enumerable: !(1 & e2),
      configurable: !(2 & e2),
      writable: !(4 & e2),
      value: t2
    };
  }
  function d$1(e2, t2, n2) {
    Object.defineProperty(e2, t2, p$1(1, n2));
  }
  var v = "3.0.6",
    h = "__awesome",
    _ = self[h] = self[h] || {},
    m = _[v] = _[v] || {};
  function b(e2, t2, n2) {
    try {
      Object.defineProperty(n2, e2, p$1(0, t2));
    } catch (r2) {
      n2[e2] = t2;
    }
    return t2;
  }
  function g(e2, t2) {
    var n2 = e2.global,
      r2 = e2.target,
      a2 = e2.forced,
      i2 = n2 ? m[n2] : m,
      o2 = i2[r2] = i2[r2] || b(r2, {}, i2);
    if (o2) for (var s2 in t2) {
      var u2 = t2[s2],
        c2 = o2[s2];
      if (!a2 && void 0 !== c2) {
        if (typeof u2 == typeof c2) continue;
        f$1(u2, c2);
      }
      if ((e2.sham || u2 && u2.sham || c2 && c2.sham) && d$1(u2, "sham", true), "function" == typeof u2) {
        var p2,
          v2 = null != (p2 = e2.name) ? p2 : s2;
        l$1(u2, "name") && u2.name === v2 || d$1(u2, "name", v2);
      }
      d$1(o2, s2, u2);
    }
    return o2;
  }
  function y(e2, t2) {
    return m[e2] = m[e2] || b(e2, void 0 !== t2 ? t2 : {}, m);
  }
  function I() {
    return y("appConfig", {
      enableDebug: false,
      enableMemory: true
    });
  }
  function P(e2) {
    g({
      target: "appConfig",
      forced: true
    }, e2);
  }
  function w(e2, t2) {
    return t2 instanceof Promise ? t2.then(function (t3) {
      return null != e2 && e2.success && (null == e2 || e2.success(t3)), null != e2 && e2.callback && (null == e2 || e2.callback(t3)), Promise.resolve(t3);
    }) : (null != e2 && e2.success && (null == e2 || e2.success(t2)), null != e2 && e2.callback && (null == e2 || e2.callback(t2)), t2);
  }
  function E(e2, t2) {
    var n2 = I(),
      r2 = "undefined" != typeof console;
    n2.warnHandler ? n2.warnHandler.call(null, e2, t2) : r2 && n2.enableDebug && console.error("[" + t2 + " warn]: " + e2);
  }
  function O(e2, t2, n2) {
    var r2 = I();
    "undefined" != typeof console && r2.enableDebug && console.info("%c [" + t2 + " tip]: " + e2, "color: #FB7299", null != n2 ? n2 : "");
  }
  var k = function (e2, t2) {
    return function (n2) {
      return new Promise(function (r2, a2) {
        var i2;
        n2 = n2 || {};
        t2 = Object.assign({
          resolveFn: "callback",
          rejectFn: "fail"
        }, t2);
        var o2 = t2.resolveFn,
          s2 = t2.rejectFn,
          u2 = n2[o2],
          c2 = n2[s2];
        n2 = Object.assign(n2, ((i2 = {})[o2] = function (e3) {
          r2(e3), null == u2 || u2(e3);
        }, i2[s2] = function (e3) {
          a2(e3), null == c2 || c2(e3);
        }, i2)), e2(n2);
      });
    };
  };
  /*!
   * @bilibili/js-bridge (v2.1.17)
   * 哔哩哔哩webview容器内H5页面与APP客户端交互JSB接入包
   * 构建时间：10/11/2024, 7:27:20 PM
   */
  function A(e2, t2) {
    (null == t2 || t2 > e2.length) && (t2 = e2.length);
    for (var n2 = 0, r2 = Array(t2); n2 < t2; n2++) r2[n2] = e2[n2];
    return r2;
  }
  function x(e2, t2, n2) {
    return (t2 = function (e3) {
      var t3 = function (e4) {
        if ("object" != typeof e4 || !e4) return e4;
        var t4 = e4[Symbol.toPrimitive];
        if (void 0 !== t4) {
          var n3 = t4.call(e4, "string");
          if ("object" != typeof n3) return n3;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return String(e4);
      }(e3);
      return "symbol" == typeof t3 ? t3 : t3 + "";
    }(t2)) in e2 ? Object.defineProperty(e2, t2, {
      value: n2,
      enumerable: true,
      configurable: true,
      writable: true
    }) : e2[t2] = n2, e2;
  }
  function N(e2, t2) {
    var n2 = Object.keys(e2);
    if (Object.getOwnPropertySymbols) {
      var r2 = Object.getOwnPropertySymbols(e2);
      t2 && (r2 = r2.filter(function (t3) {
        return Object.getOwnPropertyDescriptor(e2, t3).enumerable;
      })), n2.push.apply(n2, r2);
    }
    return n2;
  }
  function S(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var n2 = null != arguments[t2] ? arguments[t2] : {};
      t2 % 2 ? N(Object(n2), true).forEach(function (t3) {
        x(e2, t3, n2[t3]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(n2)) : N(Object(n2)).forEach(function (t3) {
        Object.defineProperty(e2, t3, Object.getOwnPropertyDescriptor(n2, t3));
      });
    }
    return e2;
  }
  function C(e2) {
    return (C = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e3) {
      return typeof e3;
    } : function (e3) {
      return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
    })(e2);
  }
  var M,
    R,
    B = "object" === ("undefined" == typeof window ? "undefined" : C(window)) ? window : null,
    T = function (e2, t2) {
      if (!t2) return true;
      if (e2 === t2) return false;
      for (var n2 = e2.replace(/-[a-z]*/, ".-1").split("."), r2 = t2.replace(/-[a-z]*/, ".-1").split("."), a2 = Math.max(n2.length, r2.length), i2 = 0; i2 < a2; i2++) {
        var o2 = parseInt(n2[i2], 10) || 0,
          s2 = parseInt(r2[i2], 10) || 0;
        if (o2 > s2) return true;
        if (o2 < s2) return false;
      }
      return false;
    };
  B && (B.BiliJsBridge || (B.BiliJsBridge = {
    jsbVersion: "2.1.17",
    sendTasks: [],
    sendTasksV2: [],
    callbacks: [],
    biliInject: null,
    biliInjectV2: null,
    selfCallbackId: 1,
    newVersion: false,
    inited: false,
    initedV2: false,
    noBiliInject: false,
    noBiliInjectV2: false,
    jsbV2Apis: [],
    appSupportApis: [],
    msgCallbacks: {},
    jsbCallbacks: {},
    listenersMap: {},
    msgListener: null,
    msgListenerV: "2.1.17",
    cbReceivedV1: "2.1.17",
    cbReceivedV2: "2.1.17",
    bbVersion: "2.1.17"
  }), T("2.1.17", B.BiliJsBridge.jsbVersion) && (B.BiliJsBridge.jsbVersion = "2.1.17"), ["msgCallbacks", "jsbCallbacks", "listenersMap"].forEach(function (e2) {
    B.BiliJsBridge[e2] || (B.BiliJsBridge[e2] = {});
  }), !B.selfBrowser) && (B.selfBrowser = {
    version: (R = navigator.userAgent, {
      mobile: /AppleWebKit.*Mobile.*/i.test(R),
      ios: /\(i[^;]+;( U;)? CPU.+Mac OS X/i.test(R),
      android: /Android/i.test(R) || /Linux/i.test(R),
      windowsphone: /Windows Phone/i.test(R),
      iPhone: /iPhone/i.test(R),
      iPad: /iPad/i.test(R),
      webApp: !/Safari/i.test(R),
      MicroMessenger: /MicroMessenger/i.test(R),
      weibo: /Weibo/i.test(R),
      uc: /UCBrowser/i.test(R),
      qq: /MQQBrowser/i.test(R),
      baidu: /Baidu/i.test(R),
      mqq: /QQ\/([\d.]+)/i.test(R),
      mbaidu: /baiduboxapp/i.test(R),
      iqiyi: /iqiyi/i.test(R),
      QQLive: /QQLive/i.test(R),
      Safari: (M = navigator.userAgent, !(!/ OS \d/.test(M) || ~M.indexOf("CriOS") || M.indexOf("Mozilla") || !/Safari\/[\d.]+$/.test(M))),
      Youku: /youku/i.test(R),
      chrome: /CriOS/i.test(R),
      CMDC: /CMDC/i.test(R),
      BiliApp: /BiliApp|BiliComic|hikari/i.test(R),
      BiliMallSDK: /mallSdkVersion/i.test(R),
      BiliHikari: /hikari/i.test(R),
      bStar: /bstar_/i.test(R)
    }),
    language: (navigator.browserLanguage || navigator.language).toLowerCase()
  });
  var j = B ? navigator.userAgent : null,
    V = !!B && /BiliApp|BiliComic|hikari/i.test(j),
    W = !!B && /wbType\/common/i.test(j),
    F = false,
    K = function (e2) {
      return !W && (e2.remove || (e2.reject || e2.listener || function () {})({
        code: 103,
        msg: "not support",
        down: false,
        data: null
      }), true);
    },
    Y = function (e2, t2, n2, r2) {
      var a2 = B.BiliJsBridge.callbacks.findIndex(function (t3) {
        return t3.callbackId === +e2;
      });
      if (a2 >= 0) {
        var i2 = B.BiliJsBridge.callbacks[a2];
        if ("global.import" === i2.method && (B.BiliJsBridge.appSupportApis = []), "function" == typeof i2.callback) {
          var o2 = n2 || t2;
          if (i2.callback(o2), i2.messageWindow) {
            n2 instanceof Error && (o2 = {
              code: n2.code || 105,
              msg: n2.message,
              data: n2.data,
              stack: n2.stack
            });
            var s2 = JSON.stringify({
              iframeCallbackId: i2.callbackId,
              jsbReceiveArgs: o2
            });
            i2.messageWindow.postMessage(s2, "*");
          }
        }
        r2 && "global.registerChannel" !== i2.method && (B.BiliJsBridge.callbacks.splice(a2, 1), i2.messageWindow && i2.messageWindow.postMessage(JSON.stringify({
          iframeRemoveId: i2.callbackId
        }), "*"));
      }
    };
  function J(e2) {
    var t2,
      n2 = B.BiliJsBridge,
      r2 = n2.biliInject,
      a2 = n2.biliInjectV2,
      i2 = n2.cbReceivedV2;
    !r2 || r2.biliCallbackReceived && !T("2.1.17", n2.cbReceivedV1) || (r2.biliCallbackReceived = Y, B.BiliJsBridge.cbReceivedV1 = "2.1.17"), !a2 || a2.biliCallbackReceived && !T("2.1.17", i2) || (a2.biliCallbackReceived = function (e3, t3, n3) {
      return Y(e3, t3, n3, true);
    }, B.BiliJsBridge.cbReceivedV2 = "2.1.17");
    var o2 = e2.isApiV2,
      s2 = [];
    for (var u2 in e2) Object.prototype.hasOwnProperty.call(e2, u2) && "function" == typeof e2[u2] && "callback" !== u2 && (s2.push({
      method: e2.method,
      callback: e2[u2],
      callbackId: B.BiliJsBridge.selfCallbackId,
      callbackName: u2,
      messageWindow: e2.messageWindow
    }), e2[u2] = "", e2.data[u2 + "CallbackId"] = B.BiliJsBridge.selfCallbackId++);
    if (s2.push({
      method: e2.method,
      eventKey: e2.data && e2.data.key,
      callback: e2.callback,
      callbackId: B.BiliJsBridge.selfCallbackId,
      callbackName: "callback",
      messageWindow: e2.messageWindow
    }), (t2 = B.BiliJsBridge.callbacks).push.apply(t2, s2), e2.iframeMessageId && e2.messageWindow) {
      var c2 = JSON.stringify({
        iframeMessageId: e2.iframeMessageId,
        callbacks: s2.map(function (e3) {
          return {
            callbackId: e3.callbackId,
            callbackName: e3.callbackName
          };
        })
      });
      e2.messageWindow.postMessage(c2, "*");
    }
    var l2 = function () {},
      f2 = function () {};
    if (r2 && "function" == typeof r2.postMessage && (l2 = r2.postMessage.bind(r2)), a2 && "function" == typeof a2.postMessage && (f2 = a2.postMessage.bind(a2)), o2) {
      if ("global.unregisterChannel" === e2.method) {
        var p2 = e2.callback(),
          d2 = B.BiliJsBridge.callbacks.findIndex(function (t3) {
            return t3.eventKey === e2.data.key && t3.callback === p2;
          });
        if (d2 > -1) {
          var v2 = B.BiliJsBridge.callbacks[d2];
          e2.data.callbackId = v2.callbackId, B.BiliJsBridge.callbacks.splice(d2, 1), v2.messageWindow && v2.messageWindow.postMessage(JSON.stringify({
            iframeRemoveId: v2.callbackId
          }), "*");
        }
      }
      f2(JSON.stringify(S(S({
        method: e2.method,
        data: e2.data
      }, e2.key && {
        key: e2.key
      }), {}, {
        callbackId: B.BiliJsBridge.selfCallbackId++
      })));
    } else l2(B.selfBrowser.version.android ? JSON.stringify({
      method: e2.method,
      data: Object.assign(e2.data, {
        callbackId: B.BiliJsBridge.selfCallbackId++
      })
    }) : {
      method: e2.method,
      data: JSON.stringify(Object.assign(e2.data, {
        callbackId: B.BiliJsBridge.selfCallbackId++
      }))
    });
  }
  function U(e2) {
    return new Promise(function (t2, n2) {
      if (e2()) t2();else var r2 = 0,
        a2 = setInterval(function () {
          r2++, e2() && (t2(), clearInterval(a2)), r2 >= 20 && (n2(), clearInterval(a2));
        }, 500);
    });
  }
  function H() {
    return B && (B.biliInject || B.webkit && B.webkit.messageHandlers && B.webkit.messageHandlers.biliInject);
  }
  function G() {
    return B && (B.biliInjectV2 || B.webkit && B.webkit.messageHandlers && B.webkit.messageHandlers.biliInjectV2);
  }
  function q(e2) {
    if ("global.import" === e2.method && (B.BiliJsBridge.appSupportApis = []), (e2 = e2 || {}).data = e2.data || {}, !e2.method) throw new Error("no method");
    B.BiliJsBridge.inited ? B.BiliJsBridge.newVersion && J(e2) : B.BiliJsBridge.noBiliInject || B.BiliJsBridge.sendTasks.push(e2);
  }
  function D(e2) {
    e2 && e2.method && Q(e2.method).then(function (t2) {
      t2 && q(e2);
    });
  }
  function Q(e2) {
    return new Promise(function (t2) {
      var n2 = B.BiliJsBridge.appSupportApis;
      n2 && n2.length ? t2(n2.includes(e2)) : q({
        method: "global.getAllSupport",
        callback: function (n3) {
          n3 && n3.length && (B.BiliJsBridge.appSupportApis = n3), t2((B.BiliJsBridge.appSupportApis || []).includes(e2));
        }
      });
    });
  }
  function z() {
    var e2 = [];
    [].forEach.call(arguments, function (t2) {
      t2 instanceof Array ? e2 = e2.concat(t2) : "string" == typeof t2 && e2.push(t2);
    }), Q("global.import").then(function (t2) {
      t2 && e2.forEach(function (e3) {
        q({
          method: "global.import",
          data: {
            namespace: e3
          }
        });
      });
    });
  }
  function $(e2) {
    B.BiliJsBridge.biliInjectV2 ? J(e2) : B.BiliJsBridge.noBiliInjectV2 || B.BiliJsBridge.sendTasksV2.push(e2);
  }
  function X(e2, t2) {
    return new Promise(function (n2, r2) {
      me({
        method: e2,
        params: t2,
        resolve: n2,
        reject: r2
      }) || $({
        method: e2,
        data: t2 || {},
        isApiV2: true,
        callback: function (e3) {
          e3 && 0 === e3.code ? n2(e3) : r2(e3);
        }
      });
    });
  }
  function Z(e2) {
    return new Promise(function (t2) {
      var n2 = B.BiliJsBridge.jsbV2Apis;
      n2 && n2.length ? t2(n2.includes(e2)) : X("global.getAllSupport").then(function (n3) {
        var r2 = n3.data.methods;
        r2 && r2.length && (B.BiliJsBridge.jsbV2Apis = r2), t2((B.BiliJsBridge.jsbV2Apis || []).includes(e2));
      }).catch(function () {
        return t2(false);
      });
    });
  }
  function ee(e2) {
    if (e2.data) {
      var t2 = {};
      try {
        t2 = JSON.parse(e2.data);
      } catch (e3) {}
      if (t2 && (t2.iframeMessageId || t2.iframeCallbackId || t2.iframeRemoveId)) {
        var n2 = t2.iframeMessageId,
          r2 = B.BiliJsBridge.msgCallbacks[n2];
        if (r2) return "function" == typeof r2 && r2(t2), void delete B.BiliJsBridge.msgCallbacks[t2.iframeMessageId];
        if (t2.iframeCallbackId) {
          var a2 = B.BiliJsBridge.jsbCallbacks[t2.iframeCallbackId];
          "function" == typeof a2 && a2(t2.jsbReceiveArgs);
        } else if (t2.iframeRemoveId) delete B.BiliJsBridge.jsbCallbacks[t2.iframeRemoveId];else if (t2.method) {
          var i2 = e2.source,
            o2 = t2.method.replace(/^bili_jsb_/, ""),
            s2 = t2.option || {};
          switch (s2.messageWindow = i2, s2.iframeMessageId = n2, o2) {
            case "isSupport":
            case "canIUse":
              ("isSupport" === o2 ? Q : Z)(t2.api).then(function (e3) {
                i2.postMessage(JSON.stringify(S(S({}, t2), {}, {
                  support: e3
                })), "*");
              }).catch(function () {
                i2.postMessage(JSON.stringify(S(S({}, t2), {}, {
                  support: false
                })), "*");
              });
              break;
            case "callNative":
            case "callNativeSafe":
              for (var u2 in s2) "jsbCallbackFn" === s2[u2] && (s2[u2] = function () {});
              "callNative" === o2 ? q(s2) : D(s2);
              break;
            case "importNameSpace":
              z.apply(void 0, function (e3) {
                return function (e4) {
                  if (Array.isArray(e4)) return A(e4);
                }(e3) || function (e4) {
                  if ("undefined" != typeof Symbol && null != e4[Symbol.iterator] || null != e4["@@iterator"]) return Array.from(e4);
                }(e3) || function (e4, t3) {
                  if (e4) {
                    if ("string" == typeof e4) return A(e4, t3);
                    var n3 = {}.toString.call(e4).slice(8, -1);
                    return "Object" === n3 && e4.constructor && (n3 = e4.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e4) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? A(e4, t3) : void 0;
                  }
                }(e3) || function () {
                  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }();
              }(t2.namespaces)), i2.postMessage(JSON.stringify(S({}, t2)), "*");
              break;
            case "useNative":
              s2.callback = function () {}, $(s2);
              break;
            case "addChannel":
              var c2 = s2.callback;
              s2.callback = function () {}, B.BiliJsBridge.listenersMap[c2] = {
                key: s2.data.key,
                listener: s2.callback
              }, $(s2);
              break;
            case "removeChannel":
              var l2 = B.BiliJsBridge.listenersMap[s2.callback];
              if (!l2) return;
              s2.callback = function () {
                return l2.listener;
              }, $(s2);
          }
        }
      }
    }
  }
  if (B) {
    var te = B.BiliJsBridge,
      ne = te.msgListener;
    ne && !T("2.1.17", te.msgListenerV) || (ne && window.removeEventListener("message", ne), window.addEventListener("message", ee), B.BiliJsBridge.msgListener = ee, B.BiliJsBridge.msgListenerV = "2.1.17");
  }
  var re = function (e2) {
      return F ? Promise.resolve() : (F = true, "function" == typeof e2 && (K = e2), Promise.all([U(H).then(function () {
        B.BiliJsBridge.biliInject = H(), B.BiliJsBridge.newVersion = true, B.BiliJsBridge.sendTasks.forEach(function (e3) {
          return J(e3);
        }), B.BiliJsBridge.sendTasks = [];
      }).catch(function () {
        B.BiliJsBridge.noBiliInject = true;
      }).finally(function () {
        B.BiliJsBridge.inited = true;
      }), U(G).then(function () {
        B.BiliJsBridge.biliInjectV2 = G(), B.BiliJsBridge.sendTasksV2.forEach(function (e3) {
          return J(e3);
        }), B.BiliJsBridge.sendTasksV2 = [];
      }).catch(function () {
        B.BiliJsBridge.noBiliInjectV2 = true;
      }).finally(function () {
        B.BiliJsBridge.initedV2 = true;
      })]));
    },
    ae = Q,
    ie = q,
    oe = D,
    se = z,
    ue = Z,
    ce = X,
    le = function (e2, t2, n2) {
      me({
        event: e2,
        listener: t2,
        params: n2
      }) || $({
        method: "global.registerChannel",
        key: e2,
        data: S({
          key: e2
        }, n2),
        isApiV2: true,
        callback: t2
      });
    },
    fe = function (e2, t2) {
      me({
        event: e2,
        listener: t2,
        remove: true
      }) || $({
        method: "global.unregisterChannel",
        key: e2,
        data: {
          key: e2
        },
        isApiV2: true,
        callback: function () {
          return t2;
        }
      });
    },
    pe = H,
    de = G;
  if (B && window !== window.parent && window.top) {
    var ve = function (e2, t2) {
      e2.method = "bili_jsb_".concat(e2.method), e2.iframeMessageId = Math.random(), B.BiliJsBridge.msgCallbacks[e2.iframeMessageId] = t2 || function () {}, window.top.postMessage(JSON.stringify(e2), "*");
    };
    re = function (e2) {
      return "function" == typeof e2 && (K = e2), Promise.resolve();
    }, ae = function (e2) {
      return new Promise(function (t2) {
        ve({
          method: "isSupport",
          api: e2
        }, function (e3) {
          return t2(e3.support);
        });
      });
    };
    var he = function (e2, t2) {
      var n2 = S({}, t2);
      for (var r2 in n2) "function" == typeof n2[r2] && (n2[r2] = "jsbCallbackFn");
      ve({
        method: e2,
        option: n2
      }, function (e3) {
        (e3.callbacks || []).forEach(function (e4) {
          B.BiliJsBridge.jsbCallbacks[e4.callbackId] = t2[e4.callbackName];
        });
      });
    };
    ie = function (e2) {
      return he("callNative", e2);
    }, oe = function (e2) {
      return he("callNativeSafe", e2);
    }, se = function () {
      for (var e2 = arguments.length, t2 = new Array(e2), n2 = 0; n2 < e2; n2++) t2[n2] = arguments[n2];
      return ve({
        method: "importNameSpace",
        namespaces: t2
      });
    }, ue = function (e2) {
      return new Promise(function (t2) {
        ve({
          method: "canIUse",
          api: e2
        }, function (e3) {
          return t2(e3.support);
        });
      });
    }, ce = function (e2, t2) {
      return new Promise(function (n2, r2) {
        me({
          method: e2,
          params: t2,
          resolve: n2,
          reject: r2
        }) || ve({
          method: "useNative",
          option: {
            method: e2,
            data: t2,
            isApiV2: true,
            callback: "jsbCallbackFn"
          }
        }, function (e3) {
          B.BiliJsBridge.jsbCallbacks[e3.callbacks[0].callbackId] = function (e4) {
            e4 && 0 === e4.code ? n2(e4) : r2(e4);
          };
        });
      });
    }, le = function (e2, t2, n2) {
      if (!me({
        event: e2,
        listener: t2,
        params: n2
      })) {
        var r2 = Math.random();
        B.BiliJsBridge.listenersMap[r2] = {
          key: e2,
          listener: t2
        };
        var a2 = {
          method: "global.registerChannel",
          key: e2,
          data: S({
            key: e2
          }, n2),
          isApiV2: true,
          callback: r2
        };
        ve({
          method: "addChannel",
          option: a2
        }, function (e3) {
          B.BiliJsBridge.jsbCallbacks[e3.callbacks[0].callbackId] = t2;
        });
      }
    }, fe = function (e2, t2) {
      if (!me({
        event: e2,
        listener: t2,
        remove: true
      })) {
        var n2 = Object.keys(B.BiliJsBridge.listenersMap).find(function (n3) {
          var r3 = B.BiliJsBridge.listenersMap[n3];
          return r3.key === e2 && r3.listener === t2;
        });
        if (n2) {
          var r2 = {
            method: "global.unregisterChannel",
            key: e2,
            data: {
              key: e2
            },
            isApiV2: true,
            callback: n2
          };
          delete B.BiliJsBridge.listenersMap[n2], ve({
            method: "removeChannel",
            option: r2
          }, function (e3) {
            B.BiliJsBridge.jsbCallbacks[e3.callbacks[0].callbackId] = function () {};
          });
        }
      }
    }, pe = de = function () {
      return true;
    };
  }
  var _e = {
    inBiliApp: V,
    jsbVersion: "2.1.17",
    isWbTypeCommon: W,
    initEnv: re,
    isSupport: ae,
    callNative: ie,
    callNativeSafe: oe,
    importNameSpace: se,
    isNewJsBridge: pe,
    isBiliInjectV2: de,
    canIUse: ue,
    useNative: ce,
    addChannel: le,
    removeChannel: fe
  };
  function me(e2) {
    return K(S({
      biliBridge: _e,
      inBiliApp: V,
      jsbVersion: "2.1.17",
      isWbTypeCommon: W,
      isSupport: ae,
      callNative: ie,
      callNativeSafe: oe,
      importNameSpace: se
    }, e2));
  }
  !B || B.biliBridge && !T("2.1.17", B.BiliJsBridge.bbVersion) || (B.biliBridge = _e, B.BiliJsBridge.bbVersion = "2.1.17");
  var be = ["success", "fail"],
    ge = function (t2) {
      return function (n2) {
        var r2,
          a2 = n2.success,
          i2 = n2.fail,
          o2 = e$1(n2, be);
        return k(ie)({
          method: null != (r2 = null == t2 ? void 0 : t2.method) ? r2 : "global.import",
          data: o2,
          callback: function (e2) {
            null == a2 || a2(e2);
          },
          fail: function (e2) {
            return null == i2 ? void 0 : i2(e2);
          }
        });
      };
    };
  function ye(e2, t2) {
    e2 = e2.toString().split("."), t2 = t2.toString().split(".");
    for (var n2 = Math.max(e2.length, t2.length); e2.length < n2;) e2.push("0");
    for (; t2.length < n2;) t2.push("0");
    for (var r2 = 0; r2 < n2; r2++) {
      var a2 = parseInt(e2[r2]),
        i2 = parseInt(t2[r2]);
      if (a2 > i2) return 1;
      if (a2 < i2) return -1;
    }
    return 0;
  }
  var Ie = function (e2) {
      var t2;
      if (void 0 === e2 && (e2 = 4107), null != (t2 = window.browser) && t2.app_version) try {
        var n2,
          r2 = null == (n2 = window.browser) ? void 0 : n2.app_version.split(".");
        return ye(parseInt(r2[r2.length - 1]), e2) > -1;
      } catch (e3) {}
      return false;
    },
    Pe = "--- This API does not support using in {{env}}.",
    we = Pe.replace(/{{env}}/, "half-h5"),
    Le = Pe.replace(/{{env}}/, "full-h5"),
    Ee = Pe.replace(/{{env}}/, "the current environment"),
    Oe = "--- {{app}} version is too low, please upgrade to the latest version.".replace(/{{app}}/, "pcLink"),
    ke = y("appCached", {
      state: /* @__PURE__ */new WeakMap()
    }),
    Ae = function (e2, t2, n2) {
      var r2 = ke.state.get(e2);
      if (void 0 !== r2 || (ke.state.set(e2, r2 = /* @__PURE__ */new Map()), void 0 !== n2)) {
        var a2 = r2.get(t2);
        if (void 0 === a2) {
          if (void 0 === n2) return;
          r2.set(t2, a2 = n2);
        }
        return a2;
      }
    },
    xe = function (e2, t2) {
      return function (e3, t3) {
        return void 0 !== Ae(e3, t3);
      }(e2, t2) && ke.state.delete(e2);
    };
  function Ne(e2) {
    return void 0 === e2 && (e2 = {
      name: "anonymous"
    }), function (t2, n2) {
      return function (r2) {
        if (!t2.name && !e2.name) {
          var a2 = "Please don't use anonymous functions.";
          throw E(a2, "memory"), new Error(a2);
        }
        if ("enabled" in e2 || (e2.enabled = I().enableMemory), e2.enabled) {
          var i2 = e2.ns + "_" + [JSON.stringify(null != r2 ? r2 : {})].join(""),
            o2 = function (e3, t3) {
              return Ae(e3, t3);
            }(t2, i2);
          return void 0 !== o2 && O((e2.name || t2.name) + " API hit cache.", "memory", o2), void 0 === o2 && (o2 = function (e3, t3, n3) {
            return Ae(t3, n3, e3);
          }(n2.apply(t2, [r2]), t2, i2)), w(r2, o2);
        }
        return n2.apply(t2, [r2]);
      };
    };
  }
  var Se = function (e2) {
      return Ie() ? ft(e2) : Promise.reject(Oe);
    },
    Ce = "WEBROOMBRIDGELISTENERTYPE",
    Me = "WEBROOMBRIDGEPOSTMESSAGE",
    Re = "WEBROOMBRIDGEONMESSAGE",
    Be = function e2() {
      var t2 = this;
      if (this.callbacks = [], this.queen = [], this.hasInit = false, this.targetWindow = null, this.initing = false, this.init = n$1(c$1.mark(function e3() {
        var n2, r2, a2, i2, o2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (!t2.hasInit && !t2.initing) {
                e4.next = 2;
                break;
              }
              return e4.abrupt("return");
            case 2:
              return t2.initing = true, e4.next = 5, t2.getTargetWindow();
            case 5:
              for (window.addEventListener("message", function (e5) {
                var n3 = e5.data || {};
                if ("string" == typeof n3 && ("string" != typeof n3 || -1 !== n3.indexOf(Re))) try {
                  var r3 = JSON.parse(n3);
                  if (r3.type !== Re) return;
                  t2.onMessage(r3);
                } catch (e6) {
                  console.error(e6);
                }
              }); t2.queen.length > 0;) n2 = t2.queen.shift(), a2 = n2.params, i2 = n2.callbackId, o2 = n2.type, "checkPCRoom" === (r2 = n2.method) ? t2.onMessage({
                type: Me,
                callbackId: i2,
                data: {
                  isPCRoom: true
                },
                code: 0
              }) : t2.postMessage(r2, i2, a2, o2);
              t2.hasInit = true, t2.initing = false;
            case 9:
            case "end":
              return e4.stop();
          }
        }, e3);
      })), this.callWebRoom = function () {
        var e3 = n$1(c$1.mark(function e4(n2, r2) {
          var a2;
          return c$1.wrap(function (e5) {
            for (;;) switch (e5.prev = e5.next) {
              case 0:
                return void 0 === r2 && (r2 = {}), a2 = t2.generateCallbackId(), t2.hasInit ? t2.postMessage(n2, a2, r2, Me) : (t2.queen.push({
                  method: n2,
                  params: r2,
                  type: Me,
                  callbackId: a2
                }), t2.init()), e5.abrupt("return", new Promise(function (e6, r3) {
                  t2.callbacks.push({
                    id: a2,
                    method: n2,
                    type: Me,
                    cb: {
                      resolve: e6,
                      reject: r3
                    }
                  });
                }));
              case 4:
              case "end":
                return e5.stop();
            }
          }, e4);
        }));
        return function (t3, n2) {
          return e3.apply(this, arguments);
        };
      }(), this.onMessage = function (e3) {
        var n2 = e3.callbackId,
          r2 = e3.data,
          a2 = e3.code,
          i2 = e3.message,
          o2 = t2.callbacks.findIndex(function (e4) {
            return e4.id === n2;
          });
        if (-1 !== o2) {
          var s2,
            u2,
            c2,
            l2 = t2.callbacks[o2];
          if (0 !== a2) l2.type === Me && (null == l2 || null == (s2 = l2.cb) || s2.reject({
            code: a2,
            data: r2,
            message: i2 || "error"
          }));else if (l2.type === Me) null == l2 || null == (u2 = l2.cb) || u2.resolve(r2);else null == l2 || null == (c2 = l2.cb) || c2.func(r2);
          l2.type === Me && t2.callbacks.splice(o2, 1);
        }
      }, this.postMessage = function (e3, n2, r2, a2) {
        t2.targetWindow && t2.targetWindow.postMessage(JSON.stringify({
          method: e3,
          callbackId: n2,
          params: r2,
          type: a2
        }), "*");
      }, this.addWebRoomListener = function (e3, n2, r2) {
        var a2 = t2.generateCallbackId();
        t2.hasInit ? t2.postMessage(e3, a2, r2, Ce) : (t2.queen.push({
          callbackId: a2,
          method: e3,
          params: r2,
          callback: n2,
          type: Ce
        }), t2.init()), t2.callbacks.push({
          id: a2,
          method: e3,
          type: Ce,
          cb: {
            func: n2
          }
        });
      }, this.removeWebRoomListener = function (e3, n2) {
        var r2 = t2.callbacks.findIndex(function (t3) {
          var r3;
          return (null == (r3 = t3.cb) ? void 0 : r3.func) === n2 && t3.method === e3;
        });
        if (-1 !== r2) {
          var a2 = t2.callbacks.splice(r2, 1);
          t2.callWebRoom("removeListener", {
            callbackId: a2[0].callbackId
          });
        }
      }, this.generateCallbackId = function () {
        return (/* @__PURE__ */new Date()).getTime() + "" + Math.floor(1e5 * Math.random());
      }, this.getTargetWindow = function () {
        return new Promise(function (e3, n2) {
          if (t2.targetWindow) return t2.targetWindow;
          var r2 = function (n3) {
            var a3 = n3.data || {};
            "string" == typeof a3 && -1 !== a3.indexOf(Re) && (t2.targetWindow = n3.source, window.removeEventListener("message", r2), e3(true));
          };
          window.addEventListener("message", r2);
          var a2 = 0;
          try {
            for (var i2 = window; a2 < 5 && i2 !== i2.parent;) a2++, (i2 = i2.parent).postMessage(JSON.stringify({
              method: "checkPCRoom",
              callbackId: t2.generateCallbackId(),
              params: {},
              type: Me
            }), "*");
          } catch (e4) {
            n2(e4);
          }
          setTimeout(function () {
            window.removeEventListener("message", r2), t2.targetWindow || (n2("timeout"), console.log("getTargetWindow timeout"));
          }, 200);
        });
      }, "object" == typeof e2._instance) return e2._instance;
      this.init(), e2._instance = this;
    };
  Be._instance = null;
  var Te = new Be(),
    je = Te.callWebRoom,
    Ve = Te.addWebRoomListener;
  Te.removeWebRoomListener;
  function Fe() {
    return Ne({
      ns: "os",
      name: "getEnvSync"
    })(Fe, function () {
      var e2,
        t2 = navigator.userAgent,
        n2 = RegExp(/BiliApp/).test(t2),
        r2 = n2 && RegExp(/biliLink/).test(t2),
        a2 = n2 && !r2,
        i2 = RegExp(/pc_app\/livehime/).test(t2) || (null == (e2 = window) || null == (e2 = e2.browser) || null == (e2 = e2.version) ? void 0 : e2.pc_link);
      return a2 && qe.PINK || r2 && qe.BLINK || i2 && qe.PC_LINK || Je(true) && qe.PC_ROOM || Je(false) && qe.PC_MF_ROOM || qe.UNKNOWN;
    })();
  }
  function Ke() {
    return Ye.apply(this, arguments);
  }
  function Ye() {
    return (Ye = n$1(c$1.mark(function e2() {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return e3.abrupt("return", Ne({
              ns: "os",
              name: "getEnvAsync"
            })(Ke, n$1(c$1.mark(function e4() {
              var t2, n2, r2, a2, i2, o2;
              return c$1.wrap(function (e5) {
                for (;;) switch (e5.prev = e5.next) {
                  case 0:
                    if (n2 = navigator.userAgent, r2 = RegExp(/BiliApp/).test(n2), a2 = r2 && RegExp(/biliLink/).test(n2), i2 = r2 && !a2, o2 = RegExp(/pc_app\/livehime/).test(n2) || (null == (t2 = window) || null == (t2 = t2.browser) || null == (t2 = t2.version) ? void 0 : t2.pc_link), e5.t2 = i2 && qe.PINK || a2 && qe.BLINK || o2 && qe.PC_LINK, e5.t2) {
                      e5.next = 13;
                      break;
                    }
                    return e5.next = 9, Ue(true);
                  case 9:
                    if (e5.t3 = e5.sent, !e5.t3) {
                      e5.next = 12;
                      break;
                    }
                    e5.t3 = qe.PC_ROOM;
                  case 12:
                    e5.t2 = e5.t3;
                  case 13:
                    if (e5.t1 = e5.t2, e5.t1) {
                      e5.next = 16;
                      break;
                    }
                    e5.t1 = Je(false) && qe.PC_MF_ROOM;
                  case 16:
                    if (e5.t0 = e5.t1, e5.t0) {
                      e5.next = 19;
                      break;
                    }
                    e5.t0 = qe.UNKNOWN;
                  case 19:
                    return e5.abrupt("return", e5.t0);
                  case 20:
                  case "end":
                    return e5.stop();
                }
              }, e4);
            })))());
          case 1:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function Je(e2) {
    var t2;
    if (!e2) return !(null == (t2 = window) || null == (t2 = t2.BilibiliLive) || !t2.INIT_TIME);
    var n2 = 1,
      r2 = window,
      a2 = false;
    try {
      for (; r2 !== window.top && n2 < 5;) {
        var i2;
        if (null != (i2 = r2) && null != (i2 = i2.parent) && null != (i2 = i2.BilibiliLive) && i2.INIT_TIME) {
          a2 = true;
          break;
        }
        r2 = r2.parent, n2++;
      }
    } catch (e3) {
      E('If the iframe subpage has cross domain, you need to set the document in<head> domain = "live.bilibili.com".', "getEnvSync");
    }
    return a2;
  }
  function Ue(e2) {
    return He.apply(this, arguments);
  }
  function He() {
    return (He = n$1(c$1.mark(function e2(t2) {
      var n2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            if (t2) {
              e3.next = 2;
              break;
            }
            return e3.abrupt("return", !(null == (n2 = window) || null == (n2 = n2.BilibiliLive) || !n2.INIT_TIME));
          case 2:
            if (window !== window.top) {
              e3.next = 4;
              break;
            }
            return e3.abrupt("return", false);
          case 4:
            return e3.abrupt("return", new Promise(function (e4) {
              var t3 = false;
              je("checkPCRoom").then(function (n3) {
                t3 = true, e4(null == n3 ? void 0 : n3.isPCRoom);
              }).catch(function () {
                t3 = true, e4(false);
              }), setTimeout(function () {
                t3 || (e4(false), console.log("checkPCRoomAsync timeout"));
              }, 200);
            }));
          case 5:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  var Ge,
    qe = function (e2) {
      return e2[e2.PINK = 1] = "PINK", e2[e2.BLINK = 2] = "BLINK", e2[e2.PC_LINK = 3] = "PC_LINK", e2[e2.PC_ROOM = 4] = "PC_ROOM", e2[e2.PC_MF_ROOM = 5] = "PC_MF_ROOM", e2[e2.UNKNOWN = -1] = "UNKNOWN", e2;
    }({}),
    De = ((Ge = {
      H5RegExp: /phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone/
    }).is = function (e2, t2, n2) {
      return void 0 === t2 && (t2 = "i"), void 0 === n2 && (n2 = navigator.userAgent), new RegExp(e2, t2).test(n2);
    }, Ge.isIOS = function () {
      return Ne({
        ns: "os",
        name: "isIOS"
      })(De.isIOS, function () {
        return De.is(/iphone|ipad|ipod/);
      })();
    }, Ge.isIphone = function () {
      return Ne({
        ns: "os",
        name: "isIphone"
      })(De.isIphone, function () {
        return De.is(/iphone/);
      })();
    }, Ge.isIpad = function () {
      return Ne({
        ns: "os",
        name: "isIpad"
      })(De.isIpad, function () {
        return De.is(/ipad/);
      })();
    }, Ge.isAndroid = function () {
      return Ne({
        ns: "os",
        name: "isAndroid"
      })(De.isAndroid, De.is)(/android/);
    }, Ge.isApp = function () {
      return Ne({
        ns: "os",
        name: "isApp"
      })(De.isApp, De.is)(/BiliApp/);
    }, Ge.isPC = function () {
      return Ne({
        ns: "os",
        name: "isPC"
      })(De.isPC, function () {
        return !De.is(De.H5RegExp) && !De.is(/BiliApp/);
      })();
    }, Ge.isPcApp = function () {
      return Ne({
        ns: "os",
        name: "isPcApp"
      })(De.isPcApp, function () {
        try {
          var e2;
          return "object" == typeof (null == (e2 = window) || null == (e2 = e2.top) ? void 0 : e2.biliBridgePc);
        } catch (e3) {
          return false;
        }
      })();
    }, Ge.isH5 = function () {
      return Ne({
        ns: "os",
        name: "isH5"
      })(De.isH5, function () {
        return De.is(De.H5RegExp);
      })();
    }, Ge.isHarmonyOS = function () {
      return Ne({
        ns: "os",
        name: "isHarmonyOS"
      })(De.isHarmonyOS, function () {
        return De.is(/Harmony/) && De.is(/ArkWeb/);
      })();
    }, Ge),
    Qe = function (e2) {
      return e2.isIOS = "isIOS", e2.isIphone = "isIphone", e2.isIpad = "isIpad", e2.isAndroid = "isAndroid", e2.isApp = "isApp", e2.isPC = "isPC", e2.isPcApp = "isPcApp", e2.isH5 = "isH5", e2.isHarmonyOS = "isHarmonyOS", e2;
    }({});
  function ze() {
    return {
      is: De.is,
      get isIOS() {
        return De[Qe.isIOS]();
      },
      get isIphone() {
        return De[Qe.isIphone]();
      },
      get isIpad() {
        return De[Qe.isIpad]();
      },
      get isAndroid() {
        return De[Qe.isAndroid]();
      },
      get isApp() {
        return De[Qe.isApp]();
      },
      get isPC() {
        return De[Qe.isPC]();
      },
      get isPcApp() {
        return De[Qe.isPcApp]();
      },
      get isH5() {
        return De[Qe.isH5]();
      },
      get isHarmonyOS() {
        return De[Qe.isHarmonyOS]();
      }
    };
  }
  function $e(e2, t2) {
    return arguments.length < 2 ? m[e2] : m[e2] && m[e2][t2];
  }
  var Xe = function () {
    var e2 = ze(),
      t2 = e2.isH5,
      n2 = e2.isPC,
      r2 = e2.isPcApp,
      a2 = e2.isApp,
      i2 = Fe(),
      o2 = qe.PC_ROOM === i2,
      s2 = qe.PC_LINK === i2;
    return "function" == typeof Xe && (Xe = {
      version: {
        WEB: (t2 || n2) && !r2 && !o2 && !s2 && !a2,
        PC_APP: r2,
        PC_ROOM: n2 && o2,
        PC_LINK: s2,
        NATIVE: a2
      }
    }), Xe;
  };
  function Ze(e2) {
    var t2 = e2.namespace,
      n2 = e2.method,
      r2 = e2.useNative,
      a2 = e2.usePolyfill,
      i2 = void 0 !== a2 && a2;
    return function (e3) {
      if (true === self.__AWESOME_API_POLYFILL_COMPILER__ && false !== i2) for (var a3 = $e.call(null, "POLYFILL"), o2 = function (e4) {
          var t3;
          O("use " + n2 + " polyfill in " + e4.method + ".", "polyfill");
          var r3 = null == a3 || null == (t3 = a3[e4.method]) ? void 0 : t3[n2];
          return "function" != typeof r3 ? Promise.reject("--- The current environment is missing {{method}} polyfill.".replace(/{{method}}/, n2) + " please check whether it has been imported.") : Promise.resolve().then(function () {
            return null == r3 ? void 0 : r3(e4.data);
          });
        }, s2 = ("function" == typeof Xe ? Xe() : Xe).version, u2 = Object.keys(s2).reverse(), c2 = u2.length - 1; c2;) {
        var l2 = u2[c2];
        if (s2[l2] && (true === i2 || i2 && i2.includes(l2))) return o2({
          method: l2,
          data: e3
        });
        c2--;
      }
      if (r2) {
        var f2 = n2 ? $e.call(null, t2, n2) : $e.call(null, t2);
        return void 0 === f2 && (null == r2 || r2.call(r2), f2 = n2 ? $e.call(null, t2, n2) : $e.call(null, t2)), "function" == typeof f2 ? f2.call(null, e3) : f2;
      }
      throw new Error(Ee);
    };
  }
  function et(e2, t2) {
    return function () {
      for (var n2 = arguments.length, r2 = new Array(n2), a2 = 0; a2 < n2; a2++) r2[a2] = arguments[a2];
      return e2.apply(t2, r2);
    };
  }
  function tt() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      isSupport: ft
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      isSupport: Se
    });
  }
  var nt = function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "isSupport",
              useNative: tt
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  }();
  function at(e2) {
    return void 0 === e2 && (e2 = {}), Ne({
      ns: "os",
      name: "getWebviewType"
    })(at, function () {
      var e3 = n$1(c$1.mark(function e4(t2) {
        var n2, r2, a2, i2, o2, s2;
        return c$1.wrap(function (e5) {
          for (;;) switch (e5.prev = e5.next) {
            case 0:
              return e5.next = 2, Ke();
            case 2:
              if (r2 = e5.sent, a2 = null == (n2 = window.navigator) || null == (n2 = n2.userAgent) ? void 0 : n2.includes("wbType/common"), i2 = a2 ? ot.COMMON : ot.UNKNOWN, ![qe.PINK, qe.BLINK].includes(r2) || a2) {
                e5.next = 19;
                break;
              }
              return e5.prev = 6, e5.next = 9, nt({
                method: "live_info_half.getEssential"
              });
            case 9:
              return o2 = e5.sent, e5.next = 12, nt({
                method: "live_info_full.getEssential"
              });
            case 12:
              s2 = e5.sent, i2 = o2 ? ot.HALF : s2 ? ot.FULL : ot.UNKNOWN, e5.next = 19;
              break;
            case 16:
              e5.prev = 16, e5.t0 = e5.catch(6), console.log(e5.t0);
            case 19:
              return e5.abrupt("return", w(t2, i2));
            case 20:
            case "end":
              return e5.stop();
          }
        }, e4, null, [[6, 16]]);
      }));
      return function (t2) {
        return e3.apply(this, arguments);
      };
    }())(e2);
  }
  var it = function () {
      return xe(at, "os_{}");
    },
    ot = function (e2) {
      return e2[e2.HALF = 1] = "HALF", e2[e2.FULL = 2] = "FULL", e2[e2.COMMON = 3] = "COMMON", e2[e2.UNKNOWN = -1] = "UNKNOWN", e2;
    }({}),
    st = ["method"],
    ut = function () {
      return Ne({
        ns: "global",
        name: "getAllSupport"
      })(ut, function () {
        return new Promise(function (e2) {
          ie({
            method: "global.getAllSupport",
            callback: function (t2) {
              var n2 = Array.isArray(t2) ? t2 : null == t2 ? void 0 : t2.data;
              e2(n2);
            }
          });
        });
      })();
    },
    ct = function () {
      return Ne({
        ns: "global",
        name: "getAllNewChannelSupport"
      })(ct, function () {
        return new Promise(function () {
          var e2 = n$1(c$1.mark(function e3(t2) {
            return c$1.wrap(function (e4) {
              for (;;) switch (e4.prev = e4.next) {
                case 0:
                  return e4.next = 2, at();
                case 2:
                  e4.sent !== ot.COMMON ? t2([]) : ce("global.getAllSupport", {}).then(function (e5) {
                    var n2;
                    t2(Array.isArray(e5) ? e5 : (null == e5 || null == (n2 = e5.data) ? void 0 : n2.methods) || []);
                  }).catch(function () {
                    t2([]);
                  });
                case 4:
                case "end":
                  return e4.stop();
              }
            }, e3);
          }));
          return function (t2) {
            return e2.apply(this, arguments);
          };
        }());
      })();
    },
    lt = function () {
      return xe(ut, "global_{}");
    };
  function ft(e2) {
    return pt.apply(this, arguments);
  }
  function pt() {
    return (pt = n$1(c$1.mark(function t2(n2) {
      var r2, a2, i2, o2;
      return c$1.wrap(function (t3) {
        for (;;) switch (t3.prev = t3.next) {
          case 0:
            return r2 = n2.method, a2 = e$1(n2, st), t3.next = 3, ut();
          case 3:
            return o2 = (null == (i2 = t3.sent) ? void 0 : i2.indexOf(r2)) >= 0, t3.abrupt("return", w(a2, Promise.resolve(o2)));
          case 6:
          case "end":
            return t3.stop();
        }
      }, t2);
    }))).apply(this, arguments);
  }
  var dt = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (!Ie()) {
                e4.next = 4;
                break;
              }
              return n2 = t2.success, t2.success = function (e5) {
                lt(), null == n2 || n2(e5);
              }, e4.abrupt("return", ge({
                method: "global.import"
              })(t2));
            case 4:
              return e4.abrupt("return", Promise.reject(Oe));
            case 5:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    vt = function (e2) {
      return e2[e2.GUEST = 1] = "GUEST", e2[e2.MASTER = 2] = "MASTER", e2[e2.PC_LINK_BANNER = 3] = "PC_LINK_BANNER", e2[e2.PC_LINK_PROJECTION = 4] = "PC_LINK_PROJECTION", e2[e2.UNKNOWN = -1] = "UNKNOWN", e2;
    }({});
  function ht(e2) {
    return _t.apply(this, arguments);
  }
  function _t() {
    return _t = n$1(c$1.mark(function e2(t2) {
      var r2, a2, i2, o2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return void 0 === t2 && (t2 = {}), r2 = Fe(), a2 = vt.UNKNOWN, e3.prev = 3, e3.next = 6, at();
          case 6:
            if (e3.sent !== ot.HALF) {
              e3.next = 26;
              break;
            }
            if (r2 !== qe.PINK) {
              e3.next = 25;
              break;
            }
            return e3.next = 11, kt({
              namespace: "live_room_half"
            });
          case 11:
            return e3.next = 13, new Promise(function () {
              var e4 = n$1(c$1.mark(function e5(t3) {
                return c$1.wrap(function (e6) {
                  for (;;) switch (e6.prev = e6.next) {
                    case 0:
                      return e6.next = 2, nt({
                        method: "live_room_half.getRoomInfo"
                      });
                    case 2:
                      e6.sent || t3(vt.UNKNOWN), ie({
                        method: "live_room_half.getRoomInfo",
                        success: function (e7) {
                          O("getBusinessFromRoomInfo:", "getBusinessState", e7), t3("isLiveRoomForUser" in ((null == e7 ? void 0 : e7.data) || {}) ? e7.data.isLiveRoomForUser ? vt.GUEST : vt.MASTER : vt.UNKNOWN);
                        }
                      });
                    case 5:
                    case "end":
                      return e6.stop();
                  }
                }, e5);
              }));
              return function (t3) {
                return e4.apply(this, arguments);
              };
            }());
          case 13:
            if ((i2 = e3.sent) === vt.UNKNOWN) {
              e3.next = 18;
              break;
            }
            a2 = i2, e3.next = 23;
            break;
          case 18:
            return e3.next = 20, nt({
              method: "live_room_half.openGiftPanel"
            });
          case 20:
            O("getBusinessState isRoom", "getBusinessState", o2 = e3.sent), a2 = o2 ? vt.GUEST : vt.MASTER;
          case 23:
            e3.next = 26;
            break;
          case 25:
            r2 === qe.BLINK && (a2 = vt.MASTER);
          case 26:
            e3.next = 30;
            break;
          case 28:
            e3.prev = 28, e3.t0 = e3.catch(3);
          case 30:
            return e3.abrupt("return", w(t2, a2));
          case 31:
          case "end":
            return e3.stop();
        }
      }, e2, null, [[3, 28]]);
    })), _t.apply(this, arguments);
  }
  function mt(e2) {
    return bt.apply(this, arguments);
  }
  function bt() {
    return (bt = n$1(c$1.mark(function e2(t2) {
      var n2, r2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            void 0 === t2 && (t2 = {}), n2 = vt.UNKNOWN;
            try {
              Ie(2103) || E(Oe, "getBusinessState"), n2 = "projection" === (null == (r2 = window.browser) ? void 0 : r2.pc_link_scene) ? vt.PC_LINK_PROJECTION : vt.PC_LINK_BANNER;
            } catch (e4) {}
            return e3.abrupt("return", w(t2, n2));
          case 4:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function gt() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      getBusinessState: ht
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      getBusinessState: mt
    }), "PC_ROOM" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      getBusinessState: function () {
        return vt.GUEST;
      }
    });
  }
  function yt(e2) {
    return It.apply(this, arguments);
  }
  function It() {
    return (It = n$1(c$1.mark(function e2(t2) {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return void 0 === t2 && (t2 = {}), e3.next = 3, ar();
          case 3:
            return e3.abrupt("return", Ne({
              ns: "os",
              name: "getBusinessState"
            })(yt, Ze({
              namespace: "NATIVE",
              method: "getBusinessState",
              useNative: gt
            }))(t2));
          case 4:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  var Pt = function () {
      return xe(yt, "os_{}");
    },
    wt = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return n2 = t2.success, t2.success = function (e5) {
                lt(), Pt(), it(), null == n2 || n2(e5);
              }, Fe() !== qe.BLINK && Fe() !== qe.PINK || (lt(), Pt(), it()), O("importNamespace", "importNamespace", t2), e4.abrupt("return", ge({
                method: "global.import"
              })(t2));
            case 5:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }();
  function Lt() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      importNamespace: wt
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      importNamespace: dt
    });
  }
  var Et,
    Ot = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, ar();
            case 2:
              return e4.abrupt("return", Ze({
                namespace: "NATIVE",
                method: "importNamespace",
                useNative: Lt
              })(t2));
            case 3:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    kt = function (e2) {
      return et(Ot)(e2);
    },
    At = function (e2) {
      var t2 = "",
        n2 = true;
      for (var r2 in e2) {
        var a2 = r2 + "=" + e2[r2];
        n2 || (a2 = "&" + a2), t2 += a2, n2 = false;
      }
      return t2;
    },
    xt = function (e2) {
      var t2,
        n2 = {},
        r2 = ["href", "origin", "protocol", "host", "hostname", "port", "pathname", "search", "hash"],
        a2 = /(([^:]+:)\/\/(([^:\/\?#]+)(:\d+)?))(\/[^?#]*)?(\?[^#]*)?(#.*)?/.exec(e2);
      if (a2) for (t2 = r2.length - 1; t2 >= 0; --t2) n2[r2[t2]] = a2[t2] ? a2[t2] : "";
      return n2;
    },
    Nt = function (e2) {
      var t2 = xt(e2).search.match(/\?(.*)/),
        n2 = {};
      return t2 && (n2 = function (e3) {
        for (var t3, n3 = {}, r2 = /([^&]*)=([^&]*)/g; t3 = r2.exec(e3);) {
          var a2 = t3[1],
            i2 = t3[2];
          n3[a2] ? (n3[a2] = Array.isArray(n3[a2]) ? n3[a2] : [n3[a2]], n3[a2].push(i2)) : n3[a2] = i2;
        }
        return n3;
      }(t2[1])), n2;
    };
  function St() {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e2) {
      var t2 = 16 * Math.random() | 0;
      return ("x" === e2 ? t2 : 3 & t2 | 8).toString(16);
    });
  }
  function Ct() {
    try {
      var e2 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    } catch (e3) {}
    return (Ct = function () {
      return !!e2;
    })();
  }
  function Mt(e2) {
    return Mt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e3) {
      return e3.__proto__ || Object.getPrototypeOf(e3);
    }, Mt(e2);
  }
  function Rt(e2, t2) {
    return Rt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e3, t3) {
      return e3.__proto__ = t3, e3;
    }, Rt(e2, t2);
  }
  function Bt(e2) {
    var t2 = "function" == typeof Map ? /* @__PURE__ */new Map() : void 0;
    return Bt = function (e3) {
      if (null === e3 || !function (e4) {
        try {
          return -1 !== Function.toString.call(e4).indexOf("[native code]");
        } catch (t3) {
          return "function" == typeof e4;
        }
      }(e3)) return e3;
      if ("function" != typeof e3) throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== t2) {
        if (t2.has(e3)) return t2.get(e3);
        t2.set(e3, n2);
      }
      function n2() {
        return function (e4, t3, n3) {
          if (Ct()) return Reflect.construct.apply(null, arguments);
          var r2 = [null];
          r2.push.apply(r2, t3);
          var a2 = new (e4.bind.apply(e4, r2))();
          return n3 && Rt(a2, n3.prototype), a2;
        }(e3, arguments, Mt(this).constructor);
      }
      return n2.prototype = Object.create(e3.prototype, {
        constructor: {
          value: n2,
          enumerable: false,
          writable: true,
          configurable: true
        }
      }), Rt(n2, e3);
    }, Bt(e2);
  }
  !function (e2) {
    e2.TEST = "test", e2.PROD = "prod";
  }(Et || (Et = {}));
  var Tt,
    jt = "undefined" != typeof window;
  function Vt() {
    return "undefined" == typeof global ? "undefined" == typeof window ? {} : window : global;
  }
  !function (e2) {
    e2.NS_DATA = "/x/kv-frontend/namespace/data", e2.APP_UPDATES = "/x/kv-frontend/app/batchupdates";
  }(Tt || (Tt = {}));
  var Wt = function () {
      function e2() {
        this.storage = {};
      }
      var t2 = e2.prototype;
      return t2.set = function (e3, t3, n2) {
        this.storage[e3] = {
          value: t3,
          ttl: Date.now() + 1e3 * n2
        };
      }, t2.get = function (e3) {
        var t3 = this.storage[e3];
        return t3 ? t3.value : null;
      }, t2.has = function (e3) {
        var t3 = this.storage[e3];
        return t3 && Date.now() <= t3.ttl;
      }, e2;
    }(),
    Ft = Vt(),
    Kt = Ft._KV_CORE_CACHE_ || new Wt();
  Ft._KV_CORE_CACHE_ = Kt;
  var Yt = function (e2, t2, n2) {
      try {
        var r2 = function (e3, t3) {
            if (e3) return e3;
            var n3 = jt ? "" + window.location.protocol : "http:",
              r3 = "api.YmlsaWJpbGk=.com".split(".").map(function (e4, t4) {
                return 1 === t4 ? (n4 = e4, "undefined" != typeof window ? window.atob(n4) : Buffer.from(n4, "base64").toString()) : e4;
                var n4;
              }).join(".");
            return t3 === Et.PROD ? r3 = r3.replace(/^(?:pre-|uat-)/, "") : t3 === Et.TEST && /^api/.test(r3) && (r3 = "pre-" + r3), n3 + "//" + r3;
          }(n2.apiURL, n2.env),
          a2 = Object.keys(t2).map(function (e3) {
            var n3 = t2[e3];
            if (void 0 !== n3) return e3 + "=" + encodeURIComponent(n3);
          }).filter(function (e3) {
            return e3;
          }).join("&");
        return Promise.resolve(function (e3, t3) {
          return new Promise((n3, r3) => {
            let a3 = new XMLHttpRequest();
            function i2() {
              if (!a3) return;
              const e4 = a3.responseType,
                t4 = function (e5) {
                  const t5 = e5.trim().split(/[\r\n]+/),
                    n4 = {};
                  return t5.forEach(e6 => {
                    const t6 = e6.split(": "),
                      r4 = t6.shift(),
                      a4 = t6.join(": ");
                    r4 && (n4[r4] = a4);
                  }), n4;
                }(a3.getAllResponseHeaders());
              !a3.status || a3.status >= 200 && a3.status <= 299 ? n3({
                data: e4 && "text" !== e4 ? a3.response : a3.responseText,
                status: a3.status,
                statusText: a3.statusText,
                headers: t4
              }) : r3(new Error(`Request Error: ${a3.status} ${a3.statusText}`)), a3 = null;
            }
            if (a3.open((null == t3 ? void 0 : t3.method) || "GET", e3, true), a3.timeout = (null == t3 ? void 0 : t3.timeout) || 2e3, a3.responseType = (null == t3 ? void 0 : t3.responseType) || "json", a3.onreadystatechange = function () {
              a3 && 4 === a3.readyState && (0 !== a3.status || a3.responseURL && 0 === a3.responseURL.indexOf("file:")) && setTimeout(i2);
            }, a3.onabort = function () {
              a3 && (r3(new Error(`Request aborted: ${e3}`)), a3 = null);
            }, a3.onerror = function () {
              r3(new Error(`Network Error: ${e3}`)), a3 = null;
            }, a3.ontimeout = function () {
              r3(null != t3 && t3.timeout ? `Timeout exceeded: ${t3.timeout}` : "Timeout exceeded"), a3 = null;
            }, a3.withCredentials = (null == t3 ? void 0 : t3.withCredentials) || false, null != t3 && t3.headers) for (const e4 in t3.headers) a3.setRequestHeader(e4, t3.headers[e4]);
            a3.send((null == t3 ? void 0 : t3.data) || null);
          });
        }("" + r2 + e2 + "?" + a2, {
          timeout: n2.timeout
        })).then(function (e3) {
          if (0 === e3.data.code) return e3.data.data;
          throw new Ut(e3.data.message, e3.data.code);
        });
      } catch (e3) {
        return Promise.reject(e3);
      }
    },
    Jt = Vt();
  Jt._KV_CORE_REQUEST_QUEUE_ = Jt._KV_CORE_REQUEST_QUEUE_ || {};
  var Ut = function (e2) {
      var t2, n2;
      function r2(t3, n3) {
        var r3;
        return (r3 = e2.call(this, t3) || this).code = void 0, r3.code = n3, r3;
      }
      return n2 = e2, (t2 = r2).prototype = Object.create(n2.prototype), t2.prototype.constructor = t2, Rt(t2, n2), r2;
    }(Bt(Error)),
    Ht = function (e2) {
      "undefined" != typeof window && window.__BILI_X_ENGINE_SCRIPT_CACHE__ && void 0 !== window.__BILI_X_ENGINE_SCRIPT_CACHE__[e2] && delete window.__BILI_X_ENGINE_SCRIPT_CACHE__[e2];
    },
    Gt = function (e2, t2) {
      if ("undefined" == typeof window) return Promise.reject(new Error("window is not defined"));
      var n2,
        r2 = e2 = e2.replace(/^https?:\/\//, "//"),
        a2 = (n2 = r2, "undefined" == typeof window ? null : window.__BILI_X_ENGINE_SCRIPT_CACHE__ && window.__BILI_X_ENGINE_SCRIPT_CACHE__[n2] || null);
      if (null != a2 && a2.promise) return a2.promise;
      var i2 = new Promise(function (n3, r3) {
        var a3 = document.createElement("script");
        a3.src = e2, null != t2 && t2.behavior && a3.setAttribute(t2.behavior, ""), a3.onload = function () {
          var a4 = window;
          if (null != t2 && t2.lib) return a4[t2.lib] ? n3(a4[t2.lib]) : r3(new Error('Failed to access library "' + t2.lib + '" from ' + e2));
          n3(null);
        }, a3.onerror = function () {
          r3(new Error("Failed to load " + e2)), document.head.removeChild(a3);
        }, document.head.appendChild(a3);
      });
      return function (e3, t3) {
        "undefined" != typeof window && (window.__BILI_X_ENGINE_SCRIPT_CACHE__ || (window.__BILI_X_ENGINE_SCRIPT_CACHE__ = {}), window.__BILI_X_ENGINE_SCRIPT_CACHE__[e3] = t3);
      }(r2, {
        promise: i2,
        lib: null == t2 ? void 0 : t2.lib
      }), i2.then(function () {
        false === (null == t2 ? void 0 : t2.cache) && Ht(r2);
      }).catch(function () {
        false === (null == t2 ? void 0 : t2.cache) && Ht(r2);
      }), i2;
    },
    qt = function (e2) {
      return Promise.resolve(function () {
        try {
          return window.ReporterPb ? Promise.resolve(window.ReporterPb) : Promise.resolve(Gt("//s1.hdslb.com/bfs/seed/jinkela/short/reporter-pb/index.js", {
            lib: "ReporterPb"
          }));
        } catch (e3) {
          return Promise.reject(e3);
        }
      }()).then(function (t2) {
        return new t2(e2);
      });
    };
  function Dt() {
    return Dt = Object.assign ? Object.assign.bind() : function (e2) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var n2 = arguments[t2];
        for (var r2 in n2) Object.prototype.hasOwnProperty.call(n2, r2) && (e2[r2] = n2[r2]);
      }
      return e2;
    }, Dt.apply(this, arguments);
  }
  function Qt(e2, t2) {
    (null == t2 || t2 > e2.length) && (t2 = e2.length);
    for (var n2 = 0, r2 = new Array(t2); n2 < t2; n2++) r2[n2] = e2[n2];
    return r2;
  }
  function zt(e2, t2) {
    var n2 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
    if (n2) return (n2 = n2.call(e2)).next.bind(n2);
    if (Array.isArray(e2) || (n2 = function (e3, t3) {
      if (e3) {
        if ("string" == typeof e3) return Qt(e3, t3);
        var n3 = Object.prototype.toString.call(e3).slice(8, -1);
        return "Object" === n3 && e3.constructor && (n3 = e3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? Qt(e3, t3) : void 0;
      }
    }(e2)) || t2 && e2 && "number" == typeof e2.length) {
      n2 && (e2 = n2);
      var r2 = 0;
      return function () {
        return r2 >= e2.length ? {
          done: true
        } : {
          done: false,
          value: e2[r2++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var $t,
    Xt,
    Zt,
    en,
    tn = 2592e6;
  !function (e2) {
    e2[e2.NON_STRICT = 0] = "NON_STRICT", e2[e2.STRICT = 1] = "STRICT";
  }($t || ($t = {})), function (e2) {
    e2.TEST = "test", e2.PROD = "prod";
  }(Xt || (Xt = {})), function (e2) {
    e2.KEY = "key", e2.GROUP = "group", e2.APP = "app";
  }(Zt || (Zt = {})), function (e2) {
    e2.PV = "333.1334.kv-init.pv", e2.ERROR = "333.1334.kv-init.error", e2.VERSION = "333.1334.kv-version.pv";
  }(en || (en = {}));
  var nn = function () {
      function e2() {
        this.queue = [], this.reporter = void 0, this.loading = false;
      }
      var t2 = e2.prototype;
      return t2.init = function () {
        try {
          var e3 = this;
          return Promise.resolve(function (e4, t3) {
            try {
              var n2 = e4();
            } catch (e5) {
              return t3(e5);
            }
            return n2 && n2.then ? n2.then(void 0, t3) : n2;
          }(function () {
            if (!e3.reporter && "undefined" != typeof window && !e3.loading) return e3.loading = true, Promise.resolve(qt({
              spmPrefix: "333.1334",
              sampleRate: 1,
              autoPv: false,
              retry: false,
              feature: {
                tech: true
              }
            })).then(function (t3) {
              e3.reporter = t3, e3.loading = false, e3.reportQueue();
            });
          }, function (t3) {
            e3.loading = false, console.error(t3);
          }));
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, t2.reportQueue = function () {
        if (this.reporter) for (var e3, t3 = zt(this.queue); !(e3 = t3()).done;) {
          var n2 = e3.value;
          this.report(n2.event, n2.value);
        }
      }, t2.report = function (e3, t3) {
        void 0 === t3 && (t3 = {});
        try {
          if (!this.reporter) return this.queue.push({
            event: e3,
            value: t3
          }), void this.init();
          var n2 = Dt({
            type: e3 === en.ERROR ? "error" : "custom"
          }, t3);
          this.reporter.tech(e3, n2);
        } catch (e4) {
          console.error(e4);
        }
      }, e2;
    }(),
    rn = new nn(),
    an = "KV_CONFIG_SDK",
    on = function () {
      function e2(e3) {
        var t3 = e3.appKey,
          n2 = e3.nscode,
          r2 = e3.env;
        this.appKey = void 0, this.appKeyStorageName = void 0, this.appKey = t3, this.appKeyStorageName = r2 === Et.TEST ? t3 + "_" + n2 + "_test" : t3 + "_" + n2, this.checkLocalStorage();
      }
      var t2 = e2.prototype;
      return t2.checkLocalStorage = function () {
        var t3 = e2.getLocalStorage();
        if (t3) {
          for (var n2 in t3) {
            var r2 = (/* @__PURE__ */new Date()).getTime();
            t3[n2].timestamp + t3[n2].expires < r2 && delete t3[n2];
          }
          Object.keys(t3).length > 40 && Object.keys(t3).sort(function (e3, n3) {
            return t3[e3].lastUsed - t3[n3].lastUsed;
          }).slice(40).forEach(function (e3) {
            delete t3[e3];
          }), e2.setLocalStorage(t3);
        }
      }, t2.getAppKey = function () {
        var t3 = e2.getLocalStorage() || {};
        return t3[this.appKeyStorageName] ? (t3[this.appKeyStorageName].lastUsed = (/* @__PURE__ */new Date()).getTime(), e2.setLocalStorage(t3), t3[this.appKeyStorageName] || {}) : {};
      }, t2.setAppkey = function (t3) {
        var n2 = Dt({
            timestamp: (/* @__PURE__ */new Date()).getTime(),
            lastUsed: (/* @__PURE__ */new Date()).getTime()
          }, t3),
          r2 = e2.getLocalStorage() || {};
        r2[this.appKeyStorageName] = n2, e2.setLocalStorage(r2);
      }, e2.getLocalStorage = function () {
        var e3;
        try {
          var t3;
          (e3 = null == (t3 = localStorage) ? void 0 : t3.getItem(an)) && (e3 = JSON.parse(e3));
        } catch (t4) {
          console.error("从本地获取" + an + "的时候异常", t4), e3 = void 0, rn.report(en.ERROR, {
            message: "从本地获取" + an + "的时候异常" + (t4.message || "")
          });
        }
        return e3;
      }, e2.setLocalStorage = function (e3) {
        try {
          localStorage && localStorage.setItem(an, JSON.stringify(e3));
        } catch (e4) {
          !function (e5) {
            var t3 = false;
            if (e5) if (e5.code) switch (e5.code) {
              case 22:
                t3 = true;
                break;
              case 1014:
                "NS_ERROR_DOM_QUOTA_REACHED" === e5.name && (t3 = true);
            } else -2147024882 === e5.number && (t3 = true);
            return t3;
          }(e4) ? (console.log("storage 更新失败", e4), rn.report(en.ERROR, {
            message: "storage 更新失败" + (e4.message || "")
          })) : (console.log("storage 超出浏览器限制", e4), rn.report(en.ERROR, {
            message: "storage 超出浏览器限制" + (e4.message || "")
          }));
        }
      }, e2;
    }();
  function sn(e2) {
    var t2 = "kv-sdk:" + e2.appKey + ":" + e2.nscode + ":" + e2.versionId;
    return Kt.has(t2) || Kt.set(t2, function (e3) {
      try {
        return Yt(Tt.NS_DATA, {
          appKey: e3.appKey,
          nscode: e3.nscode || 0,
          versionId: e3.versionId
        }, e3);
      } catch (e4) {
        return Promise.reject(e4);
      }
    }(e2).catch(function (e3) {
      throw -304 !== e3.code && delete Kt.storage[t2], e3;
    }), 10), Kt.get(t2);
  }
  function un(e2, t2) {
    try {
      var n2 = e2();
    } catch (e3) {
      return t2(e3);
    }
    return n2 && n2.then ? n2.then(void 0, t2) : n2;
  }
  var cn,
    ln,
    fn = function () {
      function e2(e3) {
        this.options = {
          appKey: "",
          apiURL: "",
          nscode: 0,
          expires: tn,
          strict: $t.STRICT,
          reporter: {
            ignoreAppKeyNotFound: false
          }
        }, this.storage = void 0, this.fetchPromise = void 0, this.flattenValue = {}, this.nestedValue = {}, this.versionId = void 0;
        var t3 = e3.appKey,
          n2 = e3.expires,
          r2 = void 0 === n2 ? tn : n2;
        if (!t3) return rn.report(en.ERROR, {
          message: "no appkey passed"
        }), void console.warn("appKey is required");
        this.options = Dt({}, this.options, e3, {
          expires: Math.min(r2, tn)
        }), this.storage = new on({
          appKey: t3,
          nscode: this.options.nscode,
          env: this.options.env
        });
        var a2 = this.storage.getAppKey(),
          i2 = a2.value,
          o2 = a2.versionId;
        this.versionId = o2, this.updateValue(i2 || {}), (this.options.strict !== $t.NON_STRICT || e3.autoFetch) && (this.fetchPromise = this.fetchAppKey(o2)), this.report(en.PV);
      }
      var t2 = e2.prototype;
      return t2.getAll = function () {
        try {
          return Promise.resolve(this.getBase(Zt.APP));
        } catch (e3) {
          return Promise.reject(e3);
        }
      }, t2.getGroup = function (e3) {
        try {
          return Promise.resolve(this.getBase(Zt.GROUP, e3));
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, t2.get = function (e3) {
        try {
          return Promise.resolve(this.getBase(Zt.KEY, e3));
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, t2.getAllSync = function () {
        return this.getBaseSync(Zt.APP);
      }, t2.getGroupSync = function (e3) {
        return this.getBaseSync(Zt.GROUP, e3);
      }, t2.getSync = function (e3) {
        return this.getBaseSync(Zt.KEY, e3);
      }, t2.getBaseSync = function (e3, t3) {
        if (void 0 === t3 && (t3 = ""), e3 === Zt.APP) return this.nestedValue;
        if (e3 === Zt.GROUP) return this.nestedValue[t3] || {};
        var n2 = t3.split("."),
          r2 = n2[0];
        return this.nestedValue[r2] ? this.nestedValue[r2][n2[1]] : "";
      }, t2.getBase = function (e3, t3) {
        void 0 === t3 && (t3 = "");
        try {
          var n2 = this;
          return Promise.resolve(n2.options.strict === $t.NON_STRICT ? n2.getBaseSync(e3, t3) : n2.fetchPromise.then(function () {
            return n2.getBaseSync(e3, t3);
          }));
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, t2.fetchAppKey = function (e3) {
        try {
          var t3 = this,
            n2 = t3.options,
            r2 = n2.appKey,
            a2 = n2.nscode,
            i2 = n2.env,
            o2 = un(function () {
              return Promise.resolve(sn({
                appKey: r2,
                versionId: e3,
                nscode: a2,
                env: i2
              })).then(function (e4) {
                t3.storage.setAppkey({
                  value: e4.data,
                  versionId: e4.versionId,
                  appVersionId: e4.appVersionId,
                  nscode: a2,
                  appKey: t3.options.appKey,
                  expires: t3.options.expires
                }), t3.versionId = e4.versionId, t3.updateValue(e4.data);
              });
            }, function (e4) {
              var n3;
              -304 === e4.code || null != (n3 = t3.options.reporter) && n3.ignoreAppKeyNotFound && -404 === e4.code || t3.report(en.ERROR, {
                message: e4.message || e4.msg || "获取失败"
              });
            });
          return Promise.resolve(o2 && o2.then ? o2.then(function () {}) : void 0);
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, e2.updateLocalAppKey = function (e3) {
        try {
          return Promise.resolve(un(function () {
            var t3 = e3.appKey,
              n2 = e3.appVersionId,
              r2 = on.getLocalStorage();
            if (r2) {
              var a2 = Object.keys(r2).filter(function (e4) {
                return r2[e4].appKey === t3 && r2[e4].appVersionId !== n2;
              }).map(function (e4) {
                return r2[e4];
              });
              if (a2.length) return Promise.resolve(function (e4) {
                try {
                  return Yt(Tt.APP_UPDATES, {
                    appKey: e4.appKey,
                    batches: JSON.stringify(e4.batches)
                  }, e4);
                } catch (e5) {
                  return Promise.reject(e5);
                }
              }({
                appKey: t3,
                batches: a2.map(function (e4) {
                  return {
                    appVersionId: e4.appVersionId,
                    nscode: e4.nscode
                  };
                })
              })).then(function (e4) {
                var n3 = on.getLocalStorage() || {};
                e4.forEach(function (e5) {
                  var r3 = t3 + "_" + e5.nscode;
                  if (e5.deleted) delete n3[r3];else if (e5.updated) {
                    var a3 = {
                      timestamp: (/* @__PURE__ */new Date()).getTime(),
                      value: e5.data,
                      versionId: e5.versionId,
                      appVersionId: e5.appVersionId,
                      nscode: e5.nscode,
                      appKey: t3
                    };
                    n3[r3] = Dt({}, n3[r3] || {}, a3);
                  }
                }), on.setLocalStorage(n3);
              });
            }
          }, function (e4) {
            -304 !== e4.code && console.error(e4);
          }));
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, t2.updateValue = function (e3) {
        var t3 = this;
        this.flattenValue = e3;
        var n2 = {};
        Object.keys(this.flattenValue).forEach(function (e4) {
          var r2 = e4.split("."),
            a2 = r2[0],
            i2 = r2[1];
          n2[a2] || (n2[a2] = {}), n2[a2][i2] = t3.flattenValue[e4];
        }), this.nestedValue = n2;
      }, t2.report = function (e3, t3) {
        void 0 === t3 && (t3 = {}), rn.report(e3, Dt({
          appKey: this.options.appKey,
          nscode: this.options.nscode,
          sdkVersion: "1.3.13"
        }, t3));
      }, e2;
    }();
  !function (e2) {
    e2.TEST = "test", e2.PROD = "prod";
  }(cn || (cn = {})), function (e2) {
    e2[e2.NON_STRICT = 0] = "NON_STRICT", e2[e2.STRICT = 1] = "STRICT";
  }(ln || (ln = {}));
  var pn = function () {
      function e2(e3) {
        this.store = void 0, this.store = new fn(e3);
      }
      var t2 = e2.prototype;
      return t2.getAll = function () {
        return this.store.getAll();
      }, t2.getGroup = function (e3) {
        try {
          return Promise.resolve(this.store.getGroup(e3));
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, t2.get = function (e3) {
        try {
          return Promise.resolve(this.store.get(e3));
        } catch (e4) {
          return Promise.reject(e4);
        }
      }, e2;
    }(),
    dn = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (n2 = new pn({
                appKey: t2.appKey
              }), !t2.group || !t2.key) {
                e4.next = 8;
                break;
              }
              return e4.next = 4, n2.get(t2.group + t2.key);
            case 4:
              return e4.abrupt("return", e4.sent || {});
            case 8:
              if (!t2.group) {
                e4.next = 15;
                break;
              }
              return e4.next = 11, n2.getGroup(t2.group);
            case 11:
              return e4.abrupt("return", e4.sent || {});
            case 15:
              return e4.next = 17, n2.getAll();
            case 17:
              return e4.abrupt("return", e4.sent || {});
            case 19:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }();
  function vn() {
    return vn = Object.assign ? Object.assign.bind() : function (e2) {
      for (var t2 = 1; t2 < arguments.length; t2++) {
        var n2 = arguments[t2];
        for (var r2 in n2) ({}).hasOwnProperty.call(n2, r2) && (e2[r2] = n2[r2]);
      }
      return e2;
    }, vn.apply(null, arguments);
  }
  function hn(e2, t2) {
    var n2 = vn({}, e2);
    return Array.isArray(t2) && t2.forEach(function (e3) {
      delete n2[e3];
    }), n2;
  }
  var _n = {
    resolveFn: ["callback"],
    rejectFn: ["fail", "failed"]
  };
  function mn(e2, t2, n2, r2) {
    for (var a2 = {}, i2 = Array.isArray(e2) ? e2 : [e2], o2 = i2.length; o2--;) {
      a2[i2[o2]] = function (e3, a3) {
        var i3,
          o3 = "function" == typeof r2 ? r2(e3, a3) : e3;
        null == n2 || n2(o3), null == t2 || null == (i3 = t2[a3]) || i3.call(t2, o3);
      };
    }
    return a2;
  }
  function bn(e2) {
    return void 0 === e2 && (e2 = {}), function (t2) {
      return function (e3, t3) {
        void 0 === e3 && (e3 = {});
        var n2 = vn({}, _n, e3),
          r2 = n2.resolveFn,
          a2 = n2.rejectFn,
          i2 = n2.transformResolve,
          o2 = n2.transformReject;
        return function (e4) {
          var n3 = this;
          return new Promise(function (s2, u2) {
            var c2 = mn(r2, e4, s2, i2),
              l2 = mn(a2, e4, u2, o2),
              f2 = Object.assign({}, e4 || {}, c2, l2);
            t3.call(n3, f2);
          });
        };
      }(vn({}, _n, e2), t2);
    };
  }
  function gn(e2, t2) {
    return yn.apply(this, arguments);
  }
  function yn() {
    return (yn = n$1(c$1.mark(function e2(t2, n2) {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return void 0 === n2 && (n2 = "success"), e3.next = 3, bn({
              resolveFn: n2
            })(ie)({
              method: t2
            });
          case 3:
            return e3.abrupt("return", In(e3.sent));
          case 5:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function In(e2) {
    if ("string" == typeof e2) try {
      e2 = JSON.parse(e2);
    } catch (e3) {}
    return e2;
  }
  var Pn = function () {
      var e2 = Fe();
      return {
        SDKVersion: v,
        pixelRatio: window.devicePixelRatio,
        screenWidth: window.screen.width,
        screenHeight: window.screen.height,
        windowWidth: window.innerWidth,
        windowHeight: window.innerHeight,
        platform: navigator.platform,
        environment: e2,
        webviewType: -1,
        businessState: -1,
        platformId: 0
      };
    },
    wn = ["method"];
  function Ln(e2) {
    return En.apply(this, arguments);
  }
  function En() {
    return (En = n$1(c$1.mark(function t2(n2) {
      var r2, a2, i2, o2, s2, u2;
      return c$1.wrap(function (t3) {
        for (;;) switch (t3.prev = t3.next) {
          case 0:
            return r2 = n2.method, a2 = e$1(n2, wn), t3.next = 3, ut();
          case 3:
            return o2 = (null == (i2 = t3.sent) ? void 0 : i2.indexOf(r2)) >= 0, t3.next = 7, ct();
          case 7:
            return u2 = (null == (s2 = t3.sent) ? void 0 : s2.indexOf(r2)) >= 0, t3.abrupt("return", w(a2, Promise.resolve({
              isSupport: o2,
              isNewChannelSupport: u2
            })));
          case 10:
          case "end":
            return t3.stop();
        }
      }, t2);
    }))).apply(this, arguments);
  }
  var On = function (e2) {
    return Ie() ? Ln(e2) : Promise.reject(Oe);
  };
  function kn() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      isSupportV2: Ln
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      isSupportV2: On
    });
  }
  var An = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, ar();
            case 2:
              return e4.abrupt("return", Ze({
                namespace: "NATIVE",
                method: "isSupportV2",
                useNative: kn
              })(t2));
            case 3:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    xn = function (e2) {
      return et(An)(e2);
    };
  function Nn(e2) {
    return Sn.apply(this, arguments);
  }
  function Sn() {
    return (Sn = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2, i2, o2, s2, u2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return void 0 === t2 && (t2 = {}), n2 = Pn(), e3.prev = 2, e3.next = 5, at();
          case 5:
            return O("getSystemInfo webviewType", "getSystemInfo", r2 = e3.sent), e3.next = 9, yt();
          case 9:
            return O("getSystemInfo businessState", "getSystemInfo", a2 = e3.sent), e3.next = 13, Cn(r2);
          case 13:
            return O("getSystemInfo getContainerInfo", "getSystemInfo", i2 = e3.sent), e3.next = 17, Mn();
          case 17:
            O("getSystemInfo essentialInfo", "getSystemInfo", o2 = e3.sent), s2 = function () {
              return "version" in i2 ? i2.version : "appVersion" in o2 ? o2.appVersion : "version" in o2 ? o2.version : "build" in o2 ? o2.build.slice(0, 1) + "." + o2.build.slice(1, 3) + "." + Number(o2.build.slice(3, 5)) : "";
            }, Object.assign(n2, {
              brand: i2.brand ? i2.brand : i2.deviceName.replace(i2.modelName, ""),
              model: i2.modelName,
              version: s2(),
              system: i2.platform + " " + i2.osVer,
              platform: i2.platform,
              name: o2.appName,
              build: o2.appBuild || o2.build,
              webviewType: r2,
              businessState: a2,
              paySdkVersion: o2.paySdkVersion,
              extInfo: {
                foreground: o2.foreground,
                background: o2.background,
                time: +o2.time,
                isReview: o2.isReview,
                rawData: JSON.stringify(o2)
              },
              containerInfo: vn({}, hn(i2, ["brand", "deviceName", "modelName", "osVer", "platform", "statusBarHeight", "build"]), {
                rawData: JSON.stringify(i2)
              })
            }), "statusBar" in o2 && (n2.statusBarHeight = o2.statusBar), !n2.statusBarHeight && "statusBarHeight" in i2 && (n2.statusBarHeight = i2.statusBarHeight), "safeArea" in o2 && (u2 = o2.safeArea.split(","), n2.safeArea = {
              top: +u2[0],
              right: +u2[1],
              bottom: +u2[2],
              left: +u2[3]
            }), e3.next = 28;
            break;
          case 26:
            e3.prev = 26, e3.t0 = e3.catch(2);
          case 28:
            return O("getSystemInfo systemInfo", "getSystemInfo", n2), e3.abrupt("return", w(t2, Promise.resolve(n2)));
          case 30:
          case "end":
            return e3.stop();
        }
      }, e2, null, [[2, 26]]);
    }))).apply(this, arguments);
  }
  var Cn = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (t2 !== ot.COMMON) {
                e4.next = 7;
                break;
              }
              return e4.next = 3, ce("global.getContainerInfo");
            case 3:
              return e4.abrupt("return", e4.sent.data);
            case 7:
              return e4.next = 9, gn("global.getContainerInfo", "callback");
            case 9:
              return e4.abrupt("return", e4.sent);
            case 10:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Mn = function () {
      var e2 = n$1(c$1.mark(function e3() {
        var t2, n2, r2, a2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, An({
                method: "live_info_full.getEssential"
              });
            case 2:
              if (n2 = (t2 = e4.sent).isSupport, !t2.isNewChannelSupport) {
                e4.next = 11;
                break;
              }
              return e4.next = 8, ce("live_info_full.getEssential");
            case 8:
            case 14:
            case 23:
            case 29:
              return e4.abrupt("return", e4.sent);
            case 11:
              if (!n2) {
                e4.next = 15;
                break;
              }
              return e4.next = 14, gn("live_info_full.getEssential", "success");
            case 15:
              return e4.next = 17, An({
                method: "live_info_half.getEssential"
              });
            case 17:
              if (a2 = (r2 = e4.sent).isSupport, !r2.isNewChannelSupport) {
                e4.next = 26;
                break;
              }
              return e4.next = 23, ce("live_info_half.getEssential");
            case 26:
              if (!a2) {
                e4.next = 30;
                break;
              }
              return e4.next = 29, gn("live_info_half.getEssential", "success");
            case 30:
              return e4.abrupt("return", {});
            case 31:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function () {
        return e2.apply(this, arguments);
      };
    }();
  function Rn(e2, t2) {
    return O("CallingNative Args", "useNative", e2 + t2), new Promise(function (n2, r2) {
      _e.useNative(e2, t2 || {}).then(function (e3) {
        n2(e3);
      }).catch(function (e3) {
        r2(e3);
      });
    });
  }
  function Bn() {
    return (Bn = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2, i2, o2, s2, u2, l2, f2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return e3.next = 2, Tn();
          case 2:
            return r2 = e3.sent[n2 = t2.method], e3.next = 7, ut();
          case 7:
            return a2 = e3.sent, e3.next = 10, ct();
          case 10:
            if (i2 = e3.sent, O("redirectMethod:" + r2, "jsbAdapter"), !(o2 = null == r2 ? void 0 : r2.redirect)) {
              e3.next = 31;
              break;
            }
            if (s2 = (null == r2 ? void 0 : r2.isStandard) || false, u2 = i2.indexOf(o2) > -1, l2 = a2.indexOf(o2) > -1, !s2 || !u2) {
              e3.next = 22;
              break;
            }
            return delete t2.method, e3.abrupt("return", jn(t2, r2));
          case 22:
            if (s2 || !l2) {
              e3.next = 28;
              break;
            }
            return t2.method = o2, O("old channel method:" + JSON.stringify(t2), "jsbAdapter"), e3.abrupt("return", _e.callNative.call(_e, t2));
          case 28:
            E("not support method:" + n2, "jsbAdapter");
          case 29:
            e3.next = 39;
            break;
          case 31:
            if (O("isOldChannelSupport:" + (f2 = a2.indexOf(n2) > -1), "jsbAdapter"), !f2) {
              e3.next = 38;
              break;
            }
            return O("old channel method:" + JSON.stringify(t2), "jsbAdapter"), e3.abrupt("return", _e.callNative.call(_e, t2));
          case 38:
            E("not support method:" + n2, "jsbAdapter");
          case 39:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  var Tn = function () {
      return Ne({
        ns: "global",
        name: "getJSBRedirectKv"
      })(Tn, function () {
        return new Promise(function (e2) {
          try {
            dn({
              appKey: "444.190",
              group: "jsb_redirect"
            }).then(function () {
              var t2 = n$1(c$1.mark(function t3(n2) {
                var r2, a2, i2;
                return c$1.wrap(function (t4) {
                  for (;;) switch (t4.prev = t4.next) {
                    case 0:
                      return O("kv:" + JSON.stringify(n2), "jsbAdapter"), t4.next = 3, Nn();
                    case 3:
                      O("version:" + (a2 = void 0 === (r2 = t4.sent.version) ? "" : r2), "jsbAdapter"), i2 = {}, n2 && Object.keys(n2).forEach(function (e3) {
                        var t5 = e3.replace("v", "").replace(new RegExp("_", "g"), ".");
                        if (console.log("kvVersion", t5), ye(a2, t5) >= 0) {
                          var r3 = JSON.parse(n2[e3]);
                          Object.assign(i2, r3);
                        }
                      }), e2(i2);
                    case 10:
                    case "end":
                      return t4.stop();
                  }
                }, t3);
              }));
              return function (e3) {
                return t2.apply(this, arguments);
              };
            }());
          } catch (t2) {
            e2({});
          }
        });
      })();
    },
    jn = function (e2, t2) {
      var n2 = {},
        r2 = {};
      Object.keys(e2).forEach(function (t3) {
        "function" == typeof e2[t3] ? r2[t3] = e2[t3] : n2[t3] = e2[t3];
      });
      var a2 = function (e3) {
        var n3,
          a3,
          i2,
          o2 = t2.result ? e3.data.result : e3.data;
        null != (n3 = e3.data) && n3.cbType ? null == (a3 = r2[null == (i2 = e3.data) ? void 0 : i2.cbType]) || a3.call(r2, o2) : 0 === e3.code ? (null == r2.success || r2.success(o2), null == r2.callback || r2.callback(o2)) : null == r2.fail || r2.fail(e3);
      };
      (O("-----new channel method:" + JSON.stringify(n2) + JSON.stringify(r2), "jsbAdapter"), t2.isListener) ? _e.addChannel.call(_e, t2.redirect, a2, n2 || {}) : Rn(t2.redirect, (t2.param ? {
        param: n2.data || {}
      } : n2.data || {}) || {}).then(function (e3) {
        a2(e3);
      }).catch(function (e3) {
        null == r2.fail || r2.fail(e3);
      });
    };
  function Vn(e2) {
    O("CallingNative Args", "callNative", e2), Object.assign(e2.data = e2.data || {}, {
      bridgeReportURL: "undefined" != typeof window ? encodeURIComponent(window.location.href) : "",
      bridgeReportUUID: St()
    }), function (e3) {
      Bn.apply(this, arguments);
    }(e2);
  }
  var Wn = function (e2) {
      return function () {
        return k(Vn)({
          method: e2.method
        });
      };
    },
    Fn = function () {
      return Ie() ? Wn({
        method: "live_ui.pageFinished"
      })() : Wn({
        method: "live_ui_half.pageFinished"
      })();
    },
    Kn = "1" === Nt(window.location.href).is_live_half_webview,
    Yn = function () {
      return Kn ? "half" : "full";
    },
    Jn = function () {
      if ("full" === Yn()) throw new Error(Le);
      return Wn({
        method: "live_ui_half.pageFinished"
      })();
    };
  function Un() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      postNaHalfIsNormal: Jn
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      postNaHalfIsNormal: Fn
    });
  }
  var Hn = function () {
      var e2 = n$1(c$1.mark(function e3() {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, ar();
            case 2:
              return e4.abrupt("return", Ze({
                namespace: "NATIVE",
                method: "postNaHalfIsNormal",
                usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK"],
                useNative: Un
              })());
            case 3:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function () {
        return e2.apply(this, arguments);
      };
    }(),
    Gn = ["autoPostNaHalfIsNormal"],
    qn = function (t2) {
      var n2 = t2.newConfig,
        r2 = t2.App,
        a2 = n2.autoPostNaHalfIsNormal,
        i2 = void 0 === a2 || a2,
        o2 = e$1(n2, Gn);
      if (re(), r2.isReady || (r2.isReady = true), i2) {
        var s2 = Nt(window.location.href).pc_ui;
        if (s2) {
          var u2 = s2.split(",");
          (!u2[3] || "0" === u2[3]) && Hn();
        }
      }
      try {
        Promise.all(["live_stream"].map(function (e2) {
          return Ot({
            namespace: e2
          });
        })), O("initEnv LiveBridge pcLink.", "initial"), r2.initialized = true, r2.isReady = false;
      } catch (e2) {
        console.log(e2);
      }
      return w(o2, r2.initialized);
    },
    Dn = function (e2) {
      if ("full" === Yn()) throw new Error(Le);
      return k(Vn)({
        method: "live_ui_half.controlCloseBtn",
        data: {
          show: 0
        },
        fail: function (t2) {
          null == e2 || null == e2.fail || e2.fail(t2);
        },
        callback: function (t2) {
          null == e2 || null == e2.success || e2.success(t2);
        }
      });
    },
    Qn = ["ns", "autoPostNaHalfIsNormal"],
    zn = Yn(),
    $n = "full" === zn,
    Xn = "half" === zn,
    Zn = function () {
      var e2 = n$1(c$1.mark(function e3(t2, n2) {
        var r2, a2, i2, o2, s2, u2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (r2 = [], t2.isReady) {
                e4.next = 24;
                break;
              }
              if (t2.isReady = true, a2 = ["live_info_half", "live_pay_half", "live_cache_half", "live_network_half", "live_ui_half", "live_location_half", "live_room_half", "live_center_half"], i2 = ["live_hime"], o2 = ["live_stream_half", "live_room_half"], s2 = [].concat(["live_info_full", "live_pay_full", "live_cache_full", "live_network_full", "live_ui_full", "live_location_full"]), u2 = [].concat(a2), e4.t0 = Fe() === qe.BLINK, e4.t0) {
                e4.next = 19;
                break;
              }
              if (e4.t1 = Fe() === qe.PINK, !e4.t1) {
                e4.next = 18;
                break;
              }
              return e4.next = 15, yt();
            case 15:
              e4.t2 = e4.sent, e4.t3 = vt.MASTER, e4.t1 = e4.t2 === e4.t3;
            case 18:
              e4.t0 = e4.t1;
            case 19:
              if (!e4.t0) {
                e4.next = 22;
                break;
              }
              s2 = s2.concat(i2), u2 = u2.concat(o2);
            case 22:
              $n ? r2 = s2 : Xn && (r2 = u2), "string" == typeof n2 ? r2 = [n2] : Array.isArray(n2) && (r2 = n2);
            case 24:
              return e4.prev = 24, e4.next = 27, tr(r2);
            case 27:
              Promise.all(e4.sent.map(function (e5) {
                return Ot({
                  namespace: e5
                });
              })), O("initEnv LiveBridge" + ($n ? "Full" : "Half") + ".", "initial"), t2.initialized = true, t2.isReady = false, e4.next = 37;
              break;
            case 34:
              e4.prev = 34, e4.t4 = e4.catch(24), console.log(e4.t4);
            case 37:
            case "end":
              return e4.stop();
          }
        }, e3, null, [[24, 34]]);
      }));
      return function (t2, n2) {
        return e2.apply(this, arguments);
      };
    }(),
    er = function () {
      var t2 = n$1(c$1.mark(function t3(n2) {
        var r2, a2, i2, o2, s2, u2, l2, f2, p2;
        return c$1.wrap(function (t4) {
          for (;;) switch (t4.prev = t4.next) {
            case 0:
              return a2 = n2.App, i2 = (r2 = n2.newConfig).ns, s2 = void 0 === (o2 = r2.autoPostNaHalfIsNormal) || o2, u2 = e$1(r2, Qn), re(), window.__custom_cookie = window.__custom_cookie || {}, s2 && Xn && (l2 = Nt(window.location.href).hybrid_half_ui) && (f2 = l2.split(","), p2 = "1" === f2[9], (!f2[5] || "0" === f2[5]) && p2 && Dn()), Zn(a2, i2), t4.abrupt("return", w(u2, a2.initialized));
            case 7:
            case "end":
              return t4.stop();
          }
        }, t3);
      }));
      return function (e2) {
        return t2.apply(this, arguments);
      };
    }(),
    tr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2, r2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, ut();
            case 2:
              return n2 = new Set(e4.sent.map(function (e5) {
                return e5.split(".")[0];
              })), r2 = [], t2.forEach(function (e5) {
                n2.has(e5) || r2.push(e5);
              }), e4.abrupt("return", r2);
            case 7:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    nr = ["enableDebug", "enableMemory", "warnHandler"],
    rr = function () {};
  function ar(e2) {
    return ir.apply(this, arguments);
  }
  function ir() {
    return ir = n$1(c$1.mark(function t2(n2) {
      var r2, a2, i2, o2, s2, u2, l2, f2;
      return c$1.wrap(function (t3) {
        for (;;) switch (t3.prev = t3.next) {
          case 0:
            if (void 0 === n2 && (n2 = {
              enableDebug: false,
              enableMemory: true,
              autoPostNaHalfIsNormal: true
            }), !rr.initialized) {
              t3.next = 3;
              break;
            }
            return t3.abrupt("return", w(n2, rr.initialized));
          case 3:
            if (!rr.isReady) {
              t3.next = 5;
              break;
            }
            return t3.abrupt("return", new Promise(function (e2) {
              rr.queue.push(function () {
                e2(ar(n2));
              });
            }));
          case 5:
            if (i2 = void 0 !== (a2 = (r2 = n2).enableDebug) && a2, s2 = void 0 === (o2 = r2.enableMemory) || o2, u2 = r2.warnHandler, l2 = e$1(r2, nr), void 0 !== n2 && P({
              enableDebug: !!i2,
              enableMemory: !!s2,
              warnHandler: u2
            }), (f2 = Fe()) !== qe.PC_LINK) {
              t3.next = 12;
              break;
            }
            self.__AWESOME_API_POLYFILL_COMPILER__ = "PC_LINK", t3.next = 20;
            break;
          case 12:
            if (f2 !== qe.BLINK && f2 !== qe.PINK) {
              t3.next = 16;
              break;
            }
            self.__AWESOME_API_POLYFILL_COMPILER__ = "NATIVE", t3.next = 20;
            break;
          case 16:
            return t3.next = 18, Ke();
          case 18:
            self.__AWESOME_API_POLYFILL_COMPILER__ = t3.sent === qe.PC_ROOM ? "PC_ROOM" : "WEB";
          case 20:
            if (O("awesomeApi current_env:" + f2 + ",compiler:" + self.__AWESOME_API_POLYFILL_COMPILER__, "initial"), !rr.isReady && !rr.initialized) {
              t3.next = 25;
              break;
            }
            return O("The bridge " + (rr.isReady ? "is being" : "has been") + " registered, please do not register again.", "initial"), t3.abrupt("return", w(l2, !rr.isReady && rr.initialized));
          case 25:
            if (t3.prev = 25, "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__) {
              t3.next = 29;
              break;
            }
            return t3.next = 29, er({
              newConfig: n2,
              App: rr
            });
          case 29:
            if ("PC_LINK" !== self.__AWESOME_API_POLYFILL_COMPILER__) {
              t3.next = 32;
              break;
            }
            return t3.next = 32, qn({
              newConfig: n2,
              App: rr
            });
          case 32:
            t3.next = 36;
            break;
          case 34:
            t3.prev = 34, t3.t0 = t3.catch(25);
          case 36:
            try {
              for (rr.initialized = true, rr.isReady = false; rr.queue.length > 0;) rr.queue.shift()();
            } catch (e2) {
              console.log(e2);
            }
            return t3.abrupt("return", w(l2, rr.initialized));
          case 38:
          case "end":
            return t3.stop();
        }
      }, t2, null, [[25, 34]]);
    })), ir.apply(this, arguments);
  }
  function or(e2) {
    return sr.apply(this, arguments);
  }
  function sr() {
    return (sr = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return void 0 === t2 && (t2 = {}), n2 = Pn(), e3.prev = 2, e3.next = 5, Promise.resolve().then(() => uaParser77a586ef);
          case 5:
            r2 = new e3.sent.UAParser().getResult(), (a2 = r2.os).name && a2.version && (n2.name = a2.name, n2.version = a2.version, n2.system = a2.name + " " + a2.version), e3.next = 13;
            break;
          case 11:
            e3.prev = 11, e3.t0 = e3.catch(2);
          case 13:
            return e3.abrupt("return", w(t2, Promise.resolve(vn({}, n2))));
          case 14:
          case "end":
            return e3.stop();
        }
      }, e2, null, [[2, 11]]);
    }))).apply(this, arguments);
  }
  function ur(e2) {
    return cr.apply(this, arguments);
  }
  function cr() {
    return (cr = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            if (void 0 === t2 && (t2 = {}), !Ie()) {
              e3.next = 16;
              break;
            }
            return n2 = Pn(), e3.prev = 3, e3.next = 6, yt();
          case 6:
            return r2 = e3.sent, e3.next = 9, gn("global.getContainerInfo", "callback");
          case 9:
            a2 = e3.sent, Object.assign(n2, {
              brand: "",
              model: "",
              version: a2.appVersion,
              system: a2.platform + " " + a2.osVersion,
              platform: a2.platform,
              name: "",
              build: +a2.appBuild,
              webviewType: -1,
              businessState: r2,
              extInfo: {
                time: +a2.time,
                rawData: JSON.stringify(a2)
              },
              containerInfo: vn({}, hn(a2, ["appVersion", "osVersion", "platform", "navBarHeight", "time", "appBuild"]), {
                rawData: JSON.stringify(a2)
              }),
              statusBarHeight: a2.navBarHeight
            }), e3.next = 15;
            break;
          case 13:
            e3.prev = 13, e3.t0 = e3.catch(3);
          case 15:
            return e3.abrupt("return", w(t2, Promise.resolve(n2)));
          case 16:
            return e3.abrupt("return", Promise.reject(Oe));
          case 17:
          case "end":
            return e3.stop();
        }
      }, e2, null, [[3, 13]]);
    }))).apply(this, arguments);
  }
  function lr() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      getSystemInfo: Nn
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      getSystemInfo: ur
    }), "WEB" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      getSystemInfo: or
    });
  }
  rr.isReady = false, rr.initialized = false, rr.queue = [];
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "getSystemInfo",
              useNative: lr
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var pr = ["old", "compare"],
    dr = {
      ">": 1,
      "<": -1,
      "=": 0,
      ">=": 2,
      "<=": -2
    };
  function vr() {
    return hr.apply(this, arguments);
  }
  function hr() {
    return (hr = n$1(c$1.mark(function e2() {
      var t2, n2, r2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return e3.next = 2, bn()(Vn)({
              method: "global.getContainerInfo"
            });
          case 2:
            return e3.abrupt("return", {
              type: null != (t2 = (r2 = e3.sent).mobi_app) ? t2 : r2.platform,
              build: null != (n2 = r2.build) ? n2 : r2.appBuild
            });
          case 4:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  var _r = function (t2) {
    return function (n2) {
      var r2 = n2.old,
        a2 = n2.compare,
        i2 = void 0 === a2 ? 1 : a2,
        o2 = e$1(n2, pr),
        s2 = Array.isArray(r2) ? r2 : [r2],
        u2 = false;
      try {
        for (var c2 = 0; c2 < s2.length;) {
          var l2 = s2[c2];
          if (t2.type === l2.type) {
            var f2 = ye(t2.build, l2.build),
              p2 = "string" == typeof i2 ? dr[i2] : i2;
            if (2 === p2) {
              u2 = 1 === f2 || 0 === f2;
              break;
            }
            if (-2 === p2) {
              u2 = -1 === f2 || 0 === f2;
              break;
            }
            u2 = f2 === p2;
            break;
          }
          c2++;
        }
      } catch (e2) {
        console.log(e2);
      }
      return w(o2, Promise.resolve(u2));
    };
  };
  function mr(e2) {
    return br.apply(this, arguments);
  }
  function br() {
    return (br = n$1(c$1.mark(function e2(t2) {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return void 0 === t2 && (t2 = {
              old: [],
              compare: 1
            }), e3.next = 3, vr();
          case 3:
            return e3.abrupt("return", _r(e3.sent)(t2));
          case 5:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function gr(e2) {
    return yr.apply(this, arguments);
  }
  function yr() {
    return (yr = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2, i2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            if (void 0 === t2 && (t2 = {
              old: [],
              compare: 1
            }), !Ie()) {
              e3.next = 6;
              break;
            }
            return e3.next = 4, vr();
          case 4:
            return e3.abrupt("return", _r(e3.sent)(t2));
          case 6:
            if (null == (n2 = window.browser) || !n2.app_version) {
              e3.next = 15;
              break;
            }
            return e3.prev = 7, a2 = null == (r2 = window.browser) ? void 0 : r2.app_version.split("."), i2 = parseInt(a2[a2.length - 1]), e3.abrupt("return", _r({
              type: "pc_link",
              build: i2
            })(t2));
          case 13:
            e3.prev = 13, e3.t0 = e3.catch(7);
          case 15:
            return e3.abrupt("return", Promise.reject(Oe));
          case 16:
          case "end":
            return e3.stop();
        }
      }, e2, null, [[7, 13]]);
    }))).apply(this, arguments);
  }
  function Ir() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      checkVersion: mr
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      checkVersion: gr
    });
  }
  var Pr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, ar();
            case 2:
              return e4.abrupt("return", Ne({
                ns: "global",
                name: "checkVersion"
              })(Pr, Ze({
                namespace: "NATIVE",
                method: "checkVersion",
                useNative: Ir
              }))(t2));
            case 3:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    wr = ["success", "fail"],
    Lr = function (t2) {
      return function (n2) {
        var r2,
          a2 = n2.success,
          i2 = n2.fail,
          o2 = e$1(n2, wr);
        return k(Vn)({
          method: null != (r2 = null == t2 ? void 0 : t2.method) ? r2 : "live_stream.receiveBroadcast",
          data: o2,
          success: function (e2) {
            return null == a2 ? void 0 : a2(e2);
          },
          fail: function (e2) {
            return null == i2 ? void 0 : i2(e2);
          }
        });
      };
    },
    Er = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (!Ie()) {
                e4.next = 2;
                break;
              }
              return e4.abrupt("return", Lr({
                method: "live_stream.receiveBroadcast"
              })(vn({}, t2, {
                type: St()
              })));
            case 2:
              return e4.abrupt("return", Promise.reject(Oe));
            case 3:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Or = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2, r2, a2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return r2 = Fe(), e4.next = 3, yt();
            case 3:
              return a2 = e4.sent, r2 === qe.PINK && (n2 = "live_room_half.receiveBroadcast"), (r2 === qe.BLINK || r2 === qe.PINK && a2 === vt.MASTER) && (n2 = "live_stream_half.receiveBroadcast"), e4.abrupt("return", Lr({
                method: n2
              })(hn(t2, ["type"])));
            case 7:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    kr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, Ke();
            case 2:
              if (e4.sent === qe.PC_ROOM) {
                e4.next = 5;
                break;
              }
              return e4.abrupt("return", null);
            case 5:
              return Ve("receiveBroadcast", t2.success, {
                cmd: t2.cmd
              }), e4.abrupt("return", Lr({
                method: void 0
              })(hn(t2, ["type"])));
            case 7:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }();
  function Ar() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      receiveBroadcast: Or
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      receiveBroadcast: Er
    }), "PC_ROOM" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      receiveBroadcast: kr
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "receiveBroadcast",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK"],
              useNative: Ar
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var Nr = function (e2) {
      return e2[e2.h5 = 0] = "h5", e2[e2.native = 1] = "native", e2[e2.half = 2] = "half", e2[e2.invalid = -1] = "invalid", e2;
    }({}),
    Sr = function (e2) {
      if (/miniapp.bilibili.com/.test(e2)) return 1;
      var t2 = Nt(e2),
        n2 = e2.match(/(\w+):\/\/([^/:]+)(:\d*)?/);
      if (n2) {
        var r2 = n2[1],
          a2 = ["http", "https"].includes(r2),
          i2 = !["http", "https", ""].includes(r2) && !a2;
        return a2 && "1" === t2.is_live_half_webview ? 2 : i2 ? 1 : a2 ? 0 : -1;
      }
      return -1;
    },
    Cr = function (e2) {
      return e2[e2.LivePage = 0] = "LivePage", e2[e2.BlancLivePage = 1] = "BlancLivePage", e2[e2.PlayerPage = 2] = "PlayerPage", e2[e2.SpacePage = 3] = "SpacePage", e2;
    }(Cr || {}),
    Mr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2, r2, a2, i2, o2, s2, u2, l2, f2, p2, d2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, Promise.resolve().then(() => biliBridge216f4b00);
            case 2:
              if (i2 = e4.sent.callNative, o2 = new URL(t2.url), s2 = o2.hostname, u2 = o2.pathname.match(/^([\w/]*)\/(\w+)\/*$/)) {
                e4.next = 10;
                break;
              }
              return e4.abrupt("return", false);
            case 10:
              if (l2 = null != (n2 = u2[1]) ? n2 : "", f2 = null != (r2 = u2[2]) ? r2 : "", p2 = ["live.bilibili.com", "live.bilibili.com/blanc", "www.bilibili.com/video", "space.bilibili.com"].indexOf(s2 + l2), 0 !== s2.indexOf("ff-") && 0 !== s2.indexOf("dev.") || /^(dev\.live)|(ff-(test\d+\.live|dev))\.bilibili\.com(\/blanc)?$/.test(s2 + l2) && (p2 = Cr.LivePage), d2 = true, !(p2 > -1 && f2)) {
                e4.next = 39;
                break;
              }
              e4.prev = 17, e4.t0 = p2, e4.next = e4.t0 === Cr.LivePage || e4.t0 === Cr.BlancLivePage ? 21 : e4.t0 === Cr.PlayerPage ? 23 : e4.t0 === Cr.SpacePage ? 26 : 29;
              break;
            case 21:
              return null == (a2 = window) || null == (a2 = a2.top) || a2.postMessage({
                type: "roomIdChange",
                roomId: f2
              }, "*"), e4.abrupt("break", 31);
            case 23:
              return e4.next = 25, i2("window/openPlayerWindow", {
                type: "ugc",
                bvid: f2
              });
            case 25:
              return e4.abrupt("break", 31);
            case 26:
              return e4.next = 28, i2("window/openMainWindowPage", {
                page: "SpacePage",
                meta: {
                  mid: f2
                }
              });
            case 28:
              return e4.abrupt("break", 31);
            case 29:
              return d2 = false, e4.abrupt("break", 31);
            case 31:
              e4.next = 37;
              break;
            case 33:
              e4.prev = 33, e4.t1 = e4.catch(17), d2 = false;
            case 37:
              e4.next = 40;
              break;
            case 39:
              d2 = false;
            case 40:
              return e4.abrupt("return", d2);
            case 41:
            case "end":
              return e4.stop();
          }
        }, e3, null, [[17, 33]]);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Rr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (e4.t0 = "h5" !== (null == t2 ? void 0 : t2.jumpType), !e4.t0) {
                e4.next = 5;
                break;
              }
              return e4.next = 4, Mr(t2);
            case 4:
              e4.t0 = e4.sent;
            case 5:
              if (!e4.t0) {
                e4.next = 7;
                break;
              }
              return e4.abrupt("return", Promise.resolve(true));
            case 7:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Br = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, Ke();
            case 2:
              if (n2 = e4.sent, !("h5" === t2.jumpType || "half" === t2.openType || t2.url.indexOf("is_live_half_webview=1") > -1) || n2 !== qe.PC_ROOM) {
                e4.next = 8;
                break;
              }
              return e4.abrupt("return", je("openFrame", {
                url: t2.url,
                title: t2.title || "哔哩哔哩直播"
              }));
            case 8:
              t2.replace ? window.location.replace(t2.url) : window.open(t2.url);
            case 9:
              return e4.abrupt("return", Promise.resolve(true));
            case 10:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Tr = function (e2) {
      return function (t2) {
        var n2;
        return k(Vn)({
          method: null != (n2 = null == e2 ? void 0 : e2.method) ? n2 : "live_location.closeWindow",
          callback: function () {
            return null == t2 || null == t2.success ? void 0 : t2.success();
          },
          fail: function (e3) {
            return null == t2 || null == t2.fail ? void 0 : t2.fail(e3);
          }
        });
      };
    },
    jr = function (e2) {
      return Ie() ? Tr()(e2) : Tr({
        method: "live_location_half.closeWindow"
      })(e2);
    },
    Vr = function () {
      var e2 = n$1(c$1.mark(function e3() {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, Ke();
            case 2:
              if (e4.sent !== qe.PC_ROOM) {
                e4.next = 7;
                break;
              }
              return e4.abrupt("return", je("closeFrame"));
            case 7:
              window.close();
            case 8:
              return e4.abrupt("return", Promise.resolve(true));
            case 9:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function () {
        return e2.apply(this, arguments);
      };
    }(),
    Wr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, at();
            case 2:
              if ((n2 = e4.sent) !== ot.HALF) {
                e4.next = 7;
                break;
              }
              return e4.abrupt("return", Tr({
                method: "live_location_half.closeWindow"
              })(t2));
            case 7:
              if (n2 !== ot.FULL) {
                e4.next = 11;
                break;
              }
              return e4.abrupt("return", Tr({
                method: "live_location_full.back"
              })(t2));
            case 11:
              if (n2 !== ot.COMMON) {
                e4.next = 15;
                break;
              }
              return e4.abrupt("return", ce("global.closeBrowser", {}));
            case 15:
              return e4.abrupt("return", Tr({
                method: "global.closeBrowser"
              })(t2));
            case 16:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }();
  function Fr() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      closeView: Wr
    }), "WEB" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_APP" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      closeView: Vr
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      closeView: jr
    });
  }
  var Kr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, ar();
            case 2:
              return e4.abrupt("return", Ze({
                namespace: "NATIVE",
                method: "closeView",
                useNative: Fr
              })(t2));
            case 3:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Yr = function (e2) {
      return function (t2) {
        var n2,
          r2 = t2.fail,
          a2 = t2.success,
          i2 = t2.onClose,
          o2 = {
            method: null != (n2 = null == e2 ? void 0 : e2.method) ? n2 : "live_location.forward",
            data: {
              type: t2.jumpType,
              topage: t2.url
            },
            fail: function (e3) {
              null == r2 || r2(e3);
            },
            callback: function (e3) {
              null == a2 || a2(e3), t2.replace && Kr();
            },
            success: function () {
              return null == i2 ? void 0 : i2();
            }
          };
        return k(Vn)(o2);
      };
    };
  function Jr(e2, t2) {
    var n2 = e2.url.startsWith("bililive://"),
      r2 = "bililive://blink/open_browser",
      a2 = "bililive://blink/open_web",
      i2 = function () {
        return e2.jumpType ? {
          h5: 3,
          native: 2,
          browser: 1
        }[e2.jumpType] : void 0;
      };
    if (e2.url.startsWith(a2) || e2.url.startsWith(r2)) {
      var o2,
        s2 = Nt(e2.url),
        u2 = xt(e2.url),
        c2 = u2.origin,
        l2 = u2.pathname,
        f2 = null != (o2 = s2.h5_link_type) ? o2 : i2();
      s2.h5_link_type && delete s2.h5_link_type, e2.url = c2 + l2 + "?" + At(s2) + "&h5_link_type=" + f2, e2.url = e2.url.replace(a2, r2);
    } else !n2 && t2 && (e2.url = r2 + "?url=" + encodeURIComponent(e2.url) + "&h5_link_type=" + i2());
    return e2;
  }
  var Ur = function (e2) {
      return Ie() ? function (e3) {
        var t2 = e3.onClose;
        if (!e3.jumpType) {
          var n2 = Sr(e3.url);
          e3.jumpType = Nr[n2];
        }
        if ("h5" === e3.jumpType && void 0 !== e3.navbarStyle && 2 !== e3.navbarStyle) {
          var r2 = e3.navbarStyle + 2,
            a2 = Nt(e3.url),
            i2 = a2.pc_ui;
          if (i2) {
            var o2 = i2.split(",");
            o2[3] = r2.toString(), a2.pc_ui = o2.join(",");
            var s2 = new URL(e3.url);
            e3.url = decodeURIComponent(s2.origin + s2.pathname + "?" + At(a2) + s2.hash);
          }
        }
        return e3.onClose = function () {
          "h5" === e3.jumpType && (null == t2 || t2());
        }, Yr()(Jr(e3));
      }(e2) : Ie(3869) ? function (e3) {
        if (!e3.jumpType) {
          var t2 = Sr(e3.url);
          e3.jumpType = Nr[t2];
        }
        var n2 = Jr(e3, true),
          r2 = n2.replace,
          a2 = n2.url,
          i2 = n2.fail,
          o2 = n2.success;
        return k(Vn)({
          method: "live_arouse_pc_link_module",
          data: {
            params: a2,
            moduleName: "open_in_app",
            closeCurrent: r2 ? 1 : 0
          },
          fail: function (e4) {
            null == i2 || i2(e4);
          },
          callback: function (e4) {
            null == o2 || o2(e4);
          }
        });
      }(e2) : Promise.reject(Oe);
    },
    Hr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2, r2, a2, i2, o2, s2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, at();
            case 2:
              return n2 = e4.sent === ot.HALF ? "half" : "full", a2 = void 0 === (r2 = t2.navbarStyle) ? 0 : r2, "browser" === t2.jumpType && (t2.jumpType = "h5"), t2.jumpType || (i2 = Sr(t2.url), t2.jumpType = Nr[i2]), 0 !== a2 && ((o2 = Nt(t2.url)).hybrid_set_header = a2.toString(), s2 = new URL(t2.url), t2.url = decodeURIComponent(s2.origin + s2.pathname + "?" + At(o2) + s2.hash)), e4.abrupt("return", Yr({
                method: "live_location_" + n2 + ".forward"
              })(t2));
            case 9:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Gr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2, r2, a2, i2, o2, s2, u2, l2, f2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return n2 = t2.fail, r2 = t2.success, a2 = t2.onClose, e4.next = 3, at();
            case 3:
              if (i2 = e4.sent === ot.HALF ? "half" : "full", void 0 !== t2.is_cling_player && ((o2 = Nt(t2.url)).is_cling_player = o2.is_cling_player ? "0" : "1", s2 = new URL(t2.url), t2.url = decodeURIComponent(s2.origin + s2.pathname + "?" + At(o2) + s2.hash)), 2 === Sr(t2.url)) {
                e4.next = 9;
                break;
              }
              return e4.abrupt("return", Promise.reject("invalid url."));
            case 9:
              return u2 = "live_room_" + i2 + ".openHalfWebView", e4.next = 12, nt({
                method: u2
              });
            case 12:
              return (l2 = e4.sent) || (u2 = "live_location_" + i2 + ".forward"), f2 = {
                method: u2,
                data: {
                  url: t2.url
                },
                fail: function (e5) {
                  null == n2 || n2(e5);
                },
                callback: function (e5) {
                  null == r2 || r2(e5), t2.replace && Kr();
                },
                success: function () {
                  return null == a2 ? void 0 : a2();
                }
              }, l2 || (Reflect.deleteProperty(f2.data, "url"), Reflect.set(f2.data, "type", "half"), Reflect.set(f2.data, "topage", t2.url)), e4.abrupt("return", k(Vn)(f2));
            case 17:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    qr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return n2 = "live_hime.openBlinkScheme", e4.next = 3, at();
            case 3:
              return "half" === (e4.sent === ot.HALF ? "half" : "full") && (n2 = "live_stream_half.open_in_app"), e4.next = 8, nt({
                method: n2
              });
            case 8:
              if (!e4.sent) {
                e4.next = 10;
                break;
              }
              return e4.abrupt("return", k(Vn)({
                method: n2,
                data: {
                  url: t2.url
                }
              }));
            case 10:
              return e4.abrupt("return", -1);
            case 11:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Dr = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2, r2, a2, i2, o2, s2, u2, l2, f2, p2, d2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return n2 = t2.url.startsWith("bililive://blink"), e4.next = 3, at();
            case 3:
              if (r2 = e4.sent, !n2) {
                e4.next = 10;
                break;
              }
              return e4.next = 7, qr(t2);
            case 7:
              if (-1 === e4.sent) {
                e4.next = 10;
                break;
              }
              return e4.abrupt("return", Promise.resolve(true));
            case 10:
              return a2 = r2 === ot.HALF ? "half" : "full", e4.next = 13, nt({
                method: "live_location_" + a2 + ".forward"
              });
            case 13:
              if (!e4.sent) {
                e4.next = 25;
                break;
              }
              if (i2 = t2.openType, o2 = Nt(t2.url), i2 || (i2 = "1" === o2.is_live_half_webview ? "half" : "full"), s2 = xt(t2.url), u2 = s2.origin, l2 = s2.pathname, f2 = s2.hash, "full" !== i2) {
                e4.next = 22;
                break;
              }
              return o2.is_live_half_webview && (o2.is_live_half_webview = "0"), t2.url = u2 + l2 + "?" + At(o2) + f2, e4.abrupt("return", Hr(t2));
            case 22:
              return o2.is_live_half_webview || (o2.is_live_half_webview = "1"), t2.url = u2 + l2 + "?" + At(o2) + f2, e4.abrupt("return", Gr(t2));
            case 25:
              return e4.next = 27, An({
                method: "ability.openScheme"
              });
            case 27:
              if (d2 = (p2 = e4.sent).isSupport, !p2.isNewChannelSupport) {
                e4.next = 32;
                break;
              }
              return e4.abrupt("return", ce("ability.openScheme", {
                url: t2.url
              }));
            case 32:
              if (!d2) {
                e4.next = 34;
                break;
              }
              return e4.abrupt("return", k(Vn)({
                method: "ability.openScheme",
                data: {
                  url: t2.url
                }
              }));
            case 34:
              return e4.abrupt("return", Br(t2));
            case 35:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }();
  function Qr() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      openView: Dr
    }), "WEB" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      openView: Br
    }), "PC_APP" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      openView: Rr
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      openView: Ur
    });
  }
  var zr = function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            if (/^[a-z]+:\/\/(.*)/.test(t2.url) || (t2.url = t2.url.replace("//", ""), t2.url = "https://" + t2.url), -1 !== Sr(t2.url)) {
              e4.next = 6;
              break;
            }
            return e4.abrupt("return", Promise.reject("invalid url."));
          case 6:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "openView",
              useNative: Qr
            })(t2));
          case 7:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  }();
  function na(e2, t2) {
    return 0 === e2.lastIndexOf(t2, 0);
  }
  function ra(e2, t2) {
    var n2 = aa(),
      r2 = n2.namespace,
      a2 = n2.split,
      i2 = n2.keyWhiteList,
      o2 = n2.keyBlackList,
      s2 = function (e3, t3) {
        return na(e3, t3) ? e3.substring(t3.length) : e3;
      }(e2, r2),
      u2 = function (e3) {
        return e3.replace(/\./gi, null != t2 ? t2 : a2);
      };
    return function (e3, t3) {
      return "string" == typeof t3 && (null == e3 ? void 0 : e3.some(function (e4) {
        return "string" == typeof e4 ? -1 !== t3.indexOf(e4) : t3.match(e4);
      }));
    }(o2, e2) || i2.length && -1 === (null == i2 ? void 0 : i2.indexOf(e2)) ? u2(e2) : u2(function (e3, t3) {
      return na(e3, t3) ? e3 : "" + t3 + e3;
    }(s2, r2));
  }
  function aa() {
    return y("appStorageSetting", {
      namespace: "",
      split: ".",
      keyWhiteList: [],
      keyBlackList: []
    });
  }
  var ya = function (e2) {
      return function (t2) {
        var n2,
          r2 = t2.msg,
          a2 = t2.type,
          i2 = t2.success,
          o2 = t2.fail;
        return k(Vn)({
          method: null != (n2 = null == e2 ? void 0 : e2.method) ? n2 : "live_ui.toast",
          data: {
            msg: r2,
            type: a2 || "short"
          },
          fail: function (e3) {
            null == o2 || o2(e3);
          },
          callback: function (e3) {
            null == i2 || i2(e3);
          }
        });
      };
    },
    Ia = function (e2) {
      return Ie() ? ya()(e2) : Promise.reject(Oe);
    },
    Pa = function (e2) {
      return ya({
        method: "live_ui_" + Yn() + ".toast"
      })(e2);
    };
  function wa() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      showToast: Pa
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      showToast: Ia
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "showToast",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK"],
              useNative: wa
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var Ea = function (e2) {
      return function (t2) {
        var n2;
        if ("half" === Yn()) throw new Error(we);
        return k(Vn)({
          method: null != (n2 = null == e2 ? void 0 : e2.method) ? n2 : "live_ui.titleBar",
          data: {
            display: 0
          },
          callback: function () {
            return null == t2 || null == t2.success ? void 0 : t2.success();
          },
          fail: function (e3) {
            return null == t2 || null == t2.fail ? void 0 : t2.fail(e3);
          }
        });
      };
    },
    Oa = function (e2) {
      return Ea({
        method: "live_ui.titleBar"
      })(e2);
    },
    ka = function (e2) {
      return Ea({
        method: "live_ui_" + Yn() + ".titleBar"
      })(e2);
    };
  function Aa() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      hideNavigationBar: ka
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      hideNavigationBar: Oa
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "hideNavigationBar",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK"],
              useNative: Aa
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  function Na(e2, t2) {
    var n2 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
    if (n2) return (n2 = n2.call(e2)).next.bind(n2);
    if (Array.isArray(e2) || (n2 = function (e3, t3) {
      if (e3) {
        if ("string" == typeof e3) return Sa(e3, t3);
        var n3 = {}.toString.call(e3).slice(8, -1);
        return "Object" === n3 && e3.constructor && (n3 = e3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? Sa(e3, t3) : void 0;
      }
    }(e2)) || t2 && e2 && "number" == typeof e2.length) {
      n2 && (e2 = n2);
      var r2 = 0;
      return function () {
        return r2 >= e2.length ? {
          done: true
        } : {
          done: false,
          value: e2[r2++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function Sa(e2, t2) {
    (null == t2 || t2 > e2.length) && (t2 = e2.length);
    for (var n2 = 0, r2 = Array(t2); n2 < t2; n2++) r2[n2] = e2[n2];
    return r2;
  }
  var Ca = function (e2) {
      if (!Ie()) return Promise.reject(Oe);
      var t2 = e2.success,
        n2 = e2.fail,
        r2 = Ma(e2.items);
      return k(Vn)({
        method: "live_ui.titleBar",
        data: {
          right: r2
        },
        success: function (e3) {
          var t3 = e3.tagname;
          if (r2 && t3) for (var n3, a2 = Na(r2); !(n3 = a2()).done;) {
            var i2,
              o2 = n3.value;
            if (o2 && t3 === o2.tagname) null == (i2 = o2.onClick) || i2.call(o2);
          }
        },
        callback: function () {
          return null == t2 ? void 0 : t2();
        },
        fail: function (e3) {
          return null == n2 ? void 0 : n2(e3);
        }
      });
    },
    Ma = function (e2) {
      var t2 = [];
      return null == e2 || e2.forEach(function (e3) {
        if (e3) {
          var n2 = e3.url || Ra[e3.tagname || ""],
            r2 = "custom";
          e3.tagname && ["close", "help", "set"].indexOf(e3.tagname) > -1 && (r2 = e3.tagname), t2.find(function (e4) {
            return (null == e4 ? void 0 : e4.tagname) === r2;
          }) || t2.push({
            url: n2,
            tagname: r2,
            text: e3.text,
            onClick: e3.onClick
          });
        }
      }), t2;
    },
    Ra = {
      share: "https://i0.hdslb.com/bfs/live/7a31e08fb841cea4483fecceb74834f6f690224e.png",
      more: "https://i0.hdslb.com/bfs/live/b535f55bc08312913a2f7cdd59bd60ceb1c31637.png",
      notice: "https://i0.hdslb.com/bfs/live/67bdd6014e74af9b568e9fe41f2cf8c46768c717.png",
      calendar: "https://i0.hdslb.com/bfs/live/424d2419410dc060d8e7fad29ed3e7e05a6b2678.png"
    };
  function Ba(e2, t2) {
    var n2 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
    if (n2) return (n2 = n2.call(e2)).next.bind(n2);
    if (Array.isArray(e2) || (n2 = function (e3, t3) {
      if (e3) {
        if ("string" == typeof e3) return Ta(e3, t3);
        var n3 = {}.toString.call(e3).slice(8, -1);
        return "Object" === n3 && e3.constructor && (n3 = e3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? Ta(e3, t3) : void 0;
      }
    }(e2)) || t2 && e2 && "number" == typeof e2.length) {
      n2 && (e2 = n2);
      var r2 = 0;
      return function () {
        return r2 >= e2.length ? {
          done: true
        } : {
          done: false,
          value: e2[r2++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function Ta(e2, t2) {
    (null == t2 || t2 > e2.length) && (t2 = e2.length);
    for (var n2 = 0, r2 = Array(t2); n2 < t2; n2++) r2[n2] = e2[n2];
    return r2;
  }
  var ja = function (e2) {
      if (!Ie()) return Promise.reject(Oe);
      var t2 = e2.title,
        n2 = void 0 === t2 ? "" : t2,
        r2 = e2.titleColor,
        a2 = e2.backgroundColor,
        i2 = e2.leftSlot,
        o2 = void 0 === i2 ? [] : i2,
        s2 = e2.rightSlot,
        u2 = e2.success,
        c2 = e2.fail,
        l2 = Ma(void 0 === s2 ? [] : s2),
        f2 = {
          display: 1,
          title: n2,
          style: {},
          icon: Va(o2),
          right: l2
        };
      return void 0 !== r2 && (f2.style.titleColor = "" + r2), void 0 !== a2 && (f2.style.backgroundColor = "" + a2), k(Vn)({
        method: "live_ui.titleBar",
        data: f2,
        success: function (e3) {
          var t3 = e3.tagname;
          if (l2 && t3) for (var n3, r3 = Ba(l2); !(n3 = r3()).done;) {
            var a3,
              i3 = n3.value;
            if (i3 && t3 === i3.tagname) null == (a3 = i3.onClick) || a3.call(i3);
          }
        },
        fail: function (e3) {
          return null == c2 ? void 0 : c2(e3);
        },
        callback: function () {
          null == u2 || u2();
        }
      });
    },
    Va = function (e2) {
      var t2;
      if (void 0 !== e2) return null != e2 && e2.length ? null == (t2 = e2[0]) ? void 0 : t2.url : "";
    },
    Wa = ["title"],
    Fa = function () {
      var t2 = n$1(c$1.mark(function t3(n2) {
        var r2, a2;
        return c$1.wrap(function (t4) {
          for (;;) switch (t4.prev = t4.next) {
            case 0:
              return r2 = n2.title, a2 = e$1(n2, Wa), t4.next = 3, new Promise(function (e2) {
                setTimeout(function () {
                  document.title = null != r2 ? r2 : document.title, e2("");
                });
              });
            case 3:
              return t4.abrupt("return", w(a2, t4.sent));
            case 5:
            case "end":
              return t4.stop();
          }
        }, t3);
      }));
      return function (e2) {
        return t2.apply(this, arguments);
      };
    }();
  function Ka(e2, t2) {
    var n2 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
    if (n2) return (n2 = n2.call(e2)).next.bind(n2);
    if (Array.isArray(e2) || (n2 = function (e3, t3) {
      if (e3) {
        if ("string" == typeof e3) return Ya(e3, t3);
        var n3 = {}.toString.call(e3).slice(8, -1);
        return "Object" === n3 && e3.constructor && (n3 = e3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? Ya(e3, t3) : void 0;
      }
    }(e2)) || t2 && e2 && "number" == typeof e2.length) {
      n2 && (e2 = n2);
      var r2 = 0;
      return function () {
        return r2 >= e2.length ? {
          done: true
        } : {
          done: false,
          value: e2[r2++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function Ya(e2, t2) {
    (null == t2 || t2 > e2.length) && (t2 = e2.length);
    for (var n2 = 0, r2 = Array(t2); n2 < t2; n2++) r2[n2] = e2[n2];
    return r2;
  }
  var Ja = function (e2) {
      var t2;
      if ("half" === Yn()) throw new Error(we);
      var n2 = e2.success,
        r2 = e2.fail,
        a2 = null == e2 || null == (t2 = e2.items) ? void 0 : t2.slice(0, 2);
      return (null == a2 ? void 0 : a2.length) > 0 && a2.forEach(function (e3) {
        var t3;
        e3.badge = 0 == e3.badge ? "solid" : null == (t3 = e3.badge) ? void 0 : t3.toString();
      }), k(Vn)({
        method: "live_ui_full.setNavMenu",
        data: {
          list: a2
        },
        success: function (e3) {
          for (var t3, n3 = Ka(a2); !(t3 = n3()).done;) {
            var r3,
              i2 = t3.value;
            if (i2 && e3 === i2.tagname) null == (r3 = i2.onClick) || r3.call(i2);
          }
        },
        callback: function () {
          return null == n2 ? void 0 : n2();
        },
        fail: function (e3) {
          return null == r2 ? void 0 : r2(e3);
        }
      });
    },
    Ua = function (e2) {
      if ("half" === Yn()) throw new Error(we);
      var t2 = e2.titleColor,
        n2 = e2.backgroundColor,
        r2 = e2.titileColorOpacity,
        a2 = e2.backgroundColorOpacity,
        i2 = e2.showBack,
        o2 = e2.showClose,
        s2 = e2.leftSlot,
        u2 = e2.rightSlot,
        c2 = void 0 === u2 ? [] : u2,
        l2 = e2.success,
        f2 = e2.fail,
        p2 = {
          display: 1,
          title: e2.title,
          style: {},
          left: Ha(void 0 === s2 ? [] : s2, void 0 === i2 || i2, e2.backColor, void 0 !== o2 && o2, e2.closeColor),
          right: c2
        };
      return void 0 !== t2 && (p2.style.titleColor = t2 + ", " + (void 0 !== r2 ? r2 : 1)), void 0 !== n2 && (p2.style.backgroundColor = n2 + ", " + (void 0 !== a2 ? a2 : 1)), k(Vn)({
        method: "live_ui_full.titleBar",
        data: p2,
        success: function (e3) {
          if (["back", "close"].includes(e3) && "back" === e3) return Kr();
        },
        fail: function (e3) {
          return null == f2 ? void 0 : f2(e3);
        },
        callback: function () {
          c2 && Ja({
            items: c2
          }), null == l2 || l2();
        }
      });
    },
    Ha = function (e2, t2, n2, r2, a2) {
      var i2 = [];
      return t2 && i2.push(n2 ? {
        tagname: "back",
        color: n2 + ", 1"
      } : {
        tagname: "back"
      }), r2 && i2.push(a2 ? {
        tagname: "close",
        color: a2 + ", 1"
      } : {
        tagname: "close"
      }), [].concat(i2, e2 || []);
    };
  function Ga() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      setNavigationBar: Ua
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      setNavigationBar: ja
    }), "WEB" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      setNavigationBar: Fa
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "setNavigationBar",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK", "WEB"],
              useNative: Ga
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var Da = ["success", "fail"],
    Qa = function (t2) {
      return function (n2) {
        var r2,
          a2 = n2.success,
          i2 = n2.fail,
          o2 = e$1(n2, Da);
        return k(Vn, {
          resolveFn: "success"
        })({
          method: null != (r2 = null == t2 ? void 0 : t2.method) ? r2 : "live_ui.titleBar",
          data: o2,
          callback: function () {
            return null == a2 ? void 0 : a2();
          },
          fail: function (e2) {
            return null == i2 ? void 0 : i2(e2);
          }
        });
      };
    },
    za = function (e2) {
      return Ie() ? Qa()(e2) : Promise.reject(Oe);
    },
    $a = ["title"],
    Xa = function () {
      var t2 = n$1(c$1.mark(function t3(n2) {
        var r2, a2;
        return c$1.wrap(function (t4) {
          for (;;) switch (t4.prev = t4.next) {
            case 0:
              return r2 = n2.title, a2 = e$1(n2, $a), t4.next = 3, new Promise(function (e2) {
                setTimeout(function () {
                  document.title = null != r2 ? r2 : document.title, e2("");
                });
              });
            case 3:
              return t4.abrupt("return", w(a2, t4.sent));
            case 5:
            case "end":
              return t4.stop();
          }
        }, t3);
      }));
      return function (e2) {
        return t2.apply(this, arguments);
      };
    }(),
    Za = function (e2) {
      if ("half" === Yn()) throw new Error(we);
      return Qa({
        method: "live_ui_full.setTitle"
      })(hn(e2, ["icon"]));
    };
  function ei() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      setNavigationBarTitle: Za
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      setNavigationBarTitle: za
    }), "WEB" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      setNavigationBarTitle: Xa
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "setNavigationBarTitle",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK", "WEB"],
              useNative: ei
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  function ni() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      setNavigationBarRightSlot: Ja
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      setNavigationBarRightSlot: Ca
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "setNavigationBarRightSlot",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK"],
              useNative: ni
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var si = function (e2) {
    return "Object" === Object.prototype.toString.call(e2).slice(8, -1);
  };
  function hi(e2, t2) {
    return void 0 === t2 && (t2 = false), t2 ? /^\/\/+/i.test(e2) : /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e2);
  }
  function _i(e2) {
    var t2, n2;
    e2.baseURL && e2.url && !hi(e2.url) && (e2.url = (t2 = e2.baseURL, (n2 = e2.url) ? t2.replace(/\/+$/, "") + "/" + n2.replace(/^\/+/, "") : t2)), e2.dependProtocolURL && e2.url && hi(e2.url, true) && (e2.url = "" + e2.dependProtocolURL + e2.url), e2.data = mi(e2.data, e2.headers, e2.transformRequest);
    var r2 = e2.adapter;
    return delete e2.adapter, r2(e2).then(function (t3) {
      return t3.data = mi(t3.data, t3.headers, e2.transformResponse), t3;
    }, function (t3) {
      return t3 && t3.response && (t3.response.data = mi(t3.response.data, t3.response.headers, e2.transformResponse)), t3;
    });
  }
  function mi(e2, t2, n2) {
    return n2 && n2.forEach(function (n3) {
      n3 && (e2 = n3(e2, t2));
    }), e2;
  }
  function bi(e2) {
    if (si(e2)) return e2;
    try {
      return JSON.parse(e2);
    } catch (t2) {
      return {
        code: 77777,
        message: "数据格式错误",
        error: t2,
        response: e2
      };
    }
  }
  var gi = function () {
      function e2() {
        this.handlers = [], this.init();
      }
      var t2 = e2.prototype;
      return t2.init = function () {
        this.handlers = [];
      }, t2.use = function (e3, t3) {
        return this.handlers.push({
          fulfilled: e3,
          rejected: t3
        }), this.handlers.length - 1;
      }, t2.eject = function (e3) {
        this.handlers[e3] && (this.handlers[e3] = null);
      }, t2.forEach = function (e3) {
        this.handlers.forEach(function (t3) {
          null !== t3 && e3(t3);
        });
      }, e2;
    }(),
    yi = function () {
      function e2(e3) {
        void 0 === e3 && (e3 = {}), this.interceptors = {
          request: new gi(),
          response: new gi()
        }, this.defaults = e3, this.initInterceptor();
      }
      var t2 = e2.prototype;
      return t2.initInterceptor = function () {
        this.interceptors.request.use(function (e3) {
          return "get" === e3.method && delete e3.data, e3;
        }, void 0), this.interceptors.response.use(function (e3) {
          return "status" in e3 && 200 === e3.status ? Promise.resolve(e3.data) : Promise.reject(e3);
        }, void 0);
      }, t2.nativeRequest = function (e3) {
        var t3,
          n2,
          r2 = e3.params ? e3.url + "?" + At(e3.params) : e3.url + "",
          a2 = {
            method: null != (t3 = e3.method) ? t3 : "get"
          };
        "post" === e3.method && (a2.body = vn({}, e3.params, e3.data), a2.headers = ((n2 = {})["content-type"] = "json" === e3.contentType ? "application/json; charset=UTF-8" : "application/x-www-form-urlencoded; charset=UTF-8", n2));
        return window.fetch(r2, a2).then(function (e4) {
          return e4.json();
        });
      }, t2.request = function () {
        var e3 = n$1(c$1.mark(function e4(t3) {
          var n2, r2, a2, i2, o2, s2;
          return c$1.wrap(function (e5) {
            for (;;) switch (e5.prev = e5.next) {
              case 0:
                if (void 0 === t3 && (t3 = {}), (n2 = Object.assign({
                  method: "get",
                  dependProtocolURL: "https:",
                  transformRequest: [function (e6) {
                    return e6;
                  }],
                  transformResponse: [function (e6) {
                    return bi(e6);
                  }]
                }, this.defaults, t3)).method = n2.method && n2.method.toLowerCase(), n2.adapter && "function" == typeof n2.adapter) {
                  e5.next = 7;
                  break;
                }
                return E(r2 = "invalid adapter.", "request"), e5.abrupt("return", Promise.reject(r2));
              case 7:
                if (n2.url) {
                  e5.next = 11;
                  break;
                }
                return E(a2 = "invalid url.", "request"), e5.abrupt("return", Promise.reject(a2));
              case 11:
                if (n2.method && ["get", "post"].includes(n2.method)) {
                  e5.next = 15;
                  break;
                }
                return E(i2 = "invalid method.", "request"), e5.abrupt("return", Promise.reject(i2));
              case 15:
                for (o2 = [_i, void 0], s2 = Promise.resolve(n2), this.interceptors.request.forEach(function (e6) {
                  o2.unshift(e6.fulfilled, e6.rejected);
                }), this.interceptors.response.forEach(function (e6) {
                  o2.push(e6.fulfilled, e6.rejected);
                }); o2.length;) s2 = s2.then(o2.shift(), o2.shift());
                return e5.abrupt("return", s2);
              case 21:
              case "end":
                return e5.stop();
            }
          }, e4, this);
        }));
        return function (t3) {
          return e3.apply(this, arguments);
        };
      }(), t2.get = function (e3, t3) {
        return this.request(vn({}, t3, {
          method: "get",
          url: e3
        }));
      }, t2.post = function (e3, t3, n2) {
        return this.request(vn({}, n2, {
          method: "post",
          url: e3,
          data: t3
        }));
      }, e2;
    }();
  function Ii(e2, t2) {
    return Ii = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e3, t3) {
      return e3.__proto__ = t3, e3;
    }, Ii(e2, t2);
  }
  (function (e2) {
    function t2(t3) {
      var n2;
      return (n2 = e2.call(this, t3) || this).isSupportNativeRequest = null, n2.mode = Yn(), n2;
    }
    !function (e3, t3) {
      e3.prototype = Object.create(t3.prototype), e3.prototype.constructor = e3, Ii(e3, t3);
    }(t2, e2);
    var r2 = t2.prototype;
    return r2.initInterceptor = function () {
      var e3 = this;
      e3.interceptors.request.eject(0), e3.interceptors.response.eject(0), e3.interceptors.request.use(function (t3) {
        return e3.isSupportNativeRequest || "get" === t3.method && delete t3.data, t3;
      }, void 0), e3.interceptors.response.use(function (t3) {
        return e3.isSupportNativeRequest ? t3 : "status" in t3 && 200 === t3.status ? Promise.resolve(t3.data) : Promise.reject(t3);
      }, void 0);
    }, r2.nativeRequest = function (e3) {
      var t3 = this;
      return new Promise(function (n2, r3) {
        var a2,
          i2 = "post" === e3.method ? {
            url: e3.url,
            method: e3.method,
            params: vn({}, e3.params, e3.data),
            paramsType: e3.contentType || "queryString"
          } : {
            url: e3.url,
            method: null != (a2 = e3.method) ? a2 : "get",
            params: e3.params
          };
        Vn({
          method: "live_network_" + t3.mode + ".request",
          data: i2,
          success: function (e4) {
            n2(bi(e4));
          },
          fail: function (e4) {
            r3(bi(e4));
          },
          failed: function (e4) {
            r3(bi(e4));
          },
          callback: function () {}
        });
      });
    }, r2.request = function () {
      var t3 = n$1(c$1.mark(function t4(n2) {
        var r3, a2;
        return c$1.wrap(function (t5) {
          for (;;) switch (t5.prev = t5.next) {
            case 0:
              if (r3 = this, a2 = "debug_mode=1", ("undefined" != typeof window && -1 !== window.location.href.indexOf(a2) || n2.url && -1 !== n2.url.indexOf(a2)) && (r3.isSupportNativeRequest = false), null !== r3.isSupportNativeRequest) {
                t5.next = 10;
                break;
              }
              if (t5.t0 = ze().isApp, !t5.t0) {
                t5.next = 9;
                break;
              }
              return t5.next = 8, nt({
                method: "live_network_" + r3.mode + ".request"
              });
            case 8:
              t5.t0 = t5.sent;
            case 9:
              r3.isSupportNativeRequest = t5.t0;
            case 10:
              return r3.isSupportNativeRequest && (n2.adapter = r3.nativeRequest.bind(r3)), t5.abrupt("return", e2.prototype.request.call(this, vn({}, n2, {
                transformResponse: [function (e3) {
                  return r3.isSupportNativeRequest ? e3 : bi(e3);
                }]
              })));
            case 12:
            case "end":
              return t5.stop();
          }
        }, t4, this);
      }));
      return function (e3) {
        return t3.apply(this, arguments);
      };
    }(), t2;
  })(yi);
  function Li(e2) {
    return void 0 === e2;
  }
  function Ei(e2, t2, n2) {
    if (void 0 === n2 && (n2 = Li), !e2) return t2;
    var r2 = "";
    try {
      r2 = JSON.parse(e2);
    } catch (t3) {
      r2 = e2;
    }
    return n2(r2) ? t2 : r2;
  }
  function Oi(e2) {
    return JSON.stringify(e2);
  }
  var ki = ["operation", "key", "value"];
  function Ai(e2) {
    return ze().isIOS ? void 0 === e2 || "(null)" === e2 : void 0 === e2;
  }
  function xi(t2) {
    void 0 === t2 && (t2 = {
      operation: "set"
    });
    var r2 = t2.operation,
      a2 = void 0 === r2 ? "set" : r2,
      i2 = t2.key,
      o2 = t2.value,
      s2 = e$1(t2, ki);
    return new Promise(function () {
      var e2 = n$1(c$1.mark(function e3(t3, n2) {
        var r3, u2, l2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (!ze().isApp) {
                e4.next = 40;
                break;
              }
              return c2 = void 0, c2 = ra(null != i2 ? i2 : ""), r3 = "set" === a2 ? {
                operation: a2,
                key: c2,
                value: Oi(o2)
              } : "clear" === a2 ? {
                operation: a2
              } : {
                operation: a2,
                key: c2
              }, e4.next = 4, at();
            case 4:
              return u2 = e4.sent, e4.next = 7, xn({
                method: "storage.setItem"
              });
            case 7:
              if (l2 = e4.sent.isNewChannelSupport, u2 !== ot.COMMON || !l2) {
                e4.next = 24;
                break;
              }
              e4.t0 = a2, e4.next = "set" === e4.t0 ? 13 : "get" === e4.t0 ? 15 : "remove" === e4.t0 ? 17 : "clear" === e4.t0 ? 19 : 21;
              break;
            case 13:
              return ce("storage.setItem", {
                key: r3.key,
                value: r3.value
              }).then(function (e5) {
                0 === (null == e5 ? void 0 : e5.code) && t3(e5);
              }), e4.abrupt("break", 22);
            case 15:
              return ce("storage.getItem", {
                key: r3.key
              }).then(function (e5) {
                if (0 === e5.code && e5.data.value) {
                  var n3 = Ei(e5.data.value);
                  s2.success && s2.success(n3), t3(n3);
                }
              }), e4.abrupt("break", 22);
            case 17:
              return ce("storage.removeItem", {
                key: r3.key
              }).then(function () {
                s2.success && s2.success(void 0), t3(void 0);
              }), e4.abrupt("break", 22);
            case 19:
              return ce("storage.clear").then(function () {
                s2.success && s2.success(void 0), t3(void 0);
              }), e4.abrupt("break", 22);
            case 21:
              return e4.abrupt("break", 22);
            case 22:
              e4.next = 40;
              break;
            case 24:
              if (u2 !== ot.HALF && u2 !== ot.FULL) {
                e4.next = 28;
                break;
              }
              Vn({
                method: "live_cache_" + Yn() + ".localCache",
                data: r3,
                success: function (e5) {
                  var n3,
                    i3 = Ei("set" === a2 ? r3.value : e5, "get" === a2 ? o2 : void 0, Ai);
                  "get" === a2 && (i3 = "string" == typeof (n3 = i3) ? n3.replace(/^\"/, "").replace(/\"$/, "") : n3), s2.success && s2.success(i3), t3(i3);
                },
                fail: function (e5) {
                  var t4 = {
                    message: "出错了"
                  };
                  try {
                    t4 = JSON.parse(e5);
                  } catch (e6) {
                    t4 = {
                      message: "数据格式错误"
                    };
                  }
                  s2.fail && s2.fail(t4.message), n2(t4.message);
                },
                callback: function () {
                  s2.callback && s2.callback();
                }
              }), e4.next = 40;
              break;
            case 28:
              e4.t1 = a2, e4.next = "set" === e4.t1 ? 31 : "get" === e4.t1 ? 33 : "remove" === e4.t1 ? 35 : "clear" === e4.t1 ? 37 : 39;
              break;
            case 31:
              return Vn({
                method: "storage.setItem",
                data: {
                  key: r3.key,
                  value: r3.value
                },
                callback: function (e5) {
                  t3(e5);
                }
              }), e4.abrupt("break", 40);
            case 33:
              return Vn({
                method: "storage.getItem",
                data: {
                  key: r3.key
                },
                callback: function (e5) {
                  var n3 = Ei(e5.value);
                  s2.success && s2.success(n3), t3(n3);
                }
              }), e4.abrupt("break", 40);
            case 35:
              return Vn({
                method: "storage.removeItem",
                data: {
                  key: r3.key
                },
                callback: function (e5) {
                  t3(e5);
                }
              }), e4.abrupt("break", 40);
            case 37:
              return Vn({
                method: "storage.clear",
                data: {},
                callback: function (e5) {
                  t3(e5);
                }
              }), e4.abrupt("break", 40);
            case 39:
              return e4.abrupt("break", 40);
            case 40:
            case "end":
              return e4.stop();
          }
          var c2;
        }, e3);
      }));
      return function (t3, n2) {
        return e2.apply(this, arguments);
      };
    }());
  }
  var Ni = ["operation", "key", "value"];
  function Si(t2) {
    void 0 === t2 && (t2 = {
      operation: "set"
    });
    var n2 = t2.operation,
      r2 = void 0 === n2 ? "set" : n2,
      a2 = t2.key,
      i2 = t2.value,
      o2 = e$1(t2, Ni);
    return new Promise(function (e2, t3) {
      if (window.localStorage) switch (r2) {
        case "set":
          localStorage.setItem(ra(a2), Oi(i2)), o2.success && o2.success(i2), e2(i2);
          break;
        case "get":
          var n3 = Ei(localStorage.getItem(ra(a2)), "get" === r2 ? i2 : void 0);
          o2.success && o2.success(n3), e2(n3);
          break;
        case "remove":
          localStorage.removeItem(ra(a2)), o2.success && o2.success(void 0), e2(void 0);
          break;
        case "clear":
          localStorage.clear(), o2.success && o2.success(void 0), e2(void 0);
      } else t3(Ee);
    });
  }
  var Ci = ["operation", "key", "value"];
  function Mi(t2) {
    void 0 === t2 && (t2 = {
      operation: "set"
    });
    var n2 = t2.operation,
      r2 = void 0 === n2 ? "set" : n2,
      a2 = t2.key,
      i2 = t2.value,
      o2 = e$1(t2, Ci);
    return "clear" === r2 ? Promise.reject('Invalid param: type check failed for param "operation". Expected "set,get,remove", got String with value "clear".') : new Promise(function (e2, t3) {
      var n3,
        s2 = (n3 = ra(null != a2 ? a2 : "", "_"), "set" === r2 ? {
          operation: r2,
          key: n3,
          value: Oi(i2)
        } : {
          operation: r2,
          key: n3
        });
      Ie() ? Vn({
        method: "live_cache.localCache",
        data: s2,
        success: function (t4) {
          var n4 = Ei("set" === r2 ? s2.value : null == t4 ? void 0 : t4.value, "get" === r2 ? i2 : void 0);
          o2.success && o2.success(n4), e2(n4);
        },
        fail: function (e3) {
          var n4 = {
            message: "出错了"
          };
          try {
            n4 = JSON.parse(e3);
          } catch (e4) {
            n4 = {
              message: "数据格式错误"
            };
          }
          o2.fail && o2.fail(n4.message), t3(n4.message);
        },
        callback: function () {
          o2.callback && o2.callback();
        }
      }) : t3(Oe);
    });
  }
  function Ri() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      storage: xi
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      storage: Mi
    }), "WEB" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      storage: Si
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return void 0 === t2 && (t2 = {
              operation: "set"
            }), e4.next = 3, ar();
          case 3:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "storage",
              useNative: Ri
            })(t2));
          case 4:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var Hi = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2, r2, a2, i2, o2, s2, u2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              r2 = "auth.login", a2 = 0, i2 = ["auth.loginUpdate", "auth.ios_purchaseLogin", "auth.purchaseLogin", "auth.login"];
            case 3:
              if (!(a2 < i2.length)) {
                e4.next = 13;
                break;
              }
              return o2 = i2[a2], e4.next = 7, nt({
                method: o2
              });
            case 7:
              if (!e4.sent) {
                e4.next = 10;
                break;
              }
              return r2 = o2, e4.abrupt("break", 13);
            case 10:
              a2++, e4.next = 3;
              break;
            case 13:
              return "" === (s2 = null != (n2 = null == t2 ? void 0 : t2.jumpBackUrl) ? n2 : "") || /^[a-z]+:\/\/(.*)/.test(s2) || (s2 = "https://" + (s2 = s2.replace("//", ""))), u2 = s2 ? Sr(s2) : -1, e4.abrupt("return", new Promise(function (e5, n3) {
                Vn({
                  method: r2,
                  data: {
                    type: "default",
                    callbackUrl: 1 !== u2 ? s2 : ""
                  },
                  onLogin: function (r3) {
                    var a3 = r3.state;
                    if (1 === a3) return e5(a3), null == t2 || null == t2.success || t2.success(), void (1 === u2 && zr({
                      url: s2
                    }));
                    n3(a3), null == t2 || null == t2.fail || t2.fail({
                      code: a3,
                      msg: "登录失败！"
                    });
                  }
                });
              }));
            case 17:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    Gi = function () {
      var e2 = n$1(c$1.mark(function e3() {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, Promise.resolve().then(() => biliBridge216f4b00);
            case 2:
              (0, e4.sent.callNative)("auth/requestLogin");
            case 5:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function () {
        return e2.apply(this, arguments);
      };
    }();
  function qi(e2) {
    return new Promise(function (t2, n2) {
      var r2 = document.createElement("script");
      function a2() {
        t2(true), o2();
      }
      function i2(t3) {
        n2(t3 || new Error("Script loading failed，URL：" + e2)), o2();
      }
      function o2() {
        r2.removeEventListener("load", a2), r2.removeEventListener("error", i2);
      }
      r2.type = "text/javascript", r2.readyState ? r2.onreadystatechange = function () {
        "loaded" === r2.readyState || "complete" === r2.readyState ? t2(r2) : n2(new Error("Script loading failed，URL：" + e2)), r2.onreadystatechange = null;
      } : (r2.addEventListener("load", a2), r2.addEventListener("error", i2)), r2.src = e2, document.head && document.getElementsByTagName("head")[0].appendChild(r2);
    });
  }
  var Di = function () {
      var e2 = n$1(c$1.mark(function e3() {
        var t2, n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return t2 = 0, e4.prev = 1, e4.next = 4, Promise.resolve().then(function () {
                return window.__BiliUser__;
              });
            case 4:
              return n2 = e4.sent, e4.next = 7, new Promise(function (e5, t3) {
                "function" == typeof (null == n2 ? void 0 : n2.quickLogin) ? n2.quickLogin(function (t4) {
                  0 === t4.code ? (window.location.reload(), e5(1)) : e5(0);
                }) : t3(-1);
              });
            case 7:
              t2 = e4.sent, e4.next = 13;
              break;
            case 10:
              e4.prev = 10, e4.t0 = e4.catch(1), E('Not found "window.__BiliUser__" instance in page.', "login");
            case 13:
              return e4.abrupt("return", Promise.resolve(t2));
            case 14:
            case "end":
              return e4.stop();
          }
        }, e3, null, [[1, 10]]);
      }));
      return function () {
        return e2.apply(this, arguments);
      };
    }(),
    Qi = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        var n2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return e4.next = 2, Ke();
            case 2:
              if (e4.sent !== qe.PC_ROOM) {
                e4.next = 5;
                break;
              }
              return e4.abrupt("return", je("login"));
            case 5:
              if (null == t2 || !t2.withBiliUser) {
                e4.next = 7;
                break;
              }
              return e4.abrupt("return", Di());
            case 7:
              return n2 = function () {
                window.biliQuickLogin(function () {
                  window.postMessage("quickLogin:reloadRequest", "*"), window.location.reload();
                });
              }, e4.abrupt("return", new Promise(function (e5, t3) {
                setTimeout(function () {
                  window.biliQuickLogin ? (n2(), e5(1)) : qi("https://static.hdslb.com/account/bili_quick_login.js").then(function () {
                    n2(), e5(1);
                  }, t3);
                }, 0);
              }));
            case 9:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }(),
    zi = function () {
      var e2 = n$1(c$1.mark(function e3(t2) {
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              if (null == t2 || !t2.withBiliUser) {
                e4.next = 2;
                break;
              }
              return e4.abrupt("return", Di());
            case 2:
              return window.location.href = "https://passport.bilibili.com/login", e4.abrupt("return", Promise.resolve(1));
            case 4:
            case "end":
              return e4.stop();
          }
        }, e3);
      }));
      return function (t2) {
        return e2.apply(this, arguments);
      };
    }();
  function $i() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      login: Hi
    }), "WEB" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      login: zi
    }), "PC_APP" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      login: Gi
    }), "PC_ROOM" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      login: Qi
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "login",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["WEB", "PC_APP", "PC_ROOM"],
              useNative: $i
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  function eo(e2, t2) {
    return Li(e2) ? t2 : e2;
  }
  var to = function (e2) {
    return e2[e2.Others = 0] = "Others", e2[e2.PV = 1] = "PV", e2[e2.Click = 2] = "Click", e2[e2.Show = 3] = "Show", e2[e2.System = 4] = "System", e2[e2.Performance = 5] = "Performance", e2[e2.Custom = 7] = "Custom", e2[e2.Player = 9] = "Player", e2;
  }({});
  function no(e2) {
    if ("string" == typeof e2) {
      var t2 = e2.split("."),
        n2 = t2[t2.length - 1].toLowerCase();
      if ("pv" === n2) return to.PV;
      var r2 = "" + n2.slice(0, 1).toUpperCase() + n2.slice(1);
      return void 0 !== to[r2] ? to[r2] : to.Others;
    }
    return to.Others;
  }
  function ro(e2) {
    return ao.apply(this, arguments);
  }
  function ao() {
    return ao = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            if (n2 = void 0 !== t2.type ? t2.type : no(t2.eventName), r2 = JSON.stringify({}), t2 && void 0 !== t2.data) try {
              r2 = JSON.stringify(t2.data);
            } catch (e4) {
              console.log(e4);
            }
            return e3.next = 5, An({
              method: "ability.reportEvent"
            });
          case 5:
            if (a2 = {
              event: t2.eventName,
              params: r2,
              type: n2,
              label: t2.label || "webviewTracker"
            }, !e3.sent.isNewChannelSupport) {
              e3.next = 12;
              break;
            }
            return e3.next = 11, ce("ability.reportEvent", vn({}, a2)).data;
          case 11:
            return e3.abrupt("return", e3.sent);
          case 12:
            return e3.abrupt("return", bn({
              transformResolve: function () {
                return eo(true);
              }
            })(ie)({
              method: "ability.reportEventV3",
              data: a2
            }));
          case 13:
          case "end":
            return e3.stop();
        }
      }, e2);
    })), ao.apply(this, arguments);
  }
  function io(e2) {
    return "string" == typeof e2 ? e2 : Array.isArray(e2) ? e2.join(";") : "object" == typeof e2 ? Object.keys(e2).map(function (t2) {
      return t2 + ":" + e2[t2];
    }).join(";") : void 0;
  }
  function oo(e2) {
    return so.apply(this, arguments);
  }
  function so() {
    return (so = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return n2 = "live_network.polarisReport", Ie() || (n2 = "live_location_polaris_report"), r2 = t2.eventName, a2 = t2.data, e3.abrupt("return", bn({
              transformResolve: function () {
                return eo(true);
              }
            })(Vn)({
              method: n2,
              data: {
                id: r2,
                msg: io(a2)
              }
            }));
          case 4:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function uo() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      reportEventV3: ro
    }), "PC_LINK" === self.__AWESOME_API_POLYFILL_COMPILER__ && g({
      target: "NATIVE"
    }, {
      reportEventV3: oo
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "reportEventV3",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__ && ["PC_LINK"],
              useNative: uo
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  (function (e2) {
    return e2[e2.AUTO = 0] = "AUTO", e2[e2.PC_LINK = 1] = "PC_LINK", e2[e2.WEB = 2] = "WEB", e2;
  })({});
  var Oo = {
      uid: 0,
      uname: "",
      face: "",
      isLogin: false,
      isTourist: false
    },
    ko = function () {
      var e2 = n$1(c$1.mark(function e3() {
        var t2, n2, r2;
        return c$1.wrap(function (e4) {
          for (;;) switch (e4.prev = e4.next) {
            case 0:
              return t2 = vn({}, Oo), e4.prev = 1, e4.next = 4, Promise.resolve().then(function () {
                return window.__BiliUser__;
              });
            case 4:
              return n2 = e4.sent, e4.next = 7, null == n2 ? void 0 : n2.get();
            case 7:
              0 === (r2 = e4.sent).code && (t2 = {
                uid: r2.data.mid,
                uname: r2.data.uname,
                face: r2.data.face,
                isLogin: r2.data.isLogin,
                isTourist: false
              }), e4.next = 14;
              break;
            case 11:
              e4.prev = 11, e4.t0 = e4.catch(1), E('Not found "window.__BiliUser__" instance in page.', "getUserInfo");
            case 14:
              return e4.abrupt("return", Promise.resolve(vn({}, t2)));
            case 15:
            case "end":
              return e4.stop();
          }
        }, e3, null, [[1, 11]]);
      }));
      return function () {
        return e2.apply(this, arguments);
      };
    }();
  function Ao(e2) {
    return "boolean" == typeof e2 ? e2 : !!Number(e2);
  }
  function xo(e2) {
    return No.apply(this, arguments);
  }
  function No() {
    return No = n$1(c$1.mark(function e2(t2) {
      var n2, r2, a2, i2, o2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return void 0 === t2 && (t2 = {}), n2 = vn({}, Oo), e3.next = 4, An({
              method: "auth.getUserInfo"
            });
          case 4:
            if (a2 = (r2 = e3.sent).isSupport, !r2.isNewChannelSupport) {
              e3.next = 14;
              break;
            }
            return e3.next = 10, ce("auth.getUserInfo", {});
          case 10:
            n2 = {
              isLogin: (i2 = e3.sent).data.state,
              uid: i2.data.mid,
              uname: i2.data.userName,
              face: i2.data.face,
              isTourist: i2.data.isTourist
            }, e3.next = 19;
            break;
          case 14:
            if (!a2) {
              e3.next = 19;
              break;
            }
            return e3.next = 17, bn()(ie)({
              method: "auth.getUserInfo",
              data: {
                type: "default"
              }
            });
          case 17:
            n2 = {
              uid: (o2 = e3.sent).mid,
              uname: o2.userName,
              isLogin: Ao(o2.state),
              face: o2.face,
              isTourist: Ao(void 0 !== o2.isTourist ? o2.isTourist : o2.isLoginViaTourist)
            };
          case 19:
            return e3.abrupt("return", w(t2, Promise.resolve(n2)));
          case 20:
          case "end":
            return e3.stop();
        }
      }, e2);
    })), No.apply(this, arguments);
  }
  function So() {
    var e2 = "__LIVE_USER_LOGIN_STATUS__",
      t2 = 1,
      n2 = window,
      r2 = vn({}, {
        uid: 0,
        isLogin: false,
        uname: "",
        face: "",
        isError: true
      });
    try {
      for (; n2 !== window.top && t2 < 5;) {
        var a2;
        if (null != (a2 = n2) && null != (a2 = a2.parent) && a2[e2]) {
          var i2;
          r2 = null == (i2 = n2) || null == (i2 = i2.parent) ? void 0 : i2[e2];
          break;
        }
        n2 = n2.parent, t2++;
      }
    } catch (e3) {}
    return {
      uid: r2.uid,
      uname: r2.uname,
      face: r2.face,
      isLogin: r2.isLogin,
      isTourist: false
    };
  }
  function Co(e2) {
    return Mo.apply(this, arguments);
  }
  function Mo() {
    return (Mo = n$1(c$1.mark(function e2(t2) {
      var n2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            if (void 0 === t2 && (t2 = {}), n2 = vn({}, Oo), !t2.withBiliUser) {
              e3.next = 8;
              break;
            }
            return e3.next = 5, ko();
          case 5:
            n2 = e3.sent, e3.next = 9;
            break;
          case 8:
            n2 = So();
          case 9:
            return e3.abrupt("return", w(t2, Promise.resolve(n2)));
          case 10:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function Ro() {
    return Bo.apply(this, arguments);
  }
  function Bo() {
    return (Bo = n$1(c$1.mark(function e2() {
      var t2, n2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            if (void 0 === typeof window.fetch) {
              e3.next = 14;
              break;
            }
            return e3.prev = 1, e3.next = 5, fetch("//api.bilibili.com/x/web-interface/nav", {
              credentials: "include"
            }).then(function (e4) {
              return e4.json();
            });
          case 5:
            if (n2 = (t2 = e3.sent).data, 0 !== t2.code || !n2 || !n2.isLogin) {
              e3.next = 10;
              break;
            }
            return e3.abrupt("return", {
              uid: n2.mid,
              uname: n2.uname,
              face: n2.face,
              isLogin: n2.isLogin,
              isTourist: false
            });
          case 10:
            e3.next = 14;
            break;
          case 12:
            e3.prev = 12, e3.t0 = e3.catch(1);
          case 14:
            return e3.abrupt("return", vn({}, Oo));
          case 15:
          case "end":
            return e3.stop();
        }
      }, e2, null, [[1, 12]]);
    }))).apply(this, arguments);
  }
  function To(e2) {
    return jo.apply(this, arguments);
  }
  function jo() {
    return (jo = n$1(c$1.mark(function e2(t2) {
      var n2;
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            if (void 0 === t2 && (t2 = {}), n2 = vn({}, Oo), !t2.withBiliUser) {
              e3.next = 8;
              break;
            }
            return e3.next = 5, ko();
          case 5:
            n2 = e3.sent, e3.next = 11;
            break;
          case 8:
            return e3.next = 10, Ro();
          case 10:
            n2 = e3.sent;
          case 11:
            return e3.abrupt("return", w(t2, Promise.resolve(n2)));
          case 12:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function Vo() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      getUserInfo: xo
    }), "WEB" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_LINK" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      getUserInfo: To
    }), "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_APP" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      getUserInfo: Co
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "getUserInfo",
              useNative: Vo
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var Fo = ["closeSelfPage"];
  function Ko(e2) {
    return Yo.apply(this, arguments);
  }
  function Yo() {
    return Yo = n$1(c$1.mark(function t2(n2) {
      var r2, a2, i2, o2, s2, u2, l2;
      return c$1.wrap(function (t3) {
        for (;;) switch (t3.prev = t3.next) {
          case 0:
            return void 0 === n2 && (n2 = {}), t3.next = 3, An({
              method: "live_room_half.openGiftPanel"
            });
          case 3:
            if (a2 = (r2 = t3.sent).isSupport, i2 = r2.isNewChannelSupport, u2 = void 0 !== (s2 = (o2 = n2).closeSelfPage) && s2, l2 = e$1(o2, Fo), !i2) {
              t3.next = 11;
              break;
            }
            return t3.abrupt("return", ce("live_room_half.openGiftPanel", l2));
          case 11:
            if (!a2) {
              t3.next = 13;
              break;
            }
            return t3.abrupt("return", new Promise(function (e2, t4) {
              ie({
                method: "live_room_half.openGiftPanel",
                data: {
                  gift_id: n2.giftId,
                  panel: n2.panel,
                  batch_num: n2.batchNumber
                },
                success: function () {
                  u2 && Kr(), e2(true);
                },
                callback: function () {
                  u2 && Kr(), e2(true);
                },
                fail: t4
              });
            }));
          case 13:
          case "end":
            return t3.stop();
        }
      }, t2);
    })), Yo.apply(this, arguments);
  }
  var Jo = ["closeSelfPage"];
  function Uo(e2) {
    return Ho.apply(this, arguments);
  }
  function Ho() {
    return (Ho = n$1(c$1.mark(function t2(n2) {
      var r2, a2, i2;
      return c$1.wrap(function (t3) {
        for (;;) switch (t3.prev = t3.next) {
          case 0:
            return t3.next = 2, Ke();
          case 2:
            if (t3.sent !== qe.PC_ROOM) {
              t3.next = 6;
              break;
            }
            return a2 = void 0 !== (r2 = n2.closeSelfPage) && r2, i2 = e$1(n2, Jo), t3.abrupt("return", new Promise(function (e2, t4) {
              je("openGiftPanel", i2).then(function () {
                a2 && Kr(), e2(true);
              }).catch(t4);
            }));
          case 6:
          case "end":
            return t3.stop();
        }
      }, t2);
    }))).apply(this, arguments);
  }
  function Go() {
    return qo.apply(this, arguments);
  }
  function qo() {
    return (qo = n$1(c$1.mark(function e2() {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
              target: "NATIVE"
            }, {
              openGiftPanel: Ko
            }), "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_APP" !== self.__AWESOME_API_POLYFILL_COMPILER__ || (console.log("PC_ROOM openGiftPanel"), g({
              target: "NATIVE"
            }, {
              openGiftPanel: Uo
            }));
          case 2:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "openGiftPanel",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__,
              useNative: Go
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  function Qo() {
    return zo.apply(this, arguments);
  }
  function zo() {
    return (zo = n$1(c$1.mark(function e2() {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return e3.abrupt("return", zr({
              url: "https://live.bilibili.com/p/html/live-app-viceroy/index.html?is_live_half_webview=1&hybrid_half_ui=1,3,100p,73p,0,0,70,0,12,0;2,2,375,100p,0,0,70,0,0,0;3,3,100p,73p,0,0,70,0,12,0;4,2,375,100p,0,0,70,0,0,0;5,3,100p,73p,0,0,70,0,12,0;6,3,100p,73p,0,0,70,0,12,0;7,3,100p,73p,0,0,70,0,12,0;8,2,320,480,0,0,70,0,0,0#/index",
              openType: "half"
            }));
          case 2:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function $o(e2) {
    return Xo.apply(this, arguments);
  }
  function Xo() {
    return (Xo = n$1(c$1.mark(function e2(t2) {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return e3.next = 2, Ke();
          case 2:
            if (e3.sent !== qe.PC_ROOM) {
              e3.next = 5;
              break;
            }
            return e3.abrupt("return", je("openGuard", t2));
          case 5:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function Zo() {
    return es.apply(this, arguments);
  }
  function es() {
    return (es = n$1(c$1.mark(function e2() {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
              target: "NATIVE"
            }, {
              openGuard: Qo
            }), "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_APP" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
              target: "NATIVE"
            }, {
              openGuard: $o
            });
          case 2:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "openGuard",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__,
              useNative: Zo
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  function ns(e2) {
    var t2 = {};
    return ["anchorId", "giftId", "count", "sourceEventServer", "sourceEventPay", "channel", "eventId", "sendGiftType", "bagId", "price", "needPreCheck", "gift_scene"].forEach(function (n2) {
      if (void 0 !== e2[n2]) if ("anchorId" === n2 && "string" == typeof e2[n2]) {
        if (r2 = Number(e2[n2]), !Number.isSafeInteger(r2)) throw new Error("The number exceeds the maximum safe integer limit in JavaScript.");
        t2[n2] = Number(e2[n2]);
      } else t2[n2] = "gift_scene" === n2 && "object" == typeof e2[n2] ? JSON.stringify(e2[n2]) : e2[n2];
      var r2;
    }), new Promise(function (n2, r2) {
      Vn({
        method: "live_room_half.getGiftConfig",
        data: {
          giftIds: [e2.giftId]
        },
        success: function (e3) {
          e3.length > 0 ? Vn({
            method: "live_room_half.sendGift",
            data: t2,
            success: function () {
              n2(true);
            },
            fail: function (e4) {
              r2(e4);
            }
          }) : r2({
            code: -608,
            message: "余额不足"
          });
        },
        fail: function (e3) {
          r2(e3);
        }
      });
    });
  }
  function rs(e2) {
    return as.apply(this, arguments);
  }
  function as() {
    return (as = n$1(c$1.mark(function e2(t2) {
      return c$1.wrap(function (e3) {
        for (;;) switch (e3.prev = e3.next) {
          case 0:
            return e3.next = 2, Ke();
          case 2:
            if (e3.sent !== qe.PC_ROOM) {
              e3.next = 7;
              break;
            }
            return e3.abrupt("return", new Promise(function (e4, n2) {
              je("quietSendGift", {
                micUserId: t2.anchorId,
                count: t2.count,
                giftId: t2.giftId
              }).then(e4).catch(function (e5) {
                n2(200013 === e5.code ? {
                  code: 100,
                  message: "礼物不存在"
                } : e5);
              });
            }));
          case 7:
            return e3.abrupt("return", Promise.reject("sendGiftQuiet is only available in PC_ROOM"));
          case 8:
          case "end":
            return e3.stop();
        }
      }, e2);
    }))).apply(this, arguments);
  }
  function is() {
    "boolean" != typeof self.__AWESOME_API_POLYFILL_COMPILER__ && "NATIVE" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      sendGiftQuiet: ns
    }), "PC_ROOM" !== self.__AWESOME_API_POLYFILL_COMPILER__ && "PC_APP" !== self.__AWESOME_API_POLYFILL_COMPILER__ || g({
      target: "NATIVE"
    }, {
      sendGiftQuiet: rs
    });
  }
  (function () {
    var e2 = n$1(c$1.mark(function e3(t2) {
      return c$1.wrap(function (e4) {
        for (;;) switch (e4.prev = e4.next) {
          case 0:
            return e4.next = 2, ar();
          case 2:
            return e4.abrupt("return", Ze({
              namespace: "NATIVE",
              method: "sendGiftQuiet",
              usePolyfill: "boolean" == typeof self.__AWESOME_API_POLYFILL_COMPILER__,
              useNative: is
            })(t2));
          case 3:
          case "end":
            return e4.stop();
        }
      }, e3);
    }));
    return function (t2) {
      return e2.apply(this, arguments);
    };
  })();
  var ua = typeof navigator !== "undefined" ? navigator.userAgent : "";
  ({
    qq: /QQ\/([\d\.]+)/i.test(ua),
    //是否为手机QQ
    weibo: /Weibo/i.test(ua),
    //是否为微博
    MicroMessenger: /MicroMessenger/i.test(ua),
    //是否为微信
    wechat: /MicroMessenger/i.test(ua) && !/wxwork/i.test(ua),
    iqiyi: /iqiyi/i.test(ua),
    qqBrowser: /MQQBrowser/i.test(ua) && !/MicroMessenger/i.test(ua),
    //是否为QQ浏览器
    qzone: /qzone\/.*_qz_([\d.]+)/i.test(ua),
    // 是否为QQ空间
    uc: /UCBrowser/i.test(ua),
    //是否为UC
    ios: /\(i[^;]+;( U;)? CPU.+Mac OS X/i.test(ua),
    //ios终端
    android: /Android/i.test(ua) || /Linux/i.test(ua),
    //android终端或者uc浏览器
    baidu: /Baidu/i.test(ua),
    //是否为百度浏览器
    chrome: /CriOS/i.test(ua),
    BiliApp: /BiliApp/i.test(ua),
    Mac: /Macintosh/.test(ua),
    zhihu: /Zhihu/i.test(ua),
    miuiBrowser: /miuibrowser\/([\d.]+)/i.test(ua),
    firefox: /firefox\/([\d.]+)/i.test(ua),
    wxwork: /wxwork\/([\d.]+)/i.test(ua),
    // 安卓 chrome 浏览器，包含 原生chrome浏览器、三星自带浏览器、360浏览器以及早期国内厂商自带浏览器
    originalChrome: /chrome\/[\d.]+ mobile safari\/[\d.]+/i.test(ua) && /Android/i.test(ua) || /Linux/i.test(ua) && ua.indexOf("Version") < 0,
    harmonyOSNext: /OpenHarmony/i.test(ua)
    // 是否是鸿蒙系统浏览器
  });
  class TimeService {
    constructor() {
      this.msDiffWithServer = null;
      this.init();
    }
    init() {
      this.updateMsDiff();
    }
    create() {
      return new TimeService();
    }
    async updateMsDiff() {
      const res = await this.queryTimestamp();
      this.msDiffWithServer = res.microtime - Date.now();
    }
    async queryTimestamp() {
      return request({
        url: "https://api.live.bilibili.com/xlive/open-interface/v1/rtc/getTimestamp"
      });
    }
    // 获取修正后的 Date 实例
    getDate(params) {
      let date;
      if (typeof params === "string") {
        date = dateUtil.new(params);
      } else if (typeof params === "number") {
        date = new Date(params);
      } else {
        date = /* @__PURE__ */new Date();
      }
      return this.msDiffWithServer ? new Date(date.getTime() + this.msDiffWithServer) : date;
    }
    createTimer(cb) {
      const intervalId = setInterval(() => {
        cb(this.getDate().getTime());
      }, 1e3);
      return () => {
        clearInterval(intervalId);
      };
    }
  }
  new TimeService();
  N$1();
  const http = {
    post: (url2, data2, headers) => {
      return baseRequest.request({
        url: url2,
        method: "POST",
        data: data2,
        headers: headers || {
          "Content-Type": "application/x-www-form-urlencoded"
        }
      });
    },
    get: (url2, params, config) => {
      return baseRequest.request({
        url: url2,
        params,
        ...config
      });
    }
  };
  async function doLottery(sid, num) {
    const pathname = location.pathname;
    const firstIndex = pathname.lastIndexOf("/");
    const secondIndex = pathname.lastIndexOf(".");
    const page_id = pathname.slice(firstIndex + 1, secondIndex);
    return http.post(`${apiPrefix}/lottery/x/do`, {
      sid,
      num,
      page_id
    }).then(res => {
      if (+res.code === 0 && res.data) {
        return res.data;
      } else if (+res.code === -504) {
        typeToast.info("当前网络不稳定，请点击我的中奖列表确认或稍后再试");
      } else {
        typeToast.info((res == null ? void 0 : res.message) || "出错啦，请稍后再试～");
      }
    }).catch(e2 => {
      typeToast.info((e2 == null ? void 0 : e2.message) || "出错啦，请稍后再试～");
    });
  }
  async function getGiftsList(sid) {
    return http.get(`${apiPrefix}/lottery/x/gift`, {
      sid
    }).then(res => {
      if (+res.code === 0 && res.data) {
        return res.data;
      }
    }).catch(e2 => {
      typeToast.info((e2 == null ? void 0 : e2.message) || "出错啦，请稍后再试～");
    });
  }
  async function getUserTimes(sid) {
    return http.get(`${apiPrefix}/lottery/x/mytimes`, {
      sid
    }).then(res => {
      if (+res.code === 0 && res.data) {
        return res.data;
      }
    }).catch(e2 => {
      typeToast.info((e2 == null ? void 0 : e2.message) || "出错啦，请稍后再试～");
    });
  }
  async function getWinList(sid) {
    return http.get(`${apiPrefix}/lottery/x/win/list`, {
      sid
    }).then(res => {
      if (+res.code === 0 && res.data) {
        return res.data;
      }
    }).catch(e2 => {
      typeToast.info((e2 == null ? void 0 : e2.message) || "出错啦，请稍后再试～");
    });
  }
  async function getMyWinList(activity_id) {
    return http.get(`${apiPrefix}/activity_components/mission/mylist`, {
      activity_id
    }).then(res => {
      if (+res.code === 0 && res.data) {
        return res.data;
      }
    }).catch(e2 => {
      typeToast.info((e2 == null ? void 0 : e2.message) || "出错啦，请稍后再试～");
    });
  }
  const addUserAddress = (aid, addressId) => {
    return http.post(`${apiPrefix}/x/activity/rewards/address/add`, {
      activity_id: aid,
      address_id: addressId
    }).then(res => {
      if (+res.code === -101) {
        jumpLogin();
      }
      return res;
    }).catch(err => {
      return Promise.reject(err);
    });
  };
  const continueExchange = rewardId => {
    return http.get(`${apiPrefix}/x/activity/rewards/send/continue`, {
      reward_id: rewardId
    }).then(res => {
      if (+res.code === -101) {
        jumpLogin();
      }
      if (+res.code === 0) {
        typeToast.info("领取成功~");
      } else {
        typeToast.info(res.message);
      }
      return res;
    }).catch(err => {
      if (+err.code !== 75406) {
        typeToast.info(err.message);
      }
      return Promise.reject(err);
    });
  };
  async function checkLogin() {
    return new Promise((resolve, reject) => {
      getUserInfo().then(res => {
        let isLogin = false,
          mid = 0,
          name = "",
          face = "";
        if (!res) {
          resolve({
            isLogin,
            name,
            mid,
            face: face && setHttpToHttps(face)
          });
          return;
        }
        isLogin = true;
        mid = res.mid;
        name = res.nickname;
        face = res.avatar;
        resolve({
          isLogin,
          name,
          mid,
          face: face && setHttpToHttps(face)
        });
      });
    });
  }
  function setHttpToHttps(url2) {
    return url2.replace(/http:\/\//gi, "https://");
  }
  function goToLogin() {
    return new Promise(resolve => {
      if (f$2) {
        _$1.callNative({
          method: "auth.login",
          data: {
            type: "default"
          },
          onLogin(data2) {
            if (data2 && Number(data2.state)) resolve(true);
          }
        });
      } else {
        location.href = "https://passport.bilibili.com/login?gourl=" + encodeURIComponent(location.href);
      }
    });
  }
  function login() {
    goToLogin().then(() => location.reload());
  }
  var vueClipboard = {
    exports: {}
  };
  var clipboard_min = {
    exports: {}
  };
  /*!
   * clipboard.js v2.0.11
   * https://clipboardjs.com/
   *
   * Licensed MIT © Zeno Rocha
   */
  (function (module2, exports2) {
    !function (t2, e2) {
      module2.exports = e2();
    }(commonjsGlobal, function () {
      return n2 = {
        686: function (t2, e2, n3) {
          n3.d(e2, {
            default: function () {
              return b2;
            }
          });
          var e2 = n3(279),
            i2 = n3.n(e2),
            e2 = n3(370),
            u2 = n3.n(e2),
            e2 = n3(817),
            r3 = n3.n(e2);
          function c2(t3) {
            try {
              return document.execCommand(t3);
            } catch (t4) {
              return;
            }
          }
          var a2 = function (t3) {
            t3 = r3()(t3);
            return c2("cut"), t3;
          };
          function o3(t3, e3) {
            var n4,
              o4,
              t3 = (n4 = t3, o4 = "rtl" === document.documentElement.getAttribute("dir"), (t3 = document.createElement("textarea")).style.fontSize = "12pt", t3.style.border = "0", t3.style.padding = "0", t3.style.margin = "0", t3.style.position = "absolute", t3.style[o4 ? "right" : "left"] = "-9999px", o4 = window.pageYOffset || document.documentElement.scrollTop, t3.style.top = "".concat(o4, "px"), t3.setAttribute("readonly", ""), t3.value = n4, t3);
            return e3.container.appendChild(t3), e3 = r3()(t3), c2("copy"), t3.remove(), e3;
          }
          var f2 = function (t3) {
            var e3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {
                container: document.body
              },
              n4 = "";
            return "string" == typeof t3 ? n4 = o3(t3, e3) : t3 instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(null == t3 ? void 0 : t3.type) ? n4 = o3(t3.value, e3) : (n4 = r3()(t3), c2("copy")), n4;
          };
          function l2(t3) {
            return (l2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t4) {
              return typeof t4;
            } : function (t4) {
              return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            })(t3);
          }
          var s2 = function () {
            var t3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
              e3 = t3.action,
              n4 = void 0 === e3 ? "copy" : e3,
              o4 = t3.container,
              e3 = t3.target,
              t3 = t3.text;
            if ("copy" !== n4 && "cut" !== n4) throw new Error('Invalid "action" value, use either "copy" or "cut"');
            if (void 0 !== e3) {
              if (!e3 || "object" !== l2(e3) || 1 !== e3.nodeType) throw new Error('Invalid "target" value, use a valid Element');
              if ("copy" === n4 && e3.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
              if ("cut" === n4 && (e3.hasAttribute("readonly") || e3.hasAttribute("disabled"))) throw new Error(`Invalid "target" attribute. You can't cut text from elements with "readonly" or "disabled" attributes`);
            }
            return t3 ? f2(t3, {
              container: o4
            }) : e3 ? "cut" === n4 ? a2(e3) : f2(e3, {
              container: o4
            }) : void 0;
          };
          function p2(t3) {
            return (p2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t4) {
              return typeof t4;
            } : function (t4) {
              return t4 && "function" == typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
            })(t3);
          }
          function d2(t3, e3) {
            for (var n4 = 0; n4 < e3.length; n4++) {
              var o4 = e3[n4];
              o4.enumerable = o4.enumerable || false, o4.configurable = true, "value" in o4 && (o4.writable = true), Object.defineProperty(t3, o4.key, o4);
            }
          }
          function y2(t3, e3) {
            return (y2 = Object.setPrototypeOf || function (t4, e4) {
              return t4.__proto__ = e4, t4;
            })(t3, e3);
          }
          function h2(n4) {
            var o4 = function () {
              if ("undefined" == typeof Reflect || !Reflect.construct) return false;
              if (Reflect.construct.sham) return false;
              if ("function" == typeof Proxy) return true;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), true;
              } catch (t3) {
                return false;
              }
            }();
            return function () {
              var t3,
                e3 = v2(n4);
              return t3 = o4 ? (t3 = v2(this).constructor, Reflect.construct(e3, arguments, t3)) : e3.apply(this, arguments), e3 = this, !(t3 = t3) || "object" !== p2(t3) && "function" != typeof t3 ? function (t4) {
                if (void 0 !== t4) return t4;
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }(e3) : t3;
            };
          }
          function v2(t3) {
            return (v2 = Object.setPrototypeOf ? Object.getPrototypeOf : function (t4) {
              return t4.__proto__ || Object.getPrototypeOf(t4);
            })(t3);
          }
          function m2(t3, e3) {
            t3 = "data-clipboard-".concat(t3);
            if (e3.hasAttribute(t3)) return e3.getAttribute(t3);
          }
          var b2 = function () {
            !function (t4, e4) {
              if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
              t4.prototype = Object.create(e4 && e4.prototype, {
                constructor: {
                  value: t4,
                  writable: true,
                  configurable: true
                }
              }), e4 && y2(t4, e4);
            }(r4, i2());
            var t3,
              e3,
              n4,
              o4 = h2(r4);
            function r4(t4, e4) {
              var n5;
              return function (t5) {
                if (!(t5 instanceof r4)) throw new TypeError("Cannot call a class as a function");
              }(this), (n5 = o4.call(this)).resolveOptions(e4), n5.listenClick(t4), n5;
            }
            return t3 = r4, n4 = [{
              key: "copy",
              value: function (t4) {
                var e4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {
                  container: document.body
                };
                return f2(t4, e4);
              }
            }, {
              key: "cut",
              value: function (t4) {
                return a2(t4);
              }
            }, {
              key: "isSupported",
              value: function () {
                var t4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"],
                  t4 = "string" == typeof t4 ? [t4] : t4,
                  e4 = !!document.queryCommandSupported;
                return t4.forEach(function (t5) {
                  e4 = e4 && !!document.queryCommandSupported(t5);
                }), e4;
              }
            }], (e3 = [{
              key: "resolveOptions",
              value: function () {
                var t4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
                this.action = "function" == typeof t4.action ? t4.action : this.defaultAction, this.target = "function" == typeof t4.target ? t4.target : this.defaultTarget, this.text = "function" == typeof t4.text ? t4.text : this.defaultText, this.container = "object" === p2(t4.container) ? t4.container : document.body;
              }
            }, {
              key: "listenClick",
              value: function (t4) {
                var e4 = this;
                this.listener = u2()(t4, "click", function (t5) {
                  return e4.onClick(t5);
                });
              }
            }, {
              key: "onClick",
              value: function (t4) {
                var e4 = t4.delegateTarget || t4.currentTarget,
                  n5 = this.action(e4) || "copy",
                  t4 = s2({
                    action: n5,
                    container: this.container,
                    target: this.target(e4),
                    text: this.text(e4)
                  });
                this.emit(t4 ? "success" : "error", {
                  action: n5,
                  text: t4,
                  trigger: e4,
                  clearSelection: function () {
                    e4 && e4.focus(), window.getSelection().removeAllRanges();
                  }
                });
              }
            }, {
              key: "defaultAction",
              value: function (t4) {
                return m2("action", t4);
              }
            }, {
              key: "defaultTarget",
              value: function (t4) {
                t4 = m2("target", t4);
                if (t4) return document.querySelector(t4);
              }
            }, {
              key: "defaultText",
              value: function (t4) {
                return m2("text", t4);
              }
            }, {
              key: "destroy",
              value: function () {
                this.listener.destroy();
              }
            }]) && d2(t3.prototype, e3), n4 && d2(t3, n4), r4;
          }();
        },
        828: function (t2) {
          var e2;
          "undefined" == typeof Element || Element.prototype.matches || ((e2 = Element.prototype).matches = e2.matchesSelector || e2.mozMatchesSelector || e2.msMatchesSelector || e2.oMatchesSelector || e2.webkitMatchesSelector), t2.exports = function (t3, e3) {
            for (; t3 && 9 !== t3.nodeType;) {
              if ("function" == typeof t3.matches && t3.matches(e3)) return t3;
              t3 = t3.parentNode;
            }
          };
        },
        438: function (t2, e2, n3) {
          var u2 = n3(828);
          function i2(t3, e3, n4, o3, r3) {
            var i3 = function (e4, n5, t4, o4) {
              return function (t5) {
                t5.delegateTarget = u2(t5.target, n5), t5.delegateTarget && o4.call(e4, t5);
              };
            }.apply(this, arguments);
            return t3.addEventListener(n4, i3, r3), {
              destroy: function () {
                t3.removeEventListener(n4, i3, r3);
              }
            };
          }
          t2.exports = function (t3, e3, n4, o3, r3) {
            return "function" == typeof t3.addEventListener ? i2.apply(null, arguments) : "function" == typeof n4 ? i2.bind(null, document).apply(null, arguments) : ("string" == typeof t3 && (t3 = document.querySelectorAll(t3)), Array.prototype.map.call(t3, function (t4) {
              return i2(t4, e3, n4, o3, r3);
            }));
          };
        },
        879: function (t2, n3) {
          n3.node = function (t3) {
            return void 0 !== t3 && t3 instanceof HTMLElement && 1 === t3.nodeType;
          }, n3.nodeList = function (t3) {
            var e2 = Object.prototype.toString.call(t3);
            return void 0 !== t3 && ("[object NodeList]" === e2 || "[object HTMLCollection]" === e2) && "length" in t3 && (0 === t3.length || n3.node(t3[0]));
          }, n3.string = function (t3) {
            return "string" == typeof t3 || t3 instanceof String;
          }, n3.fn = function (t3) {
            return "[object Function]" === Object.prototype.toString.call(t3);
          };
        },
        370: function (t2, e2, n3) {
          var f2 = n3(879),
            l2 = n3(438);
          t2.exports = function (t3, e3, n4) {
            if (!t3 && !e3 && !n4) throw new Error("Missing required arguments");
            if (!f2.string(e3)) throw new TypeError("Second argument must be a String");
            if (!f2.fn(n4)) throw new TypeError("Third argument must be a Function");
            if (f2.node(t3)) return c2 = e3, a2 = n4, (u2 = t3).addEventListener(c2, a2), {
              destroy: function () {
                u2.removeEventListener(c2, a2);
              }
            };
            if (f2.nodeList(t3)) return o3 = t3, r3 = e3, i2 = n4, Array.prototype.forEach.call(o3, function (t4) {
              t4.addEventListener(r3, i2);
            }), {
              destroy: function () {
                Array.prototype.forEach.call(o3, function (t4) {
                  t4.removeEventListener(r3, i2);
                });
              }
            };
            if (f2.string(t3)) return t3 = t3, e3 = e3, n4 = n4, l2(document.body, t3, e3, n4);
            throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
            var o3, r3, i2, u2, c2, a2;
          };
        },
        817: function (t2) {
          t2.exports = function (t3) {
            var e2,
              n3 = "SELECT" === t3.nodeName ? (t3.focus(), t3.value) : "INPUT" === t3.nodeName || "TEXTAREA" === t3.nodeName ? ((e2 = t3.hasAttribute("readonly")) || t3.setAttribute("readonly", ""), t3.select(), t3.setSelectionRange(0, t3.value.length), e2 || t3.removeAttribute("readonly"), t3.value) : (t3.hasAttribute("contenteditable") && t3.focus(), n3 = window.getSelection(), (e2 = document.createRange()).selectNodeContents(t3), n3.removeAllRanges(), n3.addRange(e2), n3.toString());
            return n3;
          };
        },
        279: function (t2) {
          function e2() {}
          e2.prototype = {
            on: function (t3, e3, n3) {
              var o3 = this.e || (this.e = {});
              return (o3[t3] || (o3[t3] = [])).push({
                fn: e3,
                ctx: n3
              }), this;
            },
            once: function (t3, e3, n3) {
              var o3 = this;
              function r3() {
                o3.off(t3, r3), e3.apply(n3, arguments);
              }
              return r3._ = e3, this.on(t3, r3, n3);
            },
            emit: function (t3) {
              for (var e3 = [].slice.call(arguments, 1), n3 = ((this.e || (this.e = {}))[t3] || []).slice(), o3 = 0, r3 = n3.length; o3 < r3; o3++) n3[o3].fn.apply(n3[o3].ctx, e3);
              return this;
            },
            off: function (t3, e3) {
              var n3 = this.e || (this.e = {}),
                o3 = n3[t3],
                r3 = [];
              if (o3 && e3) for (var i2 = 0, u2 = o3.length; i2 < u2; i2++) o3[i2].fn !== e3 && o3[i2].fn._ !== e3 && r3.push(o3[i2]);
              return r3.length ? n3[t3] = r3 : delete n3[t3], this;
            }
          }, t2.exports = e2, t2.exports.TinyEmitter = e2;
        }
      }, r2 = {}, o2.n = function (t2) {
        var e2 = t2 && t2.__esModule ? function () {
          return t2.default;
        } : function () {
          return t2;
        };
        return o2.d(e2, {
          a: e2
        }), e2;
      }, o2.d = function (t2, e2) {
        for (var n3 in e2) o2.o(e2, n3) && !o2.o(t2, n3) && Object.defineProperty(t2, n3, {
          enumerable: true,
          get: e2[n3]
        });
      }, o2.o = function (t2, e2) {
        return Object.prototype.hasOwnProperty.call(t2, e2);
      }, o2(686).default;
      function o2(t2) {
        if (r2[t2]) return r2[t2].exports;
        var e2 = r2[t2] = {
          exports: {}
        };
        return n2[t2](e2, e2.exports, o2), e2.exports;
      }
      var n2, r2;
    });
  })(clipboard_min);
  var clipboard_minExports = clipboard_min.exports;
  (function (module2, exports2) {
    var Clipboard = clipboard_minExports;
    var VueClipboardConfig = {
      autoSetContainer: false,
      appendToBody: true
      // This fixes IE, see #50
    };
    var VueClipboard2 = {
      install: function (Vue2) {
        var globalPrototype = Vue2.version.slice(0, 2) === "3." ? Vue2.config.globalProperties : Vue2.prototype;
        globalPrototype.$clipboardConfig = VueClipboardConfig;
        globalPrototype.$copyText = function (text, container) {
          return new Promise(function (resolve, reject) {
            var fakeElement = document.createElement("button");
            var clipboard = new Clipboard(fakeElement, {
              text: function () {
                return text;
              },
              action: function () {
                return "copy";
              },
              container: typeof container === "object" ? container : document.body
            });
            clipboard.on("success", function (e2) {
              clipboard.destroy();
              resolve(e2);
            });
            clipboard.on("error", function (e2) {
              clipboard.destroy();
              reject(e2);
            });
            if (VueClipboardConfig.appendToBody) document.body.appendChild(fakeElement);
            fakeElement.click();
            if (VueClipboardConfig.appendToBody) document.body.removeChild(fakeElement);
          });
        };
        Vue2.directive("clipboard", {
          bind: function (el, binding, vnode) {
            if (binding.arg === "success") {
              el._vClipboard_success = binding.value;
            } else if (binding.arg === "error") {
              el._vClipboard_error = binding.value;
            } else {
              var clipboard = new Clipboard(el, {
                text: function () {
                  return binding.value;
                },
                action: function () {
                  return binding.arg === "cut" ? "cut" : "copy";
                },
                container: VueClipboardConfig.autoSetContainer ? el : void 0
              });
              clipboard.on("success", function (e2) {
                var callback = el._vClipboard_success;
                callback && callback(e2);
              });
              clipboard.on("error", function (e2) {
                var callback = el._vClipboard_error;
                callback && callback(e2);
              });
              el._vClipboard = clipboard;
            }
          },
          update: function (el, binding) {
            if (binding.arg === "success") {
              el._vClipboard_success = binding.value;
            } else if (binding.arg === "error") {
              el._vClipboard_error = binding.value;
            } else {
              el._vClipboard.text = function () {
                return binding.value;
              };
              el._vClipboard.action = function () {
                return binding.arg === "cut" ? "cut" : "copy";
              };
            }
          },
          unbind: function (el, binding) {
            if (!el._vClipboard) return;
            if (binding.arg === "success") {
              delete el._vClipboard_success;
            } else if (binding.arg === "error") {
              delete el._vClipboard_error;
            } else {
              el._vClipboard.destroy();
              delete el._vClipboard;
            }
          }
        });
      },
      config: VueClipboardConfig
    };
    {
      module2.exports = VueClipboard2;
    }
  })(vueClipboard);
  var vueClipboardExports = vueClipboard.exports;
  const VueClipboard = /* @__PURE__ */getDefaultExportFromCjs(vueClipboardExports);
  N$1();
  function copyContent(text) {
    if (f$2) {
      _$1.callNative({
        method: "ability.copyToClipboard",
        data: {
          content: text
        }
      });
    }
  }
  let isBcut = false;
  function bcutFn() {
    _$1.callNative({
      method: "global.getContainerInfo",
      callback: function (info) {
        isBcut = info.mobi_app === "ios_bbs" || info.mobi_app === "android_bbs";
      }
    });
    return isBcut;
  }
  bcutFn();
  const openLink = (link, isLogin, newWindow) => {
    if (!link) return;
    if (isPC) {
      window.open(link);
      return;
    } else if (f$2) {
      if (isBcut) {
        isLogin ? window.open(link) : window.open("bcut://common/login?from=annual");
      } else {
        _$1.callNative({
          method: "ability.openScheme",
          data: {
            url: `bilibili://browser?url=${encodeURIComponent(link)}`
          }
        });
      }
    } else {
      if (!newWindow) {
        window.open(link);
        return;
      } else {
        location.href = link;
      }
    }
  };
  var render$a = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      style: {
        "--match-primary-color": _vm.transRgb
      },
      attrs: {
        "height": "100%",
        "layerStyle": _vm.options.config
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      directives: [{
        name: "exposure",
        rawName: "v-exposure",
        value: function () {
          return _vm.handleReport("appear", "unit_lottery_record_popup_show");
        },
        expression: "() => handleReport('appear','unit_lottery_record_popup_show')"
      }],
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("我的中奖记录")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_vm.loadStatus === "done" && !_vm.records ? _c("FallbackStatus", {
      staticClass: "empty",
      attrs: {
        "text": "暂无中奖记录",
        "config": _vm.options.config
      }
    }) : _vm._e(), _vm.loadStatus === "error" ? _c("FallbackStatus", {
      staticClass: "empty",
      attrs: {
        "text": "加载失败 请重试",
        "refresh": _vm.fetchRecords,
        "config": _vm.options.config
      }
    }) : _vm._e(), ["loading", "done"].some(function (v2) {
      return _vm.loadStatus === v2;
    }) && _vm.records ? _vm._l(_vm.records, function (item, i2) {
      return _c("div", {
        key: i2,
        staticClass: "m-record"
      }, [_c("div", {
        staticClass: "image-logo",
        on: {
          "click": function ($event) {
            return _vm.showDetail(item);
          }
        }
      }, [_c("PhImage", {
        attrs: {
          "loading": "lazy",
          "src": [item.icon, 40, 40],
          "imgStyle": {
            width: "46px",
            height: "46px"
          }
        }
      })], 1), _c("div", {
        staticClass: "info",
        on: {
          "click": function ($event) {
            return _vm.showDetail(item);
          }
        }
      }, [_c("div", {
        staticClass: "name"
      }, [_vm._v(_vm._s(_vm.recordTitle(item)))]), item.type !== "CdKey" || item.type !== "CdKeyV2" ? _c("div", {
        staticClass: "desc",
        domProps: {
          "textContent": _vm._s(_vm.rewardName(item) || item.description)
        }
      }) : _vm._e(), (item.type === "CdKey" || item.type === "CdKeyV2") && item.extra_info.cdkey_content ? _c("div", {
        staticClass: "desc",
        domProps: {
          "textContent": _vm._s(item.extra_info.cdkey_content)
        }
      }) : _vm._e(), _c("div", {
        staticClass: "time",
        domProps: {
          "textContent": _vm._s(_vm.formatTime(item.receive_time))
        }
      })]), item.type !== "Entity" && item.type !== "LiveOpen" && item.type !== "TestPending" ? _c("div", {
        staticClass: "options"
      }, [_vm._v(" 已发放 ")]) : _vm._e(), item.type === "Entity" ? _c("div", {
        staticClass: "options",
        style: !_vm.hasAddress ? {
          borderColor: "#274FE4",
          backgroundColor: "#fff",
          color: "#274FE4",
          padding: "0.2rem 0.1rem"
        } : null,
        on: {
          "click": function ($event) {
            $event.stopPropagation();
            return _vm.handle(item);
          }
        }
      }, [_vm._v(" " + _vm._s(_vm.hasAddress ? "已填写" : "填写信息") + " ")]) : _vm._e(), item.type === "LiveOpen" || item.type === "TestPending" ? _c("div", {
        staticClass: "options",
        style: [3, 4].includes(item.state) ? {
          borderColor: "#274FE4",
          backgroundColor: "#fff",
          color: "#274FE4",
          padding: "0.2rem 0.1rem"
        } : null,
        on: {
          "click": function ($event) {
            $event.stopPropagation();
            return _vm.handle(item);
          }
        }
      }, [[3, 4].includes(item.state) ? [_vm._v(_vm._s(item.pre_check_ok ? "领取奖励" : "账号绑定"))] : _vm._e(), item.state === 1 ? [_vm._v("发放中")] : _vm._e(), item.state === 2 || item.state === 0 ? [_vm._v("发放成功")] : _vm._e()], 2) : _vm._e(), (item.type === "CdKey" || item.type === "CdKeyV2") && item.extra_info.cdkey_content ? _c("div", {
        directives: [{
          name: "clipboard",
          rawName: "v-clipboard:copy",
          value: item.extra_info.cdkey_content || "",
          expression: "item.extra_info.cdkey_content || ''",
          arg: "copy"
        }, {
          name: "clipboard",
          rawName: "v-clipboard:success",
          value: _vm.onCopy,
          expression: "onCopy",
          arg: "success"
        }],
        staticClass: "options"
      }, [_vm._v("一键复制")]) : _vm._e()]);
    }) : _vm._e()], 2)]) : _vm._e();
  };
  var staticRenderFns$a = [];
  const RecordsLayer_vue_vue_type_style_index_0_lang = "";
  const RecordsLayer_vue_vue_type_style_index_1_scoped_true_lang = "";
  Vue.use(VueClipboard);
  const __vue2_script$a = {
    components: {
      Layer: Layer$1,
      IconClose: IconClose$1,
      FallbackStatus,
      PhImage,
      AccountBindComponent
    },
    data() {
      return {
        options: {},
        visible: false,
        loadStatus: "initializing",
        records: [],
        hasAddress: false
      };
    },
    computed: {
      transRgb() {
        var _a2, _b2, _c;
        return (_c = (_b2 = (_a2 = this.options.config.bgColor) == null ? void 0 : _a2.match(/\((.*)\)/)) == null ? void 0 : _b2[1]) == null ? void 0 : _c.split(",").slice(0, 3).map(v2 => parseInt(v2)).join(",");
      },
      showAccountBind() {
        return this.records.some(item => item.type === "LiveOpen");
      }
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
        if (window.__match_pull_refresh) {
          window.__match_pull_refresh.disable = true;
        }
        this.fetchRecords();
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
        if (window.__match_pull_refresh) {
          window.__match_pull_refresh.disable = false;
        }
      },
      onConfirm() {
        var _a2, _b2;
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2);
        this.close();
      },
      async fetchRecords() {
        getMyWinList(this.options.ativityId).then(res => {
          this.hasAddress = res.had_address;
          this.records = res.list;
          this.loadStatus = "done";
        }).catch(e2 => {
          this.loadStatus = "error";
          toast$2.info(e2.message);
        });
      },
      formatTime(v2) {
        const d2 = new Date(v2 * 1e3);
        return `${d2.getFullYear()}-${`0${d2.getMonth() + 1}`.slice(-2)}-${`0${d2.getDate()}`.slice(-2)} ${`0${d2.getHours()}`.slice(-2)}:${`0${d2.getMinutes()}`.slice(-2)}:${`0${d2.getSeconds()}`.slice(-2)}`;
      },
      async handle(item) {
        var _a2;
        if (item.type === "Entity" && !this.hasAddress) {
          this.handleReport("click", "unit_lottery_record_popup_write_click");
          openLayer("AddressLayer", {
            config: {
              ...this.options.config
            },
            "style": {
              "z-index": 11
            },
            isHalfPage: (_a2 = window.__initialState) == null ? void 0 : _a2["match-env-h5"],
            onConfirm: item2 => {
              addUserAddress(this.options.config.activity_id, item2.id).then(() => {
                this.hasAddress = true;
                toast$2.info("填写成功");
              }).catch(e2 => {
                console.error(e2);
                toast$2.info(e2.message);
              });
            }
          });
        }
        if ((item.type === "LiveOpen" || item.type === "TestPending") && [3, 4].includes(item.state)) {
          this.handleReport("click", "unit_lottery_record_popup_receive_click");
          if (!item.pre_check_ok) {
            const urlStr = item.pre_check_msg;
            const h5Link = urlStr.split("||")[0];
            openLink(h5Link);
          }
          if (item.pre_check_ok) {
            continueExchange(item.award_id).then(res => {
              if (res.code === 0) {
                toast$2.info("领取成功");
                item.state = 2;
              }
            });
          }
        }
      },
      onCopy(e2) {
        copyContent(e2.text);
        toast$2.info("复制成功");
      },
      recordTitle(item) {
        return item.award_name;
      },
      rewardName(item) {
        let rewardName = "";
        if (item && item.extra_info && item.extra_info._reward_name) {
          rewardName = item.extra_info._reward_name;
        }
        return rewardName;
      },
      async handleReport(type, name, extra) {
        var _a2, _b2, _c, _d;
        await window.__match_user_promise;
        const from = (() => {
          var _a3, _b3, _c2;
          if ((_a3 = window.__initialState) == null ? void 0 : _a3["match-env-h5"]) {
            return "live";
          } else if ((_b3 = window.__initialState) == null ? void 0 : _b3["match-env-h5-topic"]) {
            return "project";
          } else if ((_c2 = window.__initialState) == null ? void 0 : _c2["match-env-pc"]) {
            return "web";
          } else {
            return "";
          }
        })();
        (_d = (_a2 = window.reportObserver) == null ? void 0 : _a2.reportCustomData) == null ? void 0 : _d.call(_a2, type, {
          spm_id: `${window.__spm_prefix}.${name}`,
          msg: JSON.stringify({
            ...window.__match_report_base,
            lottery_id: ((_c = (_b2 = this.options) == null ? void 0 : _b2.config) == null ? void 0 : _c.lottery_id) || "",
            from,
            ...extra
          })
        });
      },
      showDetail(data2) {
        var _a2;
        openLayer("GiftDetailLayer", {
          config: (_a2 = this.options) == null ? void 0 : _a2.config,
          giftInfo: data2
        });
      }
    }
  };
  const __cssModules$a = {};
  var __component__$a = /* @__PURE__ */normalizeComponent(__vue2_script$a, render$a, staticRenderFns$a, false, __vue2_injectStyles$a, "434c81ae", null, null);
  function __vue2_injectStyles$a(context) {
    for (let o2 in __cssModules$a) {
      this[o2] = __cssModules$a[o2];
    }
  }
  const RecordsLayer = /* @__PURE__ */function () {
    return __component__$a.exports;
  }();
  var render$9 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": "230px"
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("提示")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "tip-text"
    }, [_vm._v("绑定手机号码后才能参与抽奖哦～")]), _c("div", {
      staticClass: "confirm",
      style: {
        backgroundColor: _vm.options.config.bgColor
      },
      on: {
        "click": _vm.onConfirm
      }
    }, [_vm._v("去绑定")])])]) : _vm._e();
  };
  var staticRenderFns$9 = [];
  const PhoneLayer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$9 = {
    components: {
      Layer: Layer$1,
      IconClose: IconClose$1
    },
    data() {
      return {
        options: {},
        visible: false
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
      },
      onConfirm() {
        var _a2, _b2;
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2);
        this.close();
      }
    }
  };
  const __cssModules$9 = {};
  var __component__$9 = /* @__PURE__ */normalizeComponent(__vue2_script$9, render$9, staticRenderFns$9, false, __vue2_injectStyles$9, "d069683c", null, null);
  function __vue2_injectStyles$9(context) {
    for (let o2 in __cssModules$9) {
      this[o2] = __cssModules$9[o2];
    }
  }
  const PhoneLayer = /* @__PURE__ */function () {
    return __component__$9.exports;
  }();
  var render$8 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("svg", {
      attrs: {
        "viewBox": "0 0 1024 1024"
      }
    }, [_c("path", {
      attrs: {
        "d": "M464 464v-288a48 48 0 0 1 96 0v288h288a48 48 0 0 1 0 96h-288v288a48 48 0 0 1-96 0v-288h-288a48 48 0 0 1 0-96h288z"
      }
    })]);
  };
  var staticRenderFns$8 = [];
  const __vue2_script$8 = {};
  const __cssModules$8 = {};
  var __component__$8 = /* @__PURE__ */normalizeComponent(__vue2_script$8, render$8, staticRenderFns$8, false, __vue2_injectStyles$8, null, null, null);
  function __vue2_injectStyles$8(context) {
    for (let o2 in __cssModules$8) {
      this[o2] = __cssModules$8[o2];
    }
  }
  const IconAdd = /* @__PURE__ */function () {
    return __component__$8.exports;
  }();
  var render$7 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": _vm.options.isHalfPage ? "340px" : "40%",
        "layerStyle": {
          bgColor: "#fff"
        }
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("填写收货信息")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "tip"
    }, [_vm._v("信息提交后无法修改，如有变更请联系客服，奖品预计2-3个工作日发出")]), _c("div", {
      staticClass: "addr",
      class: {
        empty: !_vm.addr
      }
    }, [!_vm.addr ? _c("div", {
      staticClass: "addr-empty",
      on: {
        "click": _vm.selectAddr
      }
    }, [_c("IconAdd", {
      staticClass: "add"
    }), _c("div", {
      staticClass: "add-text"
    }, [_vm._v("新建/选择地址")])], 1) : _vm._e(), _vm.addr ? _c("div", {
      staticClass: "addr-w"
    }, [_c("div", {
      staticClass: "addr-r1"
    }, [_c("div", {
      staticClass: "rec",
      domProps: {
        "textContent": _vm._s(`${_vm.addr.name} ${_vm.addr.phone.slice(0, 3) + "****" + _vm.addr.phone.slice(7)}`)
      }
    }), _c("div", {
      staticClass: "select",
      on: {
        "click": _vm.selectAddr
      }
    }, [_c("span", [_vm._v("选择地址")]), _c("IconArrowRight", {
      staticClass: "select-icon"
    })], 1)]), _c("div", {
      staticClass: "addr-r2"
    }, [_c("div", {
      domProps: {
        "textContent": _vm._s(`${_vm.addr.prov} ${_vm.addr.city} ${_vm.addr.area} ${_vm.addr.addr}`)
      }
    })])]) : _vm._e()]), _c("div", {
      staticClass: "opts"
    }, [_c("div", {
      staticClass: "confirm",
      on: {
        "click": _vm.onConfirm
      }
    }, [_vm._v(" 提交 ")])])])]) : _vm._e();
  };
  var staticRenderFns$7 = [];
  const AddressLayer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const getScript = url2 => new Promise((r2, reject) => {
    const s2 = document.createElement("script");
    s2.type = "text/javascript";
    s2.crossOrigin = true;
    s2.onload = r2;
    s2.onerror = reject;
    s2.src = url2;
    document.body.appendChild(s2);
  });
  const __vue2_script$7 = {
    components: {
      Layer: Layer$1,
      IconClose: IconClose$1,
      IconAdd,
      IconArrowRight
    },
    data() {
      return {
        options: {},
        visible: false,
        addr: null
      };
    },
    methods: {
      show() {
        this.addr = null;
        this.selected = false;
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
        if (!this.selected) {
          toast$2.info("选择收货地址后才能领取奖品~");
        }
      },
      onConfirm() {
        var _a2, _b2;
        if (!this.addr) {
          toast$2.info("选择收货地址后才能领取奖品~");
          return;
        }
        (_b2 = (_a2 = this.options) == null ? void 0 : _a2.onConfirm) == null ? void 0 : _b2.call(_a2, this.addr);
        this.selected = true;
        this.close();
      },
      async selectAddr() {
        let el = document.getElementById("common-address");
        if (!el) {
          el = document.createElement("div");
          el.setAttribute("id", "common-address");
          el.innerHTML = "<bili-address></bili-address>";
          document.body.appendChild(el);
        }
        el.style.display = "block";
        if (!window.Vue) {
          await getScript("//activity.hdslb.com/blackboard/static/20190620/5f57b396dd5d4d64cd7821de45ca266e/vue.min.js");
        }
        if (!window.showAddressList) {
          await getScript("//s1.hdslb.com/bfs/static/mall-c/address.js");
        }
        window.showAddressList();
        window.selectedAddressChanged = item => {
          this.$nextTick(() => {
            document.getElementById("common-address").style.display = "none";
          });
          if (!item || !item.id) {
            return;
          }
          this.addr = item;
        };
      }
    }
  };
  const __cssModules$7 = {};
  var __component__$7 = /* @__PURE__ */normalizeComponent(__vue2_script$7, render$7, staticRenderFns$7, false, __vue2_injectStyles$7, "daa7b79c", null, null);
  function __vue2_injectStyles$7(context) {
    for (let o2 in __cssModules$7) {
      this[o2] = __cssModules$7[o2];
    }
  }
  const AddressLayer = /* @__PURE__ */function () {
    return __component__$7.exports;
  }();
  var render$6 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("transition", {
      attrs: {
        "name": "match-task-modal"
      }
    }, [this.mounted ? _c("div", {
      staticClass: "modal-wrapper",
      on: {
        "click": _vm.handleClick
      }
    }, [_c("div", {
      ref: "modalLayer",
      staticClass: "modal-layer"
    }, [_c("div", {
      staticClass: "content"
    }, [_vm._t("default")], 2)])]) : _vm._e()]);
  };
  var staticRenderFns$6 = [];
  const Modal_vue_vue_type_style_index_0_lang = "";
  const Modal_vue_vue_type_style_index_1_scoped_true_lang = "";
  const __vue2_script$6 = {
    name: "Modal",
    components: {
      Close: IconClose$1
    },
    props: ["title", "value", "width"],
    data() {
      return {
        mounted: false
      };
    },
    methods: {
      handleClick(e2) {
        if (!e2.composedPath) {
          return;
        }
        let p2 = e2.composedPath();
        if (!p2.some(v2 => v2 === this.$refs["modalLayer"])) {
          this.$emit("close");
        }
      }
    },
    mounted() {
      this.mounted = true;
    }
  };
  const __cssModules$6 = {};
  var __component__$6 = /* @__PURE__ */normalizeComponent(__vue2_script$6, render$6, staticRenderFns$6, false, __vue2_injectStyles$6, "43c8c756", null, null);
  function __vue2_injectStyles$6(context) {
    for (let o2 in __cssModules$6) {
      this[o2] = __cssModules$6[o2];
    }
  }
  const Modal = /* @__PURE__ */function () {
    return __component__$6.exports;
  }();
  var lottie = {
    exports: {}
  };
  (function (module) {
    typeof navigator !== "undefined" && function (root2, factory) {
      if (module.exports) {
        module.exports = factory(root2);
      } else {
        root2.lottie = factory(root2);
        root2.bodymovin = root2.lottie;
      }
    }(window || {}, function (window) {
      var svgNS = "http://www.w3.org/2000/svg";
      var locationHref = "";
      var initialDefaultFrame = -999999;
      var subframeEnabled = true;
      var idPrefix = "";
      var expressionsPlugin;
      var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
      var bmPow = Math.pow;
      var bmSqrt = Math.sqrt;
      var bmFloor = Math.floor;
      var bmMax = Math.max;
      var bmMin = Math.min;
      var BMMath = {};
      (function () {
        var propertyNames = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"];
        var i2;
        var len = propertyNames.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          BMMath[propertyNames[i2]] = Math[propertyNames[i2]];
        }
      })();
      function ProjectInterface() {
        return {};
      }
      BMMath.random = Math.random;
      BMMath.abs = function (val2) {
        var tOfVal = typeof val2;
        if (tOfVal === "object" && val2.length) {
          var absArr = createSizedArray(val2.length);
          var i2;
          var len = val2.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            absArr[i2] = Math.abs(val2[i2]);
          }
          return absArr;
        }
        return Math.abs(val2);
      };
      var defaultCurveSegments = 150;
      var degToRads = Math.PI / 180;
      var roundCorner = 0.5519;
      function styleDiv(element) {
        element.style.position = "absolute";
        element.style.top = 0;
        element.style.left = 0;
        element.style.display = "block";
        element.style.transformOrigin = "0 0";
        element.style.webkitTransformOrigin = "0 0";
        element.style.backfaceVisibility = "visible";
        element.style.webkitBackfaceVisibility = "visible";
        element.style.transformStyle = "preserve-3d";
        element.style.webkitTransformStyle = "preserve-3d";
        element.style.mozTransformStyle = "preserve-3d";
      }
      function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {
        this.type = type;
        this.currentTime = currentTime;
        this.totalTime = totalTime;
        this.direction = frameMultiplier < 0 ? -1 : 1;
      }
      function BMCompleteEvent(type, frameMultiplier) {
        this.type = type;
        this.direction = frameMultiplier < 0 ? -1 : 1;
      }
      function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {
        this.type = type;
        this.currentLoop = currentLoop;
        this.totalLoops = totalLoops;
        this.direction = frameMultiplier < 0 ? -1 : 1;
      }
      function BMSegmentStartEvent(type, firstFrame, totalFrames) {
        this.type = type;
        this.firstFrame = firstFrame;
        this.totalFrames = totalFrames;
      }
      function BMDestroyEvent(type, target) {
        this.type = type;
        this.target = target;
      }
      function BMRenderFrameErrorEvent(nativeError, currentTime) {
        this.type = "renderFrameError";
        this.nativeError = nativeError;
        this.currentTime = currentTime;
      }
      function BMConfigErrorEvent(nativeError) {
        this.type = "configError";
        this.nativeError = nativeError;
      }
      var createElementID = function () {
        var _count = 0;
        return function createID() {
          _count += 1;
          return idPrefix + "__lottie_element_" + _count;
        };
      }();
      function HSVtoRGB(h2, s2, v2) {
        var r2;
        var g2;
        var b2;
        var i2;
        var f2;
        var p2;
        var q2;
        var t2;
        i2 = Math.floor(h2 * 6);
        f2 = h2 * 6 - i2;
        p2 = v2 * (1 - s2);
        q2 = v2 * (1 - f2 * s2);
        t2 = v2 * (1 - (1 - f2) * s2);
        switch (i2 % 6) {
          case 0:
            r2 = v2;
            g2 = t2;
            b2 = p2;
            break;
          case 1:
            r2 = q2;
            g2 = v2;
            b2 = p2;
            break;
          case 2:
            r2 = p2;
            g2 = v2;
            b2 = t2;
            break;
          case 3:
            r2 = p2;
            g2 = q2;
            b2 = v2;
            break;
          case 4:
            r2 = t2;
            g2 = p2;
            b2 = v2;
            break;
          case 5:
            r2 = v2;
            g2 = p2;
            b2 = q2;
            break;
        }
        return [r2, g2, b2];
      }
      function RGBtoHSV(r2, g2, b2) {
        var max = Math.max(r2, g2, b2);
        var min = Math.min(r2, g2, b2);
        var d2 = max - min;
        var h2;
        var s2 = max === 0 ? 0 : d2 / max;
        var v2 = max / 255;
        switch (max) {
          case min:
            h2 = 0;
            break;
          case r2:
            h2 = g2 - b2 + d2 * (g2 < b2 ? 6 : 0);
            h2 /= 6 * d2;
            break;
          case g2:
            h2 = b2 - r2 + d2 * 2;
            h2 /= 6 * d2;
            break;
          case b2:
            h2 = r2 - g2 + d2 * 4;
            h2 /= 6 * d2;
            break;
        }
        return [h2, s2, v2];
      }
      function addSaturationToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[1] += offset;
        if (hsv[1] > 1) {
          hsv[1] = 1;
        } else if (hsv[1] <= 0) {
          hsv[1] = 0;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
      }
      function addBrightnessToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[2] += offset;
        if (hsv[2] > 1) {
          hsv[2] = 1;
        } else if (hsv[2] < 0) {
          hsv[2] = 0;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
      }
      function addHueToRGB(color, offset) {
        var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
        hsv[0] += offset / 360;
        if (hsv[0] > 1) {
          hsv[0] -= 1;
        } else if (hsv[0] < 0) {
          hsv[0] += 1;
        }
        return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
      }
      var rgbToHex = function () {
        var colorMap = [];
        var i2;
        var hex;
        for (i2 = 0; i2 < 256; i2 += 1) {
          hex = i2.toString(16);
          colorMap[i2] = hex.length === 1 ? "0" + hex : hex;
        }
        return function (r2, g2, b2) {
          if (r2 < 0) {
            r2 = 0;
          }
          if (g2 < 0) {
            g2 = 0;
          }
          if (b2 < 0) {
            b2 = 0;
          }
          return "#" + colorMap[r2] + colorMap[g2] + colorMap[b2];
        };
      }();
      function BaseEvent() {}
      BaseEvent.prototype = {
        triggerEvent: function (eventName, args) {
          if (this._cbs[eventName]) {
            var callbacks = this._cbs[eventName];
            for (var i2 = 0; i2 < callbacks.length; i2 += 1) {
              callbacks[i2](args);
            }
          }
        },
        addEventListener: function (eventName, callback) {
          if (!this._cbs[eventName]) {
            this._cbs[eventName] = [];
          }
          this._cbs[eventName].push(callback);
          return function () {
            this.removeEventListener(eventName, callback);
          }.bind(this);
        },
        removeEventListener: function (eventName, callback) {
          if (!callback) {
            this._cbs[eventName] = null;
          } else if (this._cbs[eventName]) {
            var i2 = 0;
            var len = this._cbs[eventName].length;
            while (i2 < len) {
              if (this._cbs[eventName][i2] === callback) {
                this._cbs[eventName].splice(i2, 1);
                i2 -= 1;
                len -= 1;
              }
              i2 += 1;
            }
            if (!this._cbs[eventName].length) {
              this._cbs[eventName] = null;
            }
          }
        }
      };
      var createTypedArray = function () {
        function createRegularArray(type, len) {
          var i2 = 0;
          var arr2 = [];
          var value2;
          switch (type) {
            case "int16":
            case "uint8c":
              value2 = 1;
              break;
            default:
              value2 = 1.1;
              break;
          }
          for (i2 = 0; i2 < len; i2 += 1) {
            arr2.push(value2);
          }
          return arr2;
        }
        function createTypedArrayFactory(type, len) {
          if (type === "float32") {
            return new Float32Array(len);
          }
          if (type === "int16") {
            return new Int16Array(len);
          }
          if (type === "uint8c") {
            return new Uint8ClampedArray(len);
          }
          return createRegularArray(type, len);
        }
        if (typeof Uint8ClampedArray === "function" && typeof Float32Array === "function") {
          return createTypedArrayFactory;
        }
        return createRegularArray;
      }();
      function createSizedArray(len) {
        return Array.apply(null, {
          length: len
        });
      }
      function createNS(type) {
        return document.createElementNS(svgNS, type);
      }
      function createTag(type) {
        return document.createElement(type);
      }
      function DynamicPropertyContainer() {}
      DynamicPropertyContainer.prototype = {
        addDynamicProperty: function (prop) {
          if (this.dynamicProperties.indexOf(prop) === -1) {
            this.dynamicProperties.push(prop);
            this.container.addDynamicProperty(this);
            this._isAnimated = true;
          }
        },
        iterateDynamicProperties: function () {
          this._mdf = false;
          var i2;
          var len = this.dynamicProperties.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.dynamicProperties[i2].getValue();
            if (this.dynamicProperties[i2]._mdf) {
              this._mdf = true;
            }
          }
        },
        initDynamicPropertyContainer: function (container) {
          this.container = container;
          this.dynamicProperties = [];
          this._mdf = false;
          this._isAnimated = false;
        }
      };
      var getBlendMode = function () {
        var blendModeEnums = {
          0: "source-over",
          1: "multiply",
          2: "screen",
          3: "overlay",
          4: "darken",
          5: "lighten",
          6: "color-dodge",
          7: "color-burn",
          8: "hard-light",
          9: "soft-light",
          10: "difference",
          11: "exclusion",
          12: "hue",
          13: "saturation",
          14: "color",
          15: "luminosity"
        };
        return function (mode) {
          return blendModeEnums[mode] || "";
        };
      }();
      var lineCapEnum = {
        1: "butt",
        2: "round",
        3: "square"
      };
      var lineJoinEnum = {
        1: "miter",
        2: "round",
        3: "bevel"
      };
      /*!
       Transformation Matrix v2.0
       (c) Epistemex 2014-2015
       www.epistemex.com
       By Ken Fyrstenberg
       Contributions by leeoniya.
       License: MIT, header required.
       */
      var Matrix = function () {
        var _cos2 = Math.cos;
        var _sin2 = Math.sin;
        var _tan = Math.tan;
        var _rnd = Math.round;
        function reset() {
          this.props[0] = 1;
          this.props[1] = 0;
          this.props[2] = 0;
          this.props[3] = 0;
          this.props[4] = 0;
          this.props[5] = 1;
          this.props[6] = 0;
          this.props[7] = 0;
          this.props[8] = 0;
          this.props[9] = 0;
          this.props[10] = 1;
          this.props[11] = 0;
          this.props[12] = 0;
          this.props[13] = 0;
          this.props[14] = 0;
          this.props[15] = 1;
          return this;
        }
        function rotate(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos2(angle);
          var mSin = _sin2(angle);
          return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function rotateX(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos2(angle);
          var mSin = _sin2(angle);
          return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);
        }
        function rotateY(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos2(angle);
          var mSin = _sin2(angle);
          return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);
        }
        function rotateZ(angle) {
          if (angle === 0) {
            return this;
          }
          var mCos = _cos2(angle);
          var mSin = _sin2(angle);
          return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function shear(sx, sy) {
          return this._t(1, sy, sx, 1, 0, 0);
        }
        function skew(ax, ay) {
          return this.shear(_tan(ax), _tan(ay));
        }
        function skewFromAxis(ax, angle) {
          var mCos = _cos2(angle);
          var mSin = _sin2(angle);
          return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        }
        function scale(sx, sy, sz) {
          if (!sz && sz !== 0) {
            sz = 1;
          }
          if (sx === 1 && sy === 1 && sz === 1) {
            return this;
          }
          return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
        }
        function setTransform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
          this.props[0] = a2;
          this.props[1] = b2;
          this.props[2] = c2;
          this.props[3] = d2;
          this.props[4] = e2;
          this.props[5] = f2;
          this.props[6] = g2;
          this.props[7] = h2;
          this.props[8] = i2;
          this.props[9] = j2;
          this.props[10] = k2;
          this.props[11] = l2;
          this.props[12] = m2;
          this.props[13] = n2;
          this.props[14] = o2;
          this.props[15] = p2;
          return this;
        }
        function translate(tx, ty, tz) {
          tz = tz || 0;
          if (tx !== 0 || ty !== 0 || tz !== 0) {
            return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);
          }
          return this;
        }
        function transform2(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
          var _p = this.props;
          if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {
            _p[12] = _p[12] * a2 + _p[15] * m2;
            _p[13] = _p[13] * f2 + _p[15] * n2;
            _p[14] = _p[14] * k2 + _p[15] * o2;
            _p[15] *= p2;
            this._identityCalculated = false;
            return this;
          }
          var a1 = _p[0];
          var b1 = _p[1];
          var c1 = _p[2];
          var d1 = _p[3];
          var e1 = _p[4];
          var f1 = _p[5];
          var g1 = _p[6];
          var h1 = _p[7];
          var i1 = _p[8];
          var j1 = _p[9];
          var k1 = _p[10];
          var l1 = _p[11];
          var m1 = _p[12];
          var n1 = _p[13];
          var o1 = _p[14];
          var p1 = _p[15];
          _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
          _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;
          _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;
          _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;
          _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;
          _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;
          _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;
          _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;
          _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;
          _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;
          _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;
          _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;
          _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;
          _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;
          _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;
          _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;
          this._identityCalculated = false;
          return this;
        }
        function isIdentity() {
          if (!this._identityCalculated) {
            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);
            this._identityCalculated = true;
          }
          return this._identity;
        }
        function equals(matr) {
          var i2 = 0;
          while (i2 < 16) {
            if (matr.props[i2] !== this.props[i2]) {
              return false;
            }
            i2 += 1;
          }
          return true;
        }
        function clone(matr) {
          var i2;
          for (i2 = 0; i2 < 16; i2 += 1) {
            matr.props[i2] = this.props[i2];
          }
          return matr;
        }
        function cloneFromProps(props) {
          var i2;
          for (i2 = 0; i2 < 16; i2 += 1) {
            this.props[i2] = props[i2];
          }
        }
        function applyToPoint(x2, y2, z2) {
          return {
            x: x2 * this.props[0] + y2 * this.props[4] + z2 * this.props[8] + this.props[12],
            y: x2 * this.props[1] + y2 * this.props[5] + z2 * this.props[9] + this.props[13],
            z: x2 * this.props[2] + y2 * this.props[6] + z2 * this.props[10] + this.props[14]
          };
        }
        function applyToX(x2, y2, z2) {
          return x2 * this.props[0] + y2 * this.props[4] + z2 * this.props[8] + this.props[12];
        }
        function applyToY(x2, y2, z2) {
          return x2 * this.props[1] + y2 * this.props[5] + z2 * this.props[9] + this.props[13];
        }
        function applyToZ(x2, y2, z2) {
          return x2 * this.props[2] + y2 * this.props[6] + z2 * this.props[10] + this.props[14];
        }
        function getInverseMatrix() {
          var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];
          var a2 = this.props[5] / determinant;
          var b2 = -this.props[1] / determinant;
          var c2 = -this.props[4] / determinant;
          var d2 = this.props[0] / determinant;
          var e2 = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;
          var f2 = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;
          var inverseMatrix = new Matrix();
          inverseMatrix.props[0] = a2;
          inverseMatrix.props[1] = b2;
          inverseMatrix.props[4] = c2;
          inverseMatrix.props[5] = d2;
          inverseMatrix.props[12] = e2;
          inverseMatrix.props[13] = f2;
          return inverseMatrix;
        }
        function inversePoint(pt2) {
          var inverseMatrix = this.getInverseMatrix();
          return inverseMatrix.applyToPointArray(pt2[0], pt2[1], pt2[2] || 0);
        }
        function inversePoints(pts) {
          var i2;
          var len = pts.length;
          var retPts = [];
          for (i2 = 0; i2 < len; i2 += 1) {
            retPts[i2] = inversePoint(pts[i2]);
          }
          return retPts;
        }
        function applyToTriplePoints(pt1, pt2, pt3) {
          var arr2 = createTypedArray("float32", 6);
          if (this.isIdentity()) {
            arr2[0] = pt1[0];
            arr2[1] = pt1[1];
            arr2[2] = pt2[0];
            arr2[3] = pt2[1];
            arr2[4] = pt3[0];
            arr2[5] = pt3[1];
          } else {
            var p0 = this.props[0];
            var p1 = this.props[1];
            var p4 = this.props[4];
            var p5 = this.props[5];
            var p12 = this.props[12];
            var p13 = this.props[13];
            arr2[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
            arr2[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
            arr2[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
            arr2[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
            arr2[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
            arr2[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
          }
          return arr2;
        }
        function applyToPointArray(x2, y2, z2) {
          var arr2;
          if (this.isIdentity()) {
            arr2 = [x2, y2, z2];
          } else {
            arr2 = [x2 * this.props[0] + y2 * this.props[4] + z2 * this.props[8] + this.props[12], x2 * this.props[1] + y2 * this.props[5] + z2 * this.props[9] + this.props[13], x2 * this.props[2] + y2 * this.props[6] + z2 * this.props[10] + this.props[14]];
          }
          return arr2;
        }
        function applyToPointStringified(x2, y2) {
          if (this.isIdentity()) {
            return x2 + "," + y2;
          }
          var _p = this.props;
          return Math.round((x2 * _p[0] + y2 * _p[4] + _p[12]) * 100) / 100 + "," + Math.round((x2 * _p[1] + y2 * _p[5] + _p[13]) * 100) / 100;
        }
        function toCSS() {
          var i2 = 0;
          var props = this.props;
          var cssValue = "matrix3d(";
          var v2 = 1e4;
          while (i2 < 16) {
            cssValue += _rnd(props[i2] * v2) / v2;
            cssValue += i2 === 15 ? ")" : ",";
            i2 += 1;
          }
          return cssValue;
        }
        function roundMatrixProperty(val2) {
          var v2 = 1e4;
          if (val2 < 1e-6 && val2 > 0 || val2 > -1e-6 && val2 < 0) {
            return _rnd(val2 * v2) / v2;
          }
          return val2;
        }
        function to2dCSS() {
          var props = this.props;
          var _a2 = roundMatrixProperty(props[0]);
          var _b2 = roundMatrixProperty(props[1]);
          var _c = roundMatrixProperty(props[4]);
          var _d = roundMatrixProperty(props[5]);
          var _e2 = roundMatrixProperty(props[12]);
          var _f = roundMatrixProperty(props[13]);
          return "matrix(" + _a2 + "," + _b2 + "," + _c + "," + _d + "," + _e2 + "," + _f + ")";
        }
        return function () {
          this.reset = reset;
          this.rotate = rotate;
          this.rotateX = rotateX;
          this.rotateY = rotateY;
          this.rotateZ = rotateZ;
          this.skew = skew;
          this.skewFromAxis = skewFromAxis;
          this.shear = shear;
          this.scale = scale;
          this.setTransform = setTransform;
          this.translate = translate;
          this.transform = transform2;
          this.applyToPoint = applyToPoint;
          this.applyToX = applyToX;
          this.applyToY = applyToY;
          this.applyToZ = applyToZ;
          this.applyToPointArray = applyToPointArray;
          this.applyToTriplePoints = applyToTriplePoints;
          this.applyToPointStringified = applyToPointStringified;
          this.toCSS = toCSS;
          this.to2dCSS = to2dCSS;
          this.clone = clone;
          this.cloneFromProps = cloneFromProps;
          this.equals = equals;
          this.inversePoints = inversePoints;
          this.inversePoint = inversePoint;
          this.getInverseMatrix = getInverseMatrix;
          this._t = this.transform;
          this.isIdentity = isIdentity;
          this._identity = true;
          this._identityCalculated = false;
          this.props = createTypedArray("float32", 16);
          this.reset();
        };
      }();
      (function (pool, math) {
        var global2 = this,
          width = 256,
          chunks = 6,
          digits = 52,
          rngname = "random",
          startdenom = math.pow(width, chunks),
          significance = math.pow(2, digits),
          overflow = significance * 2,
          mask = width - 1,
          nodecrypto;
        function seedrandom(seed, options, callback) {
          var key = [];
          options = options === true ? {
            entropy: true
          } : options || {};
          var shortseed = mixkey(flatten2(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key);
          var arc4 = new ARC4(key);
          var prng = function () {
            var n2 = arc4.g(chunks),
              d2 = startdenom,
              x2 = 0;
            while (n2 < significance) {
              n2 = (n2 + x2) * width;
              d2 *= width;
              x2 = arc4.g(1);
            }
            while (n2 >= overflow) {
              n2 /= 2;
              d2 /= 2;
              x2 >>>= 1;
            }
            return (n2 + x2) / d2;
          };
          prng.int32 = function () {
            return arc4.g(4) | 0;
          };
          prng.quick = function () {
            return arc4.g(4) / 4294967296;
          };
          prng.double = prng;
          mixkey(tostring(arc4.S), pool);
          return (options.pass || callback || function (prng2, seed2, is_math_call, state) {
            if (state) {
              if (state.S) {
                copy(state, arc4);
              }
              prng2.state = function () {
                return copy(arc4, {});
              };
            }
            if (is_math_call) {
              math[rngname] = prng2;
              return seed2;
            } else return prng2;
          })(prng, shortseed, "global" in options ? options.global : this == math, options.state);
        }
        math["seed" + rngname] = seedrandom;
        function ARC4(key) {
          var t2,
            keylen = key.length,
            me2 = this,
            i2 = 0,
            j2 = me2.i = me2.j = 0,
            s2 = me2.S = [];
          if (!keylen) {
            key = [keylen++];
          }
          while (i2 < width) {
            s2[i2] = i2++;
          }
          for (i2 = 0; i2 < width; i2++) {
            s2[i2] = s2[j2 = mask & j2 + key[i2 % keylen] + (t2 = s2[i2])];
            s2[j2] = t2;
          }
          me2.g = function (count) {
            var t3,
              r2 = 0,
              i3 = me2.i,
              j3 = me2.j,
              s3 = me2.S;
            while (count--) {
              t3 = s3[i3 = mask & i3 + 1];
              r2 = r2 * width + s3[mask & (s3[i3] = s3[j3 = mask & j3 + t3]) + (s3[j3] = t3)];
            }
            me2.i = i3;
            me2.j = j3;
            return r2;
          };
        }
        function copy(f2, t2) {
          t2.i = f2.i;
          t2.j = f2.j;
          t2.S = f2.S.slice();
          return t2;
        }
        function flatten2(obj, depth) {
          var result = [],
            typ = typeof obj,
            prop;
          if (depth && typ == "object") {
            for (prop in obj) {
              try {
                result.push(flatten2(obj[prop], depth - 1));
              } catch (e2) {}
            }
          }
          return result.length ? result : typ == "string" ? obj : obj + "\0";
        }
        function mixkey(seed, key) {
          var stringseed = seed + "",
            smear,
            j2 = 0;
          while (j2 < stringseed.length) {
            key[mask & j2] = mask & (smear ^= key[mask & j2] * 19) + stringseed.charCodeAt(j2++);
          }
          return tostring(key);
        }
        function autoseed() {
          try {
            if (nodecrypto) ;
            var out = new Uint8Array(width);
            (global2.crypto || global2.msCrypto).getRandomValues(out);
            return tostring(out);
          } catch (e2) {
            var browser = global2.navigator,
              plugins = browser && browser.plugins;
            return [+ /* @__PURE__ */new Date(), global2, plugins, global2.screen, tostring(pool)];
          }
        }
        function tostring(a2) {
          return String.fromCharCode.apply(0, a2);
        }
        mixkey(math.random(), pool);
      })([],
      // pool: entropy pool starts empty
      BMMath
      // math: package containing random, pow, and seedrandom
      );
      var BezierFactory = function () {
        var ob2 = {};
        ob2.getBezierEasing = getBezierEasing;
        var beziers = {};
        function getBezierEasing(a2, b2, c2, d2, nm) {
          var str = nm || ("bez_" + a2 + "_" + b2 + "_" + c2 + "_" + d2).replace(/\./g, "p");
          if (beziers[str]) {
            return beziers[str];
          }
          var bezEasing = new BezierEasing([a2, b2, c2, d2]);
          beziers[str] = bezEasing;
          return bezEasing;
        }
        var NEWTON_ITERATIONS = 4;
        var NEWTON_MIN_SLOPE = 1e-3;
        var SUBDIVISION_PRECISION = 1e-7;
        var SUBDIVISION_MAX_ITERATIONS = 10;
        var kSplineTableSize = 11;
        var kSampleStepSize = 1 / (kSplineTableSize - 1);
        var float32ArraySupported = typeof Float32Array === "function";
        function A2(aA1, aA2) {
          return 1 - 3 * aA2 + 3 * aA1;
        }
        function B2(aA1, aA2) {
          return 3 * aA2 - 6 * aA1;
        }
        function C2(aA1) {
          return 3 * aA1;
        }
        function calcBezier(aT, aA1, aA2) {
          return ((A2(aA1, aA2) * aT + B2(aA1, aA2)) * aT + C2(aA1)) * aT;
        }
        function getSlope(aT, aA1, aA2) {
          return 3 * A2(aA1, aA2) * aT * aT + 2 * B2(aA1, aA2) * aT + C2(aA1);
        }
        function binarySubdivide(aX, aA, aB, mX1, mX2) {
          var currentX,
            currentT,
            i2 = 0;
          do {
            currentT = aA + (aB - aA) / 2;
            currentX = calcBezier(currentT, mX1, mX2) - aX;
            if (currentX > 0) {
              aB = currentT;
            } else {
              aA = currentT;
            }
          } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i2 < SUBDIVISION_MAX_ITERATIONS);
          return currentT;
        }
        function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
          for (var i2 = 0; i2 < NEWTON_ITERATIONS; ++i2) {
            var currentSlope = getSlope(aGuessT, mX1, mX2);
            if (currentSlope === 0) return aGuessT;
            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
            aGuessT -= currentX / currentSlope;
          }
          return aGuessT;
        }
        function BezierEasing(points) {
          this._p = points;
          this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
          this._precomputed = false;
          this.get = this.get.bind(this);
        }
        BezierEasing.prototype = {
          get: function (x2) {
            var mX1 = this._p[0],
              mY1 = this._p[1],
              mX2 = this._p[2],
              mY2 = this._p[3];
            if (!this._precomputed) this._precompute();
            if (mX1 === mY1 && mX2 === mY2) return x2;
            if (x2 === 0) return 0;
            if (x2 === 1) return 1;
            return calcBezier(this._getTForX(x2), mY1, mY2);
          },
          // Private part
          _precompute: function () {
            var mX1 = this._p[0],
              mY1 = this._p[1],
              mX2 = this._p[2],
              mY2 = this._p[3];
            this._precomputed = true;
            if (mX1 !== mY1 || mX2 !== mY2) {
              this._calcSampleValues();
            }
          },
          _calcSampleValues: function () {
            var mX1 = this._p[0],
              mX2 = this._p[2];
            for (var i2 = 0; i2 < kSplineTableSize; ++i2) {
              this._mSampleValues[i2] = calcBezier(i2 * kSampleStepSize, mX1, mX2);
            }
          },
          /**
               * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
               */
          _getTForX: function (aX) {
            var mX1 = this._p[0],
              mX2 = this._p[2],
              mSampleValues = this._mSampleValues;
            var intervalStart = 0;
            var currentSample = 1;
            var lastSample = kSplineTableSize - 1;
            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
              intervalStart += kSampleStepSize;
            }
            --currentSample;
            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);
            var guessForT = intervalStart + dist * kSampleStepSize;
            var initialSlope = getSlope(guessForT, mX1, mX2);
            if (initialSlope >= NEWTON_MIN_SLOPE) {
              return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
            }
            if (initialSlope === 0) {
              return guessForT;
            }
            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
          }
        };
        return ob2;
      }();
      (function () {
        var lastTime = 0;
        var vendors = ["ms", "moz", "webkit", "o"];
        for (var x2 = 0; x2 < vendors.length && !window.requestAnimationFrame; ++x2) {
          window.requestAnimationFrame = window[vendors[x2] + "RequestAnimationFrame"];
          window.cancelAnimationFrame = window[vendors[x2] + "CancelAnimationFrame"] || window[vendors[x2] + "CancelRequestAnimationFrame"];
        }
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = function (callback) {
            var currTime = (/* @__PURE__ */new Date()).getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = setTimeout(function () {
              callback(currTime + timeToCall);
            }, timeToCall);
            lastTime = currTime + timeToCall;
            return id;
          };
        }
        if (!window.cancelAnimationFrame) {
          window.cancelAnimationFrame = function (id) {
            clearTimeout(id);
          };
        }
      })();
      function extendPrototype(sources, destination) {
        var i2;
        var len = sources.length;
        var sourcePrototype;
        for (i2 = 0; i2 < len; i2 += 1) {
          sourcePrototype = sources[i2].prototype;
          for (var attr in sourcePrototype) {
            if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];
          }
        }
      }
      function getDescriptor(object, prop) {
        return Object.getOwnPropertyDescriptor(object, prop);
      }
      function createProxyFunction(prototype2) {
        function ProxyFunction() {}
        ProxyFunction.prototype = prototype2;
        return ProxyFunction;
      }
      function bezFunction() {
        var math = Math;
        function pointOnLine2D(x1, y1, x2, y2, x3, y3) {
          var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;
          return det1 > -1e-3 && det1 < 1e-3;
        }
        function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {
          if (z1 === 0 && z2 === 0 && z3 === 0) {
            return pointOnLine2D(x1, y1, x2, y2, x3, y3);
          }
          var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));
          var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));
          var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));
          var diffDist;
          if (dist1 > dist2) {
            if (dist1 > dist3) {
              diffDist = dist1 - dist2 - dist3;
            } else {
              diffDist = dist3 - dist2 - dist1;
            }
          } else if (dist3 > dist2) {
            diffDist = dist3 - dist2 - dist1;
          } else {
            diffDist = dist2 - dist1 - dist3;
          }
          return diffDist > -1e-4 && diffDist < 1e-4;
        }
        var getBezierLength = function () {
          return function (pt1, pt2, pt3, pt4) {
            var curveSegments = defaultCurveSegments;
            var k2;
            var i2;
            var len;
            var ptCoord;
            var perc;
            var addedLength = 0;
            var ptDistance;
            var point = [];
            var lastPoint = [];
            var lengthData = bezierLengthPool.newElement();
            len = pt3.length;
            for (k2 = 0; k2 < curveSegments; k2 += 1) {
              perc = k2 / (curveSegments - 1);
              ptDistance = 0;
              for (i2 = 0; i2 < len; i2 += 1) {
                ptCoord = bmPow(1 - perc, 3) * pt1[i2] + 3 * bmPow(1 - perc, 2) * perc * pt3[i2] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i2] + bmPow(perc, 3) * pt2[i2];
                point[i2] = ptCoord;
                if (lastPoint[i2] !== null) {
                  ptDistance += bmPow(point[i2] - lastPoint[i2], 2);
                }
                lastPoint[i2] = point[i2];
              }
              if (ptDistance) {
                ptDistance = bmSqrt(ptDistance);
                addedLength += ptDistance;
              }
              lengthData.percents[k2] = perc;
              lengthData.lengths[k2] = addedLength;
            }
            lengthData.addedLength = addedLength;
            return lengthData;
          };
        }();
        function getSegmentsLength(shapeData) {
          var segmentsLength = segmentsLengthPool.newElement();
          var closed = shapeData.c;
          var pathV = shapeData.v;
          var pathO = shapeData.o;
          var pathI = shapeData.i;
          var i2;
          var len = shapeData._length;
          var lengths = segmentsLength.lengths;
          var totalLength = 0;
          for (i2 = 0; i2 < len - 1; i2 += 1) {
            lengths[i2] = getBezierLength(pathV[i2], pathV[i2 + 1], pathO[i2], pathI[i2 + 1]);
            totalLength += lengths[i2].addedLength;
          }
          if (closed && len) {
            lengths[i2] = getBezierLength(pathV[i2], pathV[0], pathO[i2], pathI[0]);
            totalLength += lengths[i2].addedLength;
          }
          segmentsLength.totalLength = totalLength;
          return segmentsLength;
        }
        function BezierData(length) {
          this.segmentLength = 0;
          this.points = new Array(length);
        }
        function PointData(partial, point) {
          this.partialLength = partial;
          this.point = point;
        }
        var buildBezierData = function () {
          var storedData = {};
          return function (pt1, pt2, pt3, pt4) {
            var bezierName = (pt1[0] + "_" + pt1[1] + "_" + pt2[0] + "_" + pt2[1] + "_" + pt3[0] + "_" + pt3[1] + "_" + pt4[0] + "_" + pt4[1]).replace(/\./g, "p");
            if (!storedData[bezierName]) {
              var curveSegments = defaultCurveSegments;
              var k2;
              var i2;
              var len;
              var ptCoord;
              var perc;
              var addedLength = 0;
              var ptDistance;
              var point;
              var lastPoint = null;
              if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {
                curveSegments = 2;
              }
              var bezierData = new BezierData(curveSegments);
              len = pt3.length;
              for (k2 = 0; k2 < curveSegments; k2 += 1) {
                point = createSizedArray(len);
                perc = k2 / (curveSegments - 1);
                ptDistance = 0;
                for (i2 = 0; i2 < len; i2 += 1) {
                  ptCoord = bmPow(1 - perc, 3) * pt1[i2] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i2] + pt3[i2]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i2] + pt4[i2]) + bmPow(perc, 3) * pt2[i2];
                  point[i2] = ptCoord;
                  if (lastPoint !== null) {
                    ptDistance += bmPow(point[i2] - lastPoint[i2], 2);
                  }
                }
                ptDistance = bmSqrt(ptDistance);
                addedLength += ptDistance;
                bezierData.points[k2] = new PointData(ptDistance, point);
                lastPoint = point;
              }
              bezierData.segmentLength = addedLength;
              storedData[bezierName] = bezierData;
            }
            return storedData[bezierName];
          };
        }();
        function getDistancePerc(perc, bezierData) {
          var percents = bezierData.percents;
          var lengths = bezierData.lengths;
          var len = percents.length;
          var initPos = bmFloor((len - 1) * perc);
          var lengthPos = perc * bezierData.addedLength;
          var lPerc = 0;
          if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {
            return percents[initPos];
          }
          var dir = lengths[initPos] > lengthPos ? -1 : 1;
          var flag = true;
          while (flag) {
            if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {
              lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);
              flag = false;
            } else {
              initPos += dir;
            }
            if (initPos < 0 || initPos >= len - 1) {
              if (initPos === len - 1) {
                return percents[initPos];
              }
              flag = false;
            }
          }
          return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;
        }
        function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {
          var t1 = getDistancePerc(percent, bezierData);
          var u1 = 1 - t1;
          var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1e3) / 1e3;
          var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1e3) / 1e3;
          return [ptX, ptY];
        }
        var bezierSegmentPoints = createTypedArray("float32", 8);
        function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {
          if (startPerc < 0) {
            startPerc = 0;
          } else if (startPerc > 1) {
            startPerc = 1;
          }
          var t0 = getDistancePerc(startPerc, bezierData);
          endPerc = endPerc > 1 ? 1 : endPerc;
          var t1 = getDistancePerc(endPerc, bezierData);
          var i2;
          var len = pt1.length;
          var u0 = 1 - t0;
          var u1 = 1 - t1;
          var u0u0u0 = u0 * u0 * u0;
          var t0u0u0_3 = t0 * u0 * u0 * 3;
          var t0t0u0_3 = t0 * t0 * u0 * 3;
          var t0t0t0 = t0 * t0 * t0;
          var u0u0u1 = u0 * u0 * u1;
          var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;
          var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;
          var t0t0t1 = t0 * t0 * t1;
          var u0u1u1 = u0 * u1 * u1;
          var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;
          var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;
          var t0t1t1 = t0 * t1 * t1;
          var u1u1u1 = u1 * u1 * u1;
          var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;
          var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;
          var t1t1t1 = t1 * t1 * t1;
          for (i2 = 0; i2 < len; i2 += 1) {
            bezierSegmentPoints[i2 * 4] = math.round((u0u0u0 * pt1[i2] + t0u0u0_3 * pt3[i2] + t0t0u0_3 * pt4[i2] + t0t0t0 * pt2[i2]) * 1e3) / 1e3;
            bezierSegmentPoints[i2 * 4 + 1] = math.round((u0u0u1 * pt1[i2] + t0u0u1_3 * pt3[i2] + t0t0u1_3 * pt4[i2] + t0t0t1 * pt2[i2]) * 1e3) / 1e3;
            bezierSegmentPoints[i2 * 4 + 2] = math.round((u0u1u1 * pt1[i2] + t0u1u1_3 * pt3[i2] + t0t1u1_3 * pt4[i2] + t0t1t1 * pt2[i2]) * 1e3) / 1e3;
            bezierSegmentPoints[i2 * 4 + 3] = math.round((u1u1u1 * pt1[i2] + t1u1u1_3 * pt3[i2] + t1t1u1_3 * pt4[i2] + t1t1t1 * pt2[i2]) * 1e3) / 1e3;
          }
          return bezierSegmentPoints;
        }
        return {
          getSegmentsLength,
          getNewSegment,
          getPointInSegment,
          buildBezierData,
          pointOnLine2D,
          pointOnLine3D
        };
      }
      var bez = bezFunction();
      function dataFunctionManager() {
        function completeLayers(layers2, comps, fontManager) {
          var layerData;
          var i2;
          var len = layers2.length;
          var j2;
          var jLen;
          var k2;
          var kLen;
          for (i2 = 0; i2 < len; i2 += 1) {
            layerData = layers2[i2];
            if ("ks" in layerData && !layerData.completed) {
              layerData.completed = true;
              if (layerData.tt) {
                layers2[i2 - 1].td = layerData.tt;
              }
              if (layerData.hasMask) {
                var maskProps = layerData.masksProperties;
                jLen = maskProps.length;
                for (j2 = 0; j2 < jLen; j2 += 1) {
                  if (maskProps[j2].pt.k.i) {
                    convertPathsToAbsoluteValues(maskProps[j2].pt.k);
                  } else {
                    kLen = maskProps[j2].pt.k.length;
                    for (k2 = 0; k2 < kLen; k2 += 1) {
                      if (maskProps[j2].pt.k[k2].s) {
                        convertPathsToAbsoluteValues(maskProps[j2].pt.k[k2].s[0]);
                      }
                      if (maskProps[j2].pt.k[k2].e) {
                        convertPathsToAbsoluteValues(maskProps[j2].pt.k[k2].e[0]);
                      }
                    }
                  }
                }
              }
              if (layerData.ty === 0) {
                layerData.layers = findCompLayers(layerData.refId, comps);
                completeLayers(layerData.layers, comps);
              } else if (layerData.ty === 4) {
                completeShapes(layerData.shapes);
              } else if (layerData.ty === 5) {
                completeText(layerData);
              }
            }
          }
        }
        function findCompLayers(id, comps) {
          var i2 = 0;
          var len = comps.length;
          while (i2 < len) {
            if (comps[i2].id === id) {
              if (!comps[i2].layers.__used) {
                comps[i2].layers.__used = true;
                return comps[i2].layers;
              }
              return JSON.parse(JSON.stringify(comps[i2].layers));
            }
            i2 += 1;
          }
          return null;
        }
        function completeShapes(arr2) {
          var i2;
          var len = arr2.length;
          var j2;
          var jLen;
          for (i2 = len - 1; i2 >= 0; i2 -= 1) {
            if (arr2[i2].ty === "sh") {
              if (arr2[i2].ks.k.i) {
                convertPathsToAbsoluteValues(arr2[i2].ks.k);
              } else {
                jLen = arr2[i2].ks.k.length;
                for (j2 = 0; j2 < jLen; j2 += 1) {
                  if (arr2[i2].ks.k[j2].s) {
                    convertPathsToAbsoluteValues(arr2[i2].ks.k[j2].s[0]);
                  }
                  if (arr2[i2].ks.k[j2].e) {
                    convertPathsToAbsoluteValues(arr2[i2].ks.k[j2].e[0]);
                  }
                }
              }
            } else if (arr2[i2].ty === "gr") {
              completeShapes(arr2[i2].it);
            }
          }
        }
        function convertPathsToAbsoluteValues(path) {
          var i2;
          var len = path.i.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            path.i[i2][0] += path.v[i2][0];
            path.i[i2][1] += path.v[i2][1];
            path.o[i2][0] += path.v[i2][0];
            path.o[i2][1] += path.v[i2][1];
          }
        }
        function checkVersion(minimum, animVersionString) {
          var animVersion = animVersionString ? animVersionString.split(".") : [100, 100, 100];
          if (minimum[0] > animVersion[0]) {
            return true;
          }
          if (animVersion[0] > minimum[0]) {
            return false;
          }
          if (minimum[1] > animVersion[1]) {
            return true;
          }
          if (animVersion[1] > minimum[1]) {
            return false;
          }
          if (minimum[2] > animVersion[2]) {
            return true;
          }
          if (animVersion[2] > minimum[2]) {
            return false;
          }
          return null;
        }
        var checkText = function () {
          var minimumVersion = [4, 4, 14];
          function updateTextLayer(textLayer) {
            var documentData = textLayer.t.d;
            textLayer.t.d = {
              k: [{
                s: documentData,
                t: 0
              }]
            };
          }
          function iterateLayers(layers2) {
            var i2;
            var len = layers2.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              if (layers2[i2].ty === 5) {
                updateTextLayer(layers2[i2]);
              }
            }
          }
          return function (animationData) {
            if (checkVersion(minimumVersion, animationData.v)) {
              iterateLayers(animationData.layers);
              if (animationData.assets) {
                var i2;
                var len = animationData.assets.length;
                for (i2 = 0; i2 < len; i2 += 1) {
                  if (animationData.assets[i2].layers) {
                    iterateLayers(animationData.assets[i2].layers);
                  }
                }
              }
            }
          };
        }();
        var checkChars = function () {
          var minimumVersion = [4, 7, 99];
          return function (animationData) {
            if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {
              var i2;
              var len = animationData.chars.length;
              var j2;
              var jLen;
              var pathData;
              var paths;
              for (i2 = 0; i2 < len; i2 += 1) {
                if (animationData.chars[i2].data && animationData.chars[i2].data.shapes) {
                  paths = animationData.chars[i2].data.shapes[0].it;
                  jLen = paths.length;
                  for (j2 = 0; j2 < jLen; j2 += 1) {
                    pathData = paths[j2].ks.k;
                    if (!pathData.__converted) {
                      convertPathsToAbsoluteValues(paths[j2].ks.k);
                      pathData.__converted = true;
                    }
                  }
                }
              }
            }
          };
        }();
        var checkPathProperties = function () {
          var minimumVersion = [5, 7, 15];
          function updateTextLayer(textLayer) {
            var pathData = textLayer.t.p;
            if (typeof pathData.a === "number") {
              pathData.a = {
                a: 0,
                k: pathData.a
              };
            }
            if (typeof pathData.p === "number") {
              pathData.p = {
                a: 0,
                k: pathData.p
              };
            }
            if (typeof pathData.r === "number") {
              pathData.r = {
                a: 0,
                k: pathData.r
              };
            }
          }
          function iterateLayers(layers2) {
            var i2;
            var len = layers2.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              if (layers2[i2].ty === 5) {
                updateTextLayer(layers2[i2]);
              }
            }
          }
          return function (animationData) {
            if (checkVersion(minimumVersion, animationData.v)) {
              iterateLayers(animationData.layers);
              if (animationData.assets) {
                var i2;
                var len = animationData.assets.length;
                for (i2 = 0; i2 < len; i2 += 1) {
                  if (animationData.assets[i2].layers) {
                    iterateLayers(animationData.assets[i2].layers);
                  }
                }
              }
            }
          };
        }();
        var checkColors = function () {
          var minimumVersion = [4, 1, 9];
          function iterateShapes(shapes) {
            var i2;
            var len = shapes.length;
            var j2;
            var jLen;
            for (i2 = 0; i2 < len; i2 += 1) {
              if (shapes[i2].ty === "gr") {
                iterateShapes(shapes[i2].it);
              } else if (shapes[i2].ty === "fl" || shapes[i2].ty === "st") {
                if (shapes[i2].c.k && shapes[i2].c.k[0].i) {
                  jLen = shapes[i2].c.k.length;
                  for (j2 = 0; j2 < jLen; j2 += 1) {
                    if (shapes[i2].c.k[j2].s) {
                      shapes[i2].c.k[j2].s[0] /= 255;
                      shapes[i2].c.k[j2].s[1] /= 255;
                      shapes[i2].c.k[j2].s[2] /= 255;
                      shapes[i2].c.k[j2].s[3] /= 255;
                    }
                    if (shapes[i2].c.k[j2].e) {
                      shapes[i2].c.k[j2].e[0] /= 255;
                      shapes[i2].c.k[j2].e[1] /= 255;
                      shapes[i2].c.k[j2].e[2] /= 255;
                      shapes[i2].c.k[j2].e[3] /= 255;
                    }
                  }
                } else {
                  shapes[i2].c.k[0] /= 255;
                  shapes[i2].c.k[1] /= 255;
                  shapes[i2].c.k[2] /= 255;
                  shapes[i2].c.k[3] /= 255;
                }
              }
            }
          }
          function iterateLayers(layers2) {
            var i2;
            var len = layers2.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              if (layers2[i2].ty === 4) {
                iterateShapes(layers2[i2].shapes);
              }
            }
          }
          return function (animationData) {
            if (checkVersion(minimumVersion, animationData.v)) {
              iterateLayers(animationData.layers);
              if (animationData.assets) {
                var i2;
                var len = animationData.assets.length;
                for (i2 = 0; i2 < len; i2 += 1) {
                  if (animationData.assets[i2].layers) {
                    iterateLayers(animationData.assets[i2].layers);
                  }
                }
              }
            }
          };
        }();
        var checkShapes = function () {
          var minimumVersion = [4, 4, 18];
          function completeClosingShapes(arr2) {
            var i2;
            var len = arr2.length;
            var j2;
            var jLen;
            for (i2 = len - 1; i2 >= 0; i2 -= 1) {
              if (arr2[i2].ty === "sh") {
                if (arr2[i2].ks.k.i) {
                  arr2[i2].ks.k.c = arr2[i2].closed;
                } else {
                  jLen = arr2[i2].ks.k.length;
                  for (j2 = 0; j2 < jLen; j2 += 1) {
                    if (arr2[i2].ks.k[j2].s) {
                      arr2[i2].ks.k[j2].s[0].c = arr2[i2].closed;
                    }
                    if (arr2[i2].ks.k[j2].e) {
                      arr2[i2].ks.k[j2].e[0].c = arr2[i2].closed;
                    }
                  }
                }
              } else if (arr2[i2].ty === "gr") {
                completeClosingShapes(arr2[i2].it);
              }
            }
          }
          function iterateLayers(layers2) {
            var layerData;
            var i2;
            var len = layers2.length;
            var j2;
            var jLen;
            var k2;
            var kLen;
            for (i2 = 0; i2 < len; i2 += 1) {
              layerData = layers2[i2];
              if (layerData.hasMask) {
                var maskProps = layerData.masksProperties;
                jLen = maskProps.length;
                for (j2 = 0; j2 < jLen; j2 += 1) {
                  if (maskProps[j2].pt.k.i) {
                    maskProps[j2].pt.k.c = maskProps[j2].cl;
                  } else {
                    kLen = maskProps[j2].pt.k.length;
                    for (k2 = 0; k2 < kLen; k2 += 1) {
                      if (maskProps[j2].pt.k[k2].s) {
                        maskProps[j2].pt.k[k2].s[0].c = maskProps[j2].cl;
                      }
                      if (maskProps[j2].pt.k[k2].e) {
                        maskProps[j2].pt.k[k2].e[0].c = maskProps[j2].cl;
                      }
                    }
                  }
                }
              }
              if (layerData.ty === 4) {
                completeClosingShapes(layerData.shapes);
              }
            }
          }
          return function (animationData) {
            if (checkVersion(minimumVersion, animationData.v)) {
              iterateLayers(animationData.layers);
              if (animationData.assets) {
                var i2;
                var len = animationData.assets.length;
                for (i2 = 0; i2 < len; i2 += 1) {
                  if (animationData.assets[i2].layers) {
                    iterateLayers(animationData.assets[i2].layers);
                  }
                }
              }
            }
          };
        }();
        function completeData(animationData, fontManager) {
          if (animationData.__complete) {
            return;
          }
          checkColors(animationData);
          checkText(animationData);
          checkChars(animationData);
          checkPathProperties(animationData);
          checkShapes(animationData);
          completeLayers(animationData.layers, animationData.assets);
          animationData.__complete = true;
        }
        function completeText(data2) {
          if (data2.t.a.length === 0 && !("m" in data2.t.p)) {
            data2.singleShape = true;
          }
        }
        var moduleOb = {};
        moduleOb.completeData = completeData;
        moduleOb.checkColors = checkColors;
        moduleOb.checkChars = checkChars;
        moduleOb.checkPathProperties = checkPathProperties;
        moduleOb.checkShapes = checkShapes;
        moduleOb.completeLayers = completeLayers;
        return moduleOb;
      }
      var dataManager = dataFunctionManager();
      function getFontProperties(fontData) {
        var styles = fontData.fStyle ? fontData.fStyle.split(" ") : [];
        var fWeight = "normal";
        var fStyle = "normal";
        var len = styles.length;
        var styleName;
        for (var i2 = 0; i2 < len; i2 += 1) {
          styleName = styles[i2].toLowerCase();
          switch (styleName) {
            case "italic":
              fStyle = "italic";
              break;
            case "bold":
              fWeight = "700";
              break;
            case "black":
              fWeight = "900";
              break;
            case "medium":
              fWeight = "500";
              break;
            case "regular":
            case "normal":
              fWeight = "400";
              break;
            case "light":
            case "thin":
              fWeight = "200";
              break;
          }
        }
        return {
          style: fStyle,
          weight: fontData.fWeight || fWeight
        };
      }
      var FontManager = function () {
        var maxWaitingTime = 5e3;
        var emptyChar = {
          w: 0,
          size: 0,
          shapes: []
        };
        var combinedCharacters = [];
        combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
        var surrogateModifiers = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
        var zeroWidthJoiner = [65039, 8205];
        function trimFontOptions(font) {
          var familyArray = font.split(",");
          var i2;
          var len = familyArray.length;
          var enabledFamilies = [];
          for (i2 = 0; i2 < len; i2 += 1) {
            if (familyArray[i2] !== "sans-serif" && familyArray[i2] !== "monospace") {
              enabledFamilies.push(familyArray[i2]);
            }
          }
          return enabledFamilies.join(",");
        }
        function setUpNode(font, family) {
          var parentNode = createTag("span");
          parentNode.setAttribute("aria-hidden", true);
          parentNode.style.fontFamily = family;
          var node = createTag("span");
          node.innerText = "giItT1WQy@!-/#";
          parentNode.style.position = "absolute";
          parentNode.style.left = "-10000px";
          parentNode.style.top = "-10000px";
          parentNode.style.fontSize = "300px";
          parentNode.style.fontVariant = "normal";
          parentNode.style.fontStyle = "normal";
          parentNode.style.fontWeight = "normal";
          parentNode.style.letterSpacing = "0";
          parentNode.appendChild(node);
          document.body.appendChild(parentNode);
          var width = node.offsetWidth;
          node.style.fontFamily = trimFontOptions(font) + ", " + family;
          return {
            node,
            w: width,
            parent: parentNode
          };
        }
        function checkLoadedFonts() {
          var i2;
          var len = this.fonts.length;
          var node;
          var w2;
          var loadedCount = len;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (this.fonts[i2].loaded) {
              loadedCount -= 1;
            } else if (this.fonts[i2].fOrigin === "n" || this.fonts[i2].origin === 0) {
              this.fonts[i2].loaded = true;
            } else {
              node = this.fonts[i2].monoCase.node;
              w2 = this.fonts[i2].monoCase.w;
              if (node.offsetWidth !== w2) {
                loadedCount -= 1;
                this.fonts[i2].loaded = true;
              } else {
                node = this.fonts[i2].sansCase.node;
                w2 = this.fonts[i2].sansCase.w;
                if (node.offsetWidth !== w2) {
                  loadedCount -= 1;
                  this.fonts[i2].loaded = true;
                }
              }
              if (this.fonts[i2].loaded) {
                this.fonts[i2].sansCase.parent.parentNode.removeChild(this.fonts[i2].sansCase.parent);
                this.fonts[i2].monoCase.parent.parentNode.removeChild(this.fonts[i2].monoCase.parent);
              }
            }
          }
          if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {
            setTimeout(this.checkLoadedFontsBinded, 20);
          } else {
            setTimeout(this.setIsLoadedBinded, 10);
          }
        }
        function createHelper(def, fontData) {
          var tHelper = createNS("text");
          tHelper.style.fontSize = "100px";
          var fontProps = getFontProperties(fontData);
          tHelper.setAttribute("font-family", fontData.fFamily);
          tHelper.setAttribute("font-style", fontProps.style);
          tHelper.setAttribute("font-weight", fontProps.weight);
          tHelper.textContent = "1";
          if (fontData.fClass) {
            tHelper.style.fontFamily = "inherit";
            tHelper.setAttribute("class", fontData.fClass);
          } else {
            tHelper.style.fontFamily = fontData.fFamily;
          }
          def.appendChild(tHelper);
          var tCanvasHelper = createTag("canvas").getContext("2d");
          tCanvasHelper.font = fontData.fWeight + " " + fontData.fStyle + " 100px " + fontData.fFamily;
          return tHelper;
        }
        function addFonts(fontData, defs) {
          if (!fontData) {
            this.isLoaded = true;
            return;
          }
          if (this.chars) {
            this.isLoaded = true;
            this.fonts = fontData.list;
            return;
          }
          var fontArr = fontData.list;
          var i2;
          var len = fontArr.length;
          var _pendingFonts = len;
          for (i2 = 0; i2 < len; i2 += 1) {
            var shouldLoadFont = true;
            var loadedSelector;
            var j2;
            fontArr[i2].loaded = false;
            fontArr[i2].monoCase = setUpNode(fontArr[i2].fFamily, "monospace");
            fontArr[i2].sansCase = setUpNode(fontArr[i2].fFamily, "sans-serif");
            if (!fontArr[i2].fPath) {
              fontArr[i2].loaded = true;
              _pendingFonts -= 1;
            } else if (fontArr[i2].fOrigin === "p" || fontArr[i2].origin === 3) {
              loadedSelector = document.querySelectorAll('style[f-forigin="p"][f-family="' + fontArr[i2].fFamily + '"], style[f-origin="3"][f-family="' + fontArr[i2].fFamily + '"]');
              if (loadedSelector.length > 0) {
                shouldLoadFont = false;
              }
              if (shouldLoadFont) {
                var s2 = createTag("style");
                s2.setAttribute("f-forigin", fontArr[i2].fOrigin);
                s2.setAttribute("f-origin", fontArr[i2].origin);
                s2.setAttribute("f-family", fontArr[i2].fFamily);
                s2.type = "text/css";
                s2.innerText = "@font-face {font-family: " + fontArr[i2].fFamily + "; font-style: normal; src: url('" + fontArr[i2].fPath + "');}";
                defs.appendChild(s2);
              }
            } else if (fontArr[i2].fOrigin === "g" || fontArr[i2].origin === 1) {
              loadedSelector = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');
              for (j2 = 0; j2 < loadedSelector.length; j2 += 1) {
                if (loadedSelector[j2].href.indexOf(fontArr[i2].fPath) !== -1) {
                  shouldLoadFont = false;
                }
              }
              if (shouldLoadFont) {
                var l2 = createTag("link");
                l2.setAttribute("f-forigin", fontArr[i2].fOrigin);
                l2.setAttribute("f-origin", fontArr[i2].origin);
                l2.type = "text/css";
                l2.rel = "stylesheet";
                l2.href = fontArr[i2].fPath;
                document.body.appendChild(l2);
              }
            } else if (fontArr[i2].fOrigin === "t" || fontArr[i2].origin === 2) {
              loadedSelector = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');
              for (j2 = 0; j2 < loadedSelector.length; j2 += 1) {
                if (fontArr[i2].fPath === loadedSelector[j2].src) {
                  shouldLoadFont = false;
                }
              }
              if (shouldLoadFont) {
                var sc = createTag("link");
                sc.setAttribute("f-forigin", fontArr[i2].fOrigin);
                sc.setAttribute("f-origin", fontArr[i2].origin);
                sc.setAttribute("rel", "stylesheet");
                sc.setAttribute("href", fontArr[i2].fPath);
                defs.appendChild(sc);
              }
            }
            fontArr[i2].helper = createHelper(defs, fontArr[i2]);
            fontArr[i2].cache = {};
            this.fonts.push(fontArr[i2]);
          }
          if (_pendingFonts === 0) {
            this.isLoaded = true;
          } else {
            setTimeout(this.checkLoadedFonts.bind(this), 100);
          }
        }
        function addChars(chars) {
          if (!chars) {
            return;
          }
          if (!this.chars) {
            this.chars = [];
          }
          var i2;
          var len = chars.length;
          var j2;
          var jLen = this.chars.length;
          var found;
          for (i2 = 0; i2 < len; i2 += 1) {
            j2 = 0;
            found = false;
            while (j2 < jLen) {
              if (this.chars[j2].style === chars[i2].style && this.chars[j2].fFamily === chars[i2].fFamily && this.chars[j2].ch === chars[i2].ch) {
                found = true;
              }
              j2 += 1;
            }
            if (!found) {
              this.chars.push(chars[i2]);
              jLen += 1;
            }
          }
        }
        function getCharData(char, style, font) {
          var i2 = 0;
          var len = this.chars.length;
          while (i2 < len) {
            if (this.chars[i2].ch === char && this.chars[i2].style === style && this.chars[i2].fFamily === font) {
              return this.chars[i2];
            }
            i2 += 1;
          }
          if ((typeof char === "string" && char.charCodeAt(0) !== 13 || !char) && console && console.warn && !this._warned) {
            this._warned = true;
            console.warn("Missing character from exported characters list: ", char, style, font);
          }
          return emptyChar;
        }
        function measureText(char, fontName, size) {
          var fontData = this.getFontByName(fontName);
          var index2 = char.charCodeAt(0);
          if (!fontData.cache[index2 + 1]) {
            var tHelper = fontData.helper;
            if (char === " ") {
              tHelper.textContent = "|" + char + "|";
              var doubleSize = tHelper.getComputedTextLength();
              tHelper.textContent = "||";
              var singleSize = tHelper.getComputedTextLength();
              fontData.cache[index2 + 1] = (doubleSize - singleSize) / 100;
            } else {
              tHelper.textContent = char;
              fontData.cache[index2 + 1] = tHelper.getComputedTextLength() / 100;
            }
          }
          return fontData.cache[index2 + 1] * size;
        }
        function getFontByName(name) {
          var i2 = 0;
          var len = this.fonts.length;
          while (i2 < len) {
            if (this.fonts[i2].fName === name) {
              return this.fonts[i2];
            }
            i2 += 1;
          }
          return this.fonts[0];
        }
        function isModifier(firstCharCode, secondCharCode) {
          var sum = firstCharCode.toString(16) + secondCharCode.toString(16);
          return surrogateModifiers.indexOf(sum) !== -1;
        }
        function isZeroWidthJoiner(firstCharCode, secondCharCode) {
          if (!secondCharCode) {
            return firstCharCode === zeroWidthJoiner[1];
          }
          return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];
        }
        function isCombinedCharacter(char) {
          return combinedCharacters.indexOf(char) !== -1;
        }
        function setIsLoaded() {
          this.isLoaded = true;
        }
        var Font = function () {
          this.fonts = [];
          this.chars = null;
          this.typekitLoaded = 0;
          this.isLoaded = false;
          this._warned = false;
          this.initTime = Date.now();
          this.setIsLoadedBinded = this.setIsLoaded.bind(this);
          this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);
        };
        Font.isModifier = isModifier;
        Font.isZeroWidthJoiner = isZeroWidthJoiner;
        Font.isCombinedCharacter = isCombinedCharacter;
        var fontPrototype = {
          addChars,
          addFonts,
          getCharData,
          getFontByName,
          measureText,
          checkLoadedFonts,
          setIsLoaded
        };
        Font.prototype = fontPrototype;
        return Font;
      }();
      var PropertyFactory = function () {
        var initFrame = initialDefaultFrame;
        var mathAbs = Math.abs;
        function interpolateValue(frameNum, caching) {
          var offsetTime = this.offsetTime;
          var newValue;
          if (this.propType === "multidimensional") {
            newValue = createTypedArray("float32", this.pv.length);
          }
          var iterationIndex = caching.lastIndex;
          var i2 = iterationIndex;
          var len = this.keyframes.length - 1;
          var flag = true;
          var keyData;
          var nextKeyData;
          while (flag) {
            keyData = this.keyframes[i2];
            nextKeyData = this.keyframes[i2 + 1];
            if (i2 === len - 1 && frameNum >= nextKeyData.t - offsetTime) {
              if (keyData.h) {
                keyData = nextKeyData;
              }
              iterationIndex = 0;
              break;
            }
            if (nextKeyData.t - offsetTime > frameNum) {
              iterationIndex = i2;
              break;
            }
            if (i2 < len - 1) {
              i2 += 1;
            } else {
              iterationIndex = 0;
              flag = false;
            }
          }
          var k2;
          var kLen;
          var perc;
          var jLen;
          var j2;
          var fnc;
          var nextKeyTime = nextKeyData.t - offsetTime;
          var keyTime = keyData.t - offsetTime;
          var endValue;
          if (keyData.to) {
            if (!keyData.bezierData) {
              keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);
            }
            var bezierData = keyData.bezierData;
            if (frameNum >= nextKeyTime || frameNum < keyTime) {
              var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;
              kLen = bezierData.points[ind].point.length;
              for (k2 = 0; k2 < kLen; k2 += 1) {
                newValue[k2] = bezierData.points[ind].point[k2];
              }
            } else {
              if (keyData.__fnct) {
                fnc = keyData.__fnct;
              } else {
                fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;
                keyData.__fnct = fnc;
              }
              perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
              var distanceInLine = bezierData.segmentLength * perc;
              var segmentPerc;
              var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i2 ? caching._lastAddedLength : 0;
              j2 = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i2 ? caching._lastPoint : 0;
              flag = true;
              jLen = bezierData.points.length;
              while (flag) {
                addedLength += bezierData.points[j2].partialLength;
                if (distanceInLine === 0 || perc === 0 || j2 === bezierData.points.length - 1) {
                  kLen = bezierData.points[j2].point.length;
                  for (k2 = 0; k2 < kLen; k2 += 1) {
                    newValue[k2] = bezierData.points[j2].point[k2];
                  }
                  break;
                } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j2 + 1].partialLength) {
                  segmentPerc = (distanceInLine - addedLength) / bezierData.points[j2 + 1].partialLength;
                  kLen = bezierData.points[j2].point.length;
                  for (k2 = 0; k2 < kLen; k2 += 1) {
                    newValue[k2] = bezierData.points[j2].point[k2] + (bezierData.points[j2 + 1].point[k2] - bezierData.points[j2].point[k2]) * segmentPerc;
                  }
                  break;
                }
                if (j2 < jLen - 1) {
                  j2 += 1;
                } else {
                  flag = false;
                }
              }
              caching._lastPoint = j2;
              caching._lastAddedLength = addedLength - bezierData.points[j2].partialLength;
              caching._lastKeyframeIndex = i2;
            }
          } else {
            var outX;
            var outY;
            var inX;
            var inY;
            var keyValue;
            len = keyData.s.length;
            endValue = nextKeyData.s || keyData.e;
            if (this.sh && keyData.h !== 1) {
              if (frameNum >= nextKeyTime) {
                newValue[0] = endValue[0];
                newValue[1] = endValue[1];
                newValue[2] = endValue[2];
              } else if (frameNum <= keyTime) {
                newValue[0] = keyData.s[0];
                newValue[1] = keyData.s[1];
                newValue[2] = keyData.s[2];
              } else {
                var quatStart = createQuaternion(keyData.s);
                var quatEnd = createQuaternion(endValue);
                var time2 = (frameNum - keyTime) / (nextKeyTime - keyTime);
                quaternionToEuler(newValue, slerp(quatStart, quatEnd, time2));
              }
            } else {
              for (i2 = 0; i2 < len; i2 += 1) {
                if (keyData.h !== 1) {
                  if (frameNum >= nextKeyTime) {
                    perc = 1;
                  } else if (frameNum < keyTime) {
                    perc = 0;
                  } else {
                    if (keyData.o.x.constructor === Array) {
                      if (!keyData.__fnct) {
                        keyData.__fnct = [];
                      }
                      if (!keyData.__fnct[i2]) {
                        outX = typeof keyData.o.x[i2] === "undefined" ? keyData.o.x[0] : keyData.o.x[i2];
                        outY = typeof keyData.o.y[i2] === "undefined" ? keyData.o.y[0] : keyData.o.y[i2];
                        inX = typeof keyData.i.x[i2] === "undefined" ? keyData.i.x[0] : keyData.i.x[i2];
                        inY = typeof keyData.i.y[i2] === "undefined" ? keyData.i.y[0] : keyData.i.y[i2];
                        fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                        keyData.__fnct[i2] = fnc;
                      } else {
                        fnc = keyData.__fnct[i2];
                      }
                    } else if (!keyData.__fnct) {
                      outX = keyData.o.x;
                      outY = keyData.o.y;
                      inX = keyData.i.x;
                      inY = keyData.i.y;
                      fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                      keyData.__fnct = fnc;
                    } else {
                      fnc = keyData.__fnct;
                    }
                    perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                  }
                }
                endValue = nextKeyData.s || keyData.e;
                keyValue = keyData.h === 1 ? keyData.s[i2] : keyData.s[i2] + (endValue[i2] - keyData.s[i2]) * perc;
                if (this.propType === "multidimensional") {
                  newValue[i2] = keyValue;
                } else {
                  newValue = keyValue;
                }
              }
            }
          }
          caching.lastIndex = iterationIndex;
          return newValue;
        }
        function slerp(a2, b2, t2) {
          var out = [];
          var ax = a2[0];
          var ay = a2[1];
          var az = a2[2];
          var aw = a2[3];
          var bx = b2[0];
          var by = b2[1];
          var bz = b2[2];
          var bw = b2[3];
          var omega;
          var cosom;
          var sinom;
          var scale0;
          var scale1;
          cosom = ax * bx + ay * by + az * bz + aw * bw;
          if (cosom < 0) {
            cosom = -cosom;
            bx = -bx;
            by = -by;
            bz = -bz;
            bw = -bw;
          }
          if (1 - cosom > 1e-6) {
            omega = Math.acos(cosom);
            sinom = Math.sin(omega);
            scale0 = Math.sin((1 - t2) * omega) / sinom;
            scale1 = Math.sin(t2 * omega) / sinom;
          } else {
            scale0 = 1 - t2;
            scale1 = t2;
          }
          out[0] = scale0 * ax + scale1 * bx;
          out[1] = scale0 * ay + scale1 * by;
          out[2] = scale0 * az + scale1 * bz;
          out[3] = scale0 * aw + scale1 * bw;
          return out;
        }
        function quaternionToEuler(out, quat) {
          var qx = quat[0];
          var qy = quat[1];
          var qz = quat[2];
          var qw = quat[3];
          var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);
          var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);
          var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);
          out[0] = heading / degToRads;
          out[1] = attitude / degToRads;
          out[2] = bank / degToRads;
        }
        function createQuaternion(values) {
          var heading = values[0] * degToRads;
          var attitude = values[1] * degToRads;
          var bank = values[2] * degToRads;
          var c1 = Math.cos(heading / 2);
          var c2 = Math.cos(attitude / 2);
          var c3 = Math.cos(bank / 2);
          var s1 = Math.sin(heading / 2);
          var s2 = Math.sin(attitude / 2);
          var s3 = Math.sin(bank / 2);
          var w2 = c1 * c2 * c3 - s1 * s2 * s3;
          var x2 = s1 * s2 * c3 + c1 * c2 * s3;
          var y2 = s1 * c2 * c3 + c1 * s2 * s3;
          var z2 = c1 * s2 * c3 - s1 * c2 * s3;
          return [x2, y2, z2, w2];
        }
        function getValueAtCurrentTime() {
          var frameNum = this.comp.renderedFrame - this.offsetTime;
          var initTime = this.keyframes[0].t - this.offsetTime;
          var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
          if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {
            if (this._caching.lastFrame >= frameNum) {
              this._caching._lastKeyframeIndex = -1;
              this._caching.lastIndex = 0;
            }
            var renderResult = this.interpolateValue(frameNum, this._caching);
            this.pv = renderResult;
          }
          this._caching.lastFrame = frameNum;
          return this.pv;
        }
        function setVValue(val2) {
          var multipliedValue;
          if (this.propType === "unidimensional") {
            multipliedValue = val2 * this.mult;
            if (mathAbs(this.v - multipliedValue) > 1e-5) {
              this.v = multipliedValue;
              this._mdf = true;
            }
          } else {
            var i2 = 0;
            var len = this.v.length;
            while (i2 < len) {
              multipliedValue = val2[i2] * this.mult;
              if (mathAbs(this.v[i2] - multipliedValue) > 1e-5) {
                this.v[i2] = multipliedValue;
                this._mdf = true;
              }
              i2 += 1;
            }
          }
        }
        function processEffectsSequence() {
          if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {
            return;
          }
          if (this.lock) {
            this.setVValue(this.pv);
            return;
          }
          this.lock = true;
          this._mdf = this._isFirstFrame;
          var i2;
          var len = this.effectsSequence.length;
          var finalValue = this.kf ? this.pv : this.data.k;
          for (i2 = 0; i2 < len; i2 += 1) {
            finalValue = this.effectsSequence[i2](finalValue);
          }
          this.setVValue(finalValue);
          this._isFirstFrame = false;
          this.lock = false;
          this.frameId = this.elem.globalData.frameId;
        }
        function addEffect(effectFunction) {
          this.effectsSequence.push(effectFunction);
          this.container.addDynamicProperty(this);
        }
        function ValueProperty(elem2, data2, mult, container) {
          this.propType = "unidimensional";
          this.mult = mult || 1;
          this.data = data2;
          this.v = mult ? data2.k * mult : data2.k;
          this.pv = data2.k;
          this._mdf = false;
          this.elem = elem2;
          this.container = container;
          this.comp = elem2.comp;
          this.k = false;
          this.kf = false;
          this.vel = 0;
          this.effectsSequence = [];
          this._isFirstFrame = true;
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.addEffect = addEffect;
        }
        function MultiDimensionalProperty(elem2, data2, mult, container) {
          this.propType = "multidimensional";
          this.mult = mult || 1;
          this.data = data2;
          this._mdf = false;
          this.elem = elem2;
          this.container = container;
          this.comp = elem2.comp;
          this.k = false;
          this.kf = false;
          this.frameId = -1;
          var i2;
          var len = data2.k.length;
          this.v = createTypedArray("float32", len);
          this.pv = createTypedArray("float32", len);
          this.vel = createTypedArray("float32", len);
          for (i2 = 0; i2 < len; i2 += 1) {
            this.v[i2] = data2.k[i2] * this.mult;
            this.pv[i2] = data2.k[i2];
          }
          this._isFirstFrame = true;
          this.effectsSequence = [];
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.addEffect = addEffect;
        }
        function KeyframedValueProperty(elem2, data2, mult, container) {
          this.propType = "unidimensional";
          this.keyframes = data2.k;
          this.offsetTime = elem2.data.st;
          this.frameId = -1;
          this._caching = {
            lastFrame: initFrame,
            lastIndex: 0,
            value: 0,
            _lastKeyframeIndex: -1
          };
          this.k = true;
          this.kf = true;
          this.data = data2;
          this.mult = mult || 1;
          this.elem = elem2;
          this.container = container;
          this.comp = elem2.comp;
          this.v = initFrame;
          this.pv = initFrame;
          this._isFirstFrame = true;
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.interpolateValue = interpolateValue;
          this.effectsSequence = [getValueAtCurrentTime.bind(this)];
          this.addEffect = addEffect;
        }
        function KeyframedMultidimensionalProperty(elem2, data2, mult, container) {
          this.propType = "multidimensional";
          var i2;
          var len = data2.k.length;
          var s2;
          var e2;
          var to2;
          var ti;
          for (i2 = 0; i2 < len - 1; i2 += 1) {
            if (data2.k[i2].to && data2.k[i2].s && data2.k[i2 + 1] && data2.k[i2 + 1].s) {
              s2 = data2.k[i2].s;
              e2 = data2.k[i2 + 1].s;
              to2 = data2.k[i2].to;
              ti = data2.k[i2].ti;
              if (s2.length === 2 && !(s2[0] === e2[0] && s2[1] === e2[1]) && bez.pointOnLine2D(s2[0], s2[1], e2[0], e2[1], s2[0] + to2[0], s2[1] + to2[1]) && bez.pointOnLine2D(s2[0], s2[1], e2[0], e2[1], e2[0] + ti[0], e2[1] + ti[1]) || s2.length === 3 && !(s2[0] === e2[0] && s2[1] === e2[1] && s2[2] === e2[2]) && bez.pointOnLine3D(s2[0], s2[1], s2[2], e2[0], e2[1], e2[2], s2[0] + to2[0], s2[1] + to2[1], s2[2] + to2[2]) && bez.pointOnLine3D(s2[0], s2[1], s2[2], e2[0], e2[1], e2[2], e2[0] + ti[0], e2[1] + ti[1], e2[2] + ti[2])) {
                data2.k[i2].to = null;
                data2.k[i2].ti = null;
              }
              if (s2[0] === e2[0] && s2[1] === e2[1] && to2[0] === 0 && to2[1] === 0 && ti[0] === 0 && ti[1] === 0) {
                if (s2.length === 2 || s2[2] === e2[2] && to2[2] === 0 && ti[2] === 0) {
                  data2.k[i2].to = null;
                  data2.k[i2].ti = null;
                }
              }
            }
          }
          this.effectsSequence = [getValueAtCurrentTime.bind(this)];
          this.data = data2;
          this.keyframes = data2.k;
          this.offsetTime = elem2.data.st;
          this.k = true;
          this.kf = true;
          this._isFirstFrame = true;
          this.mult = mult || 1;
          this.elem = elem2;
          this.container = container;
          this.comp = elem2.comp;
          this.getValue = processEffectsSequence;
          this.setVValue = setVValue;
          this.interpolateValue = interpolateValue;
          this.frameId = -1;
          var arrLen = data2.k[0].s.length;
          this.v = createTypedArray("float32", arrLen);
          this.pv = createTypedArray("float32", arrLen);
          for (i2 = 0; i2 < arrLen; i2 += 1) {
            this.v[i2] = initFrame;
            this.pv[i2] = initFrame;
          }
          this._caching = {
            lastFrame: initFrame,
            lastIndex: 0,
            value: createTypedArray("float32", arrLen)
          };
          this.addEffect = addEffect;
        }
        function getProp(elem2, data2, type, mult, container) {
          var p2;
          if (!data2.k.length) {
            p2 = new ValueProperty(elem2, data2, mult, container);
          } else if (typeof data2.k[0] === "number") {
            p2 = new MultiDimensionalProperty(elem2, data2, mult, container);
          } else {
            switch (type) {
              case 0:
                p2 = new KeyframedValueProperty(elem2, data2, mult, container);
                break;
              case 1:
                p2 = new KeyframedMultidimensionalProperty(elem2, data2, mult, container);
                break;
            }
          }
          if (p2.effectsSequence.length) {
            container.addDynamicProperty(p2);
          }
          return p2;
        }
        var ob2 = {
          getProp
        };
        return ob2;
      }();
      var TransformPropertyFactory = function () {
        var defaultVector = [0, 0];
        function applyToMatrix(mat) {
          var _mdf = this._mdf;
          this.iterateDynamicProperties();
          this._mdf = this._mdf || _mdf;
          if (this.a) {
            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
          }
          if (this.s) {
            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
          }
          if (this.sk) {
            mat.skewFromAxis(-this.sk.v, this.sa.v);
          }
          if (this.r) {
            mat.rotate(-this.r.v);
          } else {
            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
          }
          if (this.data.p.s) {
            if (this.data.p.z) {
              mat.translate(this.px.v, this.py.v, -this.pz.v);
            } else {
              mat.translate(this.px.v, this.py.v, 0);
            }
          } else {
            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
          }
        }
        function processKeys(forceRender) {
          if (this.elem.globalData.frameId === this.frameId) {
            return;
          }
          if (this._isDirty) {
            this.precalculateMatrix();
            this._isDirty = false;
          }
          this.iterateDynamicProperties();
          if (this._mdf || forceRender) {
            var frameRate;
            this.v.cloneFromProps(this.pre.props);
            if (this.appliedTransformations < 1) {
              this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            }
            if (this.appliedTransformations < 2) {
              this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            }
            if (this.sk && this.appliedTransformations < 3) {
              this.v.skewFromAxis(-this.sk.v, this.sa.v);
            }
            if (this.r && this.appliedTransformations < 4) {
              this.v.rotate(-this.r.v);
            } else if (!this.r && this.appliedTransformations < 4) {
              this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            }
            if (this.autoOriented) {
              var v1;
              var v2;
              frameRate = this.elem.globalData.frameRate;
              if (this.p && this.p.keyframes && this.p.getValueAtTime) {
                if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {
                  v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);
                  v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);
                } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {
                  v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);
                  v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);
                } else {
                  v1 = this.p.pv;
                  v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);
                }
              } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                v1 = [];
                v2 = [];
                var px = this.px;
                var py = this.py;
                if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {
                  v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);
                  v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);
                  v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);
                  v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);
                } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {
                  v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);
                  v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);
                  v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);
                  v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);
                } else {
                  v1 = [px.pv, py.pv];
                  v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);
                  v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);
                }
              } else {
                v2 = defaultVector;
                v1 = v2;
              }
              this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
            }
            if (this.data.p && this.data.p.s) {
              if (this.data.p.z) {
                this.v.translate(this.px.v, this.py.v, -this.pz.v);
              } else {
                this.v.translate(this.px.v, this.py.v, 0);
              }
            } else {
              this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
            }
          }
          this.frameId = this.elem.globalData.frameId;
        }
        function precalculateMatrix() {
          if (!this.a.k) {
            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
            this.appliedTransformations = 1;
          } else {
            return;
          }
          if (!this.s.effectsSequence.length) {
            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
            this.appliedTransformations = 2;
          } else {
            return;
          }
          if (this.sk) {
            if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {
              this.pre.skewFromAxis(-this.sk.v, this.sa.v);
              this.appliedTransformations = 3;
            } else {
              return;
            }
          }
          if (this.r) {
            if (!this.r.effectsSequence.length) {
              this.pre.rotate(-this.r.v);
              this.appliedTransformations = 4;
            }
          } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {
            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
            this.appliedTransformations = 4;
          }
        }
        function autoOrient() {}
        function addDynamicProperty(prop) {
          this._addDynamicProperty(prop);
          this.elem.addDynamicProperty(prop);
          this._isDirty = true;
        }
        function TransformProperty(elem2, data2, container) {
          this.elem = elem2;
          this.frameId = -1;
          this.propType = "transform";
          this.data = data2;
          this.v = new Matrix();
          this.pre = new Matrix();
          this.appliedTransformations = 0;
          this.initDynamicPropertyContainer(container || elem2);
          if (data2.p && data2.p.s) {
            this.px = PropertyFactory.getProp(elem2, data2.p.x, 0, 0, this);
            this.py = PropertyFactory.getProp(elem2, data2.p.y, 0, 0, this);
            if (data2.p.z) {
              this.pz = PropertyFactory.getProp(elem2, data2.p.z, 0, 0, this);
            }
          } else {
            this.p = PropertyFactory.getProp(elem2, data2.p || {
              k: [0, 0, 0]
            }, 1, 0, this);
          }
          if (data2.rx) {
            this.rx = PropertyFactory.getProp(elem2, data2.rx, 0, degToRads, this);
            this.ry = PropertyFactory.getProp(elem2, data2.ry, 0, degToRads, this);
            this.rz = PropertyFactory.getProp(elem2, data2.rz, 0, degToRads, this);
            if (data2.or.k[0].ti) {
              var i2;
              var len = data2.or.k.length;
              for (i2 = 0; i2 < len; i2 += 1) {
                data2.or.k[i2].to = null;
                data2.or.k[i2].ti = null;
              }
            }
            this.or = PropertyFactory.getProp(elem2, data2.or, 1, degToRads, this);
            this.or.sh = true;
          } else {
            this.r = PropertyFactory.getProp(elem2, data2.r || {
              k: 0
            }, 0, degToRads, this);
          }
          if (data2.sk) {
            this.sk = PropertyFactory.getProp(elem2, data2.sk, 0, degToRads, this);
            this.sa = PropertyFactory.getProp(elem2, data2.sa, 0, degToRads, this);
          }
          this.a = PropertyFactory.getProp(elem2, data2.a || {
            k: [0, 0, 0]
          }, 1, 0, this);
          this.s = PropertyFactory.getProp(elem2, data2.s || {
            k: [100, 100, 100]
          }, 1, 0.01, this);
          if (data2.o) {
            this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, elem2);
          } else {
            this.o = {
              _mdf: false,
              v: 1
            };
          }
          this._isDirty = true;
          if (!this.dynamicProperties.length) {
            this.getValue(true);
          }
        }
        TransformProperty.prototype = {
          applyToMatrix,
          getValue: processKeys,
          precalculateMatrix,
          autoOrient
        };
        extendPrototype([DynamicPropertyContainer], TransformProperty);
        TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
        TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;
        function getTransformProperty(elem2, data2, container) {
          return new TransformProperty(elem2, data2, container);
        }
        return {
          getTransformProperty
        };
      }();
      function ShapePath() {
        this.c = false;
        this._length = 0;
        this._maxLength = 8;
        this.v = createSizedArray(this._maxLength);
        this.o = createSizedArray(this._maxLength);
        this.i = createSizedArray(this._maxLength);
      }
      ShapePath.prototype.setPathData = function (closed, len) {
        this.c = closed;
        this.setLength(len);
        var i2 = 0;
        while (i2 < len) {
          this.v[i2] = pointPool.newElement();
          this.o[i2] = pointPool.newElement();
          this.i[i2] = pointPool.newElement();
          i2 += 1;
        }
      };
      ShapePath.prototype.setLength = function (len) {
        while (this._maxLength < len) {
          this.doubleArrayLength();
        }
        this._length = len;
      };
      ShapePath.prototype.doubleArrayLength = function () {
        this.v = this.v.concat(createSizedArray(this._maxLength));
        this.i = this.i.concat(createSizedArray(this._maxLength));
        this.o = this.o.concat(createSizedArray(this._maxLength));
        this._maxLength *= 2;
      };
      ShapePath.prototype.setXYAt = function (x2, y2, type, pos, replace2) {
        var arr2;
        this._length = Math.max(this._length, pos + 1);
        if (this._length >= this._maxLength) {
          this.doubleArrayLength();
        }
        switch (type) {
          case "v":
            arr2 = this.v;
            break;
          case "i":
            arr2 = this.i;
            break;
          case "o":
            arr2 = this.o;
            break;
          default:
            arr2 = [];
            break;
        }
        if (!arr2[pos] || arr2[pos] && !replace2) {
          arr2[pos] = pointPool.newElement();
        }
        arr2[pos][0] = x2;
        arr2[pos][1] = y2;
      };
      ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace2) {
        this.setXYAt(vX, vY, "v", pos, replace2);
        this.setXYAt(oX, oY, "o", pos, replace2);
        this.setXYAt(iX, iY, "i", pos, replace2);
      };
      ShapePath.prototype.reverse = function () {
        var newPath = new ShapePath();
        newPath.setPathData(this.c, this._length);
        var vertices = this.v;
        var outPoints = this.o;
        var inPoints = this.i;
        var init = 0;
        if (this.c) {
          newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);
          init = 1;
        }
        var cnt = this._length - 1;
        var len = this._length;
        var i2;
        for (i2 = init; i2 < len; i2 += 1) {
          newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i2, false);
          cnt -= 1;
        }
        return newPath;
      };
      var ShapePropertyFactory = function () {
        var initFrame = -999999;
        function interpolateShape(frameNum, previousValue, caching) {
          var iterationIndex = caching.lastIndex;
          var keyPropS;
          var keyPropE;
          var isHold;
          var j2;
          var k2;
          var jLen;
          var kLen;
          var perc;
          var vertexValue;
          var kf = this.keyframes;
          if (frameNum < kf[0].t - this.offsetTime) {
            keyPropS = kf[0].s[0];
            isHold = true;
            iterationIndex = 0;
          } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {
            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];
            isHold = true;
          } else {
            var i2 = iterationIndex;
            var len = kf.length - 1;
            var flag = true;
            var keyData;
            var nextKeyData;
            while (flag) {
              keyData = kf[i2];
              nextKeyData = kf[i2 + 1];
              if (nextKeyData.t - this.offsetTime > frameNum) {
                break;
              }
              if (i2 < len - 1) {
                i2 += 1;
              } else {
                flag = false;
              }
            }
            isHold = keyData.h === 1;
            iterationIndex = i2;
            if (!isHold) {
              if (frameNum >= nextKeyData.t - this.offsetTime) {
                perc = 1;
              } else if (frameNum < keyData.t - this.offsetTime) {
                perc = 0;
              } else {
                var fnc;
                if (keyData.__fnct) {
                  fnc = keyData.__fnct;
                } else {
                  fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;
                  keyData.__fnct = fnc;
                }
                perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));
              }
              keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
            }
            keyPropS = keyData.s[0];
          }
          jLen = previousValue._length;
          kLen = keyPropS.i[0].length;
          caching.lastIndex = iterationIndex;
          for (j2 = 0; j2 < jLen; j2 += 1) {
            for (k2 = 0; k2 < kLen; k2 += 1) {
              vertexValue = isHold ? keyPropS.i[j2][k2] : keyPropS.i[j2][k2] + (keyPropE.i[j2][k2] - keyPropS.i[j2][k2]) * perc;
              previousValue.i[j2][k2] = vertexValue;
              vertexValue = isHold ? keyPropS.o[j2][k2] : keyPropS.o[j2][k2] + (keyPropE.o[j2][k2] - keyPropS.o[j2][k2]) * perc;
              previousValue.o[j2][k2] = vertexValue;
              vertexValue = isHold ? keyPropS.v[j2][k2] : keyPropS.v[j2][k2] + (keyPropE.v[j2][k2] - keyPropS.v[j2][k2]) * perc;
              previousValue.v[j2][k2] = vertexValue;
            }
          }
        }
        function interpolateShapeCurrentTime() {
          var frameNum = this.comp.renderedFrame - this.offsetTime;
          var initTime = this.keyframes[0].t - this.offsetTime;
          var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
          var lastFrame = this._caching.lastFrame;
          if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {
            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;
            this.interpolateShape(frameNum, this.pv, this._caching);
          }
          this._caching.lastFrame = frameNum;
          return this.pv;
        }
        function resetShape() {
          this.paths = this.localShapeCollection;
        }
        function shapesEqual(shape1, shape2) {
          if (shape1._length !== shape2._length || shape1.c !== shape2.c) {
            return false;
          }
          var i2;
          var len = shape1._length;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (shape1.v[i2][0] !== shape2.v[i2][0] || shape1.v[i2][1] !== shape2.v[i2][1] || shape1.o[i2][0] !== shape2.o[i2][0] || shape1.o[i2][1] !== shape2.o[i2][1] || shape1.i[i2][0] !== shape2.i[i2][0] || shape1.i[i2][1] !== shape2.i[i2][1]) {
              return false;
            }
          }
          return true;
        }
        function setVValue(newPath) {
          if (!shapesEqual(this.v, newPath)) {
            this.v = shapePool.clone(newPath);
            this.localShapeCollection.releaseShapes();
            this.localShapeCollection.addShape(this.v);
            this._mdf = true;
            this.paths = this.localShapeCollection;
          }
        }
        function processEffectsSequence() {
          if (this.elem.globalData.frameId === this.frameId) {
            return;
          }
          if (!this.effectsSequence.length) {
            this._mdf = false;
            return;
          }
          if (this.lock) {
            this.setVValue(this.pv);
            return;
          }
          this.lock = true;
          this._mdf = false;
          var finalValue;
          if (this.kf) {
            finalValue = this.pv;
          } else if (this.data.ks) {
            finalValue = this.data.ks.k;
          } else {
            finalValue = this.data.pt.k;
          }
          var i2;
          var len = this.effectsSequence.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            finalValue = this.effectsSequence[i2](finalValue);
          }
          this.setVValue(finalValue);
          this.lock = false;
          this.frameId = this.elem.globalData.frameId;
        }
        function ShapeProperty(elem2, data2, type) {
          this.propType = "shape";
          this.comp = elem2.comp;
          this.container = elem2;
          this.elem = elem2;
          this.data = data2;
          this.k = false;
          this.kf = false;
          this._mdf = false;
          var pathData = type === 3 ? data2.pt.k : data2.ks.k;
          this.v = shapePool.clone(pathData);
          this.pv = shapePool.clone(this.v);
          this.localShapeCollection = shapeCollectionPool.newShapeCollection();
          this.paths = this.localShapeCollection;
          this.paths.addShape(this.v);
          this.reset = resetShape;
          this.effectsSequence = [];
        }
        function addEffect(effectFunction) {
          this.effectsSequence.push(effectFunction);
          this.container.addDynamicProperty(this);
        }
        ShapeProperty.prototype.interpolateShape = interpolateShape;
        ShapeProperty.prototype.getValue = processEffectsSequence;
        ShapeProperty.prototype.setVValue = setVValue;
        ShapeProperty.prototype.addEffect = addEffect;
        function KeyframedShapeProperty(elem2, data2, type) {
          this.propType = "shape";
          this.comp = elem2.comp;
          this.elem = elem2;
          this.container = elem2;
          this.offsetTime = elem2.data.st;
          this.keyframes = type === 3 ? data2.pt.k : data2.ks.k;
          this.k = true;
          this.kf = true;
          var len = this.keyframes[0].s[0].i.length;
          this.v = shapePool.newElement();
          this.v.setPathData(this.keyframes[0].s[0].c, len);
          this.pv = shapePool.clone(this.v);
          this.localShapeCollection = shapeCollectionPool.newShapeCollection();
          this.paths = this.localShapeCollection;
          this.paths.addShape(this.v);
          this.lastFrame = initFrame;
          this.reset = resetShape;
          this._caching = {
            lastFrame: initFrame,
            lastIndex: 0
          };
          this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
        }
        KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
        KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
        KeyframedShapeProperty.prototype.setVValue = setVValue;
        KeyframedShapeProperty.prototype.addEffect = addEffect;
        var EllShapeProperty = function () {
          var cPoint = roundCorner;
          function EllShapePropertyFactory(elem2, data2) {
            this.v = shapePool.newElement();
            this.v.setPathData(true, 4);
            this.localShapeCollection = shapeCollectionPool.newShapeCollection();
            this.paths = this.localShapeCollection;
            this.localShapeCollection.addShape(this.v);
            this.d = data2.d;
            this.elem = elem2;
            this.comp = elem2.comp;
            this.frameId = -1;
            this.initDynamicPropertyContainer(elem2);
            this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);
            this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);
            if (this.dynamicProperties.length) {
              this.k = true;
            } else {
              this.k = false;
              this.convertEllToPath();
            }
          }
          EllShapePropertyFactory.prototype = {
            reset: resetShape,
            getValue: function () {
              if (this.elem.globalData.frameId === this.frameId) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
              if (this._mdf) {
                this.convertEllToPath();
              }
            },
            convertEllToPath: function () {
              var p0 = this.p.v[0];
              var p1 = this.p.v[1];
              var s0 = this.s.v[0] / 2;
              var s1 = this.s.v[1] / 2;
              var _cw = this.d !== 3;
              var _v = this.v;
              _v.v[0][0] = p0;
              _v.v[0][1] = p1 - s1;
              _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
              _v.v[1][1] = p1;
              _v.v[2][0] = p0;
              _v.v[2][1] = p1 + s1;
              _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
              _v.v[3][1] = p1;
              _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
              _v.i[0][1] = p1 - s1;
              _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
              _v.i[1][1] = p1 - s1 * cPoint;
              _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
              _v.i[2][1] = p1 + s1;
              _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
              _v.i[3][1] = p1 + s1 * cPoint;
              _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
              _v.o[0][1] = p1 - s1;
              _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
              _v.o[1][1] = p1 + s1 * cPoint;
              _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
              _v.o[2][1] = p1 + s1;
              _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
              _v.o[3][1] = p1 - s1 * cPoint;
            }
          };
          extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);
          return EllShapePropertyFactory;
        }();
        var StarShapeProperty = function () {
          function StarShapePropertyFactory(elem2, data2) {
            this.v = shapePool.newElement();
            this.v.setPathData(true, 0);
            this.elem = elem2;
            this.comp = elem2.comp;
            this.data = data2;
            this.frameId = -1;
            this.d = data2.d;
            this.initDynamicPropertyContainer(elem2);
            if (data2.sy === 1) {
              this.ir = PropertyFactory.getProp(elem2, data2.ir, 0, 0, this);
              this.is = PropertyFactory.getProp(elem2, data2.is, 0, 0.01, this);
              this.convertToPath = this.convertStarToPath;
            } else {
              this.convertToPath = this.convertPolygonToPath;
            }
            this.pt = PropertyFactory.getProp(elem2, data2.pt, 0, 0, this);
            this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);
            this.r = PropertyFactory.getProp(elem2, data2.r, 0, degToRads, this);
            this.or = PropertyFactory.getProp(elem2, data2.or, 0, 0, this);
            this.os = PropertyFactory.getProp(elem2, data2.os, 0, 0.01, this);
            this.localShapeCollection = shapeCollectionPool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            if (this.dynamicProperties.length) {
              this.k = true;
            } else {
              this.k = false;
              this.convertToPath();
            }
          }
          StarShapePropertyFactory.prototype = {
            reset: resetShape,
            getValue: function () {
              if (this.elem.globalData.frameId === this.frameId) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
              if (this._mdf) {
                this.convertToPath();
              }
            },
            convertStarToPath: function () {
              var numPts = Math.floor(this.pt.v) * 2;
              var angle = Math.PI * 2 / numPts;
              var longFlag = true;
              var longRad = this.or.v;
              var shortRad = this.ir.v;
              var longRound = this.os.v;
              var shortRound = this.is.v;
              var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);
              var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);
              var i2;
              var rad;
              var roundness;
              var perimSegment;
              var currentAng = -Math.PI / 2;
              currentAng += this.r.v;
              var dir = this.data.d === 3 ? -1 : 1;
              this.v._length = 0;
              for (i2 = 0; i2 < numPts; i2 += 1) {
                rad = longFlag ? longRad : shortRad;
                roundness = longFlag ? longRound : shortRound;
                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;
                var x2 = rad * Math.cos(currentAng);
                var y2 = rad * Math.sin(currentAng);
                var ox = x2 === 0 && y2 === 0 ? 0 : y2 / Math.sqrt(x2 * x2 + y2 * y2);
                var oy = x2 === 0 && y2 === 0 ? 0 : -x2 / Math.sqrt(x2 * x2 + y2 * y2);
                x2 += +this.p.v[0];
                y2 += +this.p.v[1];
                this.v.setTripleAt(x2, y2, x2 - ox * perimSegment * roundness * dir, y2 - oy * perimSegment * roundness * dir, x2 + ox * perimSegment * roundness * dir, y2 + oy * perimSegment * roundness * dir, i2, true);
                longFlag = !longFlag;
                currentAng += angle * dir;
              }
            },
            convertPolygonToPath: function () {
              var numPts = Math.floor(this.pt.v);
              var angle = Math.PI * 2 / numPts;
              var rad = this.or.v;
              var roundness = this.os.v;
              var perimSegment = 2 * Math.PI * rad / (numPts * 4);
              var i2;
              var currentAng = -Math.PI * 0.5;
              var dir = this.data.d === 3 ? -1 : 1;
              currentAng += this.r.v;
              this.v._length = 0;
              for (i2 = 0; i2 < numPts; i2 += 1) {
                var x2 = rad * Math.cos(currentAng);
                var y2 = rad * Math.sin(currentAng);
                var ox = x2 === 0 && y2 === 0 ? 0 : y2 / Math.sqrt(x2 * x2 + y2 * y2);
                var oy = x2 === 0 && y2 === 0 ? 0 : -x2 / Math.sqrt(x2 * x2 + y2 * y2);
                x2 += +this.p.v[0];
                y2 += +this.p.v[1];
                this.v.setTripleAt(x2, y2, x2 - ox * perimSegment * roundness * dir, y2 - oy * perimSegment * roundness * dir, x2 + ox * perimSegment * roundness * dir, y2 + oy * perimSegment * roundness * dir, i2, true);
                currentAng += angle * dir;
              }
              this.paths.length = 0;
              this.paths[0] = this.v;
            }
          };
          extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);
          return StarShapePropertyFactory;
        }();
        var RectShapeProperty = function () {
          function RectShapePropertyFactory(elem2, data2) {
            this.v = shapePool.newElement();
            this.v.c = true;
            this.localShapeCollection = shapeCollectionPool.newShapeCollection();
            this.localShapeCollection.addShape(this.v);
            this.paths = this.localShapeCollection;
            this.elem = elem2;
            this.comp = elem2.comp;
            this.frameId = -1;
            this.d = data2.d;
            this.initDynamicPropertyContainer(elem2);
            this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);
            this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);
            this.r = PropertyFactory.getProp(elem2, data2.r, 0, 0, this);
            if (this.dynamicProperties.length) {
              this.k = true;
            } else {
              this.k = false;
              this.convertRectToPath();
            }
          }
          RectShapePropertyFactory.prototype = {
            convertRectToPath: function () {
              var p0 = this.p.v[0];
              var p1 = this.p.v[1];
              var v0 = this.s.v[0] / 2;
              var v1 = this.s.v[1] / 2;
              var round = bmMin(v0, v1, this.r.v);
              var cPoint = round * (1 - roundCorner);
              this.v._length = 0;
              if (this.d === 2 || this.d === 1) {
                this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);
                this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);
                if (round !== 0) {
                  this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);
                  this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);
                  this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);
                  this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);
                } else {
                  this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);
                  this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);
                }
              } else {
                this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);
                if (round !== 0) {
                  this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);
                  this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);
                  this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);
                  this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);
                  this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);
                  this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);
                } else {
                  this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);
                  this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);
                  this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);
                }
              }
            },
            getValue: function () {
              if (this.elem.globalData.frameId === this.frameId) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
              if (this._mdf) {
                this.convertRectToPath();
              }
            },
            reset: resetShape
          };
          extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);
          return RectShapePropertyFactory;
        }();
        function getShapeProp(elem2, data2, type) {
          var prop;
          if (type === 3 || type === 4) {
            var dataProp = type === 3 ? data2.pt : data2.ks;
            var keys2 = dataProp.k;
            if (keys2.length) {
              prop = new KeyframedShapeProperty(elem2, data2, type);
            } else {
              prop = new ShapeProperty(elem2, data2, type);
            }
          } else if (type === 5) {
            prop = new RectShapeProperty(elem2, data2);
          } else if (type === 6) {
            prop = new EllShapeProperty(elem2, data2);
          } else if (type === 7) {
            prop = new StarShapeProperty(elem2, data2);
          }
          if (prop.k) {
            elem2.addDynamicProperty(prop);
          }
          return prop;
        }
        function getConstructorFunction() {
          return ShapeProperty;
        }
        function getKeyframedConstructorFunction() {
          return KeyframedShapeProperty;
        }
        var ob2 = {};
        ob2.getShapeProp = getShapeProp;
        ob2.getConstructorFunction = getConstructorFunction;
        ob2.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
        return ob2;
      }();
      var ShapeModifiers = function () {
        var ob2 = {};
        var modifiers = {};
        ob2.registerModifier = registerModifier;
        ob2.getModifier = getModifier;
        function registerModifier(nm, factory) {
          if (!modifiers[nm]) {
            modifiers[nm] = factory;
          }
        }
        function getModifier(nm, elem2, data2) {
          return new modifiers[nm](elem2, data2);
        }
        return ob2;
      }();
      function ShapeModifier() {}
      ShapeModifier.prototype.initModifierProperties = function () {};
      ShapeModifier.prototype.addShapeToModifier = function () {};
      ShapeModifier.prototype.addShape = function (data2) {
        if (!this.closed) {
          data2.sh.container.addDynamicProperty(data2.sh);
          var shapeData = {
            shape: data2.sh,
            data: data2,
            localShapeCollection: shapeCollectionPool.newShapeCollection()
          };
          this.shapes.push(shapeData);
          this.addShapeToModifier(shapeData);
          if (this._isAnimated) {
            data2.setAsAnimated();
          }
        }
      };
      ShapeModifier.prototype.init = function (elem2, data2) {
        this.shapes = [];
        this.elem = elem2;
        this.initDynamicPropertyContainer(elem2);
        this.initModifierProperties(elem2, data2);
        this.frameId = initialDefaultFrame;
        this.closed = false;
        this.k = false;
        if (this.dynamicProperties.length) {
          this.k = true;
        } else {
          this.getValue(true);
        }
      };
      ShapeModifier.prototype.processKeys = function () {
        if (this.elem.globalData.frameId === this.frameId) {
          return;
        }
        this.frameId = this.elem.globalData.frameId;
        this.iterateDynamicProperties();
      };
      extendPrototype([DynamicPropertyContainer], ShapeModifier);
      function TrimModifier() {}
      extendPrototype([ShapeModifier], TrimModifier);
      TrimModifier.prototype.initModifierProperties = function (elem2, data2) {
        this.s = PropertyFactory.getProp(elem2, data2.s, 0, 0.01, this);
        this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0.01, this);
        this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0, this);
        this.sValue = 0;
        this.eValue = 0;
        this.getValue = this.processKeys;
        this.m = data2.m;
        this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
      };
      TrimModifier.prototype.addShapeToModifier = function (shapeData) {
        shapeData.pathsData = [];
      };
      TrimModifier.prototype.calculateShapeEdges = function (s2, e2, shapeLength, addedLength, totalModifierLength) {
        var segments = [];
        if (e2 <= 1) {
          segments.push({
            s: s2,
            e: e2
          });
        } else if (s2 >= 1) {
          segments.push({
            s: s2 - 1,
            e: e2 - 1
          });
        } else {
          segments.push({
            s: s2,
            e: 1
          });
          segments.push({
            s: 0,
            e: e2 - 1
          });
        }
        var shapeSegments = [];
        var i2;
        var len = segments.length;
        var segmentOb;
        for (i2 = 0; i2 < len; i2 += 1) {
          segmentOb = segments[i2];
          if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {
            var shapeS;
            var shapeE;
            if (segmentOb.s * totalModifierLength <= addedLength) {
              shapeS = 0;
            } else {
              shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;
            }
            if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {
              shapeE = 1;
            } else {
              shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;
            }
            shapeSegments.push([shapeS, shapeE]);
          }
        }
        if (!shapeSegments.length) {
          shapeSegments.push([0, 0]);
        }
        return shapeSegments;
      };
      TrimModifier.prototype.releasePathsData = function (pathsData) {
        var i2;
        var len = pathsData.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          segmentsLengthPool.release(pathsData[i2]);
        }
        pathsData.length = 0;
        return pathsData;
      };
      TrimModifier.prototype.processShapes = function (_isFirstFrame) {
        var s2;
        var e2;
        if (this._mdf || _isFirstFrame) {
          var o2 = this.o.v % 360 / 360;
          if (o2 < 0) {
            o2 += 1;
          }
          if (this.s.v > 1) {
            s2 = 1 + o2;
          } else if (this.s.v < 0) {
            s2 = 0 + o2;
          } else {
            s2 = this.s.v + o2;
          }
          if (this.e.v > 1) {
            e2 = 1 + o2;
          } else if (this.e.v < 0) {
            e2 = 0 + o2;
          } else {
            e2 = this.e.v + o2;
          }
          if (s2 > e2) {
            var _s = s2;
            s2 = e2;
            e2 = _s;
          }
          s2 = Math.round(s2 * 1e4) * 1e-4;
          e2 = Math.round(e2 * 1e4) * 1e-4;
          this.sValue = s2;
          this.eValue = e2;
        } else {
          s2 = this.sValue;
          e2 = this.eValue;
        }
        var shapePaths;
        var i2;
        var len = this.shapes.length;
        var j2;
        var jLen;
        var pathsData;
        var pathData;
        var totalShapeLength;
        var totalModifierLength = 0;
        if (e2 === s2) {
          for (i2 = 0; i2 < len; i2 += 1) {
            this.shapes[i2].localShapeCollection.releaseShapes();
            this.shapes[i2].shape._mdf = true;
            this.shapes[i2].shape.paths = this.shapes[i2].localShapeCollection;
            if (this._mdf) {
              this.shapes[i2].pathsData.length = 0;
            }
          }
        } else if (!(e2 === 1 && s2 === 0 || e2 === 0 && s2 === 1)) {
          var segments = [];
          var shapeData;
          var localShapeCollection;
          for (i2 = 0; i2 < len; i2 += 1) {
            shapeData = this.shapes[i2];
            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {
              shapeData.shape.paths = shapeData.localShapeCollection;
            } else {
              shapePaths = shapeData.shape.paths;
              jLen = shapePaths._length;
              totalShapeLength = 0;
              if (!shapeData.shape._mdf && shapeData.pathsData.length) {
                totalShapeLength = shapeData.totalShapeLength;
              } else {
                pathsData = this.releasePathsData(shapeData.pathsData);
                for (j2 = 0; j2 < jLen; j2 += 1) {
                  pathData = bez.getSegmentsLength(shapePaths.shapes[j2]);
                  pathsData.push(pathData);
                  totalShapeLength += pathData.totalLength;
                }
                shapeData.totalShapeLength = totalShapeLength;
                shapeData.pathsData = pathsData;
              }
              totalModifierLength += totalShapeLength;
              shapeData.shape._mdf = true;
            }
          }
          var shapeS = s2;
          var shapeE = e2;
          var addedLength = 0;
          var edges;
          for (i2 = len - 1; i2 >= 0; i2 -= 1) {
            shapeData = this.shapes[i2];
            if (shapeData.shape._mdf) {
              localShapeCollection = shapeData.localShapeCollection;
              localShapeCollection.releaseShapes();
              if (this.m === 2 && len > 1) {
                edges = this.calculateShapeEdges(s2, e2, shapeData.totalShapeLength, addedLength, totalModifierLength);
                addedLength += shapeData.totalShapeLength;
              } else {
                edges = [[shapeS, shapeE]];
              }
              jLen = edges.length;
              for (j2 = 0; j2 < jLen; j2 += 1) {
                shapeS = edges[j2][0];
                shapeE = edges[j2][1];
                segments.length = 0;
                if (shapeE <= 1) {
                  segments.push({
                    s: shapeData.totalShapeLength * shapeS,
                    e: shapeData.totalShapeLength * shapeE
                  });
                } else if (shapeS >= 1) {
                  segments.push({
                    s: shapeData.totalShapeLength * (shapeS - 1),
                    e: shapeData.totalShapeLength * (shapeE - 1)
                  });
                } else {
                  segments.push({
                    s: shapeData.totalShapeLength * shapeS,
                    e: shapeData.totalShapeLength
                  });
                  segments.push({
                    s: 0,
                    e: shapeData.totalShapeLength * (shapeE - 1)
                  });
                }
                var newShapesData = this.addShapes(shapeData, segments[0]);
                if (segments[0].s !== segments[0].e) {
                  if (segments.length > 1) {
                    var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];
                    if (lastShapeInCollection.c) {
                      var lastShape = newShapesData.pop();
                      this.addPaths(newShapesData, localShapeCollection);
                      newShapesData = this.addShapes(shapeData, segments[1], lastShape);
                    } else {
                      this.addPaths(newShapesData, localShapeCollection);
                      newShapesData = this.addShapes(shapeData, segments[1]);
                    }
                  }
                  this.addPaths(newShapesData, localShapeCollection);
                }
              }
              shapeData.shape.paths = localShapeCollection;
            }
          }
        } else if (this._mdf) {
          for (i2 = 0; i2 < len; i2 += 1) {
            this.shapes[i2].pathsData.length = 0;
            this.shapes[i2].shape._mdf = true;
          }
        }
      };
      TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {
        var i2;
        var len = newPaths.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          localShapeCollection.addShape(newPaths[i2]);
        }
      };
      TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {
        shapePath.setXYAt(pt2[0], pt2[1], "o", pos);
        shapePath.setXYAt(pt3[0], pt3[1], "i", pos + 1);
        if (newShape) {
          shapePath.setXYAt(pt1[0], pt1[1], "v", pos);
        }
        shapePath.setXYAt(pt4[0], pt4[1], "v", pos + 1);
      };
      TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {
        shapePath.setXYAt(points[1], points[5], "o", pos);
        shapePath.setXYAt(points[2], points[6], "i", pos + 1);
        if (newShape) {
          shapePath.setXYAt(points[0], points[4], "v", pos);
        }
        shapePath.setXYAt(points[3], points[7], "v", pos + 1);
      };
      TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {
        var pathsData = shapeData.pathsData;
        var shapePaths = shapeData.shape.paths.shapes;
        var i2;
        var len = shapeData.shape.paths._length;
        var j2;
        var jLen;
        var addedLength = 0;
        var currentLengthData;
        var segmentCount;
        var lengths;
        var segment;
        var shapes = [];
        var initPos;
        var newShape = true;
        if (!shapePath) {
          shapePath = shapePool.newElement();
          segmentCount = 0;
          initPos = 0;
        } else {
          segmentCount = shapePath._length;
          initPos = shapePath._length;
        }
        shapes.push(shapePath);
        for (i2 = 0; i2 < len; i2 += 1) {
          lengths = pathsData[i2].lengths;
          shapePath.c = shapePaths[i2].c;
          jLen = shapePaths[i2].c ? lengths.length : lengths.length + 1;
          for (j2 = 1; j2 < jLen; j2 += 1) {
            currentLengthData = lengths[j2 - 1];
            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {
              addedLength += currentLengthData.addedLength;
              shapePath.c = false;
            } else if (addedLength > shapeSegment.e) {
              shapePath.c = false;
              break;
            } else {
              if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {
                this.addSegment(shapePaths[i2].v[j2 - 1], shapePaths[i2].o[j2 - 1], shapePaths[i2].i[j2], shapePaths[i2].v[j2], shapePath, segmentCount, newShape);
                newShape = false;
              } else {
                segment = bez.getNewSegment(shapePaths[i2].v[j2 - 1], shapePaths[i2].v[j2], shapePaths[i2].o[j2 - 1], shapePaths[i2].i[j2], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j2 - 1]);
                this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                newShape = false;
                shapePath.c = false;
              }
              addedLength += currentLengthData.addedLength;
              segmentCount += 1;
            }
          }
          if (shapePaths[i2].c && lengths.length) {
            currentLengthData = lengths[j2 - 1];
            if (addedLength <= shapeSegment.e) {
              var segmentLength = lengths[j2 - 1].addedLength;
              if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {
                this.addSegment(shapePaths[i2].v[j2 - 1], shapePaths[i2].o[j2 - 1], shapePaths[i2].i[0], shapePaths[i2].v[0], shapePath, segmentCount, newShape);
                newShape = false;
              } else {
                segment = bez.getNewSegment(shapePaths[i2].v[j2 - 1], shapePaths[i2].v[0], shapePaths[i2].o[j2 - 1], shapePaths[i2].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j2 - 1]);
                this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
                newShape = false;
                shapePath.c = false;
              }
            } else {
              shapePath.c = false;
            }
            addedLength += currentLengthData.addedLength;
            segmentCount += 1;
          }
          if (shapePath._length) {
            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], "i", initPos);
            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], "o", shapePath._length - 1);
          }
          if (addedLength > shapeSegment.e) {
            break;
          }
          if (i2 < len - 1) {
            shapePath = shapePool.newElement();
            newShape = true;
            shapes.push(shapePath);
            segmentCount = 0;
          }
        }
        return shapes;
      };
      ShapeModifiers.registerModifier("tm", TrimModifier);
      function RoundCornersModifier() {}
      extendPrototype([ShapeModifier], RoundCornersModifier);
      RoundCornersModifier.prototype.initModifierProperties = function (elem2, data2) {
        this.getValue = this.processKeys;
        this.rd = PropertyFactory.getProp(elem2, data2.r, 0, null, this);
        this._isAnimated = !!this.rd.effectsSequence.length;
      };
      RoundCornersModifier.prototype.processPath = function (path, round) {
        var clonedPath = shapePool.newElement();
        clonedPath.c = path.c;
        var i2;
        var len = path._length;
        var currentV;
        var currentI;
        var currentO;
        var closerV;
        var distance;
        var newPosPerc;
        var index2 = 0;
        var vX;
        var vY;
        var oX;
        var oY;
        var iX;
        var iY;
        for (i2 = 0; i2 < len; i2 += 1) {
          currentV = path.v[i2];
          currentO = path.o[i2];
          currentI = path.i[i2];
          if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {
            if ((i2 === 0 || i2 === len - 1) && !path.c) {
              clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index2);
              index2 += 1;
            } else {
              if (i2 === 0) {
                closerV = path.v[len - 1];
              } else {
                closerV = path.v[i2 - 1];
              }
              distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
              newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
              iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
              vX = iX;
              iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;
              vY = iY;
              oX = vX - (vX - currentV[0]) * roundCorner;
              oY = vY - (vY - currentV[1]) * roundCorner;
              clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);
              index2 += 1;
              if (i2 === len - 1) {
                closerV = path.v[0];
              } else {
                closerV = path.v[i2 + 1];
              }
              distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
              newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
              oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
              vX = oX;
              oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;
              vY = oY;
              iX = vX - (vX - currentV[0]) * roundCorner;
              iY = vY - (vY - currentV[1]) * roundCorner;
              clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);
              index2 += 1;
            }
          } else {
            clonedPath.setTripleAt(path.v[i2][0], path.v[i2][1], path.o[i2][0], path.o[i2][1], path.i[i2][0], path.i[i2][1], index2);
            index2 += 1;
          }
        }
        return clonedPath;
      };
      RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {
        var shapePaths;
        var i2;
        var len = this.shapes.length;
        var j2;
        var jLen;
        var rd = this.rd.v;
        if (rd !== 0) {
          var shapeData;
          var localShapeCollection;
          for (i2 = 0; i2 < len; i2 += 1) {
            shapeData = this.shapes[i2];
            localShapeCollection = shapeData.localShapeCollection;
            if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
              localShapeCollection.releaseShapes();
              shapeData.shape._mdf = true;
              shapePaths = shapeData.shape.paths.shapes;
              jLen = shapeData.shape.paths._length;
              for (j2 = 0; j2 < jLen; j2 += 1) {
                localShapeCollection.addShape(this.processPath(shapePaths[j2], rd));
              }
            }
            shapeData.shape.paths = shapeData.localShapeCollection;
          }
        }
        if (!this.dynamicProperties.length) {
          this._mdf = false;
        }
      };
      ShapeModifiers.registerModifier("rd", RoundCornersModifier);
      function PuckerAndBloatModifier() {}
      extendPrototype([ShapeModifier], PuckerAndBloatModifier);
      PuckerAndBloatModifier.prototype.initModifierProperties = function (elem2, data2) {
        this.getValue = this.processKeys;
        this.amount = PropertyFactory.getProp(elem2, data2.a, 0, null, this);
        this._isAnimated = !!this.amount.effectsSequence.length;
      };
      PuckerAndBloatModifier.prototype.processPath = function (path, amount) {
        var percent = amount / 100;
        var centerPoint = [0, 0];
        var pathLength = path._length;
        var i2 = 0;
        for (i2 = 0; i2 < pathLength; i2 += 1) {
          centerPoint[0] += path.v[i2][0];
          centerPoint[1] += path.v[i2][1];
        }
        centerPoint[0] /= pathLength;
        centerPoint[1] /= pathLength;
        var clonedPath = shapePool.newElement();
        clonedPath.c = path.c;
        var vX;
        var vY;
        var oX;
        var oY;
        var iX;
        var iY;
        for (i2 = 0; i2 < pathLength; i2 += 1) {
          vX = path.v[i2][0] + (centerPoint[0] - path.v[i2][0]) * percent;
          vY = path.v[i2][1] + (centerPoint[1] - path.v[i2][1]) * percent;
          oX = path.o[i2][0] + (centerPoint[0] - path.o[i2][0]) * -percent;
          oY = path.o[i2][1] + (centerPoint[1] - path.o[i2][1]) * -percent;
          iX = path.i[i2][0] + (centerPoint[0] - path.i[i2][0]) * -percent;
          iY = path.i[i2][1] + (centerPoint[1] - path.i[i2][1]) * -percent;
          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i2);
        }
        return clonedPath;
      };
      PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {
        var shapePaths;
        var i2;
        var len = this.shapes.length;
        var j2;
        var jLen;
        var amount = this.amount.v;
        if (amount !== 0) {
          var shapeData;
          var localShapeCollection;
          for (i2 = 0; i2 < len; i2 += 1) {
            shapeData = this.shapes[i2];
            localShapeCollection = shapeData.localShapeCollection;
            if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
              localShapeCollection.releaseShapes();
              shapeData.shape._mdf = true;
              shapePaths = shapeData.shape.paths.shapes;
              jLen = shapeData.shape.paths._length;
              for (j2 = 0; j2 < jLen; j2 += 1) {
                localShapeCollection.addShape(this.processPath(shapePaths[j2], amount));
              }
            }
            shapeData.shape.paths = shapeData.localShapeCollection;
          }
        }
        if (!this.dynamicProperties.length) {
          this._mdf = false;
        }
      };
      ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier);
      function RepeaterModifier() {}
      extendPrototype([ShapeModifier], RepeaterModifier);
      RepeaterModifier.prototype.initModifierProperties = function (elem2, data2) {
        this.getValue = this.processKeys;
        this.c = PropertyFactory.getProp(elem2, data2.c, 0, null, this);
        this.o = PropertyFactory.getProp(elem2, data2.o, 0, null, this);
        this.tr = TransformPropertyFactory.getTransformProperty(elem2, data2.tr, this);
        this.so = PropertyFactory.getProp(elem2, data2.tr.so, 0, 0.01, this);
        this.eo = PropertyFactory.getProp(elem2, data2.tr.eo, 0, 0.01, this);
        this.data = data2;
        if (!this.dynamicProperties.length) {
          this.getValue(true);
        }
        this._isAnimated = !!this.dynamicProperties.length;
        this.pMatrix = new Matrix();
        this.rMatrix = new Matrix();
        this.sMatrix = new Matrix();
        this.tMatrix = new Matrix();
        this.matrix = new Matrix();
      };
      RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform2, perc, inv) {
        var dir = inv ? -1 : 1;
        var scaleX = transform2.s.v[0] + (1 - transform2.s.v[0]) * (1 - perc);
        var scaleY = transform2.s.v[1] + (1 - transform2.s.v[1]) * (1 - perc);
        pMatrix.translate(transform2.p.v[0] * dir * perc, transform2.p.v[1] * dir * perc, transform2.p.v[2]);
        rMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);
        rMatrix.rotate(-transform2.r.v * dir * perc);
        rMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);
        sMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);
        sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);
        sMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);
      };
      RepeaterModifier.prototype.init = function (elem2, arr2, pos, elemsData) {
        this.elem = elem2;
        this.arr = arr2;
        this.pos = pos;
        this.elemsData = elemsData;
        this._currentCopies = 0;
        this._elements = [];
        this._groups = [];
        this.frameId = -1;
        this.initDynamicPropertyContainer(elem2);
        this.initModifierProperties(elem2, arr2[pos]);
        while (pos > 0) {
          pos -= 1;
          this._elements.unshift(arr2[pos]);
        }
        if (this.dynamicProperties.length) {
          this.k = true;
        } else {
          this.getValue(true);
        }
      };
      RepeaterModifier.prototype.resetElements = function (elements) {
        var i2;
        var len = elements.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          elements[i2]._processed = false;
          if (elements[i2].ty === "gr") {
            this.resetElements(elements[i2].it);
          }
        }
      };
      RepeaterModifier.prototype.cloneElements = function (elements) {
        var newElements = JSON.parse(JSON.stringify(elements));
        this.resetElements(newElements);
        return newElements;
      };
      RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {
        var i2;
        var len = elements.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          elements[i2]._render = renderFlag;
          if (elements[i2].ty === "gr") {
            this.changeGroupRender(elements[i2].it, renderFlag);
          }
        }
      };
      RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {
        var items;
        var itemsTransform;
        var i2;
        var dir;
        var cont;
        var hasReloaded = false;
        if (this._mdf || _isFirstFrame) {
          var copies = Math.ceil(this.c.v);
          if (this._groups.length < copies) {
            while (this._groups.length < copies) {
              var group = {
                it: this.cloneElements(this._elements),
                ty: "gr"
              };
              group.it.push({
                a: {
                  a: 0,
                  ix: 1,
                  k: [0, 0]
                },
                nm: "Transform",
                o: {
                  a: 0,
                  ix: 7,
                  k: 100
                },
                p: {
                  a: 0,
                  ix: 2,
                  k: [0, 0]
                },
                r: {
                  a: 1,
                  ix: 6,
                  k: [{
                    s: 0,
                    e: 0,
                    t: 0
                  }, {
                    s: 0,
                    e: 0,
                    t: 1
                  }]
                },
                s: {
                  a: 0,
                  ix: 3,
                  k: [100, 100]
                },
                sa: {
                  a: 0,
                  ix: 5,
                  k: 0
                },
                sk: {
                  a: 0,
                  ix: 4,
                  k: 0
                },
                ty: "tr"
              });
              this.arr.splice(0, 0, group);
              this._groups.splice(0, 0, group);
              this._currentCopies += 1;
            }
            this.elem.reloadShapes();
            hasReloaded = true;
          }
          cont = 0;
          var renderFlag;
          for (i2 = 0; i2 <= this._groups.length - 1; i2 += 1) {
            renderFlag = cont < copies;
            this._groups[i2]._render = renderFlag;
            this.changeGroupRender(this._groups[i2].it, renderFlag);
            if (!renderFlag) {
              var elems = this.elemsData[i2].it;
              var transformData2 = elems[elems.length - 1];
              if (transformData2.transform.op.v !== 0) {
                transformData2.transform.op._mdf = true;
                transformData2.transform.op.v = 0;
              } else {
                transformData2.transform.op._mdf = false;
              }
            }
            cont += 1;
          }
          this._currentCopies = copies;
          var offset = this.o.v;
          var offsetModulo = offset % 1;
          var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);
          var pProps = this.pMatrix.props;
          var rProps = this.rMatrix.props;
          var sProps = this.sMatrix.props;
          this.pMatrix.reset();
          this.rMatrix.reset();
          this.sMatrix.reset();
          this.tMatrix.reset();
          this.matrix.reset();
          var iteration = 0;
          if (offset > 0) {
            while (iteration < roundOffset) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
              iteration += 1;
            }
            if (offsetModulo) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);
              iteration += offsetModulo;
            }
          } else if (offset < 0) {
            while (iteration > roundOffset) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);
              iteration -= 1;
            }
            if (offsetModulo) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);
              iteration -= offsetModulo;
            }
          }
          i2 = this.data.m === 1 ? 0 : this._currentCopies - 1;
          dir = this.data.m === 1 ? 1 : -1;
          cont = this._currentCopies;
          var j2;
          var jLen;
          while (cont) {
            items = this.elemsData[i2].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            jLen = itemsTransform.length;
            items[items.length - 1].transform.mProps._mdf = true;
            items[items.length - 1].transform.op._mdf = true;
            items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i2 / (this._currentCopies - 1));
            if (iteration !== 0) {
              if (i2 !== 0 && dir === 1 || i2 !== this._currentCopies - 1 && dir === -1) {
                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
              }
              this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);
              this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);
              this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);
              for (j2 = 0; j2 < jLen; j2 += 1) {
                itemsTransform[j2] = this.matrix.props[j2];
              }
              this.matrix.reset();
            } else {
              this.matrix.reset();
              for (j2 = 0; j2 < jLen; j2 += 1) {
                itemsTransform[j2] = this.matrix.props[j2];
              }
            }
            iteration += 1;
            cont -= 1;
            i2 += dir;
          }
        } else {
          cont = this._currentCopies;
          i2 = 0;
          dir = 1;
          while (cont) {
            items = this.elemsData[i2].it;
            itemsTransform = items[items.length - 1].transform.mProps.v.props;
            items[items.length - 1].transform.mProps._mdf = false;
            items[items.length - 1].transform.op._mdf = false;
            cont -= 1;
            i2 += dir;
          }
        }
        return hasReloaded;
      };
      RepeaterModifier.prototype.addShape = function () {};
      ShapeModifiers.registerModifier("rp", RepeaterModifier);
      function ShapeCollection() {
        this._length = 0;
        this._maxLength = 4;
        this.shapes = createSizedArray(this._maxLength);
      }
      ShapeCollection.prototype.addShape = function (shapeData) {
        if (this._length === this._maxLength) {
          this.shapes = this.shapes.concat(createSizedArray(this._maxLength));
          this._maxLength *= 2;
        }
        this.shapes[this._length] = shapeData;
        this._length += 1;
      };
      ShapeCollection.prototype.releaseShapes = function () {
        var i2;
        for (i2 = 0; i2 < this._length; i2 += 1) {
          shapePool.release(this.shapes[i2]);
        }
        this._length = 0;
      };
      function DashProperty(elem2, data2, renderer, container) {
        this.elem = elem2;
        this.frameId = -1;
        this.dataProps = createSizedArray(data2.length);
        this.renderer = renderer;
        this.k = false;
        this.dashStr = "";
        this.dashArray = createTypedArray("float32", data2.length ? data2.length - 1 : 0);
        this.dashoffset = createTypedArray("float32", 1);
        this.initDynamicPropertyContainer(container);
        var i2;
        var len = data2.length || 0;
        var prop;
        for (i2 = 0; i2 < len; i2 += 1) {
          prop = PropertyFactory.getProp(elem2, data2[i2].v, 0, 0, this);
          this.k = prop.k || this.k;
          this.dataProps[i2] = {
            n: data2[i2].n,
            p: prop
          };
        }
        if (!this.k) {
          this.getValue(true);
        }
        this._isAnimated = this.k;
      }
      DashProperty.prototype.getValue = function (forceRender) {
        if (this.elem.globalData.frameId === this.frameId && !forceRender) {
          return;
        }
        this.frameId = this.elem.globalData.frameId;
        this.iterateDynamicProperties();
        this._mdf = this._mdf || forceRender;
        if (this._mdf) {
          var i2 = 0;
          var len = this.dataProps.length;
          if (this.renderer === "svg") {
            this.dashStr = "";
          }
          for (i2 = 0; i2 < len; i2 += 1) {
            if (this.dataProps[i2].n !== "o") {
              if (this.renderer === "svg") {
                this.dashStr += " " + this.dataProps[i2].p.v;
              } else {
                this.dashArray[i2] = this.dataProps[i2].p.v;
              }
            } else {
              this.dashoffset[0] = this.dataProps[i2].p.v;
            }
          }
        }
      };
      extendPrototype([DynamicPropertyContainer], DashProperty);
      function GradientProperty(elem2, data2, container) {
        this.data = data2;
        this.c = createTypedArray("uint8c", data2.p * 4);
        var cLength = data2.k.k[0].s ? data2.k.k[0].s.length - data2.p * 4 : data2.k.k.length - data2.p * 4;
        this.o = createTypedArray("float32", cLength);
        this._cmdf = false;
        this._omdf = false;
        this._collapsable = this.checkCollapsable();
        this._hasOpacity = cLength;
        this.initDynamicPropertyContainer(container);
        this.prop = PropertyFactory.getProp(elem2, data2.k, 1, null, this);
        this.k = this.prop.k;
        this.getValue(true);
      }
      GradientProperty.prototype.comparePoints = function (values, points) {
        var i2 = 0;
        var len = this.o.length / 2;
        var diff;
        while (i2 < len) {
          diff = Math.abs(values[i2 * 4] - values[points * 4 + i2 * 2]);
          if (diff > 0.01) {
            return false;
          }
          i2 += 1;
        }
        return true;
      };
      GradientProperty.prototype.checkCollapsable = function () {
        if (this.o.length / 2 !== this.c.length / 4) {
          return false;
        }
        if (this.data.k.k[0].s) {
          var i2 = 0;
          var len = this.data.k.k.length;
          while (i2 < len) {
            if (!this.comparePoints(this.data.k.k[i2].s, this.data.p)) {
              return false;
            }
            i2 += 1;
          }
        } else if (!this.comparePoints(this.data.k.k, this.data.p)) {
          return false;
        }
        return true;
      };
      GradientProperty.prototype.getValue = function (forceRender) {
        this.prop.getValue();
        this._mdf = false;
        this._cmdf = false;
        this._omdf = false;
        if (this.prop._mdf || forceRender) {
          var i2;
          var len = this.data.p * 4;
          var mult;
          var val2;
          for (i2 = 0; i2 < len; i2 += 1) {
            mult = i2 % 4 === 0 ? 100 : 255;
            val2 = Math.round(this.prop.v[i2] * mult);
            if (this.c[i2] !== val2) {
              this.c[i2] = val2;
              this._cmdf = !forceRender;
            }
          }
          if (this.o.length) {
            len = this.prop.v.length;
            for (i2 = this.data.p * 4; i2 < len; i2 += 1) {
              mult = i2 % 2 === 0 ? 100 : 1;
              val2 = i2 % 2 === 0 ? Math.round(this.prop.v[i2] * 100) : this.prop.v[i2];
              if (this.o[i2 - this.data.p * 4] !== val2) {
                this.o[i2 - this.data.p * 4] = val2;
                this._omdf = !forceRender;
              }
            }
          }
          this._mdf = !forceRender;
        }
      };
      extendPrototype([DynamicPropertyContainer], GradientProperty);
      var buildShapeString = function (pathNodes, length, closed, mat) {
        if (length === 0) {
          return "";
        }
        var _o = pathNodes.o;
        var _i2 = pathNodes.i;
        var _v = pathNodes.v;
        var i2;
        var shapeString = " M" + mat.applyToPointStringified(_v[0][0], _v[0][1]);
        for (i2 = 1; i2 < length; i2 += 1) {
          shapeString += " C" + mat.applyToPointStringified(_o[i2 - 1][0], _o[i2 - 1][1]) + " " + mat.applyToPointStringified(_i2[i2][0], _i2[i2][1]) + " " + mat.applyToPointStringified(_v[i2][0], _v[i2][1]);
        }
        if (closed && length) {
          shapeString += " C" + mat.applyToPointStringified(_o[i2 - 1][0], _o[i2 - 1][1]) + " " + mat.applyToPointStringified(_i2[0][0], _i2[0][1]) + " " + mat.applyToPointStringified(_v[0][0], _v[0][1]);
          shapeString += "z";
        }
        return shapeString;
      };
      var audioControllerFactory = function () {
        function AudioController(audioFactory) {
          this.audios = [];
          this.audioFactory = audioFactory;
          this._volume = 1;
          this._isMuted = false;
        }
        AudioController.prototype = {
          addAudio: function (audio) {
            this.audios.push(audio);
          },
          pause: function () {
            var i2;
            var len = this.audios.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              this.audios[i2].pause();
            }
          },
          resume: function () {
            var i2;
            var len = this.audios.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              this.audios[i2].resume();
            }
          },
          setRate: function (rateValue) {
            var i2;
            var len = this.audios.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              this.audios[i2].setRate(rateValue);
            }
          },
          createAudio: function (assetPath) {
            if (this.audioFactory) {
              return this.audioFactory(assetPath);
            }
            if (Howl) {
              return new Howl({
                src: [assetPath]
              });
            }
            return {
              isPlaying: false,
              play: function () {
                this.isPlaying = true;
              },
              seek: function () {
                this.isPlaying = false;
              },
              playing: function () {},
              rate: function () {},
              setVolume: function () {}
            };
          },
          setAudioFactory: function (audioFactory) {
            this.audioFactory = audioFactory;
          },
          setVolume: function (value2) {
            this._volume = value2;
            this._updateVolume();
          },
          mute: function () {
            this._isMuted = true;
            this._updateVolume();
          },
          unmute: function () {
            this._isMuted = false;
            this._updateVolume();
          },
          getVolume: function () {
            return this._volume;
          },
          _updateVolume: function () {
            var i2;
            var len = this.audios.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              this.audios[i2].volume(this._volume * (this._isMuted ? 0 : 1));
            }
          }
        };
        return function () {
          return new AudioController();
        };
      }();
      var ImagePreloader = function () {
        var proxyImage = function () {
          var canvas = createTag("canvas");
          canvas.width = 1;
          canvas.height = 1;
          var ctx = canvas.getContext("2d");
          ctx.fillStyle = "rgba(0,0,0,0)";
          ctx.fillRect(0, 0, 1, 1);
          return canvas;
        }();
        function imageLoaded() {
          this.loadedAssets += 1;
          if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
            if (this.imagesLoadedCb) {
              this.imagesLoadedCb(null);
            }
          }
        }
        function footageLoaded() {
          this.loadedFootagesCount += 1;
          if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
            if (this.imagesLoadedCb) {
              this.imagesLoadedCb(null);
            }
          }
        }
        function getAssetsPath(assetData, assetsPath, originalPath) {
          var path = "";
          if (assetData.e) {
            path = assetData.p;
          } else if (assetsPath) {
            var imagePath = assetData.p;
            if (imagePath.indexOf("images/") !== -1) {
              imagePath = imagePath.split("/")[1];
            }
            path = assetsPath + imagePath;
          } else {
            path = originalPath;
            path += assetData.u ? assetData.u : "";
            path += assetData.p;
          }
          return path;
        }
        function testImageLoaded(img) {
          var _count = 0;
          var intervalId = setInterval(function () {
            var box = img.getBBox();
            if (box.width || _count > 500) {
              this._imageLoaded();
              clearInterval(intervalId);
            }
            _count += 1;
          }.bind(this), 50);
        }
        function createImageData(assetData) {
          var path = getAssetsPath(assetData, this.assetsPath, this.path);
          var img = createNS("image");
          if (isSafari) {
            this.testImageLoaded(img);
          } else {
            img.addEventListener("load", this._imageLoaded, false);
          }
          img.addEventListener("error", function () {
            ob2.img = proxyImage;
            this._imageLoaded();
          }.bind(this), false);
          img.setAttributeNS("http://www.w3.org/1999/xlink", "href", path);
          if (this._elementHelper.append) {
            this._elementHelper.append(img);
          } else {
            this._elementHelper.appendChild(img);
          }
          var ob2 = {
            img,
            assetData
          };
          return ob2;
        }
        function createImgData(assetData) {
          var path = getAssetsPath(assetData, this.assetsPath, this.path);
          var img = createTag("img");
          img.crossOrigin = "anonymous";
          img.addEventListener("load", this._imageLoaded, false);
          img.addEventListener("error", function () {
            ob2.img = proxyImage;
            this._imageLoaded();
          }.bind(this), false);
          img.src = path;
          var ob2 = {
            img,
            assetData
          };
          return ob2;
        }
        function createFootageData(data2) {
          var ob2 = {
            assetData: data2
          };
          var path = getAssetsPath(data2, this.assetsPath, this.path);
          assetLoader.load(path, function (footageData) {
            ob2.img = footageData;
            this._footageLoaded();
          }.bind(this), function () {
            ob2.img = {};
            this._footageLoaded();
          }.bind(this));
          return ob2;
        }
        function loadAssets(assets, cb) {
          this.imagesLoadedCb = cb;
          var i2;
          var len = assets.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (!assets[i2].layers) {
              if (!assets[i2].t || assets[i2].t === "seq") {
                this.totalImages += 1;
                this.images.push(this._createImageData(assets[i2]));
              } else if (assets[i2].t === 3) {
                this.totalFootages += 1;
                this.images.push(this.createFootageData(assets[i2]));
              }
            }
          }
        }
        function setPath(path) {
          this.path = path || "";
        }
        function setAssetsPath(path) {
          this.assetsPath = path || "";
        }
        function getAsset(assetData) {
          var i2 = 0;
          var len = this.images.length;
          while (i2 < len) {
            if (this.images[i2].assetData === assetData) {
              return this.images[i2].img;
            }
            i2 += 1;
          }
          return null;
        }
        function destroy() {
          this.imagesLoadedCb = null;
          this.images.length = 0;
        }
        function loadedImages() {
          return this.totalImages === this.loadedAssets;
        }
        function loadedFootages() {
          return this.totalFootages === this.loadedFootagesCount;
        }
        function setCacheType(type, elementHelper) {
          if (type === "svg") {
            this._elementHelper = elementHelper;
            this._createImageData = this.createImageData.bind(this);
          } else {
            this._createImageData = this.createImgData.bind(this);
          }
        }
        function ImagePreloaderFactory() {
          this._imageLoaded = imageLoaded.bind(this);
          this._footageLoaded = footageLoaded.bind(this);
          this.testImageLoaded = testImageLoaded.bind(this);
          this.createFootageData = createFootageData.bind(this);
          this.assetsPath = "";
          this.path = "";
          this.totalImages = 0;
          this.totalFootages = 0;
          this.loadedAssets = 0;
          this.loadedFootagesCount = 0;
          this.imagesLoadedCb = null;
          this.images = [];
        }
        ImagePreloaderFactory.prototype = {
          loadAssets,
          setAssetsPath,
          setPath,
          loadedImages,
          loadedFootages,
          destroy,
          getAsset,
          createImgData,
          createImageData,
          imageLoaded,
          footageLoaded,
          setCacheType
        };
        return ImagePreloaderFactory;
      }();
      var featureSupport = function () {
        var ob2 = {
          maskType: true
        };
        if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) {
          ob2.maskType = false;
        }
        return ob2;
      }();
      var filtersFactory = function () {
        var ob2 = {};
        ob2.createFilter = createFilter;
        ob2.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;
        function createFilter(filId, skipCoordinates) {
          var fil = createNS("filter");
          fil.setAttribute("id", filId);
          if (skipCoordinates !== true) {
            fil.setAttribute("filterUnits", "objectBoundingBox");
            fil.setAttribute("x", "0%");
            fil.setAttribute("y", "0%");
            fil.setAttribute("width", "100%");
            fil.setAttribute("height", "100%");
          }
          return fil;
        }
        function createAlphaToLuminanceFilter() {
          var feColorMatrix = createNS("feColorMatrix");
          feColorMatrix.setAttribute("type", "matrix");
          feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
          feColorMatrix.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1");
          return feColorMatrix;
        }
        return ob2;
      }();
      var assetLoader = function () {
        function formatResponse(xhr) {
          if (xhr.response && typeof xhr.response === "object") {
            return xhr.response;
          }
          if (xhr.response && typeof xhr.response === "string") {
            return JSON.parse(xhr.response);
          }
          if (xhr.responseText) {
            return JSON.parse(xhr.responseText);
          }
          return null;
        }
        function loadAsset(path, callback, errorCallback) {
          var response;
          var xhr = new XMLHttpRequest();
          try {
            xhr.responseType = "json";
          } catch (err) {}
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              if (xhr.status === 200) {
                response = formatResponse(xhr);
                callback(response);
              } else {
                try {
                  response = formatResponse(xhr);
                  callback(response);
                } catch (err) {
                  if (errorCallback) {
                    errorCallback(err);
                  }
                }
              }
            }
          };
          xhr.open("GET", path, true);
          xhr.send();
        }
        return {
          load: loadAsset
        };
      }();
      function TextAnimatorProperty(textData, renderType, elem2) {
        this._isFirstFrame = true;
        this._hasMaskedPath = false;
        this._frameId = -1;
        this._textData = textData;
        this._renderType = renderType;
        this._elem = elem2;
        this._animatorsData = createSizedArray(this._textData.a.length);
        this._pathData = {};
        this._moreOptions = {
          alignment: {}
        };
        this.renderedLetters = [];
        this.lettersChangedFlag = false;
        this.initDynamicPropertyContainer(elem2);
      }
      TextAnimatorProperty.prototype.searchProperties = function () {
        var i2;
        var len = this._textData.a.length;
        var animatorProps;
        var getProp = PropertyFactory.getProp;
        for (i2 = 0; i2 < len; i2 += 1) {
          animatorProps = this._textData.a[i2];
          this._animatorsData[i2] = new TextAnimatorDataProperty(this._elem, animatorProps, this);
        }
        if (this._textData.p && "m" in this._textData.p) {
          this._pathData = {
            a: getProp(this._elem, this._textData.p.a, 0, 0, this),
            f: getProp(this._elem, this._textData.p.f, 0, 0, this),
            l: getProp(this._elem, this._textData.p.l, 0, 0, this),
            r: getProp(this._elem, this._textData.p.r, 0, 0, this),
            p: getProp(this._elem, this._textData.p.p, 0, 0, this),
            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
          };
          this._hasMaskedPath = true;
        } else {
          this._hasMaskedPath = false;
        }
        this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);
      };
      TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {
        this.lettersChangedFlag = lettersChangedFlag;
        if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {
          return;
        }
        this._isFirstFrame = false;
        var alignment = this._moreOptions.alignment.v;
        var animators = this._animatorsData;
        var textData = this._textData;
        var matrixHelper = this.mHelper;
        var renderType = this._renderType;
        var renderedLettersCount = this.renderedLetters.length;
        var xPos;
        var yPos;
        var i2;
        var len;
        var letters = documentData.l;
        var pathInfo;
        var currentLength;
        var currentPoint;
        var segmentLength;
        var flag;
        var pointInd;
        var segmentInd;
        var prevPoint;
        var points;
        var segments;
        var partialLength;
        var totalLength;
        var perc;
        var tanAngle;
        var mask;
        if (this._hasMaskedPath) {
          mask = this._pathData.m;
          if (!this._pathData.n || this._pathData._mdf) {
            var paths = mask.v;
            if (this._pathData.r.v) {
              paths = paths.reverse();
            }
            pathInfo = {
              tLength: 0,
              segments: []
            };
            len = paths._length - 1;
            var bezierData;
            totalLength = 0;
            for (i2 = 0; i2 < len; i2 += 1) {
              bezierData = bez.buildBezierData(paths.v[i2], paths.v[i2 + 1], [paths.o[i2][0] - paths.v[i2][0], paths.o[i2][1] - paths.v[i2][1]], [paths.i[i2 + 1][0] - paths.v[i2 + 1][0], paths.i[i2 + 1][1] - paths.v[i2 + 1][1]]);
              pathInfo.tLength += bezierData.segmentLength;
              pathInfo.segments.push(bezierData);
              totalLength += bezierData.segmentLength;
            }
            i2 = len;
            if (mask.v.c) {
              bezierData = bez.buildBezierData(paths.v[i2], paths.v[0], [paths.o[i2][0] - paths.v[i2][0], paths.o[i2][1] - paths.v[i2][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);
              pathInfo.tLength += bezierData.segmentLength;
              pathInfo.segments.push(bezierData);
              totalLength += bezierData.segmentLength;
            }
            this._pathData.pi = pathInfo;
          }
          pathInfo = this._pathData.pi;
          currentLength = this._pathData.f.v;
          segmentInd = 0;
          pointInd = 1;
          segmentLength = 0;
          flag = true;
          segments = pathInfo.segments;
          if (currentLength < 0 && mask.v.c) {
            if (pathInfo.tLength < Math.abs(currentLength)) {
              currentLength = -Math.abs(currentLength) % pathInfo.tLength;
            }
            segmentInd = segments.length - 1;
            points = segments[segmentInd].points;
            pointInd = points.length - 1;
            while (currentLength < 0) {
              currentLength += points[pointInd].partialLength;
              pointInd -= 1;
              if (pointInd < 0) {
                segmentInd -= 1;
                points = segments[segmentInd].points;
                pointInd = points.length - 1;
              }
            }
          }
          points = segments[segmentInd].points;
          prevPoint = points[pointInd - 1];
          currentPoint = points[pointInd];
          partialLength = currentPoint.partialLength;
        }
        len = letters.length;
        xPos = 0;
        yPos = 0;
        var yOff = documentData.finalSize * 1.2 * 0.714;
        var firstLine = true;
        var animatorProps;
        var animatorSelector;
        var j2;
        var jLen;
        var letterValue;
        jLen = animators.length;
        var mult;
        var ind = -1;
        var offf;
        var xPathPos;
        var yPathPos;
        var initPathPos = currentLength;
        var initSegmentInd = segmentInd;
        var initPointInd = pointInd;
        var currentLine = -1;
        var elemOpacity;
        var sc;
        var sw;
        var fc;
        var k2;
        var letterSw;
        var letterSc;
        var letterFc;
        var letterM = "";
        var letterP = this.defaultPropsArray;
        var letterO;
        if (documentData.j === 2 || documentData.j === 1) {
          var animatorJustifyOffset = 0;
          var animatorFirstCharOffset = 0;
          var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
          var lastIndex = 0;
          var isNewLine = true;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (letters[i2].n) {
              if (animatorJustifyOffset) {
                animatorJustifyOffset += animatorFirstCharOffset;
              }
              while (lastIndex < i2) {
                letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
                lastIndex += 1;
              }
              animatorJustifyOffset = 0;
              isNewLine = true;
            } else {
              for (j2 = 0; j2 < jLen; j2 += 1) {
                animatorProps = animators[j2].a;
                if (animatorProps.t.propType) {
                  if (isNewLine && documentData.j === 2) {
                    animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;
                  }
                  animatorSelector = animators[j2].s;
                  mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
                  if (mult.length) {
                    animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;
                  } else {
                    animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;
                  }
                }
              }
              isNewLine = false;
            }
          }
          if (animatorJustifyOffset) {
            animatorJustifyOffset += animatorFirstCharOffset;
          }
          while (lastIndex < i2) {
            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
            lastIndex += 1;
          }
        }
        for (i2 = 0; i2 < len; i2 += 1) {
          matrixHelper.reset();
          elemOpacity = 1;
          if (letters[i2].n) {
            xPos = 0;
            yPos += documentData.yOffset;
            yPos += firstLine ? 1 : 0;
            currentLength = initPathPos;
            firstLine = false;
            if (this._hasMaskedPath) {
              segmentInd = initSegmentInd;
              pointInd = initPointInd;
              points = segments[segmentInd].points;
              prevPoint = points[pointInd - 1];
              currentPoint = points[pointInd];
              partialLength = currentPoint.partialLength;
              segmentLength = 0;
            }
            letterM = "";
            letterFc = "";
            letterSw = "";
            letterO = "";
            letterP = this.defaultPropsArray;
          } else {
            if (this._hasMaskedPath) {
              if (currentLine !== letters[i2].line) {
                switch (documentData.j) {
                  case 1:
                    currentLength += totalLength - documentData.lineWidths[letters[i2].line];
                    break;
                  case 2:
                    currentLength += (totalLength - documentData.lineWidths[letters[i2].line]) / 2;
                    break;
                }
                currentLine = letters[i2].line;
              }
              if (ind !== letters[i2].ind) {
                if (letters[ind]) {
                  currentLength += letters[ind].extra;
                }
                currentLength += letters[i2].an / 2;
                ind = letters[i2].ind;
              }
              currentLength += alignment[0] * letters[i2].an * 5e-3;
              var animatorOffset = 0;
              for (j2 = 0; j2 < jLen; j2 += 1) {
                animatorProps = animators[j2].a;
                if (animatorProps.p.propType) {
                  animatorSelector = animators[j2].s;
                  mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
                  if (mult.length) {
                    animatorOffset += animatorProps.p.v[0] * mult[0];
                  } else {
                    animatorOffset += animatorProps.p.v[0] * mult;
                  }
                }
                if (animatorProps.a.propType) {
                  animatorSelector = animators[j2].s;
                  mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
                  if (mult.length) {
                    animatorOffset += animatorProps.a.v[0] * mult[0];
                  } else {
                    animatorOffset += animatorProps.a.v[0] * mult;
                  }
                }
              }
              flag = true;
              if (this._pathData.a.v) {
                currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);
                currentLength += this._pathData.f.v;
              }
              while (flag) {
                if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {
                  perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;
                  xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;
                  yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;
                  matrixHelper.translate(-alignment[0] * letters[i2].an * 5e-3, -(alignment[1] * yOff) * 0.01);
                  flag = false;
                } else if (points) {
                  segmentLength += currentPoint.partialLength;
                  pointInd += 1;
                  if (pointInd >= points.length) {
                    pointInd = 0;
                    segmentInd += 1;
                    if (!segments[segmentInd]) {
                      if (mask.v.c) {
                        pointInd = 0;
                        segmentInd = 0;
                        points = segments[segmentInd].points;
                      } else {
                        segmentLength -= currentPoint.partialLength;
                        points = null;
                      }
                    } else {
                      points = segments[segmentInd].points;
                    }
                  }
                  if (points) {
                    prevPoint = currentPoint;
                    currentPoint = points[pointInd];
                    partialLength = currentPoint.partialLength;
                  }
                }
              }
              offf = letters[i2].an / 2 - letters[i2].add;
              matrixHelper.translate(-offf, 0, 0);
            } else {
              offf = letters[i2].an / 2 - letters[i2].add;
              matrixHelper.translate(-offf, 0, 0);
              matrixHelper.translate(-alignment[0] * letters[i2].an * 5e-3, -alignment[1] * yOff * 0.01, 0);
            }
            for (j2 = 0; j2 < jLen; j2 += 1) {
              animatorProps = animators[j2].a;
              if (animatorProps.t.propType) {
                animatorSelector = animators[j2].s;
                mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
                if (xPos !== 0 || documentData.j !== 0) {
                  if (this._hasMaskedPath) {
                    if (mult.length) {
                      currentLength += animatorProps.t.v * mult[0];
                    } else {
                      currentLength += animatorProps.t.v * mult;
                    }
                  } else if (mult.length) {
                    xPos += animatorProps.t.v * mult[0];
                  } else {
                    xPos += animatorProps.t.v * mult;
                  }
                }
              }
            }
            if (documentData.strokeWidthAnim) {
              sw = documentData.sw || 0;
            }
            if (documentData.strokeColorAnim) {
              if (documentData.sc) {
                sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];
              } else {
                sc = [0, 0, 0];
              }
            }
            if (documentData.fillColorAnim && documentData.fc) {
              fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];
            }
            for (j2 = 0; j2 < jLen; j2 += 1) {
              animatorProps = animators[j2].a;
              if (animatorProps.a.propType) {
                animatorSelector = animators[j2].s;
                mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
                if (mult.length) {
                  matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);
                } else {
                  matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);
                }
              }
            }
            for (j2 = 0; j2 < jLen; j2 += 1) {
              animatorProps = animators[j2].a;
              if (animatorProps.s.propType) {
                animatorSelector = animators[j2].s;
                mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
                if (mult.length) {
                  matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);
                } else {
                  matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);
                }
              }
            }
            for (j2 = 0; j2 < jLen; j2 += 1) {
              animatorProps = animators[j2].a;
              animatorSelector = animators[j2].s;
              mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
              if (animatorProps.sk.propType) {
                if (mult.length) {
                  matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);
                } else {
                  matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);
                }
              }
              if (animatorProps.r.propType) {
                if (mult.length) {
                  matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
                } else {
                  matrixHelper.rotateZ(-animatorProps.r.v * mult);
                }
              }
              if (animatorProps.ry.propType) {
                if (mult.length) {
                  matrixHelper.rotateY(animatorProps.ry.v * mult[1]);
                } else {
                  matrixHelper.rotateY(animatorProps.ry.v * mult);
                }
              }
              if (animatorProps.rx.propType) {
                if (mult.length) {
                  matrixHelper.rotateX(animatorProps.rx.v * mult[0]);
                } else {
                  matrixHelper.rotateX(animatorProps.rx.v * mult);
                }
              }
              if (animatorProps.o.propType) {
                if (mult.length) {
                  elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];
                } else {
                  elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;
                }
              }
              if (documentData.strokeWidthAnim && animatorProps.sw.propType) {
                if (mult.length) {
                  sw += animatorProps.sw.v * mult[0];
                } else {
                  sw += animatorProps.sw.v * mult;
                }
              }
              if (documentData.strokeColorAnim && animatorProps.sc.propType) {
                for (k2 = 0; k2 < 3; k2 += 1) {
                  if (mult.length) {
                    sc[k2] += (animatorProps.sc.v[k2] - sc[k2]) * mult[0];
                  } else {
                    sc[k2] += (animatorProps.sc.v[k2] - sc[k2]) * mult;
                  }
                }
              }
              if (documentData.fillColorAnim && documentData.fc) {
                if (animatorProps.fc.propType) {
                  for (k2 = 0; k2 < 3; k2 += 1) {
                    if (mult.length) {
                      fc[k2] += (animatorProps.fc.v[k2] - fc[k2]) * mult[0];
                    } else {
                      fc[k2] += (animatorProps.fc.v[k2] - fc[k2]) * mult;
                    }
                  }
                }
                if (animatorProps.fh.propType) {
                  if (mult.length) {
                    fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);
                  } else {
                    fc = addHueToRGB(fc, animatorProps.fh.v * mult);
                  }
                }
                if (animatorProps.fs.propType) {
                  if (mult.length) {
                    fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);
                  } else {
                    fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);
                  }
                }
                if (animatorProps.fb.propType) {
                  if (mult.length) {
                    fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);
                  } else {
                    fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);
                  }
                }
              }
            }
            for (j2 = 0; j2 < jLen; j2 += 1) {
              animatorProps = animators[j2].a;
              if (animatorProps.p.propType) {
                animatorSelector = animators[j2].s;
                mult = animatorSelector.getMult(letters[i2].anIndexes[j2], textData.a[j2].s.totalChars);
                if (this._hasMaskedPath) {
                  if (mult.length) {
                    matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);
                  } else {
                    matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                  }
                } else if (mult.length) {
                  matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);
                } else {
                  matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                }
              }
            }
            if (documentData.strokeWidthAnim) {
              letterSw = sw < 0 ? 0 : sw;
            }
            if (documentData.strokeColorAnim) {
              letterSc = "rgb(" + Math.round(sc[0] * 255) + "," + Math.round(sc[1] * 255) + "," + Math.round(sc[2] * 255) + ")";
            }
            if (documentData.fillColorAnim && documentData.fc) {
              letterFc = "rgb(" + Math.round(fc[0] * 255) + "," + Math.round(fc[1] * 255) + "," + Math.round(fc[2] * 255) + ")";
            }
            if (this._hasMaskedPath) {
              matrixHelper.translate(0, -documentData.ls);
              matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);
              if (this._pathData.p.v) {
                tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);
                var rot = Math.atan(tanAngle) * 180 / Math.PI;
                if (currentPoint.point[0] < prevPoint.point[0]) {
                  rot += 180;
                }
                matrixHelper.rotate(-rot * Math.PI / 180);
              }
              matrixHelper.translate(xPathPos, yPathPos, 0);
              currentLength -= alignment[0] * letters[i2].an * 5e-3;
              if (letters[i2 + 1] && ind !== letters[i2 + 1].ind) {
                currentLength += letters[i2].an / 2;
                currentLength += documentData.tr * 1e-3 * documentData.finalSize;
              }
            } else {
              matrixHelper.translate(xPos, yPos, 0);
              if (documentData.ps) {
                matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
              }
              switch (documentData.j) {
                case 1:
                  matrixHelper.translate(letters[i2].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i2].line]), 0, 0);
                  break;
                case 2:
                  matrixHelper.translate(letters[i2].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i2].line]) / 2, 0, 0);
                  break;
              }
              matrixHelper.translate(0, -documentData.ls);
              matrixHelper.translate(offf, 0, 0);
              matrixHelper.translate(alignment[0] * letters[i2].an * 5e-3, alignment[1] * yOff * 0.01, 0);
              xPos += letters[i2].l + documentData.tr * 1e-3 * documentData.finalSize;
            }
            if (renderType === "html") {
              letterM = matrixHelper.toCSS();
            } else if (renderType === "svg") {
              letterM = matrixHelper.to2dCSS();
            } else {
              letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];
            }
            letterO = elemOpacity;
          }
          if (renderedLettersCount <= i2) {
            letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);
            this.renderedLetters.push(letterValue);
            renderedLettersCount += 1;
            this.lettersChangedFlag = true;
          } else {
            letterValue = this.renderedLetters[i2];
            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;
          }
        }
      };
      TextAnimatorProperty.prototype.getValue = function () {
        if (this._elem.globalData.frameId === this._frameId) {
          return;
        }
        this._frameId = this._elem.globalData.frameId;
        this.iterateDynamicProperties();
      };
      TextAnimatorProperty.prototype.mHelper = new Matrix();
      TextAnimatorProperty.prototype.defaultPropsArray = [];
      extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
      function TextAnimatorDataProperty(elem2, animatorProps, container) {
        var defaultData = {
          propType: false
        };
        var getProp = PropertyFactory.getProp;
        var textAnimatorAnimatables = animatorProps.a;
        this.a = {
          r: textAnimatorAnimatables.r ? getProp(elem2, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,
          rx: textAnimatorAnimatables.rx ? getProp(elem2, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,
          ry: textAnimatorAnimatables.ry ? getProp(elem2, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,
          sk: textAnimatorAnimatables.sk ? getProp(elem2, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,
          sa: textAnimatorAnimatables.sa ? getProp(elem2, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,
          s: textAnimatorAnimatables.s ? getProp(elem2, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,
          a: textAnimatorAnimatables.a ? getProp(elem2, textAnimatorAnimatables.a, 1, 0, container) : defaultData,
          o: textAnimatorAnimatables.o ? getProp(elem2, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,
          p: textAnimatorAnimatables.p ? getProp(elem2, textAnimatorAnimatables.p, 1, 0, container) : defaultData,
          sw: textAnimatorAnimatables.sw ? getProp(elem2, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,
          sc: textAnimatorAnimatables.sc ? getProp(elem2, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,
          fc: textAnimatorAnimatables.fc ? getProp(elem2, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,
          fh: textAnimatorAnimatables.fh ? getProp(elem2, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,
          fs: textAnimatorAnimatables.fs ? getProp(elem2, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,
          fb: textAnimatorAnimatables.fb ? getProp(elem2, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,
          t: textAnimatorAnimatables.t ? getProp(elem2, textAnimatorAnimatables.t, 0, 0, container) : defaultData
        };
        this.s = TextSelectorProp.getTextSelectorProp(elem2, animatorProps.s, container);
        this.s.t = animatorProps.s.t;
      }
      function LetterProps(o2, sw, sc, fc, m2, p2) {
        this.o = o2;
        this.sw = sw;
        this.sc = sc;
        this.fc = fc;
        this.m = m2;
        this.p = p2;
        this._mdf = {
          o: true,
          sw: !!sw,
          sc: !!sc,
          fc: !!fc,
          m: true,
          p: true
        };
      }
      LetterProps.prototype.update = function (o2, sw, sc, fc, m2, p2) {
        this._mdf.o = false;
        this._mdf.sw = false;
        this._mdf.sc = false;
        this._mdf.fc = false;
        this._mdf.m = false;
        this._mdf.p = false;
        var updated = false;
        if (this.o !== o2) {
          this.o = o2;
          this._mdf.o = true;
          updated = true;
        }
        if (this.sw !== sw) {
          this.sw = sw;
          this._mdf.sw = true;
          updated = true;
        }
        if (this.sc !== sc) {
          this.sc = sc;
          this._mdf.sc = true;
          updated = true;
        }
        if (this.fc !== fc) {
          this.fc = fc;
          this._mdf.fc = true;
          updated = true;
        }
        if (this.m !== m2) {
          this.m = m2;
          this._mdf.m = true;
          updated = true;
        }
        if (p2.length && (this.p[0] !== p2[0] || this.p[1] !== p2[1] || this.p[4] !== p2[4] || this.p[5] !== p2[5] || this.p[12] !== p2[12] || this.p[13] !== p2[13])) {
          this.p = p2;
          this._mdf.p = true;
          updated = true;
        }
        return updated;
      };
      function TextProperty(elem2, data2) {
        this._frameId = initialDefaultFrame;
        this.pv = "";
        this.v = "";
        this.kf = false;
        this._isFirstFrame = true;
        this._mdf = false;
        this.data = data2;
        this.elem = elem2;
        this.comp = this.elem.comp;
        this.keysIndex = 0;
        this.canResize = false;
        this.minimumFontSize = 1;
        this.effectsSequence = [];
        this.currentData = {
          ascent: 0,
          boxWidth: this.defaultBoxWidth,
          f: "",
          fStyle: "",
          fWeight: "",
          fc: "",
          j: "",
          justifyOffset: "",
          l: [],
          lh: 0,
          lineWidths: [],
          ls: "",
          of: "",
          s: "",
          sc: "",
          sw: 0,
          t: 0,
          tr: 0,
          sz: 0,
          ps: null,
          fillColorAnim: false,
          strokeColorAnim: false,
          strokeWidthAnim: false,
          yOffset: 0,
          finalSize: 0,
          finalText: [],
          finalLineHeight: 0,
          __complete: false
        };
        this.copyData(this.currentData, this.data.d.k[0].s);
        if (!this.searchProperty()) {
          this.completeTextData(this.currentData);
        }
      }
      TextProperty.prototype.defaultBoxWidth = [0, 0];
      TextProperty.prototype.copyData = function (obj, data2) {
        for (var s2 in data2) {
          if (Object.prototype.hasOwnProperty.call(data2, s2)) {
            obj[s2] = data2[s2];
          }
        }
        return obj;
      };
      TextProperty.prototype.setCurrentData = function (data2) {
        if (!data2.__complete) {
          this.completeTextData(data2);
        }
        this.currentData = data2;
        this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;
        this._mdf = true;
      };
      TextProperty.prototype.searchProperty = function () {
        return this.searchKeyframes();
      };
      TextProperty.prototype.searchKeyframes = function () {
        this.kf = this.data.d.k.length > 1;
        if (this.kf) {
          this.addEffect(this.getKeyframeValue.bind(this));
        }
        return this.kf;
      };
      TextProperty.prototype.addEffect = function (effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.elem.addDynamicProperty(this);
      };
      TextProperty.prototype.getValue = function (_finalValue) {
        if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {
          return;
        }
        this.currentData.t = this.data.d.k[this.keysIndex].s.t;
        var currentValue = this.currentData;
        var currentIndex = this.keysIndex;
        if (this.lock) {
          this.setCurrentData(this.currentData);
          return;
        }
        this.lock = true;
        this._mdf = false;
        var i2;
        var len = this.effectsSequence.length;
        var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (currentIndex !== this.keysIndex) {
            finalValue = this.effectsSequence[i2](finalValue, finalValue.t);
          } else {
            finalValue = this.effectsSequence[i2](this.currentData, finalValue.t);
          }
        }
        if (currentValue !== finalValue) {
          this.setCurrentData(finalValue);
        }
        this.v = this.currentData;
        this.pv = this.v;
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
      };
      TextProperty.prototype.getKeyframeValue = function () {
        var textKeys = this.data.d.k;
        var frameNum = this.elem.comp.renderedFrame;
        var i2 = 0;
        var len = textKeys.length;
        while (i2 <= len - 1) {
          if (i2 === len - 1 || textKeys[i2 + 1].t > frameNum) {
            break;
          }
          i2 += 1;
        }
        if (this.keysIndex !== i2) {
          this.keysIndex = i2;
        }
        return this.data.d.k[this.keysIndex].s;
      };
      TextProperty.prototype.buildFinalText = function (text) {
        var charactersArray = [];
        var i2 = 0;
        var len = text.length;
        var charCode;
        var secondCharCode;
        var shouldCombine = false;
        while (i2 < len) {
          charCode = text.charCodeAt(i2);
          if (FontManager.isCombinedCharacter(charCode)) {
            charactersArray[charactersArray.length - 1] += text.charAt(i2);
          } else if (charCode >= 55296 && charCode <= 56319) {
            secondCharCode = text.charCodeAt(i2 + 1);
            if (secondCharCode >= 56320 && secondCharCode <= 57343) {
              if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {
                charactersArray[charactersArray.length - 1] += text.substr(i2, 2);
                shouldCombine = false;
              } else {
                charactersArray.push(text.substr(i2, 2));
              }
              i2 += 1;
            } else {
              charactersArray.push(text.charAt(i2));
            }
          } else if (charCode > 56319) {
            secondCharCode = text.charCodeAt(i2 + 1);
            if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {
              shouldCombine = true;
              charactersArray[charactersArray.length - 1] += text.substr(i2, 2);
              i2 += 1;
            } else {
              charactersArray.push(text.charAt(i2));
            }
          } else if (FontManager.isZeroWidthJoiner(charCode)) {
            charactersArray[charactersArray.length - 1] += text.charAt(i2);
            shouldCombine = true;
          } else {
            charactersArray.push(text.charAt(i2));
          }
          i2 += 1;
        }
        return charactersArray;
      };
      TextProperty.prototype.completeTextData = function (documentData) {
        documentData.__complete = true;
        var fontManager = this.elem.globalData.fontManager;
        var data2 = this.data;
        var letters = [];
        var i2;
        var len;
        var newLineFlag;
        var index2 = 0;
        var val2;
        var anchorGrouping = data2.m.g;
        var currentSize = 0;
        var currentPos = 0;
        var currentLine = 0;
        var lineWidths = [];
        var lineWidth = 0;
        var maxLineWidth = 0;
        var j2;
        var jLen;
        var fontData = fontManager.getFontByName(documentData.f);
        var charData;
        var cLength = 0;
        var fontProps = getFontProperties(fontData);
        documentData.fWeight = fontProps.weight;
        documentData.fStyle = fontProps.style;
        documentData.finalSize = documentData.s;
        documentData.finalText = this.buildFinalText(documentData.t);
        len = documentData.finalText.length;
        documentData.finalLineHeight = documentData.lh;
        var trackingOffset = documentData.tr / 1e3 * documentData.finalSize;
        var charCode;
        if (documentData.sz) {
          var flag = true;
          var boxWidth = documentData.sz[0];
          var boxHeight = documentData.sz[1];
          var currentHeight;
          var finalText;
          while (flag) {
            finalText = this.buildFinalText(documentData.t);
            currentHeight = 0;
            lineWidth = 0;
            len = finalText.length;
            trackingOffset = documentData.tr / 1e3 * documentData.finalSize;
            var lastSpaceIndex = -1;
            for (i2 = 0; i2 < len; i2 += 1) {
              charCode = finalText[i2].charCodeAt(0);
              newLineFlag = false;
              if (finalText[i2] === " ") {
                lastSpaceIndex = i2;
              } else if (charCode === 13 || charCode === 3) {
                lineWidth = 0;
                newLineFlag = true;
                currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
              }
              if (fontManager.chars) {
                charData = fontManager.getCharData(finalText[i2], fontData.fStyle, fontData.fFamily);
                cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
              } else {
                cLength = fontManager.measureText(finalText[i2], documentData.f, documentData.finalSize);
              }
              if (lineWidth + cLength > boxWidth && finalText[i2] !== " ") {
                if (lastSpaceIndex === -1) {
                  len += 1;
                } else {
                  i2 = lastSpaceIndex;
                }
                currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
                finalText.splice(i2, lastSpaceIndex === i2 ? 1 : 0, "\r");
                lastSpaceIndex = -1;
                lineWidth = 0;
              } else {
                lineWidth += cLength;
                lineWidth += trackingOffset;
              }
            }
            currentHeight += fontData.ascent * documentData.finalSize / 100;
            if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {
              documentData.finalSize -= 1;
              documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;
            } else {
              documentData.finalText = finalText;
              len = documentData.finalText.length;
              flag = false;
            }
          }
        }
        lineWidth = -trackingOffset;
        cLength = 0;
        var uncollapsedSpaces = 0;
        var currentChar;
        for (i2 = 0; i2 < len; i2 += 1) {
          newLineFlag = false;
          currentChar = documentData.finalText[i2];
          charCode = currentChar.charCodeAt(0);
          if (charCode === 13 || charCode === 3) {
            uncollapsedSpaces = 0;
            lineWidths.push(lineWidth);
            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
            lineWidth = -2 * trackingOffset;
            val2 = "";
            newLineFlag = true;
            currentLine += 1;
          } else {
            val2 = currentChar;
          }
          if (fontManager.chars) {
            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);
            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
          } else {
            cLength = fontManager.measureText(val2, documentData.f, documentData.finalSize);
          }
          if (currentChar === " ") {
            uncollapsedSpaces += cLength + trackingOffset;
          } else {
            lineWidth += cLength + trackingOffset + uncollapsedSpaces;
            uncollapsedSpaces = 0;
          }
          letters.push({
            l: cLength,
            an: cLength,
            add: currentSize,
            n: newLineFlag,
            anIndexes: [],
            val: val2,
            line: currentLine,
            animatorJustifyOffset: 0
          });
          if (anchorGrouping == 2) {
            currentSize += cLength;
            if (val2 === "" || val2 === " " || i2 === len - 1) {
              if (val2 === "" || val2 === " ") {
                currentSize -= cLength;
              }
              while (currentPos <= i2) {
                letters[currentPos].an = currentSize;
                letters[currentPos].ind = index2;
                letters[currentPos].extra = cLength;
                currentPos += 1;
              }
              index2 += 1;
              currentSize = 0;
            }
          } else if (anchorGrouping == 3) {
            currentSize += cLength;
            if (val2 === "" || i2 === len - 1) {
              if (val2 === "") {
                currentSize -= cLength;
              }
              while (currentPos <= i2) {
                letters[currentPos].an = currentSize;
                letters[currentPos].ind = index2;
                letters[currentPos].extra = cLength;
                currentPos += 1;
              }
              currentSize = 0;
              index2 += 1;
            }
          } else {
            letters[index2].ind = index2;
            letters[index2].extra = 0;
            index2 += 1;
          }
        }
        documentData.l = letters;
        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
        lineWidths.push(lineWidth);
        if (documentData.sz) {
          documentData.boxWidth = documentData.sz[0];
          documentData.justifyOffset = 0;
        } else {
          documentData.boxWidth = maxLineWidth;
          switch (documentData.j) {
            case 1:
              documentData.justifyOffset = -documentData.boxWidth;
              break;
            case 2:
              documentData.justifyOffset = -documentData.boxWidth / 2;
              break;
            default:
              documentData.justifyOffset = 0;
          }
        }
        documentData.lineWidths = lineWidths;
        var animators = data2.a;
        var animatorData;
        var letterData;
        jLen = animators.length;
        var based;
        var ind;
        var indexes = [];
        for (j2 = 0; j2 < jLen; j2 += 1) {
          animatorData = animators[j2];
          if (animatorData.a.sc) {
            documentData.strokeColorAnim = true;
          }
          if (animatorData.a.sw) {
            documentData.strokeWidthAnim = true;
          }
          if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {
            documentData.fillColorAnim = true;
          }
          ind = 0;
          based = animatorData.s.b;
          for (i2 = 0; i2 < len; i2 += 1) {
            letterData = letters[i2];
            letterData.anIndexes[j2] = ind;
            if (based == 1 && letterData.val !== "" || based == 2 && letterData.val !== "" && letterData.val !== " " || based == 3 && (letterData.n || letterData.val == " " || i2 == len - 1) || based == 4 && (letterData.n || i2 == len - 1)) {
              if (animatorData.s.rn === 1) {
                indexes.push(ind);
              }
              ind += 1;
            }
          }
          data2.a[j2].s.totalChars = ind;
          var currentInd = -1;
          var newInd;
          if (animatorData.s.rn === 1) {
            for (i2 = 0; i2 < len; i2 += 1) {
              letterData = letters[i2];
              if (currentInd != letterData.anIndexes[j2]) {
                currentInd = letterData.anIndexes[j2];
                newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];
              }
              letterData.anIndexes[j2] = newInd;
            }
          }
        }
        documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;
        documentData.ls = documentData.ls || 0;
        documentData.ascent = fontData.ascent * documentData.finalSize / 100;
      };
      TextProperty.prototype.updateDocumentData = function (newData, index2) {
        index2 = index2 === void 0 ? this.keysIndex : index2;
        var dData = this.copyData({}, this.data.d.k[index2].s);
        dData = this.copyData(dData, newData);
        this.data.d.k[index2].s = dData;
        this.recalculate(index2);
        this.elem.addDynamicProperty(this);
      };
      TextProperty.prototype.recalculate = function (index2) {
        var dData = this.data.d.k[index2].s;
        dData.__complete = false;
        this.keysIndex = 0;
        this._isFirstFrame = true;
        this.getValue(dData);
      };
      TextProperty.prototype.canResizeFont = function (_canResize) {
        this.canResize = _canResize;
        this.recalculate(this.keysIndex);
        this.elem.addDynamicProperty(this);
      };
      TextProperty.prototype.setMinimumFontSize = function (_fontValue) {
        this.minimumFontSize = Math.floor(_fontValue) || 1;
        this.recalculate(this.keysIndex);
        this.elem.addDynamicProperty(this);
      };
      var TextSelectorProp = function () {
        var max = Math.max;
        var min = Math.min;
        var floor = Math.floor;
        function TextSelectorPropFactory(elem2, data2) {
          this._currentTextLength = -1;
          this.k = false;
          this.data = data2;
          this.elem = elem2;
          this.comp = elem2.comp;
          this.finalS = 0;
          this.finalE = 0;
          this.initDynamicPropertyContainer(elem2);
          this.s = PropertyFactory.getProp(elem2, data2.s || {
            k: 0
          }, 0, 0, this);
          if ("e" in data2) {
            this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0, this);
          } else {
            this.e = {
              v: 100
            };
          }
          this.o = PropertyFactory.getProp(elem2, data2.o || {
            k: 0
          }, 0, 0, this);
          this.xe = PropertyFactory.getProp(elem2, data2.xe || {
            k: 0
          }, 0, 0, this);
          this.ne = PropertyFactory.getProp(elem2, data2.ne || {
            k: 0
          }, 0, 0, this);
          this.sm = PropertyFactory.getProp(elem2, data2.sm || {
            k: 100
          }, 0, 0, this);
          this.a = PropertyFactory.getProp(elem2, data2.a, 0, 0.01, this);
          if (!this.dynamicProperties.length) {
            this.getValue();
          }
        }
        TextSelectorPropFactory.prototype = {
          getMult: function (ind) {
            if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {
              this.getValue();
            }
            var x1 = 0;
            var y1 = 0;
            var x2 = 1;
            var y2 = 1;
            if (this.ne.v > 0) {
              x1 = this.ne.v / 100;
            } else {
              y1 = -this.ne.v / 100;
            }
            if (this.xe.v > 0) {
              x2 = 1 - this.xe.v / 100;
            } else {
              y2 = 1 + this.xe.v / 100;
            }
            var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;
            var mult = 0;
            var s2 = this.finalS;
            var e2 = this.finalE;
            var type = this.data.sh;
            if (type === 2) {
              if (e2 === s2) {
                mult = ind >= e2 ? 1 : 0;
              } else {
                mult = max(0, min(0.5 / (e2 - s2) + (ind - s2) / (e2 - s2), 1));
              }
              mult = easer(mult);
            } else if (type === 3) {
              if (e2 === s2) {
                mult = ind >= e2 ? 0 : 1;
              } else {
                mult = 1 - max(0, min(0.5 / (e2 - s2) + (ind - s2) / (e2 - s2), 1));
              }
              mult = easer(mult);
            } else if (type === 4) {
              if (e2 === s2) {
                mult = 0;
              } else {
                mult = max(0, min(0.5 / (e2 - s2) + (ind - s2) / (e2 - s2), 1));
                if (mult < 0.5) {
                  mult *= 2;
                } else {
                  mult = 1 - 2 * (mult - 0.5);
                }
              }
              mult = easer(mult);
            } else if (type === 5) {
              if (e2 === s2) {
                mult = 0;
              } else {
                var tot = e2 - s2;
                ind = min(max(0, ind + 0.5 - s2), e2 - s2);
                var x3 = -tot / 2 + ind;
                var a2 = tot / 2;
                mult = Math.sqrt(1 - x3 * x3 / (a2 * a2));
              }
              mult = easer(mult);
            } else if (type === 6) {
              if (e2 === s2) {
                mult = 0;
              } else {
                ind = min(max(0, ind + 0.5 - s2), e2 - s2);
                mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e2 - s2))) / 2;
              }
              mult = easer(mult);
            } else {
              if (ind >= floor(s2)) {
                if (ind - s2 < 0) {
                  mult = max(0, min(min(e2, 1) - (s2 - ind), 1));
                } else {
                  mult = max(0, min(e2 - ind, 1));
                }
              }
              mult = easer(mult);
            }
            if (this.sm.v !== 100) {
              var smoothness = this.sm.v * 0.01;
              if (smoothness === 0) {
                smoothness = 1e-8;
              }
              var threshold = 0.5 - smoothness * 0.5;
              if (mult < threshold) {
                mult = 0;
              } else {
                mult = (mult - threshold) / smoothness;
                if (mult > 1) {
                  mult = 1;
                }
              }
            }
            return mult * this.a.v;
          },
          getValue: function (newCharsFlag) {
            this.iterateDynamicProperties();
            this._mdf = newCharsFlag || this._mdf;
            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;
            if (newCharsFlag && this.data.r === 2) {
              this.e.v = this._currentTextLength;
            }
            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;
            var o2 = this.o.v / divisor;
            var s2 = this.s.v / divisor + o2;
            var e2 = this.e.v / divisor + o2;
            if (s2 > e2) {
              var _s = s2;
              s2 = e2;
              e2 = _s;
            }
            this.finalS = s2;
            this.finalE = e2;
          }
        };
        extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);
        function getTextSelectorProp(elem2, data2, arr2) {
          return new TextSelectorPropFactory(elem2, data2);
        }
        return {
          getTextSelectorProp
        };
      }();
      var poolFactory = function () {
        return function (initialLength, _create, _release) {
          var _length = 0;
          var _maxLength = initialLength;
          var pool = createSizedArray(_maxLength);
          var ob2 = {
            newElement,
            release
          };
          function newElement() {
            var element;
            if (_length) {
              _length -= 1;
              element = pool[_length];
            } else {
              element = _create();
            }
            return element;
          }
          function release(element) {
            if (_length === _maxLength) {
              pool = pooling.double(pool);
              _maxLength *= 2;
            }
            if (_release) {
              _release(element);
            }
            pool[_length] = element;
            _length += 1;
          }
          return ob2;
        };
      }();
      var pooling = function () {
        function double(arr2) {
          return arr2.concat(createSizedArray(arr2.length));
        }
        return {
          double
        };
      }();
      var pointPool = function () {
        function create() {
          return createTypedArray("float32", 2);
        }
        return poolFactory(8, create);
      }();
      var shapePool = function () {
        function create() {
          return new ShapePath();
        }
        function release(shapePath) {
          var len = shapePath._length;
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            pointPool.release(shapePath.v[i2]);
            pointPool.release(shapePath.i[i2]);
            pointPool.release(shapePath.o[i2]);
            shapePath.v[i2] = null;
            shapePath.i[i2] = null;
            shapePath.o[i2] = null;
          }
          shapePath._length = 0;
          shapePath.c = false;
        }
        function clone(shape) {
          var cloned = factory.newElement();
          var i2;
          var len = shape._length === void 0 ? shape.v.length : shape._length;
          cloned.setLength(len);
          cloned.c = shape.c;
          for (i2 = 0; i2 < len; i2 += 1) {
            cloned.setTripleAt(shape.v[i2][0], shape.v[i2][1], shape.o[i2][0], shape.o[i2][1], shape.i[i2][0], shape.i[i2][1], i2);
          }
          return cloned;
        }
        var factory = poolFactory(4, create, release);
        factory.clone = clone;
        return factory;
      }();
      var shapeCollectionPool = function () {
        var ob2 = {
          newShapeCollection,
          release
        };
        var _length = 0;
        var _maxLength = 4;
        var pool = createSizedArray(_maxLength);
        function newShapeCollection() {
          var shapeCollection;
          if (_length) {
            _length -= 1;
            shapeCollection = pool[_length];
          } else {
            shapeCollection = new ShapeCollection();
          }
          return shapeCollection;
        }
        function release(shapeCollection) {
          var i2;
          var len = shapeCollection._length;
          for (i2 = 0; i2 < len; i2 += 1) {
            shapePool.release(shapeCollection.shapes[i2]);
          }
          shapeCollection._length = 0;
          if (_length === _maxLength) {
            pool = pooling.double(pool);
            _maxLength *= 2;
          }
          pool[_length] = shapeCollection;
          _length += 1;
        }
        return ob2;
      }();
      var segmentsLengthPool = function () {
        function create() {
          return {
            lengths: [],
            totalLength: 0
          };
        }
        function release(element) {
          var i2;
          var len = element.lengths.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            bezierLengthPool.release(element.lengths[i2]);
          }
          element.lengths.length = 0;
        }
        return poolFactory(8, create, release);
      }();
      var bezierLengthPool = function () {
        function create() {
          return {
            addedLength: 0,
            percents: createTypedArray("float32", defaultCurveSegments),
            lengths: createTypedArray("float32", defaultCurveSegments)
          };
        }
        return poolFactory(8, create);
      }();
      var markerParser = function () {
        function parsePayloadLines(payload) {
          var lines = payload.split("\r\n");
          var keys2 = {};
          var line;
          var keysCount = 0;
          for (var i2 = 0; i2 < lines.length; i2 += 1) {
            line = lines[i2].split(":");
            if (line.length === 2) {
              keys2[line[0]] = line[1].trim();
              keysCount += 1;
            }
          }
          if (keysCount === 0) {
            throw new Error();
          }
          return keys2;
        }
        return function (_markers) {
          var markers = [];
          for (var i2 = 0; i2 < _markers.length; i2 += 1) {
            var _marker = _markers[i2];
            var markerData = {
              time: _marker.tm,
              duration: _marker.dr
            };
            try {
              markerData.payload = JSON.parse(_markers[i2].cm);
            } catch (_2) {
              try {
                markerData.payload = parsePayloadLines(_markers[i2].cm);
              } catch (__) {
                markerData.payload = {
                  name: _markers[i2]
                };
              }
            }
            markers.push(markerData);
          }
          return markers;
        };
      }();
      function BaseRenderer() {}
      BaseRenderer.prototype.checkLayers = function (num) {
        var i2;
        var len = this.layers.length;
        var data2;
        this.completeLayers = true;
        for (i2 = len - 1; i2 >= 0; i2 -= 1) {
          if (!this.elements[i2]) {
            data2 = this.layers[i2];
            if (data2.ip - data2.st <= num - this.layers[i2].st && data2.op - data2.st > num - this.layers[i2].st) {
              this.buildItem(i2);
            }
          }
          this.completeLayers = this.elements[i2] ? this.completeLayers : false;
        }
        this.checkPendingElements();
      };
      BaseRenderer.prototype.createItem = function (layer) {
        switch (layer.ty) {
          case 2:
            return this.createImage(layer);
          case 0:
            return this.createComp(layer);
          case 1:
            return this.createSolid(layer);
          case 3:
            return this.createNull(layer);
          case 4:
            return this.createShape(layer);
          case 5:
            return this.createText(layer);
          case 6:
            return this.createAudio(layer);
          case 13:
            return this.createCamera(layer);
          case 15:
            return this.createFootage(layer);
          default:
            return this.createNull(layer);
        }
      };
      BaseRenderer.prototype.createCamera = function () {
        throw new Error("You're using a 3d camera. Try the html renderer.");
      };
      BaseRenderer.prototype.createAudio = function (data2) {
        return new AudioElement(data2, this.globalData, this);
      };
      BaseRenderer.prototype.createFootage = function (data2) {
        return new FootageElement(data2, this.globalData, this);
      };
      BaseRenderer.prototype.buildAllItems = function () {
        var i2;
        var len = this.layers.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.buildItem(i2);
        }
        this.checkPendingElements();
      };
      BaseRenderer.prototype.includeLayers = function (newLayers) {
        this.completeLayers = false;
        var i2;
        var len = newLayers.length;
        var j2;
        var jLen = this.layers.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          j2 = 0;
          while (j2 < jLen) {
            if (this.layers[j2].id === newLayers[i2].id) {
              this.layers[j2] = newLayers[i2];
              break;
            }
            j2 += 1;
          }
        }
      };
      BaseRenderer.prototype.setProjectInterface = function (pInterface) {
        this.globalData.projectInterface = pInterface;
      };
      BaseRenderer.prototype.initItems = function () {
        if (!this.globalData.progressiveLoad) {
          this.buildAllItems();
        }
      };
      BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {
        var elements = this.elements;
        var layers2 = this.layers;
        var i2 = 0;
        var len = layers2.length;
        while (i2 < len) {
          if (layers2[i2].ind == parentName) {
            if (!elements[i2] || elements[i2] === true) {
              this.buildItem(i2);
              this.addPendingElement(element);
            } else {
              hierarchy.push(elements[i2]);
              elements[i2].setAsParent();
              if (layers2[i2].parent !== void 0) {
                this.buildElementParenting(element, layers2[i2].parent, hierarchy);
              } else {
                element.setHierarchy(hierarchy);
              }
            }
          }
          i2 += 1;
        }
      };
      BaseRenderer.prototype.addPendingElement = function (element) {
        this.pendingElements.push(element);
      };
      BaseRenderer.prototype.searchExtraCompositions = function (assets) {
        var i2;
        var len = assets.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (assets[i2].xt) {
            var comp = this.createComp(assets[i2]);
            comp.initExpressions();
            this.globalData.projectInterface.registerComposition(comp);
          }
        }
      };
      BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {
        this.globalData.fontManager = new FontManager();
        this.globalData.fontManager.addChars(animData.chars);
        this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);
        this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);
        this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);
        this.globalData.imageLoader = this.animationItem.imagePreloader;
        this.globalData.audioController = this.animationItem.audioController;
        this.globalData.frameId = 0;
        this.globalData.frameRate = animData.fr;
        this.globalData.nm = animData.nm;
        this.globalData.compSize = {
          w: animData.w,
          h: animData.h
        };
      };
      function SVGRenderer(animationItem, config) {
        this.animationItem = animationItem;
        this.layers = null;
        this.renderedFrame = -1;
        this.svgElement = createNS("svg");
        var ariaLabel = "";
        if (config && config.title) {
          var titleElement = createNS("title");
          var titleId = createElementID();
          titleElement.setAttribute("id", titleId);
          titleElement.textContent = config.title;
          this.svgElement.appendChild(titleElement);
          ariaLabel += titleId;
        }
        if (config && config.description) {
          var descElement = createNS("desc");
          var descId = createElementID();
          descElement.setAttribute("id", descId);
          descElement.textContent = config.description;
          this.svgElement.appendChild(descElement);
          ariaLabel += " " + descId;
        }
        if (ariaLabel) {
          this.svgElement.setAttribute("aria-labelledby", ariaLabel);
        }
        var defs = createNS("defs");
        this.svgElement.appendChild(defs);
        var maskElement = createNS("g");
        this.svgElement.appendChild(maskElement);
        this.layerElement = maskElement;
        this.renderConfig = {
          preserveAspectRatio: config && config.preserveAspectRatio || "xMidYMid meet",
          imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
          progressiveLoad: config && config.progressiveLoad || false,
          hideOnTransparent: !(config && config.hideOnTransparent === false),
          viewBoxOnly: config && config.viewBoxOnly || false,
          viewBoxSize: config && config.viewBoxSize || false,
          className: config && config.className || "",
          id: config && config.id || "",
          focusable: config && config.focusable,
          filterSize: {
            width: config && config.filterSize && config.filterSize.width || "100%",
            height: config && config.filterSize && config.filterSize.height || "100%",
            x: config && config.filterSize && config.filterSize.x || "0%",
            y: config && config.filterSize && config.filterSize.y || "0%"
          }
        };
        this.globalData = {
          _mdf: false,
          frameNum: -1,
          defs,
          renderConfig: this.renderConfig
        };
        this.elements = [];
        this.pendingElements = [];
        this.destroyed = false;
        this.rendererType = "svg";
      }
      extendPrototype([BaseRenderer], SVGRenderer);
      SVGRenderer.prototype.createNull = function (data2) {
        return new NullElement(data2, this.globalData, this);
      };
      SVGRenderer.prototype.createShape = function (data2) {
        return new SVGShapeElement(data2, this.globalData, this);
      };
      SVGRenderer.prototype.createText = function (data2) {
        return new SVGTextLottieElement(data2, this.globalData, this);
      };
      SVGRenderer.prototype.createImage = function (data2) {
        return new IImageElement(data2, this.globalData, this);
      };
      SVGRenderer.prototype.createComp = function (data2) {
        return new SVGCompElement(data2, this.globalData, this);
      };
      SVGRenderer.prototype.createSolid = function (data2) {
        return new ISolidElement(data2, this.globalData, this);
      };
      SVGRenderer.prototype.configAnimation = function (animData) {
        this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        if (this.renderConfig.viewBoxSize) {
          this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize);
        } else {
          this.svgElement.setAttribute("viewBox", "0 0 " + animData.w + " " + animData.h);
        }
        if (!this.renderConfig.viewBoxOnly) {
          this.svgElement.setAttribute("width", animData.w);
          this.svgElement.setAttribute("height", animData.h);
          this.svgElement.style.width = "100%";
          this.svgElement.style.height = "100%";
          this.svgElement.style.transform = "translate3d(0,0,0)";
        }
        if (this.renderConfig.className) {
          this.svgElement.setAttribute("class", this.renderConfig.className);
        }
        if (this.renderConfig.id) {
          this.svgElement.setAttribute("id", this.renderConfig.id);
        }
        if (this.renderConfig.focusable !== void 0) {
          this.svgElement.setAttribute("focusable", this.renderConfig.focusable);
        }
        this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio);
        this.animationItem.wrapper.appendChild(this.svgElement);
        var defs = this.globalData.defs;
        this.setupGlobalData(animData, defs);
        this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
        this.data = animData;
        var maskElement = createNS("clipPath");
        var rect = createNS("rect");
        rect.setAttribute("width", animData.w);
        rect.setAttribute("height", animData.h);
        rect.setAttribute("x", 0);
        rect.setAttribute("y", 0);
        var maskId = createElementID();
        maskElement.setAttribute("id", maskId);
        maskElement.appendChild(rect);
        this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + maskId + ")");
        defs.appendChild(maskElement);
        this.layers = animData.layers;
        this.elements = createSizedArray(animData.layers.length);
      };
      SVGRenderer.prototype.destroy = function () {
        if (this.animationItem.wrapper) {
          this.animationItem.wrapper.innerText = "";
        }
        this.layerElement = null;
        this.globalData.defs = null;
        var i2;
        var len = this.layers ? this.layers.length : 0;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.elements[i2]) {
            this.elements[i2].destroy();
          }
        }
        this.elements.length = 0;
        this.destroyed = true;
        this.animationItem = null;
      };
      SVGRenderer.prototype.updateContainerSize = function () {};
      SVGRenderer.prototype.buildItem = function (pos) {
        var elements = this.elements;
        if (elements[pos] || this.layers[pos].ty === 99) {
          return;
        }
        elements[pos] = true;
        var element = this.createItem(this.layers[pos]);
        elements[pos] = element;
        if (expressionsPlugin) {
          if (this.layers[pos].ty === 0) {
            this.globalData.projectInterface.registerComposition(element);
          }
          element.initExpressions();
        }
        this.appendElementInPos(element, pos);
        if (this.layers[pos].tt) {
          if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {
            this.buildItem(pos - 1);
            this.addPendingElement(element);
          } else {
            element.setMatte(elements[pos - 1].layerId);
          }
        }
      };
      SVGRenderer.prototype.checkPendingElements = function () {
        while (this.pendingElements.length) {
          var element = this.pendingElements.pop();
          element.checkParenting();
          if (element.data.tt) {
            var i2 = 0;
            var len = this.elements.length;
            while (i2 < len) {
              if (this.elements[i2] === element) {
                element.setMatte(this.elements[i2 - 1].layerId);
                break;
              }
              i2 += 1;
            }
          }
        }
      };
      SVGRenderer.prototype.renderFrame = function (num) {
        if (this.renderedFrame === num || this.destroyed) {
          return;
        }
        if (num === null) {
          num = this.renderedFrame;
        } else {
          this.renderedFrame = num;
        }
        this.globalData.frameNum = num;
        this.globalData.frameId += 1;
        this.globalData.projectInterface.currentFrame = num;
        this.globalData._mdf = false;
        var i2;
        var len = this.layers.length;
        if (!this.completeLayers) {
          this.checkLayers(num);
        }
        for (i2 = len - 1; i2 >= 0; i2 -= 1) {
          if (this.completeLayers || this.elements[i2]) {
            this.elements[i2].prepareFrame(num - this.layers[i2].st);
          }
        }
        if (this.globalData._mdf) {
          for (i2 = 0; i2 < len; i2 += 1) {
            if (this.completeLayers || this.elements[i2]) {
              this.elements[i2].renderFrame();
            }
          }
        }
      };
      SVGRenderer.prototype.appendElementInPos = function (element, pos) {
        var newElement = element.getBaseElement();
        if (!newElement) {
          return;
        }
        var i2 = 0;
        var nextElement;
        while (i2 < pos) {
          if (this.elements[i2] && this.elements[i2] !== true && this.elements[i2].getBaseElement()) {
            nextElement = this.elements[i2].getBaseElement();
          }
          i2 += 1;
        }
        if (nextElement) {
          this.layerElement.insertBefore(newElement, nextElement);
        } else {
          this.layerElement.appendChild(newElement);
        }
      };
      SVGRenderer.prototype.hide = function () {
        this.layerElement.style.display = "none";
      };
      SVGRenderer.prototype.show = function () {
        this.layerElement.style.display = "block";
      };
      function CanvasRenderer(animationItem, config) {
        this.animationItem = animationItem;
        this.renderConfig = {
          clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,
          context: config && config.context || null,
          progressiveLoad: config && config.progressiveLoad || false,
          preserveAspectRatio: config && config.preserveAspectRatio || "xMidYMid meet",
          imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
          className: config && config.className || "",
          id: config && config.id || ""
        };
        this.renderConfig.dpr = config && config.dpr || 1;
        if (this.animationItem.wrapper) {
          this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;
        }
        this.renderedFrame = -1;
        this.globalData = {
          frameNum: -1,
          _mdf: false,
          renderConfig: this.renderConfig,
          currentGlobalAlpha: -1
        };
        this.contextData = new CVContextData();
        this.elements = [];
        this.pendingElements = [];
        this.transformMat = new Matrix();
        this.completeLayers = false;
        this.rendererType = "canvas";
      }
      extendPrototype([BaseRenderer], CanvasRenderer);
      CanvasRenderer.prototype.createShape = function (data2) {
        return new CVShapeElement(data2, this.globalData, this);
      };
      CanvasRenderer.prototype.createText = function (data2) {
        return new CVTextElement(data2, this.globalData, this);
      };
      CanvasRenderer.prototype.createImage = function (data2) {
        return new CVImageElement(data2, this.globalData, this);
      };
      CanvasRenderer.prototype.createComp = function (data2) {
        return new CVCompElement(data2, this.globalData, this);
      };
      CanvasRenderer.prototype.createSolid = function (data2) {
        return new CVSolidElement(data2, this.globalData, this);
      };
      CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;
      CanvasRenderer.prototype.ctxTransform = function (props) {
        if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {
          return;
        }
        if (!this.renderConfig.clearCanvas) {
          this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);
          return;
        }
        this.transformMat.cloneFromProps(props);
        var cProps = this.contextData.cTr.props;
        this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]);
        this.contextData.cTr.cloneFromProps(this.transformMat.props);
        var trProps = this.contextData.cTr.props;
        this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);
      };
      CanvasRenderer.prototype.ctxOpacity = function (op) {
        if (!this.renderConfig.clearCanvas) {
          this.canvasContext.globalAlpha *= op < 0 ? 0 : op;
          this.globalData.currentGlobalAlpha = this.contextData.cO;
          return;
        }
        this.contextData.cO *= op < 0 ? 0 : op;
        if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {
          this.canvasContext.globalAlpha = this.contextData.cO;
          this.globalData.currentGlobalAlpha = this.contextData.cO;
        }
      };
      CanvasRenderer.prototype.reset = function () {
        if (!this.renderConfig.clearCanvas) {
          this.canvasContext.restore();
          return;
        }
        this.contextData.reset();
      };
      CanvasRenderer.prototype.save = function (actionFlag) {
        if (!this.renderConfig.clearCanvas) {
          this.canvasContext.save();
          return;
        }
        if (actionFlag) {
          this.canvasContext.save();
        }
        var props = this.contextData.cTr.props;
        if (this.contextData._length <= this.contextData.cArrPos) {
          this.contextData.duplicate();
        }
        var i2;
        var arr2 = this.contextData.saved[this.contextData.cArrPos];
        for (i2 = 0; i2 < 16; i2 += 1) {
          arr2[i2] = props[i2];
        }
        this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;
        this.contextData.cArrPos += 1;
      };
      CanvasRenderer.prototype.restore = function (actionFlag) {
        if (!this.renderConfig.clearCanvas) {
          this.canvasContext.restore();
          return;
        }
        if (actionFlag) {
          this.canvasContext.restore();
          this.globalData.blendMode = "source-over";
        }
        this.contextData.cArrPos -= 1;
        var popped = this.contextData.saved[this.contextData.cArrPos];
        var i2;
        var arr2 = this.contextData.cTr.props;
        for (i2 = 0; i2 < 16; i2 += 1) {
          arr2[i2] = popped[i2];
        }
        this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);
        popped = this.contextData.savedOp[this.contextData.cArrPos];
        this.contextData.cO = popped;
        if (this.globalData.currentGlobalAlpha !== popped) {
          this.canvasContext.globalAlpha = popped;
          this.globalData.currentGlobalAlpha = popped;
        }
      };
      CanvasRenderer.prototype.configAnimation = function (animData) {
        if (this.animationItem.wrapper) {
          this.animationItem.container = createTag("canvas");
          var containerStyle = this.animationItem.container.style;
          containerStyle.width = "100%";
          containerStyle.height = "100%";
          var origin2 = "0px 0px 0px";
          containerStyle.transformOrigin = origin2;
          containerStyle.mozTransformOrigin = origin2;
          containerStyle.webkitTransformOrigin = origin2;
          containerStyle["-webkit-transform"] = origin2;
          this.animationItem.wrapper.appendChild(this.animationItem.container);
          this.canvasContext = this.animationItem.container.getContext("2d");
          if (this.renderConfig.className) {
            this.animationItem.container.setAttribute("class", this.renderConfig.className);
          }
          if (this.renderConfig.id) {
            this.animationItem.container.setAttribute("id", this.renderConfig.id);
          }
        } else {
          this.canvasContext = this.renderConfig.context;
        }
        this.data = animData;
        this.layers = animData.layers;
        this.transformCanvas = {
          w: animData.w,
          h: animData.h,
          sx: 0,
          sy: 0,
          tx: 0,
          ty: 0
        };
        this.setupGlobalData(animData, document.body);
        this.globalData.canvasContext = this.canvasContext;
        this.globalData.renderer = this;
        this.globalData.isDashed = false;
        this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
        this.globalData.transformCanvas = this.transformCanvas;
        this.elements = createSizedArray(animData.layers.length);
        this.updateContainerSize();
      };
      CanvasRenderer.prototype.updateContainerSize = function () {
        this.reset();
        var elementWidth;
        var elementHeight;
        if (this.animationItem.wrapper && this.animationItem.container) {
          elementWidth = this.animationItem.wrapper.offsetWidth;
          elementHeight = this.animationItem.wrapper.offsetHeight;
          this.animationItem.container.setAttribute("width", elementWidth * this.renderConfig.dpr);
          this.animationItem.container.setAttribute("height", elementHeight * this.renderConfig.dpr);
        } else {
          elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;
          elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;
        }
        var elementRel;
        var animationRel;
        if (this.renderConfig.preserveAspectRatio.indexOf("meet") !== -1 || this.renderConfig.preserveAspectRatio.indexOf("slice") !== -1) {
          var par = this.renderConfig.preserveAspectRatio.split(" ");
          var fillType = par[1] || "meet";
          var pos = par[0] || "xMidYMid";
          var xPos = pos.substr(0, 4);
          var yPos = pos.substr(4);
          elementRel = elementWidth / elementHeight;
          animationRel = this.transformCanvas.w / this.transformCanvas.h;
          if (animationRel > elementRel && fillType === "meet" || animationRel < elementRel && fillType === "slice") {
            this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
            this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
          } else {
            this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
            this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
          }
          if (xPos === "xMid" && (animationRel < elementRel && fillType === "meet" || animationRel > elementRel && fillType === "slice")) {
            this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;
          } else if (xPos === "xMax" && (animationRel < elementRel && fillType === "meet" || animationRel > elementRel && fillType === "slice")) {
            this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;
          } else {
            this.transformCanvas.tx = 0;
          }
          if (yPos === "YMid" && (animationRel > elementRel && fillType === "meet" || animationRel < elementRel && fillType === "slice")) {
            this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;
          } else if (yPos === "YMax" && (animationRel > elementRel && fillType === "meet" || animationRel < elementRel && fillType === "slice")) {
            this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;
          } else {
            this.transformCanvas.ty = 0;
          }
        } else if (this.renderConfig.preserveAspectRatio === "none") {
          this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
          this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
          this.transformCanvas.tx = 0;
          this.transformCanvas.ty = 0;
        } else {
          this.transformCanvas.sx = this.renderConfig.dpr;
          this.transformCanvas.sy = this.renderConfig.dpr;
          this.transformCanvas.tx = 0;
          this.transformCanvas.ty = 0;
        }
        this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];
        this.ctxTransform(this.transformCanvas.props);
        this.canvasContext.beginPath();
        this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
        this.canvasContext.closePath();
        this.canvasContext.clip();
        this.renderFrame(this.renderedFrame, true);
      };
      CanvasRenderer.prototype.destroy = function () {
        if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {
          this.animationItem.wrapper.innerText = "";
        }
        var i2;
        var len = this.layers ? this.layers.length : 0;
        for (i2 = len - 1; i2 >= 0; i2 -= 1) {
          if (this.elements[i2]) {
            this.elements[i2].destroy();
          }
        }
        this.elements.length = 0;
        this.globalData.canvasContext = null;
        this.animationItem.container = null;
        this.destroyed = true;
      };
      CanvasRenderer.prototype.renderFrame = function (num, forceRender) {
        if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {
          return;
        }
        this.renderedFrame = num;
        this.globalData.frameNum = num - this.animationItem._isFirstFrame;
        this.globalData.frameId += 1;
        this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;
        this.globalData.projectInterface.currentFrame = num;
        var i2;
        var len = this.layers.length;
        if (!this.completeLayers) {
          this.checkLayers(num);
        }
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.completeLayers || this.elements[i2]) {
            this.elements[i2].prepareFrame(num - this.layers[i2].st);
          }
        }
        if (this.globalData._mdf) {
          if (this.renderConfig.clearCanvas === true) {
            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
          } else {
            this.save();
          }
          for (i2 = len - 1; i2 >= 0; i2 -= 1) {
            if (this.completeLayers || this.elements[i2]) {
              this.elements[i2].renderFrame();
            }
          }
          if (this.renderConfig.clearCanvas !== true) {
            this.restore();
          }
        }
      };
      CanvasRenderer.prototype.buildItem = function (pos) {
        var elements = this.elements;
        if (elements[pos] || this.layers[pos].ty === 99) {
          return;
        }
        var element = this.createItem(this.layers[pos], this, this.globalData);
        elements[pos] = element;
        element.initExpressions();
      };
      CanvasRenderer.prototype.checkPendingElements = function () {
        while (this.pendingElements.length) {
          var element = this.pendingElements.pop();
          element.checkParenting();
        }
      };
      CanvasRenderer.prototype.hide = function () {
        this.animationItem.container.style.display = "none";
      };
      CanvasRenderer.prototype.show = function () {
        this.animationItem.container.style.display = "block";
      };
      function HybridRenderer(animationItem, config) {
        this.animationItem = animationItem;
        this.layers = null;
        this.renderedFrame = -1;
        this.renderConfig = {
          className: config && config.className || "",
          imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
          hideOnTransparent: !(config && config.hideOnTransparent === false),
          filterSize: {
            width: config && config.filterSize && config.filterSize.width || "400%",
            height: config && config.filterSize && config.filterSize.height || "400%",
            x: config && config.filterSize && config.filterSize.x || "-100%",
            y: config && config.filterSize && config.filterSize.y || "-100%"
          }
        };
        this.globalData = {
          _mdf: false,
          frameNum: -1,
          renderConfig: this.renderConfig
        };
        this.pendingElements = [];
        this.elements = [];
        this.threeDElements = [];
        this.destroyed = false;
        this.camera = null;
        this.supports3d = true;
        this.rendererType = "html";
      }
      extendPrototype([BaseRenderer], HybridRenderer);
      HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;
      HybridRenderer.prototype.checkPendingElements = function () {
        while (this.pendingElements.length) {
          var element = this.pendingElements.pop();
          element.checkParenting();
        }
      };
      HybridRenderer.prototype.appendElementInPos = function (element, pos) {
        var newDOMElement = element.getBaseElement();
        if (!newDOMElement) {
          return;
        }
        var layer = this.layers[pos];
        if (!layer.ddd || !this.supports3d) {
          if (this.threeDElements) {
            this.addTo3dContainer(newDOMElement, pos);
          } else {
            var i2 = 0;
            var nextDOMElement;
            var nextLayer;
            var tmpDOMElement;
            while (i2 < pos) {
              if (this.elements[i2] && this.elements[i2] !== true && this.elements[i2].getBaseElement) {
                nextLayer = this.elements[i2];
                tmpDOMElement = this.layers[i2].ddd ? this.getThreeDContainerByPos(i2) : nextLayer.getBaseElement();
                nextDOMElement = tmpDOMElement || nextDOMElement;
              }
              i2 += 1;
            }
            if (nextDOMElement) {
              if (!layer.ddd || !this.supports3d) {
                this.layerElement.insertBefore(newDOMElement, nextDOMElement);
              }
            } else if (!layer.ddd || !this.supports3d) {
              this.layerElement.appendChild(newDOMElement);
            }
          }
        } else {
          this.addTo3dContainer(newDOMElement, pos);
        }
      };
      HybridRenderer.prototype.createShape = function (data2) {
        if (!this.supports3d) {
          return new SVGShapeElement(data2, this.globalData, this);
        }
        return new HShapeElement(data2, this.globalData, this);
      };
      HybridRenderer.prototype.createText = function (data2) {
        if (!this.supports3d) {
          return new SVGTextLottieElement(data2, this.globalData, this);
        }
        return new HTextElement(data2, this.globalData, this);
      };
      HybridRenderer.prototype.createCamera = function (data2) {
        this.camera = new HCameraElement(data2, this.globalData, this);
        return this.camera;
      };
      HybridRenderer.prototype.createImage = function (data2) {
        if (!this.supports3d) {
          return new IImageElement(data2, this.globalData, this);
        }
        return new HImageElement(data2, this.globalData, this);
      };
      HybridRenderer.prototype.createComp = function (data2) {
        if (!this.supports3d) {
          return new SVGCompElement(data2, this.globalData, this);
        }
        return new HCompElement(data2, this.globalData, this);
      };
      HybridRenderer.prototype.createSolid = function (data2) {
        if (!this.supports3d) {
          return new ISolidElement(data2, this.globalData, this);
        }
        return new HSolidElement(data2, this.globalData, this);
      };
      HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;
      HybridRenderer.prototype.getThreeDContainerByPos = function (pos) {
        var i2 = 0;
        var len = this.threeDElements.length;
        while (i2 < len) {
          if (this.threeDElements[i2].startPos <= pos && this.threeDElements[i2].endPos >= pos) {
            return this.threeDElements[i2].perspectiveElem;
          }
          i2 += 1;
        }
        return null;
      };
      HybridRenderer.prototype.createThreeDContainer = function (pos, type) {
        var perspectiveElem = createTag("div");
        var style;
        var containerStyle;
        styleDiv(perspectiveElem);
        var container = createTag("div");
        styleDiv(container);
        if (type === "3d") {
          style = perspectiveElem.style;
          style.width = this.globalData.compSize.w + "px";
          style.height = this.globalData.compSize.h + "px";
          var center = "50% 50%";
          style.webkitTransformOrigin = center;
          style.mozTransformOrigin = center;
          style.transformOrigin = center;
          containerStyle = container.style;
          var matrix = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
          containerStyle.transform = matrix;
          containerStyle.webkitTransform = matrix;
        }
        perspectiveElem.appendChild(container);
        var threeDContainerData = {
          container,
          perspectiveElem,
          startPos: pos,
          endPos: pos,
          type
        };
        this.threeDElements.push(threeDContainerData);
        return threeDContainerData;
      };
      HybridRenderer.prototype.build3dContainers = function () {
        var i2;
        var len = this.layers.length;
        var lastThreeDContainerData;
        var currentContainer = "";
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.layers[i2].ddd && this.layers[i2].ty !== 3) {
            if (currentContainer !== "3d") {
              currentContainer = "3d";
              lastThreeDContainerData = this.createThreeDContainer(i2, "3d");
            }
            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i2);
          } else {
            if (currentContainer !== "2d") {
              currentContainer = "2d";
              lastThreeDContainerData = this.createThreeDContainer(i2, "2d");
            }
            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i2);
          }
        }
        len = this.threeDElements.length;
        for (i2 = len - 1; i2 >= 0; i2 -= 1) {
          this.resizerElem.appendChild(this.threeDElements[i2].perspectiveElem);
        }
      };
      HybridRenderer.prototype.addTo3dContainer = function (elem2, pos) {
        var i2 = 0;
        var len = this.threeDElements.length;
        while (i2 < len) {
          if (pos <= this.threeDElements[i2].endPos) {
            var j2 = this.threeDElements[i2].startPos;
            var nextElement;
            while (j2 < pos) {
              if (this.elements[j2] && this.elements[j2].getBaseElement) {
                nextElement = this.elements[j2].getBaseElement();
              }
              j2 += 1;
            }
            if (nextElement) {
              this.threeDElements[i2].container.insertBefore(elem2, nextElement);
            } else {
              this.threeDElements[i2].container.appendChild(elem2);
            }
            break;
          }
          i2 += 1;
        }
      };
      HybridRenderer.prototype.configAnimation = function (animData) {
        var resizerElem = createTag("div");
        var wrapper = this.animationItem.wrapper;
        var style = resizerElem.style;
        style.width = animData.w + "px";
        style.height = animData.h + "px";
        this.resizerElem = resizerElem;
        styleDiv(resizerElem);
        style.transformStyle = "flat";
        style.mozTransformStyle = "flat";
        style.webkitTransformStyle = "flat";
        if (this.renderConfig.className) {
          resizerElem.setAttribute("class", this.renderConfig.className);
        }
        wrapper.appendChild(resizerElem);
        style.overflow = "hidden";
        var svg = createNS("svg");
        svg.setAttribute("width", "1");
        svg.setAttribute("height", "1");
        styleDiv(svg);
        this.resizerElem.appendChild(svg);
        var defs = createNS("defs");
        svg.appendChild(defs);
        this.data = animData;
        this.setupGlobalData(animData, svg);
        this.globalData.defs = defs;
        this.layers = animData.layers;
        this.layerElement = this.resizerElem;
        this.build3dContainers();
        this.updateContainerSize();
      };
      HybridRenderer.prototype.destroy = function () {
        if (this.animationItem.wrapper) {
          this.animationItem.wrapper.innerText = "";
        }
        this.animationItem.container = null;
        this.globalData.defs = null;
        var i2;
        var len = this.layers ? this.layers.length : 0;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.elements[i2].destroy();
        }
        this.elements.length = 0;
        this.destroyed = true;
        this.animationItem = null;
      };
      HybridRenderer.prototype.updateContainerSize = function () {
        var elementWidth = this.animationItem.wrapper.offsetWidth;
        var elementHeight = this.animationItem.wrapper.offsetHeight;
        var elementRel = elementWidth / elementHeight;
        var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;
        var sx;
        var sy;
        var tx;
        var ty;
        if (animationRel > elementRel) {
          sx = elementWidth / this.globalData.compSize.w;
          sy = elementWidth / this.globalData.compSize.w;
          tx = 0;
          ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;
        } else {
          sx = elementHeight / this.globalData.compSize.h;
          sy = elementHeight / this.globalData.compSize.h;
          tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;
          ty = 0;
        }
        var style = this.resizerElem.style;
        style.webkitTransform = "matrix3d(" + sx + ",0,0,0,0," + sy + ",0,0,0,0,1,0," + tx + "," + ty + ",0,1)";
        style.transform = style.webkitTransform;
      };
      HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;
      HybridRenderer.prototype.hide = function () {
        this.resizerElem.style.display = "none";
      };
      HybridRenderer.prototype.show = function () {
        this.resizerElem.style.display = "block";
      };
      HybridRenderer.prototype.initItems = function () {
        this.buildAllItems();
        if (this.camera) {
          this.camera.setup();
        } else {
          var cWidth = this.globalData.compSize.w;
          var cHeight = this.globalData.compSize.h;
          var i2;
          var len = this.threeDElements.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            var style = this.threeDElements[i2].perspectiveElem.style;
            style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + "px";
            style.perspective = style.webkitPerspective;
          }
        }
      };
      HybridRenderer.prototype.searchExtraCompositions = function (assets) {
        var i2;
        var len = assets.length;
        var floatingContainer = createTag("div");
        for (i2 = 0; i2 < len; i2 += 1) {
          if (assets[i2].xt) {
            var comp = this.createComp(assets[i2], floatingContainer, this.globalData.comp, null);
            comp.initExpressions();
            this.globalData.projectInterface.registerComposition(comp);
          }
        }
      };
      function MaskElement(data2, element, globalData) {
        this.data = data2;
        this.element = element;
        this.globalData = globalData;
        this.storedData = [];
        this.masksProperties = this.data.masksProperties || [];
        this.maskElement = null;
        var defs = this.globalData.defs;
        var i2;
        var len = this.masksProperties ? this.masksProperties.length : 0;
        this.viewData = createSizedArray(len);
        this.solidPath = "";
        var path;
        var properties = this.masksProperties;
        var count = 0;
        var currentMasks = [];
        var j2;
        var jLen;
        var layerId = createElementID();
        var rect;
        var expansor;
        var feMorph;
        var x2;
        var maskType = "clipPath";
        var maskRef = "clip-path";
        for (i2 = 0; i2 < len; i2 += 1) {
          if (properties[i2].mode !== "a" && properties[i2].mode !== "n" || properties[i2].inv || properties[i2].o.k !== 100 || properties[i2].o.x) {
            maskType = "mask";
            maskRef = "mask";
          }
          if ((properties[i2].mode === "s" || properties[i2].mode === "i") && count === 0) {
            rect = createNS("rect");
            rect.setAttribute("fill", "#ffffff");
            rect.setAttribute("width", this.element.comp.data.w || 0);
            rect.setAttribute("height", this.element.comp.data.h || 0);
            currentMasks.push(rect);
          } else {
            rect = null;
          }
          path = createNS("path");
          if (properties[i2].mode === "n") {
            this.viewData[i2] = {
              op: PropertyFactory.getProp(this.element, properties[i2].o, 0, 0.01, this.element),
              prop: ShapePropertyFactory.getShapeProp(this.element, properties[i2], 3),
              elem: path,
              lastPath: ""
            };
            defs.appendChild(path);
          } else {
            count += 1;
            path.setAttribute("fill", properties[i2].mode === "s" ? "#000000" : "#ffffff");
            path.setAttribute("clip-rule", "nonzero");
            var filterID;
            if (properties[i2].x.k !== 0) {
              maskType = "mask";
              maskRef = "mask";
              x2 = PropertyFactory.getProp(this.element, properties[i2].x, 0, null, this.element);
              filterID = createElementID();
              expansor = createNS("filter");
              expansor.setAttribute("id", filterID);
              feMorph = createNS("feMorphology");
              feMorph.setAttribute("operator", "erode");
              feMorph.setAttribute("in", "SourceGraphic");
              feMorph.setAttribute("radius", "0");
              expansor.appendChild(feMorph);
              defs.appendChild(expansor);
              path.setAttribute("stroke", properties[i2].mode === "s" ? "#000000" : "#ffffff");
            } else {
              feMorph = null;
              x2 = null;
            }
            this.storedData[i2] = {
              elem: path,
              x: x2,
              expan: feMorph,
              lastPath: "",
              lastOperator: "",
              filterId: filterID,
              lastRadius: 0
            };
            if (properties[i2].mode === "i") {
              jLen = currentMasks.length;
              var g2 = createNS("g");
              for (j2 = 0; j2 < jLen; j2 += 1) {
                g2.appendChild(currentMasks[j2]);
              }
              var mask = createNS("mask");
              mask.setAttribute("mask-type", "alpha");
              mask.setAttribute("id", layerId + "_" + count);
              mask.appendChild(path);
              defs.appendChild(mask);
              g2.setAttribute("mask", "url(" + locationHref + "#" + layerId + "_" + count + ")");
              currentMasks.length = 0;
              currentMasks.push(g2);
            } else {
              currentMasks.push(path);
            }
            if (properties[i2].inv && !this.solidPath) {
              this.solidPath = this.createLayerSolidPath();
            }
            this.viewData[i2] = {
              elem: path,
              lastPath: "",
              op: PropertyFactory.getProp(this.element, properties[i2].o, 0, 0.01, this.element),
              prop: ShapePropertyFactory.getShapeProp(this.element, properties[i2], 3),
              invRect: rect
            };
            if (!this.viewData[i2].prop.k) {
              this.drawPath(properties[i2], this.viewData[i2].prop.v, this.viewData[i2]);
            }
          }
        }
        this.maskElement = createNS(maskType);
        len = currentMasks.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.maskElement.appendChild(currentMasks[i2]);
        }
        if (count > 0) {
          this.maskElement.setAttribute("id", layerId);
          this.element.maskedElement.setAttribute(maskRef, "url(" + locationHref + "#" + layerId + ")");
          defs.appendChild(this.maskElement);
        }
        if (this.viewData.length) {
          this.element.addRenderableComponent(this);
        }
      }
      MaskElement.prototype.getMaskProperty = function (pos) {
        return this.viewData[pos].prop;
      };
      MaskElement.prototype.renderFrame = function (isFirstFrame) {
        var finalMat = this.element.finalTransform.mat;
        var i2;
        var len = this.masksProperties.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.viewData[i2].prop._mdf || isFirstFrame) {
            this.drawPath(this.masksProperties[i2], this.viewData[i2].prop.v, this.viewData[i2]);
          }
          if (this.viewData[i2].op._mdf || isFirstFrame) {
            this.viewData[i2].elem.setAttribute("fill-opacity", this.viewData[i2].op.v);
          }
          if (this.masksProperties[i2].mode !== "n") {
            if (this.viewData[i2].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {
              this.viewData[i2].invRect.setAttribute("transform", finalMat.getInverseMatrix().to2dCSS());
            }
            if (this.storedData[i2].x && (this.storedData[i2].x._mdf || isFirstFrame)) {
              var feMorph = this.storedData[i2].expan;
              if (this.storedData[i2].x.v < 0) {
                if (this.storedData[i2].lastOperator !== "erode") {
                  this.storedData[i2].lastOperator = "erode";
                  this.storedData[i2].elem.setAttribute("filter", "url(" + locationHref + "#" + this.storedData[i2].filterId + ")");
                }
                feMorph.setAttribute("radius", -this.storedData[i2].x.v);
              } else {
                if (this.storedData[i2].lastOperator !== "dilate") {
                  this.storedData[i2].lastOperator = "dilate";
                  this.storedData[i2].elem.setAttribute("filter", null);
                }
                this.storedData[i2].elem.setAttribute("stroke-width", this.storedData[i2].x.v * 2);
              }
            }
          }
        }
      };
      MaskElement.prototype.getMaskelement = function () {
        return this.maskElement;
      };
      MaskElement.prototype.createLayerSolidPath = function () {
        var path = "M0,0 ";
        path += " h" + this.globalData.compSize.w;
        path += " v" + this.globalData.compSize.h;
        path += " h-" + this.globalData.compSize.w;
        path += " v-" + this.globalData.compSize.h + " ";
        return path;
      };
      MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {
        var pathString = " M" + pathNodes.v[0][0] + "," + pathNodes.v[0][1];
        var i2;
        var len;
        len = pathNodes._length;
        for (i2 = 1; i2 < len; i2 += 1) {
          pathString += " C" + pathNodes.o[i2 - 1][0] + "," + pathNodes.o[i2 - 1][1] + " " + pathNodes.i[i2][0] + "," + pathNodes.i[i2][1] + " " + pathNodes.v[i2][0] + "," + pathNodes.v[i2][1];
        }
        if (pathNodes.c && len > 1) {
          pathString += " C" + pathNodes.o[i2 - 1][0] + "," + pathNodes.o[i2 - 1][1] + " " + pathNodes.i[0][0] + "," + pathNodes.i[0][1] + " " + pathNodes.v[0][0] + "," + pathNodes.v[0][1];
        }
        if (viewData.lastPath !== pathString) {
          var pathShapeValue = "";
          if (viewData.elem) {
            if (pathNodes.c) {
              pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;
            }
            viewData.elem.setAttribute("d", pathShapeValue);
          }
          viewData.lastPath = pathString;
        }
      };
      MaskElement.prototype.destroy = function () {
        this.element = null;
        this.globalData = null;
        this.maskElement = null;
        this.data = null;
        this.masksProperties = null;
      };
      function HierarchyElement() {}
      HierarchyElement.prototype = {
        /**
           * @function
           * Initializes hierarchy properties
           *
           */
        initHierarchy: function () {
          this.hierarchy = [];
          this._isParent = false;
          this.checkParenting();
        },
        /**
           * @function
           * Sets layer's hierarchy.
           * @param {array} hierarch
           * layer's parent list
           *
           */
        setHierarchy: function (hierarchy) {
          this.hierarchy = hierarchy;
        },
        /**
           * @function
           * Sets layer as parent.
           *
           */
        setAsParent: function () {
          this._isParent = true;
        },
        /**
           * @function
           * Searches layer's parenting chain
           *
           */
        checkParenting: function () {
          if (this.data.parent !== void 0) {
            this.comp.buildElementParenting(this, this.data.parent, []);
          }
        }
      };
      function FrameElement() {}
      FrameElement.prototype = {
        /**
           * @function
           * Initializes frame related properties.
           *
           */
        initFrame: function () {
          this._isFirstFrame = false;
          this.dynamicProperties = [];
          this._mdf = false;
        },
        /**
           * @function
           * Calculates all dynamic values
           *
           * @param {number} num
           * current frame number in Layer's time
           * @param {boolean} isVisible
           * if layers is currently in range
           *
           */
        prepareProperties: function (num, isVisible) {
          var i2;
          var len = this.dynamicProperties.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (isVisible || this._isParent && this.dynamicProperties[i2].propType === "transform") {
              this.dynamicProperties[i2].getValue();
              if (this.dynamicProperties[i2]._mdf) {
                this.globalData._mdf = true;
                this._mdf = true;
              }
            }
          }
        },
        addDynamicProperty: function (prop) {
          if (this.dynamicProperties.indexOf(prop) === -1) {
            this.dynamicProperties.push(prop);
          }
        }
      };
      function TransformElement() {}
      TransformElement.prototype = {
        initTransform: function () {
          this.finalTransform = {
            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
              o: 0
            },
            _matMdf: false,
            _opMdf: false,
            mat: new Matrix()
          };
          if (this.data.ao) {
            this.finalTransform.mProp.autoOriented = true;
          }
          if (this.data.ty !== 11) ;
        },
        renderTransform: function () {
          this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;
          this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;
          if (this.hierarchy) {
            var mat;
            var finalMat = this.finalTransform.mat;
            var i2 = 0;
            var len = this.hierarchy.length;
            if (!this.finalTransform._matMdf) {
              while (i2 < len) {
                if (this.hierarchy[i2].finalTransform.mProp._mdf) {
                  this.finalTransform._matMdf = true;
                  break;
                }
                i2 += 1;
              }
            }
            if (this.finalTransform._matMdf) {
              mat = this.finalTransform.mProp.v.props;
              finalMat.cloneFromProps(mat);
              for (i2 = 0; i2 < len; i2 += 1) {
                mat = this.hierarchy[i2].finalTransform.mProp.v.props;
                finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);
              }
            }
          }
        },
        globalToLocal: function (pt2) {
          var transforms = [];
          transforms.push(this.finalTransform);
          var flag = true;
          var comp = this.comp;
          while (flag) {
            if (comp.finalTransform) {
              if (comp.data.hasMask) {
                transforms.splice(0, 0, comp.finalTransform);
              }
              comp = comp.comp;
            } else {
              flag = false;
            }
          }
          var i2;
          var len = transforms.length;
          var ptNew;
          for (i2 = 0; i2 < len; i2 += 1) {
            ptNew = transforms[i2].mat.applyToPointArray(0, 0, 0);
            pt2 = [pt2[0] - ptNew[0], pt2[1] - ptNew[1], 0];
          }
          return pt2;
        },
        mHelper: new Matrix()
      };
      function RenderableElement() {}
      RenderableElement.prototype = {
        initRenderable: function () {
          this.isInRange = false;
          this.hidden = false;
          this.isTransparent = false;
          this.renderableComponents = [];
        },
        addRenderableComponent: function (component) {
          if (this.renderableComponents.indexOf(component) === -1) {
            this.renderableComponents.push(component);
          }
        },
        removeRenderableComponent: function (component) {
          if (this.renderableComponents.indexOf(component) !== -1) {
            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);
          }
        },
        prepareRenderableFrame: function (num) {
          this.checkLayerLimits(num);
        },
        checkTransparency: function () {
          if (this.finalTransform.mProp.o.v <= 0) {
            if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {
              this.isTransparent = true;
              this.hide();
            }
          } else if (this.isTransparent) {
            this.isTransparent = false;
            this.show();
          }
        },
        /**
           * @function
           * Initializes frame related properties.
           *
           * @param {number} num
           * current frame number in Layer's time
           *
           */
        checkLayerLimits: function (num) {
          if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {
            if (this.isInRange !== true) {
              this.globalData._mdf = true;
              this._mdf = true;
              this.isInRange = true;
              this.show();
            }
          } else if (this.isInRange !== false) {
            this.globalData._mdf = true;
            this.isInRange = false;
            this.hide();
          }
        },
        renderRenderable: function () {
          var i2;
          var len = this.renderableComponents.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.renderableComponents[i2].renderFrame(this._isFirstFrame);
          }
        },
        sourceRectAtTime: function () {
          return {
            top: 0,
            left: 0,
            width: 100,
            height: 100
          };
        },
        getLayerSize: function () {
          if (this.data.ty === 5) {
            return {
              w: this.data.textData.width,
              h: this.data.textData.height
            };
          }
          return {
            w: this.data.width,
            h: this.data.height
          };
        }
      };
      function RenderableDOMElement() {}
      (function () {
        var _prototype = {
          initElement: function (data2, globalData, comp) {
            this.initFrame();
            this.initBaseData(data2, globalData, comp);
            this.initTransform(data2, globalData, comp);
            this.initHierarchy();
            this.initRenderable();
            this.initRendererElement();
            this.createContainerElements();
            this.createRenderableComponents();
            this.createContent();
            this.hide();
          },
          hide: function () {
            if (!this.hidden && (!this.isInRange || this.isTransparent)) {
              var elem2 = this.baseElement || this.layerElement;
              elem2.style.display = "none";
              this.hidden = true;
            }
          },
          show: function () {
            if (this.isInRange && !this.isTransparent) {
              if (!this.data.hd) {
                var elem2 = this.baseElement || this.layerElement;
                elem2.style.display = "block";
              }
              this.hidden = false;
              this._isFirstFrame = true;
            }
          },
          renderFrame: function () {
            if (this.data.hd || this.hidden) {
              return;
            }
            this.renderTransform();
            this.renderRenderable();
            this.renderElement();
            this.renderInnerContent();
            if (this._isFirstFrame) {
              this._isFirstFrame = false;
            }
          },
          renderInnerContent: function () {},
          prepareFrame: function (num) {
            this._mdf = false;
            this.prepareRenderableFrame(num);
            this.prepareProperties(num, this.isInRange);
            this.checkTransparency();
          },
          destroy: function () {
            this.innerElem = null;
            this.destroyBaseElement();
          }
        };
        extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);
      })();
      function ProcessedElement(element, position) {
        this.elem = element;
        this.pos = position;
      }
      function SVGStyleData(data2, level) {
        this.data = data2;
        this.type = data2.ty;
        this.d = "";
        this.lvl = level;
        this._mdf = false;
        this.closed = data2.hd === true;
        this.pElem = createNS("path");
        this.msElem = null;
      }
      SVGStyleData.prototype.reset = function () {
        this.d = "";
        this._mdf = false;
      };
      function SVGShapeData(transformers, level, shape) {
        this.caches = [];
        this.styles = [];
        this.transformers = transformers;
        this.lStr = "";
        this.sh = shape;
        this.lvl = level;
        this._isAnimated = !!shape.k;
        var i2 = 0;
        var len = transformers.length;
        while (i2 < len) {
          if (transformers[i2].mProps.dynamicProperties.length) {
            this._isAnimated = true;
            break;
          }
          i2 += 1;
        }
      }
      SVGShapeData.prototype.setAsAnimated = function () {
        this._isAnimated = true;
      };
      function SVGTransformData(mProps, op, container) {
        this.transform = {
          mProps,
          op,
          container
        };
        this.elements = [];
        this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
      }
      function SVGStrokeStyleData(elem2, data2, styleOb) {
        this.initDynamicPropertyContainer(elem2);
        this.getValue = this.iterateDynamicProperties;
        this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);
        this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);
        this.d = new DashProperty(elem2, data2.d || {}, "svg", this);
        this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);
        this.style = styleOb;
        this._isAnimated = !!this._isAnimated;
      }
      extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
      function SVGFillStyleData(elem2, data2, styleOb) {
        this.initDynamicPropertyContainer(elem2);
        this.getValue = this.iterateDynamicProperties;
        this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);
        this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);
        this.style = styleOb;
      }
      extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
      function SVGGradientFillStyleData(elem2, data2, styleOb) {
        this.initDynamicPropertyContainer(elem2);
        this.getValue = this.iterateDynamicProperties;
        this.initGradientData(elem2, data2, styleOb);
      }
      SVGGradientFillStyleData.prototype.initGradientData = function (elem2, data2, styleOb) {
        this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);
        this.s = PropertyFactory.getProp(elem2, data2.s, 1, null, this);
        this.e = PropertyFactory.getProp(elem2, data2.e, 1, null, this);
        this.h = PropertyFactory.getProp(elem2, data2.h || {
          k: 0
        }, 0, 0.01, this);
        this.a = PropertyFactory.getProp(elem2, data2.a || {
          k: 0
        }, 0, degToRads, this);
        this.g = new GradientProperty(elem2, data2.g, this);
        this.style = styleOb;
        this.stops = [];
        this.setGradientData(styleOb.pElem, data2);
        this.setGradientOpacity(data2, styleOb);
        this._isAnimated = !!this._isAnimated;
      };
      SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data2) {
        var gradientId = createElementID();
        var gfill = createNS(data2.t === 1 ? "linearGradient" : "radialGradient");
        gfill.setAttribute("id", gradientId);
        gfill.setAttribute("spreadMethod", "pad");
        gfill.setAttribute("gradientUnits", "userSpaceOnUse");
        var stops = [];
        var stop;
        var j2;
        var jLen;
        jLen = data2.g.p * 4;
        for (j2 = 0; j2 < jLen; j2 += 4) {
          stop = createNS("stop");
          gfill.appendChild(stop);
          stops.push(stop);
        }
        pathElement.setAttribute(data2.ty === "gf" ? "fill" : "stroke", "url(" + locationHref + "#" + gradientId + ")");
        this.gf = gfill;
        this.cst = stops;
      };
      SVGGradientFillStyleData.prototype.setGradientOpacity = function (data2, styleOb) {
        if (this.g._hasOpacity && !this.g._collapsable) {
          var stop;
          var j2;
          var jLen;
          var mask = createNS("mask");
          var maskElement = createNS("path");
          mask.appendChild(maskElement);
          var opacityId = createElementID();
          var maskId = createElementID();
          mask.setAttribute("id", maskId);
          var opFill = createNS(data2.t === 1 ? "linearGradient" : "radialGradient");
          opFill.setAttribute("id", opacityId);
          opFill.setAttribute("spreadMethod", "pad");
          opFill.setAttribute("gradientUnits", "userSpaceOnUse");
          jLen = data2.g.k.k[0].s ? data2.g.k.k[0].s.length : data2.g.k.k.length;
          var stops = this.stops;
          for (j2 = data2.g.p * 4; j2 < jLen; j2 += 2) {
            stop = createNS("stop");
            stop.setAttribute("stop-color", "rgb(255,255,255)");
            opFill.appendChild(stop);
            stops.push(stop);
          }
          maskElement.setAttribute(data2.ty === "gf" ? "fill" : "stroke", "url(" + locationHref + "#" + opacityId + ")");
          if (data2.ty === "gs") {
            maskElement.setAttribute("stroke-linecap", lineCapEnum[data2.lc || 2]);
            maskElement.setAttribute("stroke-linejoin", lineJoinEnum[data2.lj || 2]);
            if (data2.lj === 1) {
              maskElement.setAttribute("stroke-miterlimit", data2.ml);
            }
          }
          this.of = opFill;
          this.ms = mask;
          this.ost = stops;
          this.maskId = maskId;
          styleOb.msElem = maskElement;
        }
      };
      extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
      function SVGGradientStrokeStyleData(elem2, data2, styleOb) {
        this.initDynamicPropertyContainer(elem2);
        this.getValue = this.iterateDynamicProperties;
        this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);
        this.d = new DashProperty(elem2, data2.d || {}, "svg", this);
        this.initGradientData(elem2, data2, styleOb);
        this._isAnimated = !!this._isAnimated;
      }
      extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
      function ShapeGroupData() {
        this.it = [];
        this.prevViewData = [];
        this.gr = createNS("g");
      }
      var SVGElementsRenderer = function () {
        var _identityMatrix = new Matrix();
        var _matrixHelper = new Matrix();
        var ob2 = {
          createRenderFunction
        };
        function createRenderFunction(data2) {
          switch (data2.ty) {
            case "fl":
              return renderFill;
            case "gf":
              return renderGradient;
            case "gs":
              return renderGradientStroke;
            case "st":
              return renderStroke;
            case "sh":
            case "el":
            case "rc":
            case "sr":
              return renderPath;
            case "tr":
              return renderContentTransform;
            default:
              return null;
          }
        }
        function renderContentTransform(styleData, itemData, isFirstFrame) {
          if (isFirstFrame || itemData.transform.op._mdf) {
            itemData.transform.container.setAttribute("opacity", itemData.transform.op.v);
          }
          if (isFirstFrame || itemData.transform.mProps._mdf) {
            itemData.transform.container.setAttribute("transform", itemData.transform.mProps.v.to2dCSS());
          }
        }
        function renderPath(styleData, itemData, isFirstFrame) {
          var j2;
          var jLen;
          var pathStringTransformed;
          var redraw;
          var pathNodes;
          var l2;
          var lLen = itemData.styles.length;
          var lvl = itemData.lvl;
          var paths;
          var mat;
          var props;
          var iterations;
          var k2;
          for (l2 = 0; l2 < lLen; l2 += 1) {
            redraw = itemData.sh._mdf || isFirstFrame;
            if (itemData.styles[l2].lvl < lvl) {
              mat = _matrixHelper.reset();
              iterations = lvl - itemData.styles[l2].lvl;
              k2 = itemData.transformers.length - 1;
              while (!redraw && iterations > 0) {
                redraw = itemData.transformers[k2].mProps._mdf || redraw;
                iterations -= 1;
                k2 -= 1;
              }
              if (redraw) {
                iterations = lvl - itemData.styles[l2].lvl;
                k2 = itemData.transformers.length - 1;
                while (iterations > 0) {
                  props = itemData.transformers[k2].mProps.v.props;
                  mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
                  iterations -= 1;
                  k2 -= 1;
                }
              }
            } else {
              mat = _identityMatrix;
            }
            paths = itemData.sh.paths;
            jLen = paths._length;
            if (redraw) {
              pathStringTransformed = "";
              for (j2 = 0; j2 < jLen; j2 += 1) {
                pathNodes = paths.shapes[j2];
                if (pathNodes && pathNodes._length) {
                  pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);
                }
              }
              itemData.caches[l2] = pathStringTransformed;
            } else {
              pathStringTransformed = itemData.caches[l2];
            }
            itemData.styles[l2].d += styleData.hd === true ? "" : pathStringTransformed;
            itemData.styles[l2]._mdf = redraw || itemData.styles[l2]._mdf;
          }
        }
        function renderFill(styleData, itemData, isFirstFrame) {
          var styleElem = itemData.style;
          if (itemData.c._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("fill", "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")");
          }
          if (itemData.o._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("fill-opacity", itemData.o.v);
          }
        }
        function renderGradientStroke(styleData, itemData, isFirstFrame) {
          renderGradient(styleData, itemData, isFirstFrame);
          renderStroke(styleData, itemData, isFirstFrame);
        }
        function renderGradient(styleData, itemData, isFirstFrame) {
          var gfill = itemData.gf;
          var hasOpacity = itemData.g._hasOpacity;
          var pt1 = itemData.s.v;
          var pt2 = itemData.e.v;
          if (itemData.o._mdf || isFirstFrame) {
            var attr = styleData.ty === "gf" ? "fill-opacity" : "stroke-opacity";
            itemData.style.pElem.setAttribute(attr, itemData.o.v);
          }
          if (itemData.s._mdf || isFirstFrame) {
            var attr1 = styleData.t === 1 ? "x1" : "cx";
            var attr2 = attr1 === "x1" ? "y1" : "cy";
            gfill.setAttribute(attr1, pt1[0]);
            gfill.setAttribute(attr2, pt1[1]);
            if (hasOpacity && !itemData.g._collapsable) {
              itemData.of.setAttribute(attr1, pt1[0]);
              itemData.of.setAttribute(attr2, pt1[1]);
            }
          }
          var stops;
          var i2;
          var len;
          var stop;
          if (itemData.g._cmdf || isFirstFrame) {
            stops = itemData.cst;
            var cValues = itemData.g.c;
            len = stops.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              stop = stops[i2];
              stop.setAttribute("offset", cValues[i2 * 4] + "%");
              stop.setAttribute("stop-color", "rgb(" + cValues[i2 * 4 + 1] + "," + cValues[i2 * 4 + 2] + "," + cValues[i2 * 4 + 3] + ")");
            }
          }
          if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
            var oValues = itemData.g.o;
            if (itemData.g._collapsable) {
              stops = itemData.cst;
            } else {
              stops = itemData.ost;
            }
            len = stops.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              stop = stops[i2];
              if (!itemData.g._collapsable) {
                stop.setAttribute("offset", oValues[i2 * 2] + "%");
              }
              stop.setAttribute("stop-opacity", oValues[i2 * 2 + 1]);
            }
          }
          if (styleData.t === 1) {
            if (itemData.e._mdf || isFirstFrame) {
              gfill.setAttribute("x2", pt2[0]);
              gfill.setAttribute("y2", pt2[1]);
              if (hasOpacity && !itemData.g._collapsable) {
                itemData.of.setAttribute("x2", pt2[0]);
                itemData.of.setAttribute("y2", pt2[1]);
              }
            }
          } else {
            var rad;
            if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
              rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
              gfill.setAttribute("r", rad);
              if (hasOpacity && !itemData.g._collapsable) {
                itemData.of.setAttribute("r", rad);
              }
            }
            if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {
              if (!rad) {
                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
              }
              var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);
              var percent = itemData.h.v;
              if (percent >= 1) {
                percent = 0.99;
              } else if (percent <= -1) {
                percent = -0.99;
              }
              var dist = rad * percent;
              var x2 = Math.cos(ang + itemData.a.v) * dist + pt1[0];
              var y2 = Math.sin(ang + itemData.a.v) * dist + pt1[1];
              gfill.setAttribute("fx", x2);
              gfill.setAttribute("fy", y2);
              if (hasOpacity && !itemData.g._collapsable) {
                itemData.of.setAttribute("fx", x2);
                itemData.of.setAttribute("fy", y2);
              }
            }
          }
        }
        function renderStroke(styleData, itemData, isFirstFrame) {
          var styleElem = itemData.style;
          var d2 = itemData.d;
          if (d2 && (d2._mdf || isFirstFrame) && d2.dashStr) {
            styleElem.pElem.setAttribute("stroke-dasharray", d2.dashStr);
            styleElem.pElem.setAttribute("stroke-dashoffset", d2.dashoffset[0]);
          }
          if (itemData.c && (itemData.c._mdf || isFirstFrame)) {
            styleElem.pElem.setAttribute("stroke", "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")");
          }
          if (itemData.o._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("stroke-opacity", itemData.o.v);
          }
          if (itemData.w._mdf || isFirstFrame) {
            styleElem.pElem.setAttribute("stroke-width", itemData.w.v);
            if (styleElem.msElem) {
              styleElem.msElem.setAttribute("stroke-width", itemData.w.v);
            }
          }
        }
        return ob2;
      }();
      function ShapeTransformManager() {
        this.sequences = {};
        this.sequenceList = [];
        this.transform_key_count = 0;
      }
      ShapeTransformManager.prototype = {
        addTransformSequence: function (transforms) {
          var i2;
          var len = transforms.length;
          var key = "_";
          for (i2 = 0; i2 < len; i2 += 1) {
            key += transforms[i2].transform.key + "_";
          }
          var sequence = this.sequences[key];
          if (!sequence) {
            sequence = {
              transforms: [].concat(transforms),
              finalTransform: new Matrix(),
              _mdf: false
            };
            this.sequences[key] = sequence;
            this.sequenceList.push(sequence);
          }
          return sequence;
        },
        processSequence: function (sequence, isFirstFrame) {
          var i2 = 0;
          var len = sequence.transforms.length;
          var _mdf = isFirstFrame;
          while (i2 < len && !isFirstFrame) {
            if (sequence.transforms[i2].transform.mProps._mdf) {
              _mdf = true;
              break;
            }
            i2 += 1;
          }
          if (_mdf) {
            var props;
            sequence.finalTransform.reset();
            for (i2 = len - 1; i2 >= 0; i2 -= 1) {
              props = sequence.transforms[i2].transform.mProps.v.props;
              sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
            }
          }
          sequence._mdf = _mdf;
        },
        processSequences: function (isFirstFrame) {
          var i2;
          var len = this.sequenceList.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.processSequence(this.sequenceList[i2], isFirstFrame);
          }
        },
        getNewKey: function () {
          this.transform_key_count += 1;
          return "_" + this.transform_key_count;
        }
      };
      function CVShapeData(element, data2, styles, transformsManager) {
        this.styledShapes = [];
        this.tr = [0, 0, 0, 0, 0, 0];
        var ty = 4;
        if (data2.ty === "rc") {
          ty = 5;
        } else if (data2.ty === "el") {
          ty = 6;
        } else if (data2.ty === "sr") {
          ty = 7;
        }
        this.sh = ShapePropertyFactory.getShapeProp(element, data2, ty, element);
        var i2;
        var len = styles.length;
        var styledShape;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (!styles[i2].closed) {
            styledShape = {
              transforms: transformsManager.addTransformSequence(styles[i2].transforms),
              trNodes: []
            };
            this.styledShapes.push(styledShape);
            styles[i2].elements.push(styledShape);
          }
        }
      }
      CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;
      function BaseElement() {}
      BaseElement.prototype = {
        checkMasks: function () {
          if (!this.data.hasMask) {
            return false;
          }
          var i2 = 0;
          var len = this.data.masksProperties.length;
          while (i2 < len) {
            if (this.data.masksProperties[i2].mode !== "n" && this.data.masksProperties[i2].cl !== false) {
              return true;
            }
            i2 += 1;
          }
          return false;
        },
        initExpressions: function () {
          this.layerInterface = LayerExpressionInterface(this);
          if (this.data.hasMask && this.maskManager) {
            this.layerInterface.registerMaskInterface(this.maskManager);
          }
          var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
          this.layerInterface.registerEffectsInterface(effectsInterface);
          if (this.data.ty === 0 || this.data.xt) {
            this.compInterface = CompExpressionInterface(this);
          } else if (this.data.ty === 4) {
            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);
            this.layerInterface.content = this.layerInterface.shapeInterface;
          } else if (this.data.ty === 5) {
            this.layerInterface.textInterface = TextExpressionInterface(this);
            this.layerInterface.text = this.layerInterface.textInterface;
          }
        },
        setBlendMode: function () {
          var blendModeValue = getBlendMode(this.data.bm);
          var elem2 = this.baseElement || this.layerElement;
          elem2.style["mix-blend-mode"] = blendModeValue;
        },
        initBaseData: function (data2, globalData, comp) {
          this.globalData = globalData;
          this.comp = comp;
          this.data = data2;
          this.layerId = createElementID();
          if (!this.data.sr) {
            this.data.sr = 1;
          }
          this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);
        },
        getType: function () {
          return this.type;
        },
        sourceRectAtTime: function () {}
      };
      function NullElement(data2, globalData, comp) {
        this.initFrame();
        this.initBaseData(data2, globalData, comp);
        this.initFrame();
        this.initTransform(data2, globalData, comp);
        this.initHierarchy();
      }
      NullElement.prototype.prepareFrame = function (num) {
        this.prepareProperties(num, true);
      };
      NullElement.prototype.renderFrame = function () {};
      NullElement.prototype.getBaseElement = function () {
        return null;
      };
      NullElement.prototype.destroy = function () {};
      NullElement.prototype.sourceRectAtTime = function () {};
      NullElement.prototype.hide = function () {};
      extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);
      function SVGBaseElement() {}
      SVGBaseElement.prototype = {
        initRendererElement: function () {
          this.layerElement = createNS("g");
        },
        createContainerElements: function () {
          this.matteElement = createNS("g");
          this.transformedElement = this.layerElement;
          this.maskedElement = this.layerElement;
          this._sizeChanged = false;
          var layerElementParent = null;
          var filId;
          var fil;
          var gg;
          if (this.data.td) {
            if (this.data.td == 3 || this.data.td == 1) {
              var masker = createNS("mask");
              masker.setAttribute("id", this.layerId);
              masker.setAttribute("mask-type", this.data.td == 3 ? "luminance" : "alpha");
              masker.appendChild(this.layerElement);
              layerElementParent = masker;
              this.globalData.defs.appendChild(masker);
              if (!featureSupport.maskType && this.data.td == 1) {
                masker.setAttribute("mask-type", "luminance");
                filId = createElementID();
                fil = filtersFactory.createFilter(filId);
                this.globalData.defs.appendChild(fil);
                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                gg = createNS("g");
                gg.appendChild(this.layerElement);
                layerElementParent = gg;
                masker.appendChild(gg);
                gg.setAttribute("filter", "url(" + locationHref + "#" + filId + ")");
              }
            } else if (this.data.td == 2) {
              var maskGroup = createNS("mask");
              maskGroup.setAttribute("id", this.layerId);
              maskGroup.setAttribute("mask-type", "alpha");
              var maskGrouper = createNS("g");
              maskGroup.appendChild(maskGrouper);
              filId = createElementID();
              fil = filtersFactory.createFilter(filId);
              var feCTr = createNS("feComponentTransfer");
              feCTr.setAttribute("in", "SourceGraphic");
              fil.appendChild(feCTr);
              var feFunc = createNS("feFuncA");
              feFunc.setAttribute("type", "table");
              feFunc.setAttribute("tableValues", "1.0 0.0");
              feCTr.appendChild(feFunc);
              this.globalData.defs.appendChild(fil);
              var alphaRect = createNS("rect");
              alphaRect.setAttribute("width", this.comp.data.w);
              alphaRect.setAttribute("height", this.comp.data.h);
              alphaRect.setAttribute("x", "0");
              alphaRect.setAttribute("y", "0");
              alphaRect.setAttribute("fill", "#ffffff");
              alphaRect.setAttribute("opacity", "0");
              maskGrouper.setAttribute("filter", "url(" + locationHref + "#" + filId + ")");
              maskGrouper.appendChild(alphaRect);
              maskGrouper.appendChild(this.layerElement);
              layerElementParent = maskGrouper;
              if (!featureSupport.maskType) {
                maskGroup.setAttribute("mask-type", "luminance");
                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
                gg = createNS("g");
                maskGrouper.appendChild(alphaRect);
                gg.appendChild(this.layerElement);
                layerElementParent = gg;
                maskGrouper.appendChild(gg);
              }
              this.globalData.defs.appendChild(maskGroup);
            }
          } else if (this.data.tt) {
            this.matteElement.appendChild(this.layerElement);
            layerElementParent = this.matteElement;
            this.baseElement = this.matteElement;
          } else {
            this.baseElement = this.layerElement;
          }
          if (this.data.ln) {
            this.layerElement.setAttribute("id", this.data.ln);
          }
          if (this.data.cl) {
            this.layerElement.setAttribute("class", this.data.cl);
          }
          if (this.data.ty === 0 && !this.data.hd) {
            var cp = createNS("clipPath");
            var pt2 = createNS("path");
            pt2.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
            var clipId = createElementID();
            cp.setAttribute("id", clipId);
            cp.appendChild(pt2);
            this.globalData.defs.appendChild(cp);
            if (this.checkMasks()) {
              var cpGroup = createNS("g");
              cpGroup.setAttribute("clip-path", "url(" + locationHref + "#" + clipId + ")");
              cpGroup.appendChild(this.layerElement);
              this.transformedElement = cpGroup;
              if (layerElementParent) {
                layerElementParent.appendChild(this.transformedElement);
              } else {
                this.baseElement = this.transformedElement;
              }
            } else {
              this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + clipId + ")");
            }
          }
          if (this.data.bm !== 0) {
            this.setBlendMode();
          }
        },
        renderElement: function () {
          if (this.finalTransform._matMdf) {
            this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS());
          }
          if (this.finalTransform._opMdf) {
            this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v);
          }
        },
        destroyBaseElement: function () {
          this.layerElement = null;
          this.matteElement = null;
          this.maskManager.destroy();
        },
        getBaseElement: function () {
          if (this.data.hd) {
            return null;
          }
          return this.baseElement;
        },
        createRenderableComponents: function () {
          this.maskManager = new MaskElement(this.data, this, this.globalData);
          this.renderableEffectsManager = new SVGEffects(this);
        },
        setMatte: function (id) {
          if (!this.matteElement) {
            return;
          }
          this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
        }
      };
      function IShapeElement() {}
      IShapeElement.prototype = {
        addShapeToModifiers: function (data2) {
          var i2;
          var len = this.shapeModifiers.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.shapeModifiers[i2].addShape(data2);
          }
        },
        isShapeInAnimatedModifiers: function (data2) {
          var i2 = 0;
          var len = this.shapeModifiers.length;
          while (i2 < len) {
            if (this.shapeModifiers[i2].isAnimatedWithShape(data2)) {
              return true;
            }
          }
          return false;
        },
        renderModifiers: function () {
          if (!this.shapeModifiers.length) {
            return;
          }
          var i2;
          var len = this.shapes.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.shapes[i2].sh.reset();
          }
          len = this.shapeModifiers.length;
          var shouldBreakProcess;
          for (i2 = len - 1; i2 >= 0; i2 -= 1) {
            shouldBreakProcess = this.shapeModifiers[i2].processShapes(this._isFirstFrame);
            if (shouldBreakProcess) {
              break;
            }
          }
        },
        searchProcessedElement: function (elem2) {
          var elements = this.processedElements;
          var i2 = 0;
          var len = elements.length;
          while (i2 < len) {
            if (elements[i2].elem === elem2) {
              return elements[i2].pos;
            }
            i2 += 1;
          }
          return 0;
        },
        addProcessedElement: function (elem2, pos) {
          var elements = this.processedElements;
          var i2 = elements.length;
          while (i2) {
            i2 -= 1;
            if (elements[i2].elem === elem2) {
              elements[i2].pos = pos;
              return;
            }
          }
          elements.push(new ProcessedElement(elem2, pos));
        },
        prepareFrame: function (num) {
          this.prepareRenderableFrame(num);
          this.prepareProperties(num, this.isInRange);
        }
      };
      function ITextElement() {}
      ITextElement.prototype.initElement = function (data2, globalData, comp) {
        this.lettersChangedFlag = true;
        this.initFrame();
        this.initBaseData(data2, globalData, comp);
        this.textProperty = new TextProperty(this, data2.t, this.dynamicProperties);
        this.textAnimator = new TextAnimatorProperty(data2.t, this.renderType, this);
        this.initTransform(data2, globalData, comp);
        this.initHierarchy();
        this.initRenderable();
        this.initRendererElement();
        this.createContainerElements();
        this.createRenderableComponents();
        this.createContent();
        this.hide();
        this.textAnimator.searchProperties(this.dynamicProperties);
      };
      ITextElement.prototype.prepareFrame = function (num) {
        this._mdf = false;
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
        if (this.textProperty._mdf || this.textProperty._isFirstFrame) {
          this.buildNewText();
          this.textProperty._isFirstFrame = false;
          this.textProperty._mdf = false;
        }
      };
      ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {
        var j2;
        var jLen = shapes.length;
        var pathNodes;
        var shapeStr = "";
        for (j2 = 0; j2 < jLen; j2 += 1) {
          pathNodes = shapes[j2].ks.k;
          shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);
        }
        return shapeStr;
      };
      ITextElement.prototype.updateDocumentData = function (newData, index2) {
        this.textProperty.updateDocumentData(newData, index2);
      };
      ITextElement.prototype.canResizeFont = function (_canResize) {
        this.textProperty.canResizeFont(_canResize);
      };
      ITextElement.prototype.setMinimumFontSize = function (_fontSize) {
        this.textProperty.setMinimumFontSize(_fontSize);
      };
      ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {
        if (documentData.ps) {
          matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
        }
        matrixHelper.translate(0, -documentData.ls, 0);
        switch (documentData.j) {
          case 1:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);
            break;
          case 2:
            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);
            break;
        }
        matrixHelper.translate(xPos, yPos, 0);
      };
      ITextElement.prototype.buildColor = function (colorData) {
        return "rgb(" + Math.round(colorData[0] * 255) + "," + Math.round(colorData[1] * 255) + "," + Math.round(colorData[2] * 255) + ")";
      };
      ITextElement.prototype.emptyProp = new LetterProps();
      ITextElement.prototype.destroy = function () {};
      function ICompElement() {}
      extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);
      ICompElement.prototype.initElement = function (data2, globalData, comp) {
        this.initFrame();
        this.initBaseData(data2, globalData, comp);
        this.initTransform(data2, globalData, comp);
        this.initRenderable();
        this.initHierarchy();
        this.initRendererElement();
        this.createContainerElements();
        this.createRenderableComponents();
        if (this.data.xt || !globalData.progressiveLoad) {
          this.buildAllItems();
        }
        this.hide();
      };
      ICompElement.prototype.prepareFrame = function (num) {
        this._mdf = false;
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
        if (!this.isInRange && !this.data.xt) {
          return;
        }
        if (!this.tm._placeholder) {
          var timeRemapped = this.tm.v;
          if (timeRemapped === this.data.op) {
            timeRemapped = this.data.op - 1;
          }
          this.renderedFrame = timeRemapped;
        } else {
          this.renderedFrame = num / this.data.sr;
        }
        var i2;
        var len = this.elements.length;
        if (!this.completeLayers) {
          this.checkLayers(this.renderedFrame);
        }
        for (i2 = len - 1; i2 >= 0; i2 -= 1) {
          if (this.completeLayers || this.elements[i2]) {
            this.elements[i2].prepareFrame(this.renderedFrame - this.layers[i2].st);
            if (this.elements[i2]._mdf) {
              this._mdf = true;
            }
          }
        }
      };
      ICompElement.prototype.renderInnerContent = function () {
        var i2;
        var len = this.layers.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.completeLayers || this.elements[i2]) {
            this.elements[i2].renderFrame();
          }
        }
      };
      ICompElement.prototype.setElements = function (elems) {
        this.elements = elems;
      };
      ICompElement.prototype.getElements = function () {
        return this.elements;
      };
      ICompElement.prototype.destroyElements = function () {
        var i2;
        var len = this.layers.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.elements[i2]) {
            this.elements[i2].destroy();
          }
        }
      };
      ICompElement.prototype.destroy = function () {
        this.destroyElements();
        this.destroyBaseElement();
      };
      function IImageElement(data2, globalData, comp) {
        this.assetData = globalData.getAssetData(data2.refId);
        this.initElement(data2, globalData, comp);
        this.sourceRect = {
          top: 0,
          left: 0,
          width: this.assetData.w,
          height: this.assetData.h
        };
      }
      extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);
      IImageElement.prototype.createContent = function () {
        var assetPath = this.globalData.getAssetsPath(this.assetData);
        this.innerElem = createNS("image");
        this.innerElem.setAttribute("width", this.assetData.w + "px");
        this.innerElem.setAttribute("height", this.assetData.h + "px");
        this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);
        this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", assetPath);
        this.layerElement.appendChild(this.innerElem);
      };
      IImageElement.prototype.sourceRectAtTime = function () {
        return this.sourceRect;
      };
      function ISolidElement(data2, globalData, comp) {
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([IImageElement], ISolidElement);
      ISolidElement.prototype.createContent = function () {
        var rect = createNS("rect");
        rect.setAttribute("width", this.data.sw);
        rect.setAttribute("height", this.data.sh);
        rect.setAttribute("fill", this.data.sc);
        this.layerElement.appendChild(rect);
      };
      function AudioElement(data2, globalData, comp) {
        this.initFrame();
        this.initRenderable();
        this.assetData = globalData.getAssetData(data2.refId);
        this.initBaseData(data2, globalData, comp);
        this._isPlaying = false;
        this._canPlay = false;
        var assetPath = this.globalData.getAssetsPath(this.assetData);
        this.audio = this.globalData.audioController.createAudio(assetPath);
        this._currentTime = 0;
        this.globalData.audioController.addAudio(this);
        this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData.frameRate, this) : {
          _placeholder: true
        };
      }
      AudioElement.prototype.prepareFrame = function (num) {
        this.prepareRenderableFrame(num, true);
        this.prepareProperties(num, true);
        if (!this.tm._placeholder) {
          var timeRemapped = this.tm.v;
          this._currentTime = timeRemapped;
        } else {
          this._currentTime = num / this.data.sr;
        }
      };
      extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);
      AudioElement.prototype.renderFrame = function () {
        if (this.isInRange && this._canPlay) {
          if (!this._isPlaying) {
            this.audio.play();
            this.audio.seek(this._currentTime / this.globalData.frameRate);
            this._isPlaying = true;
          } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {
            this.audio.seek(this._currentTime / this.globalData.frameRate);
          }
        }
      };
      AudioElement.prototype.show = function () {};
      AudioElement.prototype.hide = function () {
        this.audio.pause();
        this._isPlaying = false;
      };
      AudioElement.prototype.pause = function () {
        this.audio.pause();
        this._isPlaying = false;
        this._canPlay = false;
      };
      AudioElement.prototype.resume = function () {
        this._canPlay = true;
      };
      AudioElement.prototype.setRate = function (rateValue) {
        this.audio.rate(rateValue);
      };
      AudioElement.prototype.volume = function (volumeValue) {
        this.audio.volume(volumeValue);
      };
      AudioElement.prototype.getBaseElement = function () {
        return null;
      };
      AudioElement.prototype.destroy = function () {};
      AudioElement.prototype.sourceRectAtTime = function () {};
      AudioElement.prototype.initExpressions = function () {};
      function FootageElement(data2, globalData, comp) {
        this.initFrame();
        this.initRenderable();
        this.assetData = globalData.getAssetData(data2.refId);
        this.footageData = globalData.imageLoader.getAsset(this.assetData);
        this.initBaseData(data2, globalData, comp);
      }
      FootageElement.prototype.prepareFrame = function () {};
      extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);
      FootageElement.prototype.getBaseElement = function () {
        return null;
      };
      FootageElement.prototype.renderFrame = function () {};
      FootageElement.prototype.destroy = function () {};
      FootageElement.prototype.initExpressions = function () {
        this.layerInterface = FootageInterface(this);
      };
      FootageElement.prototype.getFootageData = function () {
        return this.footageData;
      };
      function SVGCompElement(data2, globalData, comp) {
        this.layers = data2.layers;
        this.supports3d = true;
        this.completeLayers = false;
        this.pendingElements = [];
        this.elements = this.layers ? createSizedArray(this.layers.length) : [];
        this.initElement(data2, globalData, comp);
        this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData.frameRate, this) : {
          _placeholder: true
        };
      }
      extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);
      function SVGTextLottieElement(data2, globalData, comp) {
        this.textSpans = [];
        this.renderType = "svg";
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);
      SVGTextLottieElement.prototype.createContent = function () {
        if (this.data.singleShape && !this.globalData.fontManager.chars) {
          this.textContainer = createNS("text");
        }
      };
      SVGTextLottieElement.prototype.buildTextContents = function (textArray) {
        var i2 = 0;
        var len = textArray.length;
        var textContents = [];
        var currentTextContent = "";
        while (i2 < len) {
          if (textArray[i2] === String.fromCharCode(13) || textArray[i2] === String.fromCharCode(3)) {
            textContents.push(currentTextContent);
            currentTextContent = "";
          } else {
            currentTextContent += textArray[i2];
          }
          i2 += 1;
        }
        textContents.push(currentTextContent);
        return textContents;
      };
      SVGTextLottieElement.prototype.buildNewText = function () {
        var i2;
        var len;
        var documentData = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);
        if (documentData.fc) {
          this.layerElement.setAttribute("fill", this.buildColor(documentData.fc));
        } else {
          this.layerElement.setAttribute("fill", "rgba(0,0,0,0)");
        }
        if (documentData.sc) {
          this.layerElement.setAttribute("stroke", this.buildColor(documentData.sc));
          this.layerElement.setAttribute("stroke-width", documentData.sw);
        }
        this.layerElement.setAttribute("font-size", documentData.finalSize);
        var fontData = this.globalData.fontManager.getFontByName(documentData.f);
        if (fontData.fClass) {
          this.layerElement.setAttribute("class", fontData.fClass);
        } else {
          this.layerElement.setAttribute("font-family", fontData.fFamily);
          var fWeight = documentData.fWeight;
          var fStyle = documentData.fStyle;
          this.layerElement.setAttribute("font-style", fStyle);
          this.layerElement.setAttribute("font-weight", fWeight);
        }
        this.layerElement.setAttribute("aria-label", documentData.t);
        var letters = documentData.l || [];
        var usesGlyphs = !!this.globalData.fontManager.chars;
        len = letters.length;
        var tSpan;
        var matrixHelper = this.mHelper;
        var shapes;
        var shapeStr = "";
        var singleShape = this.data.singleShape;
        var xPos = 0;
        var yPos = 0;
        var firstLine = true;
        var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;
        if (singleShape && !usesGlyphs && !documentData.sz) {
          var tElement = this.textContainer;
          var justify = "start";
          switch (documentData.j) {
            case 1:
              justify = "end";
              break;
            case 2:
              justify = "middle";
              break;
            default:
              justify = "start";
              break;
          }
          tElement.setAttribute("text-anchor", justify);
          tElement.setAttribute("letter-spacing", trackingOffset);
          var textContent = this.buildTextContents(documentData.finalText);
          len = textContent.length;
          yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;
          for (i2 = 0; i2 < len; i2 += 1) {
            tSpan = this.textSpans[i2] || createNS("tspan");
            tSpan.textContent = textContent[i2];
            tSpan.setAttribute("x", 0);
            tSpan.setAttribute("y", yPos);
            tSpan.style.display = "inherit";
            tElement.appendChild(tSpan);
            this.textSpans[i2] = tSpan;
            yPos += documentData.finalLineHeight;
          }
          this.layerElement.appendChild(tElement);
        } else {
          var cachedSpansLength = this.textSpans.length;
          var shapeData;
          var charData;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (!usesGlyphs || !singleShape || i2 === 0) {
              tSpan = cachedSpansLength > i2 ? this.textSpans[i2] : createNS(usesGlyphs ? "path" : "text");
              if (cachedSpansLength <= i2) {
                tSpan.setAttribute("stroke-linecap", "butt");
                tSpan.setAttribute("stroke-linejoin", "round");
                tSpan.setAttribute("stroke-miterlimit", "4");
                this.textSpans[i2] = tSpan;
                this.layerElement.appendChild(tSpan);
              }
              tSpan.style.display = "inherit";
            }
            matrixHelper.reset();
            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
            if (singleShape) {
              if (letters[i2].n) {
                xPos = -trackingOffset;
                yPos += documentData.yOffset;
                yPos += firstLine ? 1 : 0;
                firstLine = false;
              }
              this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i2].line, xPos, yPos);
              xPos += letters[i2].l || 0;
              xPos += trackingOffset;
            }
            if (usesGlyphs) {
              charData = this.globalData.fontManager.getCharData(documentData.finalText[i2], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
              shapeData = charData && charData.data || {};
              shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
              if (!singleShape) {
                tSpan.setAttribute("d", this.createPathShape(matrixHelper, shapes));
              } else {
                shapeStr += this.createPathShape(matrixHelper, shapes);
              }
            } else {
              if (singleShape) {
                tSpan.setAttribute("transform", "translate(" + matrixHelper.props[12] + "," + matrixHelper.props[13] + ")");
              }
              tSpan.textContent = letters[i2].val;
              tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
            }
          }
          if (singleShape && tSpan) {
            tSpan.setAttribute("d", shapeStr);
          }
        }
        while (i2 < this.textSpans.length) {
          this.textSpans[i2].style.display = "none";
          i2 += 1;
        }
        this._sizeChanged = true;
      };
      SVGTextLottieElement.prototype.sourceRectAtTime = function () {
        this.prepareFrame(this.comp.renderedFrame - this.data.st);
        this.renderInnerContent();
        if (this._sizeChanged) {
          this._sizeChanged = false;
          var textBox = this.layerElement.getBBox();
          this.bbox = {
            top: textBox.y,
            left: textBox.x,
            width: textBox.width,
            height: textBox.height
          };
        }
        return this.bbox;
      };
      SVGTextLottieElement.prototype.renderInnerContent = function () {
        if (!this.data.singleShape) {
          this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
          if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
            this._sizeChanged = true;
            var i2;
            var len;
            var renderedLetters = this.textAnimator.renderedLetters;
            var letters = this.textProperty.currentData.l;
            len = letters.length;
            var renderedLetter;
            var textSpan;
            for (i2 = 0; i2 < len; i2 += 1) {
              if (!letters[i2].n) {
                renderedLetter = renderedLetters[i2];
                textSpan = this.textSpans[i2];
                if (renderedLetter._mdf.m) {
                  textSpan.setAttribute("transform", renderedLetter.m);
                }
                if (renderedLetter._mdf.o) {
                  textSpan.setAttribute("opacity", renderedLetter.o);
                }
                if (renderedLetter._mdf.sw) {
                  textSpan.setAttribute("stroke-width", renderedLetter.sw);
                }
                if (renderedLetter._mdf.sc) {
                  textSpan.setAttribute("stroke", renderedLetter.sc);
                }
                if (renderedLetter._mdf.fc) {
                  textSpan.setAttribute("fill", renderedLetter.fc);
                }
              }
            }
          }
        }
      };
      function SVGShapeElement(data2, globalData, comp) {
        this.shapes = [];
        this.shapesData = data2.shapes;
        this.stylesList = [];
        this.shapeModifiers = [];
        this.itemsData = [];
        this.processedElements = [];
        this.animatedContents = [];
        this.initElement(data2, globalData, comp);
        this.prevViewData = [];
      }
      extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);
      SVGShapeElement.prototype.initSecondaryElement = function () {};
      SVGShapeElement.prototype.identityMatrix = new Matrix();
      SVGShapeElement.prototype.buildExpressionInterface = function () {};
      SVGShapeElement.prototype.createContent = function () {
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
        this.filterUniqueShapes();
      };
      SVGShapeElement.prototype.filterUniqueShapes = function () {
        var i2;
        var len = this.shapes.length;
        var shape;
        var j2;
        var jLen = this.stylesList.length;
        var style;
        var tempShapes = [];
        var areAnimated = false;
        for (j2 = 0; j2 < jLen; j2 += 1) {
          style = this.stylesList[j2];
          areAnimated = false;
          tempShapes.length = 0;
          for (i2 = 0; i2 < len; i2 += 1) {
            shape = this.shapes[i2];
            if (shape.styles.indexOf(style) !== -1) {
              tempShapes.push(shape);
              areAnimated = shape._isAnimated || areAnimated;
            }
          }
          if (tempShapes.length > 1 && areAnimated) {
            this.setShapesAsAnimated(tempShapes);
          }
        }
      };
      SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {
        var i2;
        var len = shapes.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          shapes[i2].setAsAnimated();
        }
      };
      SVGShapeElement.prototype.createStyleElement = function (data2, level) {
        var elementData;
        var styleOb = new SVGStyleData(data2, level);
        var pathElement = styleOb.pElem;
        if (data2.ty === "st") {
          elementData = new SVGStrokeStyleData(this, data2, styleOb);
        } else if (data2.ty === "fl") {
          elementData = new SVGFillStyleData(this, data2, styleOb);
        } else if (data2.ty === "gf" || data2.ty === "gs") {
          var GradientConstructor = data2.ty === "gf" ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;
          elementData = new GradientConstructor(this, data2, styleOb);
          this.globalData.defs.appendChild(elementData.gf);
          if (elementData.maskId) {
            this.globalData.defs.appendChild(elementData.ms);
            this.globalData.defs.appendChild(elementData.of);
            pathElement.setAttribute("mask", "url(" + locationHref + "#" + elementData.maskId + ")");
          }
        }
        if (data2.ty === "st" || data2.ty === "gs") {
          pathElement.setAttribute("stroke-linecap", lineCapEnum[data2.lc || 2]);
          pathElement.setAttribute("stroke-linejoin", lineJoinEnum[data2.lj || 2]);
          pathElement.setAttribute("fill-opacity", "0");
          if (data2.lj === 1) {
            pathElement.setAttribute("stroke-miterlimit", data2.ml);
          }
        }
        if (data2.r === 2) {
          pathElement.setAttribute("fill-rule", "evenodd");
        }
        if (data2.ln) {
          pathElement.setAttribute("id", data2.ln);
        }
        if (data2.cl) {
          pathElement.setAttribute("class", data2.cl);
        }
        if (data2.bm) {
          pathElement.style["mix-blend-mode"] = getBlendMode(data2.bm);
        }
        this.stylesList.push(styleOb);
        this.addToAnimatedContents(data2, elementData);
        return elementData;
      };
      SVGShapeElement.prototype.createGroupElement = function (data2) {
        var elementData = new ShapeGroupData();
        if (data2.ln) {
          elementData.gr.setAttribute("id", data2.ln);
        }
        if (data2.cl) {
          elementData.gr.setAttribute("class", data2.cl);
        }
        if (data2.bm) {
          elementData.gr.style["mix-blend-mode"] = getBlendMode(data2.bm);
        }
        return elementData;
      };
      SVGShapeElement.prototype.createTransformElement = function (data2, container) {
        var transformProperty = TransformPropertyFactory.getTransformProperty(this, data2, this);
        var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);
        this.addToAnimatedContents(data2, elementData);
        return elementData;
      };
      SVGShapeElement.prototype.createShapeElement = function (data2, ownTransformers, level) {
        var ty = 4;
        if (data2.ty === "rc") {
          ty = 5;
        } else if (data2.ty === "el") {
          ty = 6;
        } else if (data2.ty === "sr") {
          ty = 7;
        }
        var shapeProperty = ShapePropertyFactory.getShapeProp(this, data2, ty, this);
        var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);
        this.shapes.push(elementData);
        this.addShapeToModifiers(elementData);
        this.addToAnimatedContents(data2, elementData);
        return elementData;
      };
      SVGShapeElement.prototype.addToAnimatedContents = function (data2, element) {
        var i2 = 0;
        var len = this.animatedContents.length;
        while (i2 < len) {
          if (this.animatedContents[i2].element === element) {
            return;
          }
          i2 += 1;
        }
        this.animatedContents.push({
          fn: SVGElementsRenderer.createRenderFunction(data2),
          element,
          data: data2
        });
      };
      SVGShapeElement.prototype.setElementStyles = function (elementData) {
        var arr2 = elementData.styles;
        var j2;
        var jLen = this.stylesList.length;
        for (j2 = 0; j2 < jLen; j2 += 1) {
          if (!this.stylesList[j2].closed) {
            arr2.push(this.stylesList[j2]);
          }
        }
      };
      SVGShapeElement.prototype.reloadShapes = function () {
        this._isFirstFrame = true;
        var i2;
        var len = this.itemsData.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.prevViewData[i2] = this.itemsData[i2];
        }
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
        this.filterUniqueShapes();
        len = this.dynamicProperties.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.dynamicProperties[i2].getValue();
        }
        this.renderModifiers();
      };
      SVGShapeElement.prototype.searchShapes = function (arr2, itemsData, prevViewData, container, level, transformers, render2) {
        var ownTransformers = [].concat(transformers);
        var i2;
        var len = arr2.length - 1;
        var j2;
        var jLen;
        var ownStyles = [];
        var ownModifiers = [];
        var currentTransform;
        var modifier;
        var processedPos;
        for (i2 = len; i2 >= 0; i2 -= 1) {
          processedPos = this.searchProcessedElement(arr2[i2]);
          if (!processedPos) {
            arr2[i2]._render = render2;
          } else {
            itemsData[i2] = prevViewData[processedPos - 1];
          }
          if (arr2[i2].ty === "fl" || arr2[i2].ty === "st" || arr2[i2].ty === "gf" || arr2[i2].ty === "gs") {
            if (!processedPos) {
              itemsData[i2] = this.createStyleElement(arr2[i2], level);
            } else {
              itemsData[i2].style.closed = false;
            }
            if (arr2[i2]._render) {
              container.appendChild(itemsData[i2].style.pElem);
            }
            ownStyles.push(itemsData[i2].style);
          } else if (arr2[i2].ty === "gr") {
            if (!processedPos) {
              itemsData[i2] = this.createGroupElement(arr2[i2]);
            } else {
              jLen = itemsData[i2].it.length;
              for (j2 = 0; j2 < jLen; j2 += 1) {
                itemsData[i2].prevViewData[j2] = itemsData[i2].it[j2];
              }
            }
            this.searchShapes(arr2[i2].it, itemsData[i2].it, itemsData[i2].prevViewData, itemsData[i2].gr, level + 1, ownTransformers, render2);
            if (arr2[i2]._render) {
              container.appendChild(itemsData[i2].gr);
            }
          } else if (arr2[i2].ty === "tr") {
            if (!processedPos) {
              itemsData[i2] = this.createTransformElement(arr2[i2], container);
            }
            currentTransform = itemsData[i2].transform;
            ownTransformers.push(currentTransform);
          } else if (arr2[i2].ty === "sh" || arr2[i2].ty === "rc" || arr2[i2].ty === "el" || arr2[i2].ty === "sr") {
            if (!processedPos) {
              itemsData[i2] = this.createShapeElement(arr2[i2], ownTransformers, level);
            }
            this.setElementStyles(itemsData[i2]);
          } else if (arr2[i2].ty === "tm" || arr2[i2].ty === "rd" || arr2[i2].ty === "ms" || arr2[i2].ty === "pb") {
            if (!processedPos) {
              modifier = ShapeModifiers.getModifier(arr2[i2].ty);
              modifier.init(this, arr2[i2]);
              itemsData[i2] = modifier;
              this.shapeModifiers.push(modifier);
            } else {
              modifier = itemsData[i2];
              modifier.closed = false;
            }
            ownModifiers.push(modifier);
          } else if (arr2[i2].ty === "rp") {
            if (!processedPos) {
              modifier = ShapeModifiers.getModifier(arr2[i2].ty);
              itemsData[i2] = modifier;
              modifier.init(this, arr2, i2, itemsData);
              this.shapeModifiers.push(modifier);
              render2 = false;
            } else {
              modifier = itemsData[i2];
              modifier.closed = true;
            }
            ownModifiers.push(modifier);
          }
          this.addProcessedElement(arr2[i2], i2 + 1);
        }
        len = ownStyles.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          ownStyles[i2].closed = true;
        }
        len = ownModifiers.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          ownModifiers[i2].closed = true;
        }
      };
      SVGShapeElement.prototype.renderInnerContent = function () {
        this.renderModifiers();
        var i2;
        var len = this.stylesList.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.stylesList[i2].reset();
        }
        this.renderShape();
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.stylesList[i2]._mdf || this._isFirstFrame) {
            if (this.stylesList[i2].msElem) {
              this.stylesList[i2].msElem.setAttribute("d", this.stylesList[i2].d);
              this.stylesList[i2].d = "M0 0" + this.stylesList[i2].d;
            }
            this.stylesList[i2].pElem.setAttribute("d", this.stylesList[i2].d || "M0 0");
          }
        }
      };
      SVGShapeElement.prototype.renderShape = function () {
        var i2;
        var len = this.animatedContents.length;
        var animatedContent;
        for (i2 = 0; i2 < len; i2 += 1) {
          animatedContent = this.animatedContents[i2];
          if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {
            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);
          }
        }
      };
      SVGShapeElement.prototype.destroy = function () {
        this.destroyBaseElement();
        this.shapesData = null;
        this.itemsData = null;
      };
      function SVGTintFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "linearRGB");
        feColorMatrix.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0");
        feColorMatrix.setAttribute("result", "f1");
        filter.appendChild(feColorMatrix);
        feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
        feColorMatrix.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0");
        feColorMatrix.setAttribute("result", "f2");
        filter.appendChild(feColorMatrix);
        this.matrixFilter = feColorMatrix;
        if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {
          var feMerge = createNS("feMerge");
          filter.appendChild(feMerge);
          var feMergeNode;
          feMergeNode = createNS("feMergeNode");
          feMergeNode.setAttribute("in", "SourceGraphic");
          feMerge.appendChild(feMergeNode);
          feMergeNode = createNS("feMergeNode");
          feMergeNode.setAttribute("in", "f2");
          feMerge.appendChild(feMergeNode);
        }
      }
      SVGTintFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var colorBlack = this.filterManager.effectElements[0].p.v;
          var colorWhite = this.filterManager.effectElements[1].p.v;
          var opacity = this.filterManager.effectElements[2].p.v / 100;
          this.matrixFilter.setAttribute("values", colorWhite[0] - colorBlack[0] + " 0 0 0 " + colorBlack[0] + " " + (colorWhite[1] - colorBlack[1]) + " 0 0 0 " + colorBlack[1] + " " + (colorWhite[2] - colorBlack[2]) + " 0 0 0 " + colorBlack[2] + " 0 0 0 " + opacity + " 0");
        }
      };
      function SVGFillFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
        feColorMatrix.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0");
        filter.appendChild(feColorMatrix);
        this.matrixFilter = feColorMatrix;
      }
      SVGFillFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var color = this.filterManager.effectElements[2].p.v;
          var opacity = this.filterManager.effectElements[6].p.v;
          this.matrixFilter.setAttribute("values", "0 0 0 0 " + color[0] + " 0 0 0 0 " + color[1] + " 0 0 0 0 " + color[2] + " 0 0 0 " + opacity + " 0");
        }
      };
      function SVGGaussianBlurEffect(filter, filterManager) {
        filter.setAttribute("x", "-100%");
        filter.setAttribute("y", "-100%");
        filter.setAttribute("width", "300%");
        filter.setAttribute("height", "300%");
        this.filterManager = filterManager;
        var feGaussianBlur = createNS("feGaussianBlur");
        filter.appendChild(feGaussianBlur);
        this.feGaussianBlur = feGaussianBlur;
      }
      SVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var kBlurrinessToSigma = 0.3;
          var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;
          var dimensions = this.filterManager.effectElements[1].p.v;
          var sigmaX = dimensions == 3 ? 0 : sigma;
          var sigmaY = dimensions == 2 ? 0 : sigma;
          this.feGaussianBlur.setAttribute("stdDeviation", sigmaX + " " + sigmaY);
          var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? "wrap" : "duplicate";
          this.feGaussianBlur.setAttribute("edgeMode", edgeMode);
        }
      };
      function SVGStrokeEffect(elem2, filterManager) {
        this.initialized = false;
        this.filterManager = filterManager;
        this.elem = elem2;
        this.paths = [];
      }
      SVGStrokeEffect.prototype.initialize = function () {
        var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
        var path;
        var groupPath;
        var i2;
        var len;
        if (this.filterManager.effectElements[1].p.v === 1) {
          len = this.elem.maskManager.masksProperties.length;
          i2 = 0;
        } else {
          i2 = this.filterManager.effectElements[0].p.v - 1;
          len = i2 + 1;
        }
        groupPath = createNS("g");
        groupPath.setAttribute("fill", "none");
        groupPath.setAttribute("stroke-linecap", "round");
        groupPath.setAttribute("stroke-dashoffset", 1);
        for (i2; i2 < len; i2 += 1) {
          path = createNS("path");
          groupPath.appendChild(path);
          this.paths.push({
            p: path,
            m: i2
          });
        }
        if (this.filterManager.effectElements[10].p.v === 3) {
          var mask = createNS("mask");
          var id = createElementID();
          mask.setAttribute("id", id);
          mask.setAttribute("mask-type", "alpha");
          mask.appendChild(groupPath);
          this.elem.globalData.defs.appendChild(mask);
          var g2 = createNS("g");
          g2.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
          while (elemChildren[0]) {
            g2.appendChild(elemChildren[0]);
          }
          this.elem.layerElement.appendChild(g2);
          this.masker = mask;
          groupPath.setAttribute("stroke", "#fff");
        } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
          if (this.filterManager.effectElements[10].p.v === 2) {
            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
            while (elemChildren.length) {
              this.elem.layerElement.removeChild(elemChildren[0]);
            }
          }
          this.elem.layerElement.appendChild(groupPath);
          this.elem.layerElement.removeAttribute("mask");
          groupPath.setAttribute("stroke", "#fff");
        }
        this.initialized = true;
        this.pathMasker = groupPath;
      };
      SVGStrokeEffect.prototype.renderFrame = function (forceRender) {
        if (!this.initialized) {
          this.initialize();
        }
        var i2;
        var len = this.paths.length;
        var mask;
        var path;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.paths[i2].m !== -1) {
            mask = this.elem.maskManager.viewData[this.paths[i2].m];
            path = this.paths[i2].p;
            if (forceRender || this.filterManager._mdf || mask.prop._mdf) {
              path.setAttribute("d", mask.lastPath);
            }
            if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {
              var dasharrayValue;
              if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {
                var s2 = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
                var e2 = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
                var l2 = path.getTotalLength();
                dasharrayValue = "0 0 0 " + l2 * s2 + " ";
                var lineLength = l2 * (e2 - s2);
                var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
                var units = Math.floor(lineLength / segment);
                var j2;
                for (j2 = 0; j2 < units; j2 += 1) {
                  dasharrayValue += "1 " + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + " ";
                }
                dasharrayValue += "0 " + l2 * 10 + " 0 0";
              } else {
                dasharrayValue = "1 " + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
              }
              path.setAttribute("stroke-dasharray", dasharrayValue);
            }
          }
        }
        if (forceRender || this.filterManager.effectElements[4].p._mdf) {
          this.pathMasker.setAttribute("stroke-width", this.filterManager.effectElements[4].p.v * 2);
        }
        if (forceRender || this.filterManager.effectElements[6].p._mdf) {
          this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v);
        }
        if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
          if (forceRender || this.filterManager.effectElements[3].p._mdf) {
            var color = this.filterManager.effectElements[3].p.v;
            this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(color[0] * 255) + "," + bmFloor(color[1] * 255) + "," + bmFloor(color[2] * 255) + ")");
          }
        }
      };
      function SVGTritoneFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "linearRGB");
        feColorMatrix.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0");
        feColorMatrix.setAttribute("result", "f1");
        filter.appendChild(feColorMatrix);
        var feComponentTransfer = createNS("feComponentTransfer");
        feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
        filter.appendChild(feComponentTransfer);
        this.matrixFilter = feComponentTransfer;
        var feFuncR = createNS("feFuncR");
        feFuncR.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFuncR);
        this.feFuncR = feFuncR;
        var feFuncG = createNS("feFuncG");
        feFuncG.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFuncG);
        this.feFuncG = feFuncG;
        var feFuncB = createNS("feFuncB");
        feFuncB.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFuncB);
        this.feFuncB = feFuncB;
      }
      SVGTritoneFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var color1 = this.filterManager.effectElements[0].p.v;
          var color2 = this.filterManager.effectElements[1].p.v;
          var color3 = this.filterManager.effectElements[2].p.v;
          var tableR = color3[0] + " " + color2[0] + " " + color1[0];
          var tableG = color3[1] + " " + color2[1] + " " + color1[1];
          var tableB = color3[2] + " " + color2[2] + " " + color1[2];
          this.feFuncR.setAttribute("tableValues", tableR);
          this.feFuncG.setAttribute("tableValues", tableG);
          this.feFuncB.setAttribute("tableValues", tableB);
        }
      };
      function SVGProLevelsFilter(filter, filterManager) {
        this.filterManager = filterManager;
        var effectElements = this.filterManager.effectElements;
        var feComponentTransfer = createNS("feComponentTransfer");
        if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {
          this.feFuncR = this.createFeFunc("feFuncR", feComponentTransfer);
        }
        if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {
          this.feFuncG = this.createFeFunc("feFuncG", feComponentTransfer);
        }
        if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {
          this.feFuncB = this.createFeFunc("feFuncB", feComponentTransfer);
        }
        if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {
          this.feFuncA = this.createFeFunc("feFuncA", feComponentTransfer);
        }
        if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {
          feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
          filter.appendChild(feComponentTransfer);
          feComponentTransfer = createNS("feComponentTransfer");
        }
        if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {
          feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
          filter.appendChild(feComponentTransfer);
          this.feFuncRComposed = this.createFeFunc("feFuncR", feComponentTransfer);
          this.feFuncGComposed = this.createFeFunc("feFuncG", feComponentTransfer);
          this.feFuncBComposed = this.createFeFunc("feFuncB", feComponentTransfer);
        }
      }
      SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {
        var feFunc = createNS(type);
        feFunc.setAttribute("type", "table");
        feComponentTransfer.appendChild(feFunc);
        return feFunc;
      };
      SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {
        var cnt = 0;
        var segments = 256;
        var perc;
        var min = Math.min(inputBlack, inputWhite);
        var max = Math.max(inputBlack, inputWhite);
        var table = Array.call(null, {
          length: segments
        });
        var colorValue;
        var pos = 0;
        var outputDelta = outputWhite - outputBlack;
        var inputDelta = inputWhite - inputBlack;
        while (cnt <= 256) {
          perc = cnt / 256;
          if (perc <= min) {
            colorValue = inputDelta < 0 ? outputWhite : outputBlack;
          } else if (perc >= max) {
            colorValue = inputDelta < 0 ? outputBlack : outputWhite;
          } else {
            colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);
          }
          table[pos] = colorValue;
          pos += 1;
          cnt += 256 / (segments - 1);
        }
        return table.join(" ");
      };
      SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
          var val2;
          var effectElements = this.filterManager.effectElements;
          if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {
            val2 = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);
            this.feFuncRComposed.setAttribute("tableValues", val2);
            this.feFuncGComposed.setAttribute("tableValues", val2);
            this.feFuncBComposed.setAttribute("tableValues", val2);
          }
          if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {
            val2 = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);
            this.feFuncR.setAttribute("tableValues", val2);
          }
          if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {
            val2 = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);
            this.feFuncG.setAttribute("tableValues", val2);
          }
          if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {
            val2 = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);
            this.feFuncB.setAttribute("tableValues", val2);
          }
          if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {
            val2 = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);
            this.feFuncA.setAttribute("tableValues", val2);
          }
        }
      };
      function SVGDropShadowEffect(filter, filterManager) {
        var filterSize = filterManager.container.globalData.renderConfig.filterSize;
        filter.setAttribute("x", filterSize.x);
        filter.setAttribute("y", filterSize.y);
        filter.setAttribute("width", filterSize.width);
        filter.setAttribute("height", filterSize.height);
        this.filterManager = filterManager;
        var feGaussianBlur = createNS("feGaussianBlur");
        feGaussianBlur.setAttribute("in", "SourceAlpha");
        feGaussianBlur.setAttribute("result", "drop_shadow_1");
        feGaussianBlur.setAttribute("stdDeviation", "0");
        this.feGaussianBlur = feGaussianBlur;
        filter.appendChild(feGaussianBlur);
        var feOffset = createNS("feOffset");
        feOffset.setAttribute("dx", "25");
        feOffset.setAttribute("dy", "0");
        feOffset.setAttribute("in", "drop_shadow_1");
        feOffset.setAttribute("result", "drop_shadow_2");
        this.feOffset = feOffset;
        filter.appendChild(feOffset);
        var feFlood = createNS("feFlood");
        feFlood.setAttribute("flood-color", "#00ff00");
        feFlood.setAttribute("flood-opacity", "1");
        feFlood.setAttribute("result", "drop_shadow_3");
        this.feFlood = feFlood;
        filter.appendChild(feFlood);
        var feComposite = createNS("feComposite");
        feComposite.setAttribute("in", "drop_shadow_3");
        feComposite.setAttribute("in2", "drop_shadow_2");
        feComposite.setAttribute("operator", "in");
        feComposite.setAttribute("result", "drop_shadow_4");
        filter.appendChild(feComposite);
        var feMerge = createNS("feMerge");
        filter.appendChild(feMerge);
        var feMergeNode;
        feMergeNode = createNS("feMergeNode");
        feMerge.appendChild(feMergeNode);
        feMergeNode = createNS("feMergeNode");
        feMergeNode.setAttribute("in", "SourceGraphic");
        this.feMergeNode = feMergeNode;
        this.feMerge = feMerge;
        this.originalNodeAdded = false;
        feMerge.appendChild(feMergeNode);
      }
      SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {
        if (forceRender || this.filterManager._mdf) {
          if (forceRender || this.filterManager.effectElements[4].p._mdf) {
            this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4);
          }
          if (forceRender || this.filterManager.effectElements[0].p._mdf) {
            var col = this.filterManager.effectElements[0].p.v;
            this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));
          }
          if (forceRender || this.filterManager.effectElements[1].p._mdf) {
            this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255);
          }
          if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
            var distance = this.filterManager.effectElements[3].p.v;
            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;
            var x2 = distance * Math.cos(angle);
            var y2 = distance * Math.sin(angle);
            this.feOffset.setAttribute("dx", x2);
            this.feOffset.setAttribute("dy", y2);
          }
        }
      };
      var _svgMatteSymbols = [];
      function SVGMatte3Effect(filterElem, filterManager, elem2) {
        this.initialized = false;
        this.filterManager = filterManager;
        this.filterElem = filterElem;
        this.elem = elem2;
        elem2.matteElement = createNS("g");
        elem2.matteElement.appendChild(elem2.layerElement);
        elem2.matteElement.appendChild(elem2.transformedElement);
        elem2.baseElement = elem2.matteElement;
      }
      SVGMatte3Effect.prototype.findSymbol = function (mask) {
        var i2 = 0;
        var len = _svgMatteSymbols.length;
        while (i2 < len) {
          if (_svgMatteSymbols[i2] === mask) {
            return _svgMatteSymbols[i2];
          }
          i2 += 1;
        }
        return null;
      };
      SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {
        var parentNode = mask.layerElement.parentNode;
        if (!parentNode) {
          return;
        }
        var children = parentNode.children;
        var i2 = 0;
        var len = children.length;
        while (i2 < len) {
          if (children[i2] === mask.layerElement) {
            break;
          }
          i2 += 1;
        }
        var nextChild;
        if (i2 <= len - 2) {
          nextChild = children[i2 + 1];
        }
        var useElem = createNS("use");
        useElem.setAttribute("href", "#" + symbolId);
        if (nextChild) {
          parentNode.insertBefore(useElem, nextChild);
        } else {
          parentNode.appendChild(useElem);
        }
      };
      SVGMatte3Effect.prototype.setElementAsMask = function (elem2, mask) {
        if (!this.findSymbol(mask)) {
          var symbolId = createElementID();
          var masker = createNS("mask");
          masker.setAttribute("id", mask.layerId);
          masker.setAttribute("mask-type", "alpha");
          _svgMatteSymbols.push(mask);
          var defs = elem2.globalData.defs;
          defs.appendChild(masker);
          var symbol = createNS("symbol");
          symbol.setAttribute("id", symbolId);
          this.replaceInParent(mask, symbolId);
          symbol.appendChild(mask.layerElement);
          defs.appendChild(symbol);
          var useElem = createNS("use");
          useElem.setAttribute("href", "#" + symbolId);
          masker.appendChild(useElem);
          mask.data.hd = false;
          mask.show();
        }
        elem2.setMatte(mask.layerId);
      };
      SVGMatte3Effect.prototype.initialize = function () {
        var ind = this.filterManager.effectElements[0].p.v;
        var elements = this.elem.comp.elements;
        var i2 = 0;
        var len = elements.length;
        while (i2 < len) {
          if (elements[i2] && elements[i2].data.ind === ind) {
            this.setElementAsMask(this.elem, elements[i2]);
          }
          i2 += 1;
        }
        this.initialized = true;
      };
      SVGMatte3Effect.prototype.renderFrame = function () {
        if (!this.initialized) {
          this.initialize();
        }
      };
      function SVGEffects(elem2) {
        var i2;
        var len = elem2.data.ef ? elem2.data.ef.length : 0;
        var filId = createElementID();
        var fil = filtersFactory.createFilter(filId, true);
        var count = 0;
        this.filters = [];
        var filterManager;
        for (i2 = 0; i2 < len; i2 += 1) {
          filterManager = null;
          if (elem2.data.ef[i2].ty === 20) {
            count += 1;
            filterManager = new SVGTintFilter(fil, elem2.effectsManager.effectElements[i2]);
          } else if (elem2.data.ef[i2].ty === 21) {
            count += 1;
            filterManager = new SVGFillFilter(fil, elem2.effectsManager.effectElements[i2]);
          } else if (elem2.data.ef[i2].ty === 22) {
            filterManager = new SVGStrokeEffect(elem2, elem2.effectsManager.effectElements[i2]);
          } else if (elem2.data.ef[i2].ty === 23) {
            count += 1;
            filterManager = new SVGTritoneFilter(fil, elem2.effectsManager.effectElements[i2]);
          } else if (elem2.data.ef[i2].ty === 24) {
            count += 1;
            filterManager = new SVGProLevelsFilter(fil, elem2.effectsManager.effectElements[i2]);
          } else if (elem2.data.ef[i2].ty === 25) {
            count += 1;
            filterManager = new SVGDropShadowEffect(fil, elem2.effectsManager.effectElements[i2]);
          } else if (elem2.data.ef[i2].ty === 28) {
            filterManager = new SVGMatte3Effect(fil, elem2.effectsManager.effectElements[i2], elem2);
          } else if (elem2.data.ef[i2].ty === 29) {
            count += 1;
            filterManager = new SVGGaussianBlurEffect(fil, elem2.effectsManager.effectElements[i2]);
          }
          if (filterManager) {
            this.filters.push(filterManager);
          }
        }
        if (count) {
          elem2.globalData.defs.appendChild(fil);
          elem2.layerElement.setAttribute("filter", "url(" + locationHref + "#" + filId + ")");
        }
        if (this.filters.length) {
          elem2.addRenderableComponent(this);
        }
      }
      SVGEffects.prototype.renderFrame = function (_isFirstFrame) {
        var i2;
        var len = this.filters.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.filters[i2].renderFrame(_isFirstFrame);
        }
      };
      function CVContextData() {
        this.saved = [];
        this.cArrPos = 0;
        this.cTr = new Matrix();
        this.cO = 1;
        var i2;
        var len = 15;
        this.savedOp = createTypedArray("float32", len);
        for (i2 = 0; i2 < len; i2 += 1) {
          this.saved[i2] = createTypedArray("float32", 16);
        }
        this._length = len;
      }
      CVContextData.prototype.duplicate = function () {
        var newLength = this._length * 2;
        var currentSavedOp = this.savedOp;
        this.savedOp = createTypedArray("float32", newLength);
        this.savedOp.set(currentSavedOp);
        var i2 = 0;
        for (i2 = this._length; i2 < newLength; i2 += 1) {
          this.saved[i2] = createTypedArray("float32", 16);
        }
        this._length = newLength;
      };
      CVContextData.prototype.reset = function () {
        this.cArrPos = 0;
        this.cTr.reset();
        this.cO = 1;
      };
      function CVBaseElement() {}
      CVBaseElement.prototype = {
        createElements: function () {},
        initRendererElement: function () {},
        createContainerElements: function () {
          this.canvasContext = this.globalData.canvasContext;
          this.renderableEffectsManager = new CVEffects();
        },
        createContent: function () {},
        setBlendMode: function () {
          var globalData = this.globalData;
          if (globalData.blendMode !== this.data.bm) {
            globalData.blendMode = this.data.bm;
            var blendModeValue = getBlendMode(this.data.bm);
            globalData.canvasContext.globalCompositeOperation = blendModeValue;
          }
        },
        createRenderableComponents: function () {
          this.maskManager = new CVMaskElement(this.data, this);
        },
        hideElement: function () {
          if (!this.hidden && (!this.isInRange || this.isTransparent)) {
            this.hidden = true;
          }
        },
        showElement: function () {
          if (this.isInRange && !this.isTransparent) {
            this.hidden = false;
            this._isFirstFrame = true;
            this.maskManager._isFirstFrame = true;
          }
        },
        renderFrame: function () {
          if (this.hidden || this.data.hd) {
            return;
          }
          this.renderTransform();
          this.renderRenderable();
          this.setBlendMode();
          var forceRealStack = this.data.ty === 0;
          this.globalData.renderer.save(forceRealStack);
          this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);
          this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);
          this.renderInnerContent();
          this.globalData.renderer.restore(forceRealStack);
          if (this.maskManager.hasMasks) {
            this.globalData.renderer.restore(true);
          }
          if (this._isFirstFrame) {
            this._isFirstFrame = false;
          }
        },
        destroy: function () {
          this.canvasContext = null;
          this.data = null;
          this.globalData = null;
          this.maskManager.destroy();
        },
        mHelper: new Matrix()
      };
      CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;
      CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;
      function CVImageElement(data2, globalData, comp) {
        this.assetData = globalData.getAssetData(data2.refId);
        this.img = globalData.imageLoader.getAsset(this.assetData);
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);
      CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;
      CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;
      CVImageElement.prototype.createContent = function () {
        if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
          var canvas = createTag("canvas");
          canvas.width = this.assetData.w;
          canvas.height = this.assetData.h;
          var ctx = canvas.getContext("2d");
          var imgW = this.img.width;
          var imgH = this.img.height;
          var imgRel = imgW / imgH;
          var canvasRel = this.assetData.w / this.assetData.h;
          var widthCrop;
          var heightCrop;
          var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
          if (imgRel > canvasRel && par === "xMidYMid slice" || imgRel < canvasRel && par !== "xMidYMid slice") {
            heightCrop = imgH;
            widthCrop = heightCrop * canvasRel;
          } else {
            widthCrop = imgW;
            heightCrop = widthCrop / canvasRel;
          }
          ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);
          this.img = canvas;
        }
      };
      CVImageElement.prototype.renderInnerContent = function () {
        this.canvasContext.drawImage(this.img, 0, 0);
      };
      CVImageElement.prototype.destroy = function () {
        this.img = null;
      };
      function CVCompElement(data2, globalData, comp) {
        this.completeLayers = false;
        this.layers = data2.layers;
        this.pendingElements = [];
        this.elements = createSizedArray(this.layers.length);
        this.initElement(data2, globalData, comp);
        this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData.frameRate, this) : {
          _placeholder: true
        };
      }
      extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);
      CVCompElement.prototype.renderInnerContent = function () {
        var ctx = this.canvasContext;
        ctx.beginPath();
        ctx.moveTo(0, 0);
        ctx.lineTo(this.data.w, 0);
        ctx.lineTo(this.data.w, this.data.h);
        ctx.lineTo(0, this.data.h);
        ctx.lineTo(0, 0);
        ctx.clip();
        var i2;
        var len = this.layers.length;
        for (i2 = len - 1; i2 >= 0; i2 -= 1) {
          if (this.completeLayers || this.elements[i2]) {
            this.elements[i2].renderFrame();
          }
        }
      };
      CVCompElement.prototype.destroy = function () {
        var i2;
        var len = this.layers.length;
        for (i2 = len - 1; i2 >= 0; i2 -= 1) {
          if (this.elements[i2]) {
            this.elements[i2].destroy();
          }
        }
        this.layers = null;
        this.elements = null;
      };
      function CVMaskElement(data2, element) {
        this.data = data2;
        this.element = element;
        this.masksProperties = this.data.masksProperties || [];
        this.viewData = createSizedArray(this.masksProperties.length);
        var i2;
        var len = this.masksProperties.length;
        var hasMasks = false;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.masksProperties[i2].mode !== "n") {
            hasMasks = true;
          }
          this.viewData[i2] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i2], 3);
        }
        this.hasMasks = hasMasks;
        if (hasMasks) {
          this.element.addRenderableComponent(this);
        }
      }
      CVMaskElement.prototype.renderFrame = function () {
        if (!this.hasMasks) {
          return;
        }
        var transform2 = this.element.finalTransform.mat;
        var ctx = this.element.canvasContext;
        var i2;
        var len = this.masksProperties.length;
        var pt2;
        var pts;
        var data2;
        ctx.beginPath();
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.masksProperties[i2].mode !== "n") {
            if (this.masksProperties[i2].inv) {
              ctx.moveTo(0, 0);
              ctx.lineTo(this.element.globalData.compSize.w, 0);
              ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);
              ctx.lineTo(0, this.element.globalData.compSize.h);
              ctx.lineTo(0, 0);
            }
            data2 = this.viewData[i2].v;
            pt2 = transform2.applyToPointArray(data2.v[0][0], data2.v[0][1], 0);
            ctx.moveTo(pt2[0], pt2[1]);
            var j2;
            var jLen = data2._length;
            for (j2 = 1; j2 < jLen; j2 += 1) {
              pts = transform2.applyToTriplePoints(data2.o[j2 - 1], data2.i[j2], data2.v[j2]);
              ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
            }
            pts = transform2.applyToTriplePoints(data2.o[j2 - 1], data2.i[0], data2.v[0]);
            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
          }
        }
        this.element.globalData.renderer.save(true);
        ctx.clip();
      };
      CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;
      CVMaskElement.prototype.destroy = function () {
        this.element = null;
      };
      function CVShapeElement(data2, globalData, comp) {
        this.shapes = [];
        this.shapesData = data2.shapes;
        this.stylesList = [];
        this.itemsData = [];
        this.prevViewData = [];
        this.shapeModifiers = [];
        this.processedElements = [];
        this.transformsManager = new ShapeTransformManager();
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);
      CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;
      CVShapeElement.prototype.transformHelper = {
        opacity: 1,
        _opMdf: false
      };
      CVShapeElement.prototype.dashResetter = [];
      CVShapeElement.prototype.createContent = function () {
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
      };
      CVShapeElement.prototype.createStyleElement = function (data2, transforms) {
        var styleElem = {
          data: data2,
          type: data2.ty,
          preTransforms: this.transformsManager.addTransformSequence(transforms),
          transforms: [],
          elements: [],
          closed: data2.hd === true
        };
        var elementData = {};
        if (data2.ty === "fl" || data2.ty === "st") {
          elementData.c = PropertyFactory.getProp(this, data2.c, 1, 255, this);
          if (!elementData.c.k) {
            styleElem.co = "rgb(" + bmFloor(elementData.c.v[0]) + "," + bmFloor(elementData.c.v[1]) + "," + bmFloor(elementData.c.v[2]) + ")";
          }
        } else if (data2.ty === "gf" || data2.ty === "gs") {
          elementData.s = PropertyFactory.getProp(this, data2.s, 1, null, this);
          elementData.e = PropertyFactory.getProp(this, data2.e, 1, null, this);
          elementData.h = PropertyFactory.getProp(this, data2.h || {
            k: 0
          }, 0, 0.01, this);
          elementData.a = PropertyFactory.getProp(this, data2.a || {
            k: 0
          }, 0, degToRads, this);
          elementData.g = new GradientProperty(this, data2.g, this);
        }
        elementData.o = PropertyFactory.getProp(this, data2.o, 0, 0.01, this);
        if (data2.ty === "st" || data2.ty === "gs") {
          styleElem.lc = lineCapEnum[data2.lc || 2];
          styleElem.lj = lineJoinEnum[data2.lj || 2];
          if (data2.lj == 1) {
            styleElem.ml = data2.ml;
          }
          elementData.w = PropertyFactory.getProp(this, data2.w, 0, null, this);
          if (!elementData.w.k) {
            styleElem.wi = elementData.w.v;
          }
          if (data2.d) {
            var d2 = new DashProperty(this, data2.d, "canvas", this);
            elementData.d = d2;
            if (!elementData.d.k) {
              styleElem.da = elementData.d.dashArray;
              styleElem.do = elementData.d.dashoffset[0];
            }
          }
        } else {
          styleElem.r = data2.r === 2 ? "evenodd" : "nonzero";
        }
        this.stylesList.push(styleElem);
        elementData.style = styleElem;
        return elementData;
      };
      CVShapeElement.prototype.createGroupElement = function () {
        var elementData = {
          it: [],
          prevViewData: []
        };
        return elementData;
      };
      CVShapeElement.prototype.createTransformElement = function (data2) {
        var elementData = {
          transform: {
            opacity: 1,
            _opMdf: false,
            key: this.transformsManager.getNewKey(),
            op: PropertyFactory.getProp(this, data2.o, 0, 0.01, this),
            mProps: TransformPropertyFactory.getTransformProperty(this, data2, this)
          }
        };
        return elementData;
      };
      CVShapeElement.prototype.createShapeElement = function (data2) {
        var elementData = new CVShapeData(this, data2, this.stylesList, this.transformsManager);
        this.shapes.push(elementData);
        this.addShapeToModifiers(elementData);
        return elementData;
      };
      CVShapeElement.prototype.reloadShapes = function () {
        this._isFirstFrame = true;
        var i2;
        var len = this.itemsData.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.prevViewData[i2] = this.itemsData[i2];
        }
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
        len = this.dynamicProperties.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          this.dynamicProperties[i2].getValue();
        }
        this.renderModifiers();
        this.transformsManager.processSequences(this._isFirstFrame);
      };
      CVShapeElement.prototype.addTransformToStyleList = function (transform2) {
        var i2;
        var len = this.stylesList.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (!this.stylesList[i2].closed) {
            this.stylesList[i2].transforms.push(transform2);
          }
        }
      };
      CVShapeElement.prototype.removeTransformFromStyleList = function () {
        var i2;
        var len = this.stylesList.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (!this.stylesList[i2].closed) {
            this.stylesList[i2].transforms.pop();
          }
        }
      };
      CVShapeElement.prototype.closeStyles = function (styles) {
        var i2;
        var len = styles.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          styles[i2].closed = true;
        }
      };
      CVShapeElement.prototype.searchShapes = function (arr2, itemsData, prevViewData, shouldRender, transforms) {
        var i2;
        var len = arr2.length - 1;
        var j2;
        var jLen;
        var ownStyles = [];
        var ownModifiers = [];
        var processedPos;
        var modifier;
        var currentTransform;
        var ownTransforms = [].concat(transforms);
        for (i2 = len; i2 >= 0; i2 -= 1) {
          processedPos = this.searchProcessedElement(arr2[i2]);
          if (!processedPos) {
            arr2[i2]._shouldRender = shouldRender;
          } else {
            itemsData[i2] = prevViewData[processedPos - 1];
          }
          if (arr2[i2].ty === "fl" || arr2[i2].ty === "st" || arr2[i2].ty === "gf" || arr2[i2].ty === "gs") {
            if (!processedPos) {
              itemsData[i2] = this.createStyleElement(arr2[i2], ownTransforms);
            } else {
              itemsData[i2].style.closed = false;
            }
            ownStyles.push(itemsData[i2].style);
          } else if (arr2[i2].ty === "gr") {
            if (!processedPos) {
              itemsData[i2] = this.createGroupElement(arr2[i2]);
            } else {
              jLen = itemsData[i2].it.length;
              for (j2 = 0; j2 < jLen; j2 += 1) {
                itemsData[i2].prevViewData[j2] = itemsData[i2].it[j2];
              }
            }
            this.searchShapes(arr2[i2].it, itemsData[i2].it, itemsData[i2].prevViewData, shouldRender, ownTransforms);
          } else if (arr2[i2].ty === "tr") {
            if (!processedPos) {
              currentTransform = this.createTransformElement(arr2[i2]);
              itemsData[i2] = currentTransform;
            }
            ownTransforms.push(itemsData[i2]);
            this.addTransformToStyleList(itemsData[i2]);
          } else if (arr2[i2].ty === "sh" || arr2[i2].ty === "rc" || arr2[i2].ty === "el" || arr2[i2].ty === "sr") {
            if (!processedPos) {
              itemsData[i2] = this.createShapeElement(arr2[i2]);
            }
          } else if (arr2[i2].ty === "tm" || arr2[i2].ty === "rd" || arr2[i2].ty === "pb") {
            if (!processedPos) {
              modifier = ShapeModifiers.getModifier(arr2[i2].ty);
              modifier.init(this, arr2[i2]);
              itemsData[i2] = modifier;
              this.shapeModifiers.push(modifier);
            } else {
              modifier = itemsData[i2];
              modifier.closed = false;
            }
            ownModifiers.push(modifier);
          } else if (arr2[i2].ty === "rp") {
            if (!processedPos) {
              modifier = ShapeModifiers.getModifier(arr2[i2].ty);
              itemsData[i2] = modifier;
              modifier.init(this, arr2, i2, itemsData);
              this.shapeModifiers.push(modifier);
              shouldRender = false;
            } else {
              modifier = itemsData[i2];
              modifier.closed = true;
            }
            ownModifiers.push(modifier);
          }
          this.addProcessedElement(arr2[i2], i2 + 1);
        }
        this.removeTransformFromStyleList();
        this.closeStyles(ownStyles);
        len = ownModifiers.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          ownModifiers[i2].closed = true;
        }
      };
      CVShapeElement.prototype.renderInnerContent = function () {
        this.transformHelper.opacity = 1;
        this.transformHelper._opMdf = false;
        this.renderModifiers();
        this.transformsManager.processSequences(this._isFirstFrame);
        this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);
      };
      CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {
        if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {
          groupTransform.opacity = parentTransform.opacity;
          groupTransform.opacity *= groupTransform.op.v;
          groupTransform._opMdf = true;
        }
      };
      CVShapeElement.prototype.drawLayer = function () {
        var i2;
        var len = this.stylesList.length;
        var j2;
        var jLen;
        var k2;
        var kLen;
        var elems;
        var nodes;
        var renderer = this.globalData.renderer;
        var ctx = this.globalData.canvasContext;
        var type;
        var currentStyle;
        for (i2 = 0; i2 < len; i2 += 1) {
          currentStyle = this.stylesList[i2];
          type = currentStyle.type;
          if (!((type === "st" || type === "gs") && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {
            renderer.save();
            elems = currentStyle.elements;
            if (type === "st" || type === "gs") {
              ctx.strokeStyle = type === "st" ? currentStyle.co : currentStyle.grd;
              ctx.lineWidth = currentStyle.wi;
              ctx.lineCap = currentStyle.lc;
              ctx.lineJoin = currentStyle.lj;
              ctx.miterLimit = currentStyle.ml || 0;
            } else {
              ctx.fillStyle = type === "fl" ? currentStyle.co : currentStyle.grd;
            }
            renderer.ctxOpacity(currentStyle.coOp);
            if (type !== "st" && type !== "gs") {
              ctx.beginPath();
            }
            renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);
            jLen = elems.length;
            for (j2 = 0; j2 < jLen; j2 += 1) {
              if (type === "st" || type === "gs") {
                ctx.beginPath();
                if (currentStyle.da) {
                  ctx.setLineDash(currentStyle.da);
                  ctx.lineDashOffset = currentStyle.do;
                }
              }
              nodes = elems[j2].trNodes;
              kLen = nodes.length;
              for (k2 = 0; k2 < kLen; k2 += 1) {
                if (nodes[k2].t === "m") {
                  ctx.moveTo(nodes[k2].p[0], nodes[k2].p[1]);
                } else if (nodes[k2].t === "c") {
                  ctx.bezierCurveTo(nodes[k2].pts[0], nodes[k2].pts[1], nodes[k2].pts[2], nodes[k2].pts[3], nodes[k2].pts[4], nodes[k2].pts[5]);
                } else {
                  ctx.closePath();
                }
              }
              if (type === "st" || type === "gs") {
                ctx.stroke();
                if (currentStyle.da) {
                  ctx.setLineDash(this.dashResetter);
                }
              }
            }
            if (type !== "st" && type !== "gs") {
              ctx.fill(currentStyle.r);
            }
            renderer.restore();
          }
        }
      };
      CVShapeElement.prototype.renderShape = function (parentTransform, items, data2, isMain) {
        var i2;
        var len = items.length - 1;
        var groupTransform;
        groupTransform = parentTransform;
        for (i2 = len; i2 >= 0; i2 -= 1) {
          if (items[i2].ty === "tr") {
            groupTransform = data2[i2].transform;
            this.renderShapeTransform(parentTransform, groupTransform);
          } else if (items[i2].ty === "sh" || items[i2].ty === "el" || items[i2].ty === "rc" || items[i2].ty === "sr") {
            this.renderPath(items[i2], data2[i2]);
          } else if (items[i2].ty === "fl") {
            this.renderFill(items[i2], data2[i2], groupTransform);
          } else if (items[i2].ty === "st") {
            this.renderStroke(items[i2], data2[i2], groupTransform);
          } else if (items[i2].ty === "gf" || items[i2].ty === "gs") {
            this.renderGradientFill(items[i2], data2[i2], groupTransform);
          } else if (items[i2].ty === "gr") {
            this.renderShape(groupTransform, items[i2].it, data2[i2].it);
          } else if (items[i2].ty === "tm") ;
        }
        if (isMain) {
          this.drawLayer();
        }
      };
      CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {
        if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {
          var shapeNodes = styledShape.trNodes;
          var paths = shape.paths;
          var i2;
          var len;
          var j2;
          var jLen = paths._length;
          shapeNodes.length = 0;
          var groupTransformMat = styledShape.transforms.finalTransform;
          for (j2 = 0; j2 < jLen; j2 += 1) {
            var pathNodes = paths.shapes[j2];
            if (pathNodes && pathNodes.v) {
              len = pathNodes._length;
              for (i2 = 1; i2 < len; i2 += 1) {
                if (i2 === 1) {
                  shapeNodes.push({
                    t: "m",
                    p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
                  });
                }
                shapeNodes.push({
                  t: "c",
                  pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i2 - 1], pathNodes.i[i2], pathNodes.v[i2])
                });
              }
              if (len === 1) {
                shapeNodes.push({
                  t: "m",
                  p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
                });
              }
              if (pathNodes.c && len) {
                shapeNodes.push({
                  t: "c",
                  pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i2 - 1], pathNodes.i[0], pathNodes.v[0])
                });
                shapeNodes.push({
                  t: "z"
                });
              }
            }
          }
          styledShape.trNodes = shapeNodes;
        }
      };
      CVShapeElement.prototype.renderPath = function (pathData, itemData) {
        if (pathData.hd !== true && pathData._shouldRender) {
          var i2;
          var len = itemData.styledShapes.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.renderStyledShape(itemData.styledShapes[i2], itemData.sh);
          }
        }
      };
      CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {
        var styleElem = itemData.style;
        if (itemData.c._mdf || this._isFirstFrame) {
          styleElem.co = "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")";
        }
        if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
          styleElem.coOp = itemData.o.v * groupTransform.opacity;
        }
      };
      CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {
        var styleElem = itemData.style;
        var grd;
        if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {
          var ctx = this.globalData.canvasContext;
          var pt1 = itemData.s.v;
          var pt2 = itemData.e.v;
          if (styleData.t === 1) {
            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);
          } else {
            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);
            var percent = itemData.h.v;
            if (percent >= 1) {
              percent = 0.99;
            } else if (percent <= -1) {
              percent = -0.99;
            }
            var dist = rad * percent;
            var x2 = Math.cos(ang + itemData.a.v) * dist + pt1[0];
            var y2 = Math.sin(ang + itemData.a.v) * dist + pt1[1];
            grd = ctx.createRadialGradient(x2, y2, 0, pt1[0], pt1[1], rad);
          }
          var i2;
          var len = styleData.g.p;
          var cValues = itemData.g.c;
          var opacity = 1;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (itemData.g._hasOpacity && itemData.g._collapsable) {
              opacity = itemData.g.o[i2 * 2 + 1];
            }
            grd.addColorStop(cValues[i2 * 4] / 100, "rgba(" + cValues[i2 * 4 + 1] + "," + cValues[i2 * 4 + 2] + "," + cValues[i2 * 4 + 3] + "," + opacity + ")");
          }
          styleElem.grd = grd;
        }
        styleElem.coOp = itemData.o.v * groupTransform.opacity;
      };
      CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {
        var styleElem = itemData.style;
        var d2 = itemData.d;
        if (d2 && (d2._mdf || this._isFirstFrame)) {
          styleElem.da = d2.dashArray;
          styleElem.do = d2.dashoffset[0];
        }
        if (itemData.c._mdf || this._isFirstFrame) {
          styleElem.co = "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")";
        }
        if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
          styleElem.coOp = itemData.o.v * groupTransform.opacity;
        }
        if (itemData.w._mdf || this._isFirstFrame) {
          styleElem.wi = itemData.w.v;
        }
      };
      CVShapeElement.prototype.destroy = function () {
        this.shapesData = null;
        this.globalData = null;
        this.canvasContext = null;
        this.stylesList.length = 0;
        this.itemsData.length = 0;
      };
      function CVSolidElement(data2, globalData, comp) {
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);
      CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;
      CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;
      CVSolidElement.prototype.renderInnerContent = function () {
        var ctx = this.canvasContext;
        ctx.fillStyle = this.data.sc;
        ctx.fillRect(0, 0, this.data.sw, this.data.sh);
      };
      function CVTextElement(data2, globalData, comp) {
        this.textSpans = [];
        this.yOffset = 0;
        this.fillColorAnim = false;
        this.strokeColorAnim = false;
        this.strokeWidthAnim = false;
        this.stroke = false;
        this.fill = false;
        this.justifyOffset = 0;
        this.currentRender = null;
        this.renderType = "canvas";
        this.values = {
          fill: "rgba(0,0,0,0)",
          stroke: "rgba(0,0,0,0)",
          sWidth: 0,
          fValue: ""
        };
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);
      CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d");
      CVTextElement.prototype.buildNewText = function () {
        var documentData = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
        var hasFill = false;
        if (documentData.fc) {
          hasFill = true;
          this.values.fill = this.buildColor(documentData.fc);
        } else {
          this.values.fill = "rgba(0,0,0,0)";
        }
        this.fill = hasFill;
        var hasStroke = false;
        if (documentData.sc) {
          hasStroke = true;
          this.values.stroke = this.buildColor(documentData.sc);
          this.values.sWidth = documentData.sw;
        }
        var fontData = this.globalData.fontManager.getFontByName(documentData.f);
        var i2;
        var len;
        var letters = documentData.l;
        var matrixHelper = this.mHelper;
        this.stroke = hasStroke;
        this.values.fValue = documentData.finalSize + "px " + this.globalData.fontManager.getFontByName(documentData.f).fFamily;
        len = documentData.finalText.length;
        var charData;
        var shapeData;
        var k2;
        var kLen;
        var shapes;
        var j2;
        var jLen;
        var pathNodes;
        var commands;
        var pathArr;
        var singleShape = this.data.singleShape;
        var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;
        var xPos = 0;
        var yPos = 0;
        var firstLine = true;
        var cnt = 0;
        for (i2 = 0; i2 < len; i2 += 1) {
          charData = this.globalData.fontManager.getCharData(documentData.finalText[i2], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
          shapeData = charData && charData.data || {};
          matrixHelper.reset();
          if (singleShape && letters[i2].n) {
            xPos = -trackingOffset;
            yPos += documentData.yOffset;
            yPos += firstLine ? 1 : 0;
            firstLine = false;
          }
          shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
          jLen = shapes.length;
          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
          if (singleShape) {
            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i2].line, xPos, yPos);
          }
          commands = createSizedArray(jLen);
          for (j2 = 0; j2 < jLen; j2 += 1) {
            kLen = shapes[j2].ks.k.i.length;
            pathNodes = shapes[j2].ks.k;
            pathArr = [];
            for (k2 = 1; k2 < kLen; k2 += 1) {
              if (k2 === 1) {
                pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));
              }
              pathArr.push(matrixHelper.applyToX(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k2][0], pathNodes.i[k2][1], 0), matrixHelper.applyToY(pathNodes.i[k2][0], pathNodes.i[k2][1], 0), matrixHelper.applyToX(pathNodes.v[k2][0], pathNodes.v[k2][1], 0), matrixHelper.applyToY(pathNodes.v[k2][0], pathNodes.v[k2][1], 0));
            }
            pathArr.push(matrixHelper.applyToX(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));
            commands[j2] = pathArr;
          }
          if (singleShape) {
            xPos += letters[i2].l;
            xPos += trackingOffset;
          }
          if (this.textSpans[cnt]) {
            this.textSpans[cnt].elem = commands;
          } else {
            this.textSpans[cnt] = {
              elem: commands
            };
          }
          cnt += 1;
        }
      };
      CVTextElement.prototype.renderInnerContent = function () {
        var ctx = this.canvasContext;
        ctx.font = this.values.fValue;
        ctx.lineCap = "butt";
        ctx.lineJoin = "miter";
        ctx.miterLimit = 4;
        if (!this.data.singleShape) {
          this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
        }
        var i2;
        var len;
        var j2;
        var jLen;
        var k2;
        var kLen;
        var renderedLetters = this.textAnimator.renderedLetters;
        var letters = this.textProperty.currentData.l;
        len = letters.length;
        var renderedLetter;
        var lastFill = null;
        var lastStroke = null;
        var lastStrokeW = null;
        var commands;
        var pathArr;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (!letters[i2].n) {
            renderedLetter = renderedLetters[i2];
            if (renderedLetter) {
              this.globalData.renderer.save();
              this.globalData.renderer.ctxTransform(renderedLetter.p);
              this.globalData.renderer.ctxOpacity(renderedLetter.o);
            }
            if (this.fill) {
              if (renderedLetter && renderedLetter.fc) {
                if (lastFill !== renderedLetter.fc) {
                  lastFill = renderedLetter.fc;
                  ctx.fillStyle = renderedLetter.fc;
                }
              } else if (lastFill !== this.values.fill) {
                lastFill = this.values.fill;
                ctx.fillStyle = this.values.fill;
              }
              commands = this.textSpans[i2].elem;
              jLen = commands.length;
              this.globalData.canvasContext.beginPath();
              for (j2 = 0; j2 < jLen; j2 += 1) {
                pathArr = commands[j2];
                kLen = pathArr.length;
                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
                for (k2 = 2; k2 < kLen; k2 += 6) {
                  this.globalData.canvasContext.bezierCurveTo(pathArr[k2], pathArr[k2 + 1], pathArr[k2 + 2], pathArr[k2 + 3], pathArr[k2 + 4], pathArr[k2 + 5]);
                }
              }
              this.globalData.canvasContext.closePath();
              this.globalData.canvasContext.fill();
            }
            if (this.stroke) {
              if (renderedLetter && renderedLetter.sw) {
                if (lastStrokeW !== renderedLetter.sw) {
                  lastStrokeW = renderedLetter.sw;
                  ctx.lineWidth = renderedLetter.sw;
                }
              } else if (lastStrokeW !== this.values.sWidth) {
                lastStrokeW = this.values.sWidth;
                ctx.lineWidth = this.values.sWidth;
              }
              if (renderedLetter && renderedLetter.sc) {
                if (lastStroke !== renderedLetter.sc) {
                  lastStroke = renderedLetter.sc;
                  ctx.strokeStyle = renderedLetter.sc;
                }
              } else if (lastStroke !== this.values.stroke) {
                lastStroke = this.values.stroke;
                ctx.strokeStyle = this.values.stroke;
              }
              commands = this.textSpans[i2].elem;
              jLen = commands.length;
              this.globalData.canvasContext.beginPath();
              for (j2 = 0; j2 < jLen; j2 += 1) {
                pathArr = commands[j2];
                kLen = pathArr.length;
                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
                for (k2 = 2; k2 < kLen; k2 += 6) {
                  this.globalData.canvasContext.bezierCurveTo(pathArr[k2], pathArr[k2 + 1], pathArr[k2 + 2], pathArr[k2 + 3], pathArr[k2 + 4], pathArr[k2 + 5]);
                }
              }
              this.globalData.canvasContext.closePath();
              this.globalData.canvasContext.stroke();
            }
            if (renderedLetter) {
              this.globalData.renderer.restore();
            }
          }
        }
      };
      function CVEffects() {}
      CVEffects.prototype.renderFrame = function () {};
      function HBaseElement() {}
      HBaseElement.prototype = {
        checkBlendMode: function () {},
        initRendererElement: function () {
          this.baseElement = createTag(this.data.tg || "div");
          if (this.data.hasMask) {
            this.svgElement = createNS("svg");
            this.layerElement = createNS("g");
            this.maskedElement = this.layerElement;
            this.svgElement.appendChild(this.layerElement);
            this.baseElement.appendChild(this.svgElement);
          } else {
            this.layerElement = this.baseElement;
          }
          styleDiv(this.baseElement);
        },
        createContainerElements: function () {
          this.renderableEffectsManager = new CVEffects();
          this.transformedElement = this.baseElement;
          this.maskedElement = this.layerElement;
          if (this.data.ln) {
            this.layerElement.setAttribute("id", this.data.ln);
          }
          if (this.data.cl) {
            this.layerElement.setAttribute("class", this.data.cl);
          }
          if (this.data.bm !== 0) {
            this.setBlendMode();
          }
        },
        renderElement: function () {
          var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};
          if (this.finalTransform._matMdf) {
            var matrixValue = this.finalTransform.mat.toCSS();
            transformedElementStyle.transform = matrixValue;
            transformedElementStyle.webkitTransform = matrixValue;
          }
          if (this.finalTransform._opMdf) {
            transformedElementStyle.opacity = this.finalTransform.mProp.o.v;
          }
        },
        renderFrame: function () {
          if (this.data.hd || this.hidden) {
            return;
          }
          this.renderTransform();
          this.renderRenderable();
          this.renderElement();
          this.renderInnerContent();
          if (this._isFirstFrame) {
            this._isFirstFrame = false;
          }
        },
        destroy: function () {
          this.layerElement = null;
          this.transformedElement = null;
          if (this.matteElement) {
            this.matteElement = null;
          }
          if (this.maskManager) {
            this.maskManager.destroy();
            this.maskManager = null;
          }
        },
        createRenderableComponents: function () {
          this.maskManager = new MaskElement(this.data, this, this.globalData);
        },
        addEffects: function () {},
        setMatte: function () {}
      };
      HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;
      HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;
      HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;
      function HSolidElement(data2, globalData, comp) {
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);
      HSolidElement.prototype.createContent = function () {
        var rect;
        if (this.data.hasMask) {
          rect = createNS("rect");
          rect.setAttribute("width", this.data.sw);
          rect.setAttribute("height", this.data.sh);
          rect.setAttribute("fill", this.data.sc);
          this.svgElement.setAttribute("width", this.data.sw);
          this.svgElement.setAttribute("height", this.data.sh);
        } else {
          rect = createTag("div");
          rect.style.width = this.data.sw + "px";
          rect.style.height = this.data.sh + "px";
          rect.style.backgroundColor = this.data.sc;
        }
        this.layerElement.appendChild(rect);
      };
      function HCompElement(data2, globalData, comp) {
        this.layers = data2.layers;
        this.supports3d = !data2.hasMask;
        this.completeLayers = false;
        this.pendingElements = [];
        this.elements = this.layers ? createSizedArray(this.layers.length) : [];
        this.initElement(data2, globalData, comp);
        this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData.frameRate, this) : {
          _placeholder: true
        };
      }
      extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);
      HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;
      HCompElement.prototype.createContainerElements = function () {
        this._createBaseContainerElements();
        if (this.data.hasMask) {
          this.svgElement.setAttribute("width", this.data.w);
          this.svgElement.setAttribute("height", this.data.h);
          this.transformedElement = this.baseElement;
        } else {
          this.transformedElement = this.layerElement;
        }
      };
      HCompElement.prototype.addTo3dContainer = function (elem2, pos) {
        var j2 = 0;
        var nextElement;
        while (j2 < pos) {
          if (this.elements[j2] && this.elements[j2].getBaseElement) {
            nextElement = this.elements[j2].getBaseElement();
          }
          j2 += 1;
        }
        if (nextElement) {
          this.layerElement.insertBefore(elem2, nextElement);
        } else {
          this.layerElement.appendChild(elem2);
        }
      };
      function HShapeElement(data2, globalData, comp) {
        this.shapes = [];
        this.shapesData = data2.shapes;
        this.stylesList = [];
        this.shapeModifiers = [];
        this.itemsData = [];
        this.processedElements = [];
        this.animatedContents = [];
        this.shapesContainer = createNS("g");
        this.initElement(data2, globalData, comp);
        this.prevViewData = [];
        this.currentBBox = {
          x: 999999,
          y: -999999,
          h: 0,
          w: 0
        };
      }
      extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);
      HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;
      HShapeElement.prototype.createContent = function () {
        var cont;
        this.baseElement.style.fontSize = 0;
        if (this.data.hasMask) {
          this.layerElement.appendChild(this.shapesContainer);
          cont = this.svgElement;
        } else {
          cont = createNS("svg");
          var size = this.comp.data ? this.comp.data : this.globalData.compSize;
          cont.setAttribute("width", size.w);
          cont.setAttribute("height", size.h);
          cont.appendChild(this.shapesContainer);
          this.layerElement.appendChild(cont);
        }
        this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);
        this.filterUniqueShapes();
        this.shapeCont = cont;
      };
      HShapeElement.prototype.getTransformedPoint = function (transformers, point) {
        var i2;
        var len = transformers.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          point = transformers[i2].mProps.v.applyToPointArray(point[0], point[1], 0);
        }
        return point;
      };
      HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {
        var shape = item.sh.v;
        var transformers = item.transformers;
        var i2;
        var len = shape._length;
        var vPoint;
        var oPoint;
        var nextIPoint;
        var nextVPoint;
        if (len <= 1) {
          return;
        }
        for (i2 = 0; i2 < len - 1; i2 += 1) {
          vPoint = this.getTransformedPoint(transformers, shape.v[i2]);
          oPoint = this.getTransformedPoint(transformers, shape.o[i2]);
          nextIPoint = this.getTransformedPoint(transformers, shape.i[i2 + 1]);
          nextVPoint = this.getTransformedPoint(transformers, shape.v[i2 + 1]);
          this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
        }
        if (shape.c) {
          vPoint = this.getTransformedPoint(transformers, shape.v[i2]);
          oPoint = this.getTransformedPoint(transformers, shape.o[i2]);
          nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);
          nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);
          this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
        }
      };
      HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {
        this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);
        var bounds = this.shapeBoundingBox;
        boundingBox.x = bmMin(bounds.left, boundingBox.x);
        boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);
        boundingBox.y = bmMin(bounds.top, boundingBox.y);
        boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);
      };
      HShapeElement.prototype.shapeBoundingBox = {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
      };
      HShapeElement.prototype.tempBoundingBox = {
        x: 0,
        xMax: 0,
        y: 0,
        yMax: 0,
        width: 0,
        height: 0
      };
      HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {
        var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];
        for (var a2, b2, c2, t2, b2ac, t1, t22, i2 = 0; i2 < 2; ++i2) {
          b2 = 6 * p0[i2] - 12 * p1[i2] + 6 * p2[i2];
          a2 = -3 * p0[i2] + 9 * p1[i2] - 9 * p2[i2] + 3 * p3[i2];
          c2 = 3 * p1[i2] - 3 * p0[i2];
          b2 |= 0;
          a2 |= 0;
          c2 |= 0;
          if (a2 === 0 && b2 === 0) ;else if (a2 === 0) {
            t2 = -c2 / b2;
            if (t2 > 0 && t2 < 1) {
              bounds[i2].push(this.calculateF(t2, p0, p1, p2, p3, i2));
            }
          } else {
            b2ac = b2 * b2 - 4 * c2 * a2;
            if (b2ac >= 0) {
              t1 = (-b2 + bmSqrt(b2ac)) / (2 * a2);
              if (t1 > 0 && t1 < 1) bounds[i2].push(this.calculateF(t1, p0, p1, p2, p3, i2));
              t22 = (-b2 - bmSqrt(b2ac)) / (2 * a2);
              if (t22 > 0 && t22 < 1) bounds[i2].push(this.calculateF(t22, p0, p1, p2, p3, i2));
            }
          }
        }
        this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);
        this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);
        this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);
        this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);
      };
      HShapeElement.prototype.calculateF = function (t2, p0, p1, p2, p3, i2) {
        return bmPow(1 - t2, 3) * p0[i2] + 3 * bmPow(1 - t2, 2) * t2 * p1[i2] + 3 * (1 - t2) * bmPow(t2, 2) * p2[i2] + bmPow(t2, 3) * p3[i2];
      };
      HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {
        var i2;
        var len = itemsData.length;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (itemsData[i2] && itemsData[i2].sh) {
            this.calculateShapeBoundingBox(itemsData[i2], boundingBox);
          } else if (itemsData[i2] && itemsData[i2].it) {
            this.calculateBoundingBox(itemsData[i2].it, boundingBox);
          }
        }
      };
      HShapeElement.prototype.currentBoxContains = function (box) {
        return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;
      };
      HShapeElement.prototype.renderInnerContent = function () {
        this._renderShapeFrame();
        if (!this.hidden && (this._isFirstFrame || this._mdf)) {
          var tempBoundingBox = this.tempBoundingBox;
          var max = 999999;
          tempBoundingBox.x = max;
          tempBoundingBox.xMax = -max;
          tempBoundingBox.y = max;
          tempBoundingBox.yMax = -max;
          this.calculateBoundingBox(this.itemsData, tempBoundingBox);
          tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;
          tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;
          if (this.currentBoxContains(tempBoundingBox)) {
            return;
          }
          var changed = false;
          if (this.currentBBox.w !== tempBoundingBox.width) {
            this.currentBBox.w = tempBoundingBox.width;
            this.shapeCont.setAttribute("width", tempBoundingBox.width);
            changed = true;
          }
          if (this.currentBBox.h !== tempBoundingBox.height) {
            this.currentBBox.h = tempBoundingBox.height;
            this.shapeCont.setAttribute("height", tempBoundingBox.height);
            changed = true;
          }
          if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {
            this.currentBBox.w = tempBoundingBox.width;
            this.currentBBox.h = tempBoundingBox.height;
            this.currentBBox.x = tempBoundingBox.x;
            this.currentBBox.y = tempBoundingBox.y;
            this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
            var shapeStyle = this.shapeCont.style;
            var shapeTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
            shapeStyle.transform = shapeTransform;
            shapeStyle.webkitTransform = shapeTransform;
          }
        }
      };
      function HTextElement(data2, globalData, comp) {
        this.textSpans = [];
        this.textPaths = [];
        this.currentBBox = {
          x: 999999,
          y: -999999,
          h: 0,
          w: 0
        };
        this.renderType = "svg";
        this.isMasked = false;
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);
      HTextElement.prototype.createContent = function () {
        this.isMasked = this.checkMasks();
        if (this.isMasked) {
          this.renderType = "svg";
          this.compW = this.comp.data.w;
          this.compH = this.comp.data.h;
          this.svgElement.setAttribute("width", this.compW);
          this.svgElement.setAttribute("height", this.compH);
          var g2 = createNS("g");
          this.maskedElement.appendChild(g2);
          this.innerElem = g2;
        } else {
          this.renderType = "html";
          this.innerElem = this.layerElement;
        }
        this.checkParenting();
      };
      HTextElement.prototype.buildNewText = function () {
        var documentData = this.textProperty.currentData;
        this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
        var innerElemStyle = this.innerElem.style;
        var textColor = documentData.fc ? this.buildColor(documentData.fc) : "rgba(0,0,0,0)";
        innerElemStyle.fill = textColor;
        innerElemStyle.color = textColor;
        if (documentData.sc) {
          innerElemStyle.stroke = this.buildColor(documentData.sc);
          innerElemStyle.strokeWidth = documentData.sw + "px";
        }
        var fontData = this.globalData.fontManager.getFontByName(documentData.f);
        if (!this.globalData.fontManager.chars) {
          innerElemStyle.fontSize = documentData.finalSize + "px";
          innerElemStyle.lineHeight = documentData.finalSize + "px";
          if (fontData.fClass) {
            this.innerElem.className = fontData.fClass;
          } else {
            innerElemStyle.fontFamily = fontData.fFamily;
            var fWeight = documentData.fWeight;
            var fStyle = documentData.fStyle;
            innerElemStyle.fontStyle = fStyle;
            innerElemStyle.fontWeight = fWeight;
          }
        }
        var i2;
        var len;
        var letters = documentData.l;
        len = letters.length;
        var tSpan;
        var tParent;
        var tCont;
        var matrixHelper = this.mHelper;
        var shapes;
        var shapeStr = "";
        var cnt = 0;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (this.globalData.fontManager.chars) {
            if (!this.textPaths[cnt]) {
              tSpan = createNS("path");
              tSpan.setAttribute("stroke-linecap", lineCapEnum[1]);
              tSpan.setAttribute("stroke-linejoin", lineJoinEnum[2]);
              tSpan.setAttribute("stroke-miterlimit", "4");
            } else {
              tSpan = this.textPaths[cnt];
            }
            if (!this.isMasked) {
              if (this.textSpans[cnt]) {
                tParent = this.textSpans[cnt];
                tCont = tParent.children[0];
              } else {
                tParent = createTag("div");
                tParent.style.lineHeight = 0;
                tCont = createNS("svg");
                tCont.appendChild(tSpan);
                styleDiv(tParent);
              }
            }
          } else if (!this.isMasked) {
            if (this.textSpans[cnt]) {
              tParent = this.textSpans[cnt];
              tSpan = this.textPaths[cnt];
            } else {
              tParent = createTag("span");
              styleDiv(tParent);
              tSpan = createTag("span");
              styleDiv(tSpan);
              tParent.appendChild(tSpan);
            }
          } else {
            tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS("text");
          }
          if (this.globalData.fontManager.chars) {
            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i2], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
            var shapeData;
            if (charData) {
              shapeData = charData.data;
            } else {
              shapeData = null;
            }
            matrixHelper.reset();
            if (shapeData && shapeData.shapes) {
              shapes = shapeData.shapes[0].it;
              matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
              shapeStr = this.createPathShape(matrixHelper, shapes);
              tSpan.setAttribute("d", shapeStr);
            }
            if (!this.isMasked) {
              this.innerElem.appendChild(tParent);
              if (shapeData && shapeData.shapes) {
                document.body.appendChild(tCont);
                var boundingBox = tCont.getBBox();
                tCont.setAttribute("width", boundingBox.width + 2);
                tCont.setAttribute("height", boundingBox.height + 2);
                tCont.setAttribute("viewBox", boundingBox.x - 1 + " " + (boundingBox.y - 1) + " " + (boundingBox.width + 2) + " " + (boundingBox.height + 2));
                var tContStyle = tCont.style;
                var tContTranslation = "translate(" + (boundingBox.x - 1) + "px," + (boundingBox.y - 1) + "px)";
                tContStyle.transform = tContTranslation;
                tContStyle.webkitTransform = tContTranslation;
                letters[i2].yOffset = boundingBox.y - 1;
              } else {
                tCont.setAttribute("width", 1);
                tCont.setAttribute("height", 1);
              }
              tParent.appendChild(tCont);
            } else {
              this.innerElem.appendChild(tSpan);
            }
          } else {
            tSpan.textContent = letters[i2].val;
            tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
            if (!this.isMasked) {
              this.innerElem.appendChild(tParent);
              var tStyle = tSpan.style;
              var tSpanTranslation = "translate3d(0," + -documentData.finalSize / 1.2 + "px,0)";
              tStyle.transform = tSpanTranslation;
              tStyle.webkitTransform = tSpanTranslation;
            } else {
              this.innerElem.appendChild(tSpan);
            }
          }
          if (!this.isMasked) {
            this.textSpans[cnt] = tParent;
          } else {
            this.textSpans[cnt] = tSpan;
          }
          this.textSpans[cnt].style.display = "block";
          this.textPaths[cnt] = tSpan;
          cnt += 1;
        }
        while (cnt < this.textSpans.length) {
          this.textSpans[cnt].style.display = "none";
          cnt += 1;
        }
      };
      HTextElement.prototype.renderInnerContent = function () {
        var svgStyle;
        if (this.data.singleShape) {
          if (!this._isFirstFrame && !this.lettersChangedFlag) {
            return;
          }
          if (this.isMasked && this.finalTransform._matMdf) {
            this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH);
            svgStyle = this.svgElement.style;
            var translation = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
            svgStyle.transform = translation;
            svgStyle.webkitTransform = translation;
          }
        }
        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
        if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {
          return;
        }
        var i2;
        var len;
        var count = 0;
        var renderedLetters = this.textAnimator.renderedLetters;
        var letters = this.textProperty.currentData.l;
        len = letters.length;
        var renderedLetter;
        var textSpan;
        var textPath;
        for (i2 = 0; i2 < len; i2 += 1) {
          if (letters[i2].n) {
            count += 1;
          } else {
            textSpan = this.textSpans[i2];
            textPath = this.textPaths[i2];
            renderedLetter = renderedLetters[count];
            count += 1;
            if (renderedLetter._mdf.m) {
              if (!this.isMasked) {
                textSpan.style.webkitTransform = renderedLetter.m;
                textSpan.style.transform = renderedLetter.m;
              } else {
                textSpan.setAttribute("transform", renderedLetter.m);
              }
            }
            textSpan.style.opacity = renderedLetter.o;
            if (renderedLetter.sw && renderedLetter._mdf.sw) {
              textPath.setAttribute("stroke-width", renderedLetter.sw);
            }
            if (renderedLetter.sc && renderedLetter._mdf.sc) {
              textPath.setAttribute("stroke", renderedLetter.sc);
            }
            if (renderedLetter.fc && renderedLetter._mdf.fc) {
              textPath.setAttribute("fill", renderedLetter.fc);
              textPath.style.color = renderedLetter.fc;
            }
          }
        }
        if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
          var boundingBox = this.innerElem.getBBox();
          if (this.currentBBox.w !== boundingBox.width) {
            this.currentBBox.w = boundingBox.width;
            this.svgElement.setAttribute("width", boundingBox.width);
          }
          if (this.currentBBox.h !== boundingBox.height) {
            this.currentBBox.h = boundingBox.height;
            this.svgElement.setAttribute("height", boundingBox.height);
          }
          var margin = 1;
          if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {
            this.currentBBox.w = boundingBox.width + margin * 2;
            this.currentBBox.h = boundingBox.height + margin * 2;
            this.currentBBox.x = boundingBox.x - margin;
            this.currentBBox.y = boundingBox.y - margin;
            this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
            svgStyle = this.svgElement.style;
            var svgTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
            svgStyle.transform = svgTransform;
            svgStyle.webkitTransform = svgTransform;
          }
        }
      };
      function HImageElement(data2, globalData, comp) {
        this.assetData = globalData.getAssetData(data2.refId);
        this.initElement(data2, globalData, comp);
      }
      extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);
      HImageElement.prototype.createContent = function () {
        var assetPath = this.globalData.getAssetsPath(this.assetData);
        var img = new Image();
        if (this.data.hasMask) {
          this.imageElem = createNS("image");
          this.imageElem.setAttribute("width", this.assetData.w + "px");
          this.imageElem.setAttribute("height", this.assetData.h + "px");
          this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", assetPath);
          this.layerElement.appendChild(this.imageElem);
          this.baseElement.setAttribute("width", this.assetData.w);
          this.baseElement.setAttribute("height", this.assetData.h);
        } else {
          this.layerElement.appendChild(img);
        }
        img.crossOrigin = "anonymous";
        img.src = assetPath;
        if (this.data.ln) {
          this.baseElement.setAttribute("id", this.data.ln);
        }
      };
      function HCameraElement(data2, globalData, comp) {
        this.initFrame();
        this.initBaseData(data2, globalData, comp);
        this.initHierarchy();
        var getProp = PropertyFactory.getProp;
        this.pe = getProp(this, data2.pe, 0, 0, this);
        if (data2.ks.p.s) {
          this.px = getProp(this, data2.ks.p.x, 1, 0, this);
          this.py = getProp(this, data2.ks.p.y, 1, 0, this);
          this.pz = getProp(this, data2.ks.p.z, 1, 0, this);
        } else {
          this.p = getProp(this, data2.ks.p, 1, 0, this);
        }
        if (data2.ks.a) {
          this.a = getProp(this, data2.ks.a, 1, 0, this);
        }
        if (data2.ks.or.k.length && data2.ks.or.k[0].to) {
          var i2;
          var len = data2.ks.or.k.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            data2.ks.or.k[i2].to = null;
            data2.ks.or.k[i2].ti = null;
          }
        }
        this.or = getProp(this, data2.ks.or, 1, degToRads, this);
        this.or.sh = true;
        this.rx = getProp(this, data2.ks.rx, 0, degToRads, this);
        this.ry = getProp(this, data2.ks.ry, 0, degToRads, this);
        this.rz = getProp(this, data2.ks.rz, 0, degToRads, this);
        this.mat = new Matrix();
        this._prevMat = new Matrix();
        this._isFirstFrame = true;
        this.finalTransform = {
          mProp: this
        };
      }
      extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);
      HCameraElement.prototype.setup = function () {
        var i2;
        var len = this.comp.threeDElements.length;
        var comp;
        var perspectiveStyle;
        var containerStyle;
        for (i2 = 0; i2 < len; i2 += 1) {
          comp = this.comp.threeDElements[i2];
          if (comp.type === "3d") {
            perspectiveStyle = comp.perspectiveElem.style;
            containerStyle = comp.container.style;
            var perspective = this.pe.v + "px";
            var origin2 = "0px 0px 0px";
            var matrix = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
            perspectiveStyle.perspective = perspective;
            perspectiveStyle.webkitPerspective = perspective;
            containerStyle.transformOrigin = origin2;
            containerStyle.mozTransformOrigin = origin2;
            containerStyle.webkitTransformOrigin = origin2;
            perspectiveStyle.transform = matrix;
            perspectiveStyle.webkitTransform = matrix;
          }
        }
      };
      HCameraElement.prototype.createElements = function () {};
      HCameraElement.prototype.hide = function () {};
      HCameraElement.prototype.renderFrame = function () {
        var _mdf = this._isFirstFrame;
        var i2;
        var len;
        if (this.hierarchy) {
          len = this.hierarchy.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            _mdf = this.hierarchy[i2].finalTransform.mProp._mdf || _mdf;
          }
        }
        if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
          this.mat.reset();
          if (this.hierarchy) {
            len = this.hierarchy.length - 1;
            for (i2 = len; i2 >= 0; i2 -= 1) {
              var mTransf = this.hierarchy[i2].finalTransform.mProp;
              this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);
              this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);
              this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);
              this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);
              this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);
            }
          }
          if (this.p) {
            this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);
          } else {
            this.mat.translate(-this.px.v, -this.py.v, this.pz.v);
          }
          if (this.a) {
            var diffVector;
            if (this.p) {
              diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];
            } else {
              diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
            }
            var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2));
            var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];
            var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);
            var mRotationX = Math.atan2(lookDir[1], lookLengthOnXZ);
            var mRotationY = Math.atan2(lookDir[0], -lookDir[2]);
            this.mat.rotateY(mRotationY).rotateX(-mRotationX);
          }
          this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);
          this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);
          this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);
          this.mat.translate(0, 0, this.pe.v);
          var hasMatrixChanged = !this._prevMat.equals(this.mat);
          if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {
            len = this.comp.threeDElements.length;
            var comp;
            var perspectiveStyle;
            var containerStyle;
            for (i2 = 0; i2 < len; i2 += 1) {
              comp = this.comp.threeDElements[i2];
              if (comp.type === "3d") {
                if (hasMatrixChanged) {
                  var matValue = this.mat.toCSS();
                  containerStyle = comp.container.style;
                  containerStyle.transform = matValue;
                  containerStyle.webkitTransform = matValue;
                }
                if (this.pe._mdf) {
                  perspectiveStyle = comp.perspectiveElem.style;
                  perspectiveStyle.perspective = this.pe.v + "px";
                  perspectiveStyle.webkitPerspective = this.pe.v + "px";
                }
              }
            }
            this.mat.clone(this._prevMat);
          }
        }
        this._isFirstFrame = false;
      };
      HCameraElement.prototype.prepareFrame = function (num) {
        this.prepareProperties(num, true);
      };
      HCameraElement.prototype.destroy = function () {};
      HCameraElement.prototype.getBaseElement = function () {
        return null;
      };
      var animationManager = function () {
        var moduleOb = {};
        var registeredAnimations = [];
        var initTime = 0;
        var len = 0;
        var playingAnimationsNum = 0;
        var _stopped = true;
        var _isFrozen = false;
        function removeElement(ev) {
          var i2 = 0;
          var animItem = ev.target;
          while (i2 < len) {
            if (registeredAnimations[i2].animation === animItem) {
              registeredAnimations.splice(i2, 1);
              i2 -= 1;
              len -= 1;
              if (!animItem.isPaused) {
                subtractPlayingCount();
              }
            }
            i2 += 1;
          }
        }
        function registerAnimation(element, animationData) {
          if (!element) {
            return null;
          }
          var i2 = 0;
          while (i2 < len) {
            if (registeredAnimations[i2].elem === element && registeredAnimations[i2].elem !== null) {
              return registeredAnimations[i2].animation;
            }
            i2 += 1;
          }
          var animItem = new AnimationItem();
          setupAnimation(animItem, element);
          animItem.setData(element, animationData);
          return animItem;
        }
        function getRegisteredAnimations() {
          var i2;
          var lenAnims = registeredAnimations.length;
          var animations = [];
          for (i2 = 0; i2 < lenAnims; i2 += 1) {
            animations.push(registeredAnimations[i2].animation);
          }
          return animations;
        }
        function addPlayingCount() {
          playingAnimationsNum += 1;
          activate();
        }
        function subtractPlayingCount() {
          playingAnimationsNum -= 1;
        }
        function setupAnimation(animItem, element) {
          animItem.addEventListener("destroy", removeElement);
          animItem.addEventListener("_active", addPlayingCount);
          animItem.addEventListener("_idle", subtractPlayingCount);
          registeredAnimations.push({
            elem: element,
            animation: animItem
          });
          len += 1;
        }
        function loadAnimation2(params) {
          var animItem = new AnimationItem();
          setupAnimation(animItem, null);
          animItem.setParams(params);
          return animItem;
        }
        function setSpeed(val2, animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.setSpeed(val2, animation);
          }
        }
        function setDirection(val2, animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.setDirection(val2, animation);
          }
        }
        function play(animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.play(animation);
          }
        }
        function resume(nowTime) {
          var elapsedTime = nowTime - initTime;
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.advanceTime(elapsedTime);
          }
          initTime = nowTime;
          if (playingAnimationsNum && !_isFrozen) {
            window.requestAnimationFrame(resume);
          } else {
            _stopped = true;
          }
        }
        function first(nowTime) {
          initTime = nowTime;
          window.requestAnimationFrame(resume);
        }
        function pause(animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.pause(animation);
          }
        }
        function goToAndStop(value2, isFrame, animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.goToAndStop(value2, isFrame, animation);
          }
        }
        function stop(animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.stop(animation);
          }
        }
        function togglePause(animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.togglePause(animation);
          }
        }
        function destroy(animation) {
          var i2;
          for (i2 = len - 1; i2 >= 0; i2 -= 1) {
            registeredAnimations[i2].animation.destroy(animation);
          }
        }
        function searchAnimations2(animationData, standalone, renderer) {
          var animElements = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin")));
          var i2;
          var lenAnims = animElements.length;
          for (i2 = 0; i2 < lenAnims; i2 += 1) {
            if (renderer) {
              animElements[i2].setAttribute("data-bm-type", renderer);
            }
            registerAnimation(animElements[i2], animationData);
          }
          if (standalone && lenAnims === 0) {
            if (!renderer) {
              renderer = "svg";
            }
            var body2 = document.getElementsByTagName("body")[0];
            body2.innerText = "";
            var div = createTag("div");
            div.style.width = "100%";
            div.style.height = "100%";
            div.setAttribute("data-bm-type", renderer);
            body2.appendChild(div);
            registerAnimation(div, animationData);
          }
        }
        function resize() {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.resize();
          }
        }
        function activate() {
          if (!_isFrozen && playingAnimationsNum) {
            if (_stopped) {
              window.requestAnimationFrame(first);
              _stopped = false;
            }
          }
        }
        function freeze() {
          _isFrozen = true;
        }
        function unfreeze() {
          _isFrozen = false;
          activate();
        }
        function setVolume(val2, animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.setVolume(val2, animation);
          }
        }
        function mute(animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.mute(animation);
          }
        }
        function unmute(animation) {
          var i2;
          for (i2 = 0; i2 < len; i2 += 1) {
            registeredAnimations[i2].animation.unmute(animation);
          }
        }
        moduleOb.registerAnimation = registerAnimation;
        moduleOb.loadAnimation = loadAnimation2;
        moduleOb.setSpeed = setSpeed;
        moduleOb.setDirection = setDirection;
        moduleOb.play = play;
        moduleOb.pause = pause;
        moduleOb.stop = stop;
        moduleOb.togglePause = togglePause;
        moduleOb.searchAnimations = searchAnimations2;
        moduleOb.resize = resize;
        moduleOb.goToAndStop = goToAndStop;
        moduleOb.destroy = destroy;
        moduleOb.freeze = freeze;
        moduleOb.unfreeze = unfreeze;
        moduleOb.setVolume = setVolume;
        moduleOb.mute = mute;
        moduleOb.unmute = unmute;
        moduleOb.getRegisteredAnimations = getRegisteredAnimations;
        return moduleOb;
      }();
      var AnimationItem = function () {
        this._cbs = [];
        this.name = "";
        this.path = "";
        this.isLoaded = false;
        this.currentFrame = 0;
        this.currentRawFrame = 0;
        this.firstFrame = 0;
        this.totalFrames = 0;
        this.frameRate = 0;
        this.frameMult = 0;
        this.playSpeed = 1;
        this.playDirection = 1;
        this.playCount = 0;
        this.animationData = {};
        this.assets = [];
        this.isPaused = true;
        this.autoplay = false;
        this.loop = true;
        this.renderer = null;
        this.animationID = createElementID();
        this.assetsPath = "";
        this.timeCompleted = 0;
        this.segmentPos = 0;
        this.isSubframeEnabled = subframeEnabled;
        this.segments = [];
        this._idle = true;
        this._completedLoop = false;
        this.projectInterface = ProjectInterface();
        this.imagePreloader = new ImagePreloader();
        this.audioController = audioControllerFactory();
        this.markers = [];
      };
      extendPrototype([BaseEvent], AnimationItem);
      AnimationItem.prototype.setParams = function (params) {
        if (params.wrapper || params.container) {
          this.wrapper = params.wrapper || params.container;
        }
        var animType = "svg";
        if (params.animType) {
          animType = params.animType;
        } else if (params.renderer) {
          animType = params.renderer;
        }
        switch (animType) {
          case "canvas":
            this.renderer = new CanvasRenderer(this, params.rendererSettings);
            break;
          case "svg":
            this.renderer = new SVGRenderer(this, params.rendererSettings);
            break;
          default:
            this.renderer = new HybridRenderer(this, params.rendererSettings);
            break;
        }
        this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);
        this.renderer.setProjectInterface(this.projectInterface);
        this.animType = animType;
        if (params.loop === "" || params.loop === null || params.loop === void 0 || params.loop === true) {
          this.loop = true;
        } else if (params.loop === false) {
          this.loop = false;
        } else {
          this.loop = parseInt(params.loop, 10);
        }
        this.autoplay = "autoplay" in params ? params.autoplay : true;
        this.name = params.name ? params.name : "";
        this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, "autoloadSegments") ? params.autoloadSegments : true;
        this.assetsPath = params.assetsPath;
        this.initialSegment = params.initialSegment;
        if (params.audioFactory) {
          this.audioController.setAudioFactory(params.audioFactory);
        }
        if (params.animationData) {
          this.configAnimation(params.animationData);
        } else if (params.path) {
          if (params.path.lastIndexOf("\\") !== -1) {
            this.path = params.path.substr(0, params.path.lastIndexOf("\\") + 1);
          } else {
            this.path = params.path.substr(0, params.path.lastIndexOf("/") + 1);
          }
          this.fileName = params.path.substr(params.path.lastIndexOf("/") + 1);
          this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json"));
          assetLoader.load(params.path, this.configAnimation.bind(this), function () {
            this.trigger("data_failed");
          }.bind(this));
        }
      };
      AnimationItem.prototype.setData = function (wrapper, animationData) {
        if (animationData) {
          if (typeof animationData !== "object") {
            animationData = JSON.parse(animationData);
          }
        }
        var params = {
          wrapper,
          animationData
        };
        var wrapperAttributes = wrapper.attributes;
        params.path = wrapperAttributes.getNamedItem("data-animation-path") ? wrapperAttributes.getNamedItem("data-animation-path").value : wrapperAttributes.getNamedItem("data-bm-path") ? wrapperAttributes.getNamedItem("data-bm-path").value : wrapperAttributes.getNamedItem("bm-path") ? wrapperAttributes.getNamedItem("bm-path").value : "";
        params.animType = wrapperAttributes.getNamedItem("data-anim-type") ? wrapperAttributes.getNamedItem("data-anim-type").value : wrapperAttributes.getNamedItem("data-bm-type") ? wrapperAttributes.getNamedItem("data-bm-type").value : wrapperAttributes.getNamedItem("bm-type") ? wrapperAttributes.getNamedItem("bm-type").value : wrapperAttributes.getNamedItem("data-bm-renderer") ? wrapperAttributes.getNamedItem("data-bm-renderer").value : wrapperAttributes.getNamedItem("bm-renderer") ? wrapperAttributes.getNamedItem("bm-renderer").value : "canvas";
        var loop = wrapperAttributes.getNamedItem("data-anim-loop") ? wrapperAttributes.getNamedItem("data-anim-loop").value : wrapperAttributes.getNamedItem("data-bm-loop") ? wrapperAttributes.getNamedItem("data-bm-loop").value : wrapperAttributes.getNamedItem("bm-loop") ? wrapperAttributes.getNamedItem("bm-loop").value : "";
        if (loop === "false") {
          params.loop = false;
        } else if (loop === "true") {
          params.loop = true;
        } else if (loop !== "") {
          params.loop = parseInt(loop, 10);
        }
        var autoplay = wrapperAttributes.getNamedItem("data-anim-autoplay") ? wrapperAttributes.getNamedItem("data-anim-autoplay").value : wrapperAttributes.getNamedItem("data-bm-autoplay") ? wrapperAttributes.getNamedItem("data-bm-autoplay").value : wrapperAttributes.getNamedItem("bm-autoplay") ? wrapperAttributes.getNamedItem("bm-autoplay").value : true;
        params.autoplay = autoplay !== "false";
        params.name = wrapperAttributes.getNamedItem("data-name") ? wrapperAttributes.getNamedItem("data-name").value : wrapperAttributes.getNamedItem("data-bm-name") ? wrapperAttributes.getNamedItem("data-bm-name").value : wrapperAttributes.getNamedItem("bm-name") ? wrapperAttributes.getNamedItem("bm-name").value : "";
        var prerender = wrapperAttributes.getNamedItem("data-anim-prerender") ? wrapperAttributes.getNamedItem("data-anim-prerender").value : wrapperAttributes.getNamedItem("data-bm-prerender") ? wrapperAttributes.getNamedItem("data-bm-prerender").value : wrapperAttributes.getNamedItem("bm-prerender") ? wrapperAttributes.getNamedItem("bm-prerender").value : "";
        if (prerender === "false") {
          params.prerender = false;
        }
        this.setParams(params);
      };
      AnimationItem.prototype.includeLayers = function (data2) {
        if (data2.op > this.animationData.op) {
          this.animationData.op = data2.op;
          this.totalFrames = Math.floor(data2.op - this.animationData.ip);
        }
        var layers2 = this.animationData.layers;
        var i2;
        var len = layers2.length;
        var newLayers = data2.layers;
        var j2;
        var jLen = newLayers.length;
        for (j2 = 0; j2 < jLen; j2 += 1) {
          i2 = 0;
          while (i2 < len) {
            if (layers2[i2].id === newLayers[j2].id) {
              layers2[i2] = newLayers[j2];
              break;
            }
            i2 += 1;
          }
        }
        if (data2.chars || data2.fonts) {
          this.renderer.globalData.fontManager.addChars(data2.chars);
          this.renderer.globalData.fontManager.addFonts(data2.fonts, this.renderer.globalData.defs);
        }
        if (data2.assets) {
          len = data2.assets.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.animationData.assets.push(data2.assets[i2]);
          }
        }
        this.animationData.__complete = false;
        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);
        this.renderer.includeLayers(data2.layers);
        if (expressionsPlugin) {
          expressionsPlugin.initExpressions(this);
        }
        this.loadNextSegment();
      };
      AnimationItem.prototype.loadNextSegment = function () {
        var segments = this.animationData.segments;
        if (!segments || segments.length === 0 || !this.autoloadSegments) {
          this.trigger("data_ready");
          this.timeCompleted = this.totalFrames;
          return;
        }
        var segment = segments.shift();
        this.timeCompleted = segment.time * this.frameRate;
        var segmentPath = this.path + this.fileName + "_" + this.segmentPos + ".json";
        this.segmentPos += 1;
        assetLoader.load(segmentPath, this.includeLayers.bind(this), function () {
          this.trigger("data_failed");
        }.bind(this));
      };
      AnimationItem.prototype.loadSegments = function () {
        var segments = this.animationData.segments;
        if (!segments) {
          this.timeCompleted = this.totalFrames;
        }
        this.loadNextSegment();
      };
      AnimationItem.prototype.imagesLoaded = function () {
        this.trigger("loaded_images");
        this.checkLoaded();
      };
      AnimationItem.prototype.preloadImages = function () {
        this.imagePreloader.setAssetsPath(this.assetsPath);
        this.imagePreloader.setPath(this.path);
        this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
      };
      AnimationItem.prototype.configAnimation = function (animData) {
        if (!this.renderer) {
          return;
        }
        try {
          this.animationData = animData;
          if (this.initialSegment) {
            this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);
            this.firstFrame = Math.round(this.initialSegment[0]);
          } else {
            this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);
            this.firstFrame = Math.round(this.animationData.ip);
          }
          this.renderer.configAnimation(animData);
          if (!animData.assets) {
            animData.assets = [];
          }
          this.assets = this.animationData.assets;
          this.frameRate = this.animationData.fr;
          this.frameMult = this.animationData.fr / 1e3;
          this.renderer.searchExtraCompositions(animData.assets);
          this.markers = markerParser(animData.markers || []);
          this.trigger("config_ready");
          this.preloadImages();
          this.loadSegments();
          this.updaFrameModifier();
          this.waitForFontsLoaded();
          if (this.isPaused) {
            this.audioController.pause();
          }
        } catch (error) {
          this.triggerConfigError(error);
        }
      };
      AnimationItem.prototype.waitForFontsLoaded = function () {
        if (!this.renderer) {
          return;
        }
        if (this.renderer.globalData.fontManager.isLoaded) {
          this.checkLoaded();
        } else {
          setTimeout(this.waitForFontsLoaded.bind(this), 20);
        }
      };
      AnimationItem.prototype.checkLoaded = function () {
        if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== "canvas") && this.imagePreloader.loadedFootages()) {
          this.isLoaded = true;
          dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);
          if (expressionsPlugin) {
            expressionsPlugin.initExpressions(this);
          }
          this.renderer.initItems();
          setTimeout(function () {
            this.trigger("DOMLoaded");
          }.bind(this), 0);
          this.gotoFrame();
          if (this.autoplay) {
            this.play();
          }
        }
      };
      AnimationItem.prototype.resize = function () {
        this.renderer.updateContainerSize();
      };
      AnimationItem.prototype.setSubframe = function (flag) {
        this.isSubframeEnabled = !!flag;
      };
      AnimationItem.prototype.gotoFrame = function () {
        this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;
        if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {
          this.currentFrame = this.timeCompleted;
        }
        this.trigger("enterFrame");
        this.renderFrame();
      };
      AnimationItem.prototype.renderFrame = function () {
        if (this.isLoaded === false || !this.renderer) {
          return;
        }
        try {
          this.renderer.renderFrame(this.currentFrame + this.firstFrame);
        } catch (error) {
          this.triggerRenderFrameError(error);
        }
      };
      AnimationItem.prototype.play = function (name) {
        if (name && this.name !== name) {
          return;
        }
        if (this.isPaused === true) {
          this.isPaused = false;
          this.audioController.resume();
          if (this._idle) {
            this._idle = false;
            this.trigger("_active");
          }
        }
      };
      AnimationItem.prototype.pause = function (name) {
        if (name && this.name !== name) {
          return;
        }
        if (this.isPaused === false) {
          this.isPaused = true;
          this._idle = true;
          this.trigger("_idle");
          this.audioController.pause();
        }
      };
      AnimationItem.prototype.togglePause = function (name) {
        if (name && this.name !== name) {
          return;
        }
        if (this.isPaused === true) {
          this.play();
        } else {
          this.pause();
        }
      };
      AnimationItem.prototype.stop = function (name) {
        if (name && this.name !== name) {
          return;
        }
        this.pause();
        this.playCount = 0;
        this._completedLoop = false;
        this.setCurrentRawFrameValue(0);
      };
      AnimationItem.prototype.getMarkerData = function (markerName) {
        var marker;
        for (var i2 = 0; i2 < this.markers.length; i2 += 1) {
          marker = this.markers[i2];
          if (marker.payload && marker.payload.name === markerName) {
            return marker;
          }
        }
        return null;
      };
      AnimationItem.prototype.goToAndStop = function (value2, isFrame, name) {
        if (name && this.name !== name) {
          return;
        }
        var numValue = Number(value2);
        if (isNaN(numValue)) {
          var marker = this.getMarkerData(value2);
          if (marker) {
            this.goToAndStop(marker.time, true);
          }
        } else if (isFrame) {
          this.setCurrentRawFrameValue(value2);
        } else {
          this.setCurrentRawFrameValue(value2 * this.frameModifier);
        }
        this.pause();
      };
      AnimationItem.prototype.goToAndPlay = function (value2, isFrame, name) {
        if (name && this.name !== name) {
          return;
        }
        var numValue = Number(value2);
        if (isNaN(numValue)) {
          var marker = this.getMarkerData(value2);
          if (marker) {
            if (!marker.duration) {
              this.goToAndStop(marker.time, true);
            } else {
              this.playSegments([marker.time, marker.time + marker.duration], true);
            }
          }
        } else {
          this.goToAndStop(numValue, isFrame, name);
        }
        this.play();
      };
      AnimationItem.prototype.advanceTime = function (value2) {
        if (this.isPaused === true || this.isLoaded === false) {
          return;
        }
        var nextValue = this.currentRawFrame + value2 * this.frameModifier;
        var _isComplete = false;
        if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
          if (!this.loop || this.playCount === this.loop) {
            if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {
              _isComplete = true;
              nextValue = this.totalFrames - 1;
            }
          } else if (nextValue >= this.totalFrames) {
            this.playCount += 1;
            if (!this.checkSegments(nextValue % this.totalFrames)) {
              this.setCurrentRawFrameValue(nextValue % this.totalFrames);
              this._completedLoop = true;
              this.trigger("loopComplete");
            }
          } else {
            this.setCurrentRawFrameValue(nextValue);
          }
        } else if (nextValue < 0) {
          if (!this.checkSegments(nextValue % this.totalFrames)) {
            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {
              this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);
              if (!this._completedLoop) {
                this._completedLoop = true;
              } else {
                this.trigger("loopComplete");
              }
            } else {
              _isComplete = true;
              nextValue = 0;
            }
          }
        } else {
          this.setCurrentRawFrameValue(nextValue);
        }
        if (_isComplete) {
          this.setCurrentRawFrameValue(nextValue);
          this.pause();
          this.trigger("complete");
        }
      };
      AnimationItem.prototype.adjustSegment = function (arr2, offset) {
        this.playCount = 0;
        if (arr2[1] < arr2[0]) {
          if (this.frameModifier > 0) {
            if (this.playSpeed < 0) {
              this.setSpeed(-this.playSpeed);
            } else {
              this.setDirection(-1);
            }
          }
          this.totalFrames = arr2[0] - arr2[1];
          this.timeCompleted = this.totalFrames;
          this.firstFrame = arr2[1];
          this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - offset);
        } else if (arr2[1] > arr2[0]) {
          if (this.frameModifier < 0) {
            if (this.playSpeed < 0) {
              this.setSpeed(-this.playSpeed);
            } else {
              this.setDirection(1);
            }
          }
          this.totalFrames = arr2[1] - arr2[0];
          this.timeCompleted = this.totalFrames;
          this.firstFrame = arr2[0];
          this.setCurrentRawFrameValue(1e-3 + offset);
        }
        this.trigger("segmentStart");
      };
      AnimationItem.prototype.setSegment = function (init, end) {
        var pendingFrame = -1;
        if (this.isPaused) {
          if (this.currentRawFrame + this.firstFrame < init) {
            pendingFrame = init;
          } else if (this.currentRawFrame + this.firstFrame > end) {
            pendingFrame = end - init;
          }
        }
        this.firstFrame = init;
        this.totalFrames = end - init;
        this.timeCompleted = this.totalFrames;
        if (pendingFrame !== -1) {
          this.goToAndStop(pendingFrame, true);
        }
      };
      AnimationItem.prototype.playSegments = function (arr2, forceFlag) {
        if (forceFlag) {
          this.segments.length = 0;
        }
        if (typeof arr2[0] === "object") {
          var i2;
          var len = arr2.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            this.segments.push(arr2[i2]);
          }
        } else {
          this.segments.push(arr2);
        }
        if (this.segments.length && forceFlag) {
          this.adjustSegment(this.segments.shift(), 0);
        }
        if (this.isPaused) {
          this.play();
        }
      };
      AnimationItem.prototype.resetSegments = function (forceFlag) {
        this.segments.length = 0;
        this.segments.push([this.animationData.ip, this.animationData.op]);
        if (forceFlag) {
          this.checkSegments(0);
        }
      };
      AnimationItem.prototype.checkSegments = function (offset) {
        if (this.segments.length) {
          this.adjustSegment(this.segments.shift(), offset);
          return true;
        }
        return false;
      };
      AnimationItem.prototype.destroy = function (name) {
        if (name && this.name !== name || !this.renderer) {
          return;
        }
        this.renderer.destroy();
        this.imagePreloader.destroy();
        this.trigger("destroy");
        this._cbs = null;
        this.onEnterFrame = null;
        this.onLoopComplete = null;
        this.onComplete = null;
        this.onSegmentStart = null;
        this.onDestroy = null;
        this.renderer = null;
        this.renderer = null;
        this.imagePreloader = null;
        this.projectInterface = null;
      };
      AnimationItem.prototype.setCurrentRawFrameValue = function (value2) {
        this.currentRawFrame = value2;
        this.gotoFrame();
      };
      AnimationItem.prototype.setSpeed = function (val2) {
        this.playSpeed = val2;
        this.updaFrameModifier();
      };
      AnimationItem.prototype.setDirection = function (val2) {
        this.playDirection = val2 < 0 ? -1 : 1;
        this.updaFrameModifier();
      };
      AnimationItem.prototype.setVolume = function (val2, name) {
        if (name && this.name !== name) {
          return;
        }
        this.audioController.setVolume(val2);
      };
      AnimationItem.prototype.getVolume = function () {
        return this.audioController.getVolume();
      };
      AnimationItem.prototype.mute = function (name) {
        if (name && this.name !== name) {
          return;
        }
        this.audioController.mute();
      };
      AnimationItem.prototype.unmute = function (name) {
        if (name && this.name !== name) {
          return;
        }
        this.audioController.unmute();
      };
      AnimationItem.prototype.updaFrameModifier = function () {
        this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
        this.audioController.setRate(this.playSpeed * this.playDirection);
      };
      AnimationItem.prototype.getPath = function () {
        return this.path;
      };
      AnimationItem.prototype.getAssetsPath = function (assetData) {
        var path = "";
        if (assetData.e) {
          path = assetData.p;
        } else if (this.assetsPath) {
          var imagePath = assetData.p;
          if (imagePath.indexOf("images/") !== -1) {
            imagePath = imagePath.split("/")[1];
          }
          path = this.assetsPath + imagePath;
        } else {
          path = this.path;
          path += assetData.u ? assetData.u : "";
          path += assetData.p;
        }
        return path;
      };
      AnimationItem.prototype.getAssetData = function (id) {
        var i2 = 0;
        var len = this.assets.length;
        while (i2 < len) {
          if (id === this.assets[i2].id) {
            return this.assets[i2];
          }
          i2 += 1;
        }
        return null;
      };
      AnimationItem.prototype.hide = function () {
        this.renderer.hide();
      };
      AnimationItem.prototype.show = function () {
        this.renderer.show();
      };
      AnimationItem.prototype.getDuration = function (isFrame) {
        return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;
      };
      AnimationItem.prototype.trigger = function (name) {
        if (this._cbs && this._cbs[name]) {
          switch (name) {
            case "enterFrame":
              this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));
              break;
            case "loopComplete":
              this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
              break;
            case "complete":
              this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));
              break;
            case "segmentStart":
              this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
              break;
            case "destroy":
              this.triggerEvent(name, new BMDestroyEvent(name, this));
              break;
            default:
              this.triggerEvent(name);
          }
        }
        if (name === "enterFrame" && this.onEnterFrame) {
          this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));
        }
        if (name === "loopComplete" && this.onLoopComplete) {
          this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));
        }
        if (name === "complete" && this.onComplete) {
          this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));
        }
        if (name === "segmentStart" && this.onSegmentStart) {
          this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));
        }
        if (name === "destroy" && this.onDestroy) {
          this.onDestroy.call(this, new BMDestroyEvent(name, this));
        }
      };
      AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {
        var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);
        this.triggerEvent("error", error);
        if (this.onError) {
          this.onError.call(this, error);
        }
      };
      AnimationItem.prototype.triggerConfigError = function (nativeError) {
        var error = new BMConfigErrorEvent(nativeError, this.currentFrame);
        this.triggerEvent("error", error);
        if (this.onError) {
          this.onError.call(this, error);
        }
      };
      var Expressions = function () {
        var ob2 = {};
        ob2.initExpressions = initExpressions;
        function initExpressions(animation) {
          var stackCount = 0;
          var registers = [];
          function pushExpression() {
            stackCount += 1;
          }
          function popExpression() {
            stackCount -= 1;
            if (stackCount === 0) {
              releaseInstances();
            }
          }
          function registerExpressionProperty(expression) {
            if (registers.indexOf(expression) === -1) {
              registers.push(expression);
            }
          }
          function releaseInstances() {
            var i2;
            var len = registers.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              registers[i2].release();
            }
            registers.length = 0;
          }
          animation.renderer.compInterface = CompExpressionInterface(animation.renderer);
          animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);
          animation.renderer.globalData.pushExpression = pushExpression;
          animation.renderer.globalData.popExpression = popExpression;
          animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;
        }
        return ob2;
      }();
      expressionsPlugin = Expressions;
      var ExpressionManager = function () {
        var ob = {};
        var Math = BMMath;
        BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, "easeIn").get;
        BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, "easeOut").get;
        BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, "easeInOut").get;
        function initiateExpression(elem, data, property) {
          var val = data.x;
          var needsVelocity = /velocity(?![\w\d])/.test(val);
          var _needsRandom = val.indexOf("random") !== -1;
          var elemType = elem.data.ty;
          var transform;
          var content;
          var effect;
          var thisProperty = property;
          thisProperty.valueAtTime = thisProperty.getValueAtTime;
          Object.defineProperty(thisProperty, "value", {
            get: function () {
              return thisProperty.v;
            }
          });
          elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;
          elem.comp.displayStartTime = 0;
          elem.data.ip / elem.comp.globalData.frameRate;
          elem.data.op / elem.comp.globalData.frameRate;
          elem.data.sw ? elem.data.sw : 0;
          elem.data.sh ? elem.data.sh : 0;
          elem.data.nm;
          var thisLayer;
          var velocityAtTime;
          var scoped_bm_rt;
          var expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0];
          property.kf ? data.k.length : 0;
          !this.data || this.data.hd !== true;
          (function wiggle(freq, amp) {
            var iWiggle;
            var j2;
            var lenWiggle = this.pv.length ? this.pv.length : 1;
            var addedAmps = createTypedArray("float32", lenWiggle);
            freq = 5;
            var iterations = Math.floor(time * freq);
            iWiggle = 0;
            j2 = 0;
            while (iWiggle < iterations) {
              for (j2 = 0; j2 < lenWiggle; j2 += 1) {
                addedAmps[j2] += -amp + amp * 2 * BMMath.random();
              }
              iWiggle += 1;
            }
            var periods = time * freq;
            var perc = periods - Math.floor(periods);
            var arr2 = createTypedArray("float32", lenWiggle);
            if (lenWiggle > 1) {
              for (j2 = 0; j2 < lenWiggle; j2 += 1) {
                arr2[j2] = this.pv[j2] + addedAmps[j2] + (-amp + amp * 2 * BMMath.random()) * perc;
              }
              return arr2;
            }
            return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;
          }).bind(this);
          if (thisProperty.loopIn) {
            thisProperty.loopIn.bind(thisProperty);
          }
          if (thisProperty.loopOut) {
            thisProperty.loopOut.bind(thisProperty);
          }
          if (thisProperty.smooth) {
            thisProperty.smooth.bind(thisProperty);
          }
          if (this.getValueAtTime) {
            this.getValueAtTime.bind(this);
          }
          if (this.getVelocityAtTime) {
            velocityAtTime = this.getVelocityAtTime.bind(this);
          }
          elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);
          function seedRandom(seed) {
            BMMath.seedrandom(randSeed + seed);
          }
          var time;
          var value;
          elem.data.ind;
          var hasParent = !!(elem.hierarchy && elem.hierarchy.length);
          var parent;
          var randSeed = Math.floor(Math.random() * 1e6);
          elem.globalData;
          function executeExpression(_value) {
            value = _value;
            if (_needsRandom) {
              seedRandom(randSeed);
            }
            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== "textSelector") {
              return value;
            }
            if (this.propType === "textSelector") {
              this.textIndex;
              this.textTotal;
              this.selectorValue;
            }
            if (!thisLayer) {
              elem.layerInterface.text;
              thisLayer = elem.layerInterface;
              elem.comp.compInterface;
              thisLayer.toWorld.bind(thisLayer);
              thisLayer.fromWorld.bind(thisLayer);
              thisLayer.fromComp.bind(thisLayer);
              thisLayer.toComp.bind(thisLayer);
              thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;
            }
            if (!transform) {
              transform = elem.layerInterface("ADBE Transform Group");
              if (transform) {
                transform.anchorPoint;
              }
            }
            if (elemType === 4 && !content) {
              content = thisLayer("ADBE Root Vectors Group");
            }
            if (!effect) {
              effect = thisLayer(4);
            }
            hasParent = !!(elem.hierarchy && elem.hierarchy.length);
            if (hasParent && !parent) {
              parent = elem.hierarchy[0].layerInterface;
            }
            time = this.comp.renderedFrame / this.comp.globalData.frameRate;
            if (needsVelocity) {
              velocityAtTime(time);
            }
            expression_function();
            this.frameExpressionId = elem.globalData.frameId;
            if (scoped_bm_rt.propType === "shape") ;
            return scoped_bm_rt;
          }
          return executeExpression;
        }
        ob.initiateExpression = initiateExpression;
        return ob;
      }();
      var expressionHelpers = function () {
        function searchExpressions(elem2, data2, prop) {
          if (data2.x) {
            prop.k = true;
            prop.x = true;
            prop.initiateExpression = ExpressionManager.initiateExpression;
            prop.effectsSequence.push(prop.initiateExpression(elem2, data2, prop).bind(prop));
          }
        }
        function getValueAtTime(frameNum) {
          frameNum *= this.elem.globalData.frameRate;
          frameNum -= this.offsetTime;
          if (frameNum !== this._cachingAtTime.lastFrame) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;
            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);
            this._cachingAtTime.lastFrame = frameNum;
          }
          return this._cachingAtTime.value;
        }
        function getSpeedAtTime(frameNum) {
          var delta = -0.01;
          var v1 = this.getValueAtTime(frameNum);
          var v2 = this.getValueAtTime(frameNum + delta);
          var speed = 0;
          if (v1.length) {
            var i2;
            for (i2 = 0; i2 < v1.length; i2 += 1) {
              speed += Math.pow(v2[i2] - v1[i2], 2);
            }
            speed = Math.sqrt(speed) * 100;
          } else {
            speed = 0;
          }
          return speed;
        }
        function getVelocityAtTime(frameNum) {
          if (this.vel !== void 0) {
            return this.vel;
          }
          var delta = -1e-3;
          var v1 = this.getValueAtTime(frameNum);
          var v2 = this.getValueAtTime(frameNum + delta);
          var velocity;
          if (v1.length) {
            velocity = createTypedArray("float32", v1.length);
            var i2;
            for (i2 = 0; i2 < v1.length; i2 += 1) {
              velocity[i2] = (v2[i2] - v1[i2]) / delta;
            }
          } else {
            velocity = (v2 - v1) / delta;
          }
          return velocity;
        }
        function getStaticValueAtTime() {
          return this.pv;
        }
        function setGroupProperty(propertyGroup) {
          this.propertyGroup = propertyGroup;
        }
        return {
          searchExpressions,
          getSpeedAtTime,
          getVelocityAtTime,
          getValueAtTime,
          getStaticValueAtTime,
          setGroupProperty
        };
      }();
      (function addPropertyDecorator() {
        function loopOut(type, duration, durationFlag) {
          if (!this.k || !this.keyframes) {
            return this.pv;
          }
          type = type ? type.toLowerCase() : "";
          var currentFrame = this.comp.renderedFrame;
          var keyframes = this.keyframes;
          var lastKeyFrame = keyframes[keyframes.length - 1].t;
          if (currentFrame <= lastKeyFrame) {
            return this.pv;
          }
          var cycleDuration;
          var firstKeyFrame;
          if (!durationFlag) {
            if (!duration || duration > keyframes.length - 1) {
              duration = keyframes.length - 1;
            }
            firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;
            cycleDuration = lastKeyFrame - firstKeyFrame;
          } else {
            if (!duration) {
              cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);
            } else {
              cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);
            }
            firstKeyFrame = lastKeyFrame - cycleDuration;
          }
          var i2;
          var len;
          var ret;
          if (type === "pingpong") {
            var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);
            if (iterations % 2 !== 0) {
              return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
            }
          } else if (type === "offset") {
            var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
            var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
            var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
            var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);
            if (this.pv.length) {
              ret = new Array(initV.length);
              len = ret.length;
              for (i2 = 0; i2 < len; i2 += 1) {
                ret[i2] = (endV[i2] - initV[i2]) * repeats + current[i2];
              }
              return ret;
            }
            return (endV - initV) * repeats + current;
          } else if (type === "continue") {
            var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
            var nextLastValue = this.getValueAtTime((lastKeyFrame - 1e-3) / this.comp.globalData.frameRate, 0);
            if (this.pv.length) {
              ret = new Array(lastValue.length);
              len = ret.length;
              for (i2 = 0; i2 < len; i2 += 1) {
                ret[i2] = lastValue[i2] + (lastValue[i2] - nextLastValue[i2]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 5e-4;
              }
              return ret;
            }
            return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 1e-3);
          }
          return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
        }
        function loopIn(type, duration, durationFlag) {
          if (!this.k) {
            return this.pv;
          }
          type = type ? type.toLowerCase() : "";
          var currentFrame = this.comp.renderedFrame;
          var keyframes = this.keyframes;
          var firstKeyFrame = keyframes[0].t;
          if (currentFrame >= firstKeyFrame) {
            return this.pv;
          }
          var cycleDuration;
          var lastKeyFrame;
          if (!durationFlag) {
            if (!duration || duration > keyframes.length - 1) {
              duration = keyframes.length - 1;
            }
            lastKeyFrame = keyframes[duration].t;
            cycleDuration = lastKeyFrame - firstKeyFrame;
          } else {
            if (!duration) {
              cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);
            } else {
              cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);
            }
            lastKeyFrame = firstKeyFrame + cycleDuration;
          }
          var i2;
          var len;
          var ret;
          if (type === "pingpong") {
            var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);
            if (iterations % 2 === 0) {
              return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
            }
          } else if (type === "offset") {
            var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
            var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
            var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
            var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;
            if (this.pv.length) {
              ret = new Array(initV.length);
              len = ret.length;
              for (i2 = 0; i2 < len; i2 += 1) {
                ret[i2] = current[i2] - (endV[i2] - initV[i2]) * repeats;
              }
              return ret;
            }
            return current - (endV - initV) * repeats;
          } else if (type === "continue") {
            var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
            var nextFirstValue = this.getValueAtTime((firstKeyFrame + 1e-3) / this.comp.globalData.frameRate, 0);
            if (this.pv.length) {
              ret = new Array(firstValue.length);
              len = ret.length;
              for (i2 = 0; i2 < len; i2 += 1) {
                ret[i2] = firstValue[i2] + (firstValue[i2] - nextFirstValue[i2]) * (firstKeyFrame - currentFrame) / 1e-3;
              }
              return ret;
            }
            return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 1e-3;
          }
          return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0);
        }
        function smooth(width, samples) {
          if (!this.k) {
            return this.pv;
          }
          width = (width || 0.4) * 0.5;
          samples = Math.floor(samples || 5);
          if (samples <= 1) {
            return this.pv;
          }
          var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;
          var initFrame = currentTime - width;
          var endFrame = currentTime + width;
          var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;
          var i2 = 0;
          var j2 = 0;
          var value2;
          if (this.pv.length) {
            value2 = createTypedArray("float32", this.pv.length);
          } else {
            value2 = 0;
          }
          var sampleValue;
          while (i2 < samples) {
            sampleValue = this.getValueAtTime(initFrame + i2 * sampleFrequency);
            if (this.pv.length) {
              for (j2 = 0; j2 < this.pv.length; j2 += 1) {
                value2[j2] += sampleValue[j2];
              }
            } else {
              value2 += sampleValue;
            }
            i2 += 1;
          }
          if (this.pv.length) {
            for (j2 = 0; j2 < this.pv.length; j2 += 1) {
              value2[j2] /= samples;
            }
          } else {
            value2 /= samples;
          }
          return value2;
        }
        function getTransformValueAtTime(time2) {
          if (!this._transformCachingAtTime) {
            this._transformCachingAtTime = {
              v: new Matrix()
            };
          }
          var matrix = this._transformCachingAtTime.v;
          matrix.cloneFromProps(this.pre.props);
          if (this.appliedTransformations < 1) {
            var anchor = this.a.getValueAtTime(time2);
            matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);
          }
          if (this.appliedTransformations < 2) {
            var scale = this.s.getValueAtTime(time2);
            matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult);
          }
          if (this.sk && this.appliedTransformations < 3) {
            var skew = this.sk.getValueAtTime(time2);
            var skewAxis = this.sa.getValueAtTime(time2);
            matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);
          }
          if (this.r && this.appliedTransformations < 4) {
            var rotation = this.r.getValueAtTime(time2);
            matrix.rotate(-rotation * this.r.mult);
          } else if (!this.r && this.appliedTransformations < 4) {
            var rotationZ = this.rz.getValueAtTime(time2);
            var rotationY = this.ry.getValueAtTime(time2);
            var rotationX = this.rx.getValueAtTime(time2);
            var orientation = this.or.getValueAtTime(time2);
            matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);
          }
          if (this.data.p && this.data.p.s) {
            var positionX = this.px.getValueAtTime(time2);
            var positionY = this.py.getValueAtTime(time2);
            if (this.data.p.z) {
              var positionZ = this.pz.getValueAtTime(time2);
              matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);
            } else {
              matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);
            }
          } else {
            var position = this.p.getValueAtTime(time2);
            matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult);
          }
          return matrix;
        }
        function getTransformStaticValueAtTime() {
          return this.v.clone(new Matrix());
        }
        var getTransformProperty = TransformPropertyFactory.getTransformProperty;
        TransformPropertyFactory.getTransformProperty = function (elem2, data2, container) {
          var prop = getTransformProperty(elem2, data2, container);
          if (prop.dynamicProperties.length) {
            prop.getValueAtTime = getTransformValueAtTime.bind(prop);
          } else {
            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);
          }
          prop.setGroupProperty = expressionHelpers.setGroupProperty;
          return prop;
        };
        var propertyGetProp = PropertyFactory.getProp;
        PropertyFactory.getProp = function (elem2, data2, type, mult, container) {
          var prop = propertyGetProp(elem2, data2, type, mult, container);
          if (prop.kf) {
            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);
          } else {
            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);
          }
          prop.setGroupProperty = expressionHelpers.setGroupProperty;
          prop.loopOut = loopOut;
          prop.loopIn = loopIn;
          prop.smooth = smooth;
          prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);
          prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);
          prop.numKeys = data2.a === 1 ? data2.k.length : 0;
          prop.propertyIndex = data2.ix;
          var value2 = 0;
          if (type !== 0) {
            value2 = createTypedArray("float32", data2.a === 1 ? data2.k[0].s.length : data2.k.length);
          }
          prop._cachingAtTime = {
            lastFrame: initialDefaultFrame,
            lastIndex: 0,
            value: value2
          };
          expressionHelpers.searchExpressions(elem2, data2, prop);
          if (prop.k) {
            container.addDynamicProperty(prop);
          }
          return prop;
        };
        function getShapeValueAtTime(frameNum) {
          if (!this._cachingAtTime) {
            this._cachingAtTime = {
              shapeValue: shapePool.clone(this.pv),
              lastIndex: 0,
              lastTime: initialDefaultFrame
            };
          }
          frameNum *= this.elem.globalData.frameRate;
          frameNum -= this.offsetTime;
          if (frameNum !== this._cachingAtTime.lastTime) {
            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;
            this._cachingAtTime.lastTime = frameNum;
            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);
          }
          return this._cachingAtTime.shapeValue;
        }
        var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();
        var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();
        function ShapeExpressions() {}
        ShapeExpressions.prototype = {
          vertices: function (prop, time2) {
            if (this.k) {
              this.getValue();
            }
            var shapePath = this.v;
            if (time2 !== void 0) {
              shapePath = this.getValueAtTime(time2, 0);
            }
            var i2;
            var len = shapePath._length;
            var vertices = shapePath[prop];
            var points = shapePath.v;
            var arr2 = createSizedArray(len);
            for (i2 = 0; i2 < len; i2 += 1) {
              if (prop === "i" || prop === "o") {
                arr2[i2] = [vertices[i2][0] - points[i2][0], vertices[i2][1] - points[i2][1]];
              } else {
                arr2[i2] = [vertices[i2][0], vertices[i2][1]];
              }
            }
            return arr2;
          },
          points: function (time2) {
            return this.vertices("v", time2);
          },
          inTangents: function (time2) {
            return this.vertices("i", time2);
          },
          outTangents: function (time2) {
            return this.vertices("o", time2);
          },
          isClosed: function () {
            return this.v.c;
          },
          pointOnPath: function (perc, time2) {
            var shapePath = this.v;
            if (time2 !== void 0) {
              shapePath = this.getValueAtTime(time2, 0);
            }
            if (!this._segmentsLength) {
              this._segmentsLength = bez.getSegmentsLength(shapePath);
            }
            var segmentsLength = this._segmentsLength;
            var lengths = segmentsLength.lengths;
            var lengthPos = segmentsLength.totalLength * perc;
            var i2 = 0;
            var len = lengths.length;
            var accumulatedLength = 0;
            var pt2;
            while (i2 < len) {
              if (accumulatedLength + lengths[i2].addedLength > lengthPos) {
                var initIndex = i2;
                var endIndex = shapePath.c && i2 === len - 1 ? 0 : i2 + 1;
                var segmentPerc = (lengthPos - accumulatedLength) / lengths[i2].addedLength;
                pt2 = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i2]);
                break;
              } else {
                accumulatedLength += lengths[i2].addedLength;
              }
              i2 += 1;
            }
            if (!pt2) {
              pt2 = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];
            }
            return pt2;
          },
          vectorOnPath: function (perc, time2, vectorType) {
            if (perc == 1) {
              perc = this.v.c;
            } else if (perc == 0) {
              perc = 0.999;
            }
            var pt1 = this.pointOnPath(perc, time2);
            var pt2 = this.pointOnPath(perc + 1e-3, time2);
            var xLength = pt2[0] - pt1[0];
            var yLength = pt2[1] - pt1[1];
            var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));
            if (magnitude === 0) {
              return [0, 0];
            }
            var unitVector = vectorType === "tangent" ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];
            return unitVector;
          },
          tangentOnPath: function (perc, time2) {
            return this.vectorOnPath(perc, time2, "tangent");
          },
          normalOnPath: function (perc, time2) {
            return this.vectorOnPath(perc, time2, "normal");
          },
          setGroupProperty: expressionHelpers.setGroupProperty,
          getValueAtTime: expressionHelpers.getStaticValueAtTime
        };
        extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);
        extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);
        KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;
        KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;
        var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;
        ShapePropertyFactory.getShapeProp = function (elem2, data2, type, arr2, trims) {
          var prop = propertyGetShapeProp(elem2, data2, type, arr2, trims);
          prop.propertyIndex = data2.ix;
          prop.lock = false;
          if (type === 3) {
            expressionHelpers.searchExpressions(elem2, data2.pt, prop);
          } else if (type === 4) {
            expressionHelpers.searchExpressions(elem2, data2.ks, prop);
          }
          if (prop.k) {
            elem2.addDynamicProperty(prop);
          }
          return prop;
        };
      })();
      (function addDecorator() {
        function searchExpressions() {
          if (this.data.d.x) {
            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);
            this.addEffect(this.getExpressionValue.bind(this));
            return true;
          }
          return null;
        }
        TextProperty.prototype.getExpressionValue = function (currentValue, text) {
          var newValue = this.calculateExpression(text);
          if (currentValue.t !== newValue) {
            var newData = {};
            this.copyData(newData, currentValue);
            newData.t = newValue.toString();
            newData.__complete = false;
            return newData;
          }
          return currentValue;
        };
        TextProperty.prototype.searchProperty = function () {
          var isKeyframed = this.searchKeyframes();
          var hasExpressions = this.searchExpressions();
          this.kf = isKeyframed || hasExpressions;
          return this.kf;
        };
        TextProperty.prototype.searchExpressions = searchExpressions;
      })();
      var ShapePathInterface = function () {
        return function pathInterfaceFactory(shape, view, propertyGroup) {
          var prop = view.sh;
          function interfaceFunction(val2) {
            if (val2 === "Shape" || val2 === "shape" || val2 === "Path" || val2 === "path" || val2 === "ADBE Vector Shape" || val2 === 2) {
              return interfaceFunction.path;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          prop.setGroupProperty(PropertyInterface("Path", _propertyGroup));
          Object.defineProperties(interfaceFunction, {
            path: {
              get: function () {
                if (prop.k) {
                  prop.getValue();
                }
                return prop;
              }
            },
            shape: {
              get: function () {
                if (prop.k) {
                  prop.getValue();
                }
                return prop;
              }
            },
            _name: {
              value: shape.nm
            },
            ix: {
              value: shape.ix
            },
            propertyIndex: {
              value: shape.ix
            },
            mn: {
              value: shape.mn
            },
            propertyGroup: {
              value: propertyGroup
            }
          });
          return interfaceFunction;
        };
      }();
      var propertyGroupFactory = function () {
        return function (interfaceFunction, parentPropertyGroup) {
          return function (val2) {
            val2 = val2 === void 0 ? 1 : val2;
            if (val2 <= 0) {
              return interfaceFunction;
            }
            return parentPropertyGroup(val2 - 1);
          };
        };
      }();
      var PropertyInterface = function () {
        return function (propertyName, propertyGroup) {
          var interfaceFunction = {
            _name: propertyName
          };
          function _propertyGroup(val2) {
            val2 = val2 === void 0 ? 1 : val2;
            if (val2 <= 0) {
              return interfaceFunction;
            }
            return propertyGroup(val2 - 1);
          }
          return _propertyGroup;
        };
      }();
      var ShapeExpressionInterface = function () {
        function iterateElements(shapes, view, propertyGroup) {
          var arr2 = [];
          var i2;
          var len = shapes ? shapes.length : 0;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (shapes[i2].ty === "gr") {
              arr2.push(groupInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "fl") {
              arr2.push(fillInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "st") {
              arr2.push(strokeInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "tm") {
              arr2.push(trimInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "tr") ;else if (shapes[i2].ty === "el") {
              arr2.push(ellipseInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "sr") {
              arr2.push(starInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "sh") {
              arr2.push(ShapePathInterface(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "rc") {
              arr2.push(rectInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "rd") {
              arr2.push(roundedInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "rp") {
              arr2.push(repeaterInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else if (shapes[i2].ty === "gf") {
              arr2.push(gradientFillInterfaceFactory(shapes[i2], view[i2], propertyGroup));
            } else {
              arr2.push(defaultInterfaceFactory(shapes[i2], view[i2]));
            }
          }
          return arr2;
        }
        function contentsInterfaceFactory(shape, view, propertyGroup) {
          var interfaces;
          var interfaceFunction = function _interfaceFunction(value2) {
            var i2 = 0;
            var len = interfaces.length;
            while (i2 < len) {
              if (interfaces[i2]._name === value2 || interfaces[i2].mn === value2 || interfaces[i2].propertyIndex === value2 || interfaces[i2].ix === value2 || interfaces[i2].ind === value2) {
                return interfaces[i2];
              }
              i2 += 1;
            }
            if (typeof value2 === "number") {
              return interfaces[value2 - 1];
            }
            return null;
          };
          interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);
          interfaceFunction.numProperties = interfaces.length;
          var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);
          interfaceFunction.transform = transformInterface;
          interfaceFunction.propertyIndex = shape.cix;
          interfaceFunction._name = shape.nm;
          return interfaceFunction;
        }
        function groupInterfaceFactory(shape, view, propertyGroup) {
          var interfaceFunction = function _interfaceFunction(value2) {
            switch (value2) {
              case "ADBE Vectors Group":
              case "Contents":
              case 2:
                return interfaceFunction.content;
              default:
                return interfaceFunction.transform;
            }
          };
          interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          var content2 = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);
          var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);
          interfaceFunction.content = content2;
          interfaceFunction.transform = transformInterface;
          Object.defineProperty(interfaceFunction, "_name", {
            get: function () {
              return shape.nm;
            }
          });
          interfaceFunction.numProperties = shape.np;
          interfaceFunction.propertyIndex = shape.ix;
          interfaceFunction.nm = shape.nm;
          interfaceFunction.mn = shape.mn;
          return interfaceFunction;
        }
        function fillInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(val2) {
            if (val2 === "Color" || val2 === "color") {
              return interfaceFunction.color;
            }
            if (val2 === "Opacity" || val2 === "opacity") {
              return interfaceFunction.opacity;
            }
            return null;
          }
          Object.defineProperties(interfaceFunction, {
            color: {
              get: ExpressionPropertyInterface(view.c)
            },
            opacity: {
              get: ExpressionPropertyInterface(view.o)
            },
            _name: {
              value: shape.nm
            },
            mn: {
              value: shape.mn
            }
          });
          view.c.setGroupProperty(PropertyInterface("Color", propertyGroup));
          view.o.setGroupProperty(PropertyInterface("Opacity", propertyGroup));
          return interfaceFunction;
        }
        function gradientFillInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(val2) {
            if (val2 === "Start Point" || val2 === "start point") {
              return interfaceFunction.startPoint;
            }
            if (val2 === "End Point" || val2 === "end point") {
              return interfaceFunction.endPoint;
            }
            if (val2 === "Opacity" || val2 === "opacity") {
              return interfaceFunction.opacity;
            }
            return null;
          }
          Object.defineProperties(interfaceFunction, {
            startPoint: {
              get: ExpressionPropertyInterface(view.s)
            },
            endPoint: {
              get: ExpressionPropertyInterface(view.e)
            },
            opacity: {
              get: ExpressionPropertyInterface(view.o)
            },
            type: {
              get: function () {
                return "a";
              }
            },
            _name: {
              value: shape.nm
            },
            mn: {
              value: shape.mn
            }
          });
          view.s.setGroupProperty(PropertyInterface("Start Point", propertyGroup));
          view.e.setGroupProperty(PropertyInterface("End Point", propertyGroup));
          view.o.setGroupProperty(PropertyInterface("Opacity", propertyGroup));
          return interfaceFunction;
        }
        function defaultInterfaceFactory() {
          function interfaceFunction() {
            return null;
          }
          return interfaceFunction;
        }
        function strokeInterfaceFactory(shape, view, propertyGroup) {
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);
          function addPropertyToDashOb(i3) {
            Object.defineProperty(dashOb, shape.d[i3].nm, {
              get: ExpressionPropertyInterface(view.d.dataProps[i3].p)
            });
          }
          var i2;
          var len = shape.d ? shape.d.length : 0;
          var dashOb = {};
          for (i2 = 0; i2 < len; i2 += 1) {
            addPropertyToDashOb(i2);
            view.d.dataProps[i2].p.setGroupProperty(_dashPropertyGroup);
          }
          function interfaceFunction(val2) {
            if (val2 === "Color" || val2 === "color") {
              return interfaceFunction.color;
            }
            if (val2 === "Opacity" || val2 === "opacity") {
              return interfaceFunction.opacity;
            }
            if (val2 === "Stroke Width" || val2 === "stroke width") {
              return interfaceFunction.strokeWidth;
            }
            return null;
          }
          Object.defineProperties(interfaceFunction, {
            color: {
              get: ExpressionPropertyInterface(view.c)
            },
            opacity: {
              get: ExpressionPropertyInterface(view.o)
            },
            strokeWidth: {
              get: ExpressionPropertyInterface(view.w)
            },
            dash: {
              get: function () {
                return dashOb;
              }
            },
            _name: {
              value: shape.nm
            },
            mn: {
              value: shape.mn
            }
          });
          view.c.setGroupProperty(PropertyInterface("Color", _propertyGroup));
          view.o.setGroupProperty(PropertyInterface("Opacity", _propertyGroup));
          view.w.setGroupProperty(PropertyInterface("Stroke Width", _propertyGroup));
          return interfaceFunction;
        }
        function trimInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(val2) {
            if (val2 === shape.e.ix || val2 === "End" || val2 === "end") {
              return interfaceFunction.end;
            }
            if (val2 === shape.s.ix) {
              return interfaceFunction.start;
            }
            if (val2 === shape.o.ix) {
              return interfaceFunction.offset;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          interfaceFunction.propertyIndex = shape.ix;
          view.s.setGroupProperty(PropertyInterface("Start", _propertyGroup));
          view.e.setGroupProperty(PropertyInterface("End", _propertyGroup));
          view.o.setGroupProperty(PropertyInterface("Offset", _propertyGroup));
          interfaceFunction.propertyIndex = shape.ix;
          interfaceFunction.propertyGroup = propertyGroup;
          Object.defineProperties(interfaceFunction, {
            start: {
              get: ExpressionPropertyInterface(view.s)
            },
            end: {
              get: ExpressionPropertyInterface(view.e)
            },
            offset: {
              get: ExpressionPropertyInterface(view.o)
            },
            _name: {
              value: shape.nm
            }
          });
          interfaceFunction.mn = shape.mn;
          return interfaceFunction;
        }
        function transformInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(value2) {
            if (shape.a.ix === value2 || value2 === "Anchor Point") {
              return interfaceFunction.anchorPoint;
            }
            if (shape.o.ix === value2 || value2 === "Opacity") {
              return interfaceFunction.opacity;
            }
            if (shape.p.ix === value2 || value2 === "Position") {
              return interfaceFunction.position;
            }
            if (shape.r.ix === value2 || value2 === "Rotation" || value2 === "ADBE Vector Rotation") {
              return interfaceFunction.rotation;
            }
            if (shape.s.ix === value2 || value2 === "Scale") {
              return interfaceFunction.scale;
            }
            if (shape.sk && shape.sk.ix === value2 || value2 === "Skew") {
              return interfaceFunction.skew;
            }
            if (shape.sa && shape.sa.ix === value2 || value2 === "Skew Axis") {
              return interfaceFunction.skewAxis;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          view.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", _propertyGroup));
          view.transform.mProps.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
          view.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", _propertyGroup));
          view.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", _propertyGroup));
          view.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", _propertyGroup));
          if (view.transform.mProps.sk) {
            view.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", _propertyGroup));
            view.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", _propertyGroup));
          }
          view.transform.op.setGroupProperty(PropertyInterface("Opacity", _propertyGroup));
          Object.defineProperties(interfaceFunction, {
            opacity: {
              get: ExpressionPropertyInterface(view.transform.mProps.o)
            },
            position: {
              get: ExpressionPropertyInterface(view.transform.mProps.p)
            },
            anchorPoint: {
              get: ExpressionPropertyInterface(view.transform.mProps.a)
            },
            scale: {
              get: ExpressionPropertyInterface(view.transform.mProps.s)
            },
            rotation: {
              get: ExpressionPropertyInterface(view.transform.mProps.r)
            },
            skew: {
              get: ExpressionPropertyInterface(view.transform.mProps.sk)
            },
            skewAxis: {
              get: ExpressionPropertyInterface(view.transform.mProps.sa)
            },
            _name: {
              value: shape.nm
            }
          });
          interfaceFunction.ty = "tr";
          interfaceFunction.mn = shape.mn;
          interfaceFunction.propertyGroup = propertyGroup;
          return interfaceFunction;
        }
        function ellipseInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(value2) {
            if (shape.p.ix === value2) {
              return interfaceFunction.position;
            }
            if (shape.s.ix === value2) {
              return interfaceFunction.size;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          interfaceFunction.propertyIndex = shape.ix;
          var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
          prop.s.setGroupProperty(PropertyInterface("Size", _propertyGroup));
          prop.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
          Object.defineProperties(interfaceFunction, {
            size: {
              get: ExpressionPropertyInterface(prop.s)
            },
            position: {
              get: ExpressionPropertyInterface(prop.p)
            },
            _name: {
              value: shape.nm
            }
          });
          interfaceFunction.mn = shape.mn;
          return interfaceFunction;
        }
        function starInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(value2) {
            if (shape.p.ix === value2) {
              return interfaceFunction.position;
            }
            if (shape.r.ix === value2) {
              return interfaceFunction.rotation;
            }
            if (shape.pt.ix === value2) {
              return interfaceFunction.points;
            }
            if (shape.or.ix === value2 || value2 === "ADBE Vector Star Outer Radius") {
              return interfaceFunction.outerRadius;
            }
            if (shape.os.ix === value2) {
              return interfaceFunction.outerRoundness;
            }
            if (shape.ir && (shape.ir.ix === value2 || value2 === "ADBE Vector Star Inner Radius")) {
              return interfaceFunction.innerRadius;
            }
            if (shape.is && shape.is.ix === value2) {
              return interfaceFunction.innerRoundness;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
          interfaceFunction.propertyIndex = shape.ix;
          prop.or.setGroupProperty(PropertyInterface("Outer Radius", _propertyGroup));
          prop.os.setGroupProperty(PropertyInterface("Outer Roundness", _propertyGroup));
          prop.pt.setGroupProperty(PropertyInterface("Points", _propertyGroup));
          prop.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
          prop.r.setGroupProperty(PropertyInterface("Rotation", _propertyGroup));
          if (shape.ir) {
            prop.ir.setGroupProperty(PropertyInterface("Inner Radius", _propertyGroup));
            prop.is.setGroupProperty(PropertyInterface("Inner Roundness", _propertyGroup));
          }
          Object.defineProperties(interfaceFunction, {
            position: {
              get: ExpressionPropertyInterface(prop.p)
            },
            rotation: {
              get: ExpressionPropertyInterface(prop.r)
            },
            points: {
              get: ExpressionPropertyInterface(prop.pt)
            },
            outerRadius: {
              get: ExpressionPropertyInterface(prop.or)
            },
            outerRoundness: {
              get: ExpressionPropertyInterface(prop.os)
            },
            innerRadius: {
              get: ExpressionPropertyInterface(prop.ir)
            },
            innerRoundness: {
              get: ExpressionPropertyInterface(prop.is)
            },
            _name: {
              value: shape.nm
            }
          });
          interfaceFunction.mn = shape.mn;
          return interfaceFunction;
        }
        function rectInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(value2) {
            if (shape.p.ix === value2) {
              return interfaceFunction.position;
            }
            if (shape.r.ix === value2) {
              return interfaceFunction.roundness;
            }
            if (shape.s.ix === value2 || value2 === "Size" || value2 === "ADBE Vector Rect Size") {
              return interfaceFunction.size;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
          interfaceFunction.propertyIndex = shape.ix;
          prop.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
          prop.s.setGroupProperty(PropertyInterface("Size", _propertyGroup));
          prop.r.setGroupProperty(PropertyInterface("Rotation", _propertyGroup));
          Object.defineProperties(interfaceFunction, {
            position: {
              get: ExpressionPropertyInterface(prop.p)
            },
            roundness: {
              get: ExpressionPropertyInterface(prop.r)
            },
            size: {
              get: ExpressionPropertyInterface(prop.s)
            },
            _name: {
              value: shape.nm
            }
          });
          interfaceFunction.mn = shape.mn;
          return interfaceFunction;
        }
        function roundedInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(value2) {
            if (shape.r.ix === value2 || value2 === "Round Corners 1") {
              return interfaceFunction.radius;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          var prop = view;
          interfaceFunction.propertyIndex = shape.ix;
          prop.rd.setGroupProperty(PropertyInterface("Radius", _propertyGroup));
          Object.defineProperties(interfaceFunction, {
            radius: {
              get: ExpressionPropertyInterface(prop.rd)
            },
            _name: {
              value: shape.nm
            }
          });
          interfaceFunction.mn = shape.mn;
          return interfaceFunction;
        }
        function repeaterInterfaceFactory(shape, view, propertyGroup) {
          function interfaceFunction(value2) {
            if (shape.c.ix === value2 || value2 === "Copies") {
              return interfaceFunction.copies;
            }
            if (shape.o.ix === value2 || value2 === "Offset") {
              return interfaceFunction.offset;
            }
            return null;
          }
          var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
          var prop = view;
          interfaceFunction.propertyIndex = shape.ix;
          prop.c.setGroupProperty(PropertyInterface("Copies", _propertyGroup));
          prop.o.setGroupProperty(PropertyInterface("Offset", _propertyGroup));
          Object.defineProperties(interfaceFunction, {
            copies: {
              get: ExpressionPropertyInterface(prop.c)
            },
            offset: {
              get: ExpressionPropertyInterface(prop.o)
            },
            _name: {
              value: shape.nm
            }
          });
          interfaceFunction.mn = shape.mn;
          return interfaceFunction;
        }
        return function (shapes, view, propertyGroup) {
          var interfaces;
          function _interfaceFunction(value2) {
            if (typeof value2 === "number") {
              value2 = value2 === void 0 ? 1 : value2;
              if (value2 === 0) {
                return propertyGroup;
              }
              return interfaces[value2 - 1];
            }
            var i2 = 0;
            var len = interfaces.length;
            while (i2 < len) {
              if (interfaces[i2]._name === value2) {
                return interfaces[i2];
              }
              i2 += 1;
            }
            return null;
          }
          function parentGroupWrapper() {
            return propertyGroup;
          }
          _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);
          interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);
          _interfaceFunction.numProperties = interfaces.length;
          _interfaceFunction._name = "Contents";
          return _interfaceFunction;
        };
      }();
      var TextExpressionInterface = function () {
        return function (elem2) {
          var _prevValue;
          var _sourceText;
          function _thisLayerFunction(name) {
            switch (name) {
              case "ADBE Text Document":
                return _thisLayerFunction.sourceText;
              default:
                return null;
            }
          }
          Object.defineProperty(_thisLayerFunction, "sourceText", {
            get: function () {
              elem2.textProperty.getValue();
              var stringValue = elem2.textProperty.currentData.t;
              if (stringValue !== _prevValue) {
                elem2.textProperty.currentData.t = _prevValue;
                _sourceText = new String(stringValue);
                _sourceText.value = stringValue || new String(stringValue);
              }
              return _sourceText;
            }
          });
          return _thisLayerFunction;
        };
      }();
      var LayerExpressionInterface = function () {
        function getMatrix(time2) {
          var toWorldMat = new Matrix();
          if (time2 !== void 0) {
            var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time2);
            propMatrix.clone(toWorldMat);
          } else {
            var transformMat = this._elem.finalTransform.mProp;
            transformMat.applyToMatrix(toWorldMat);
          }
          return toWorldMat;
        }
        function toWorldVec(arr2, time2) {
          var toWorldMat = this.getMatrix(time2);
          toWorldMat.props[12] = 0;
          toWorldMat.props[13] = 0;
          toWorldMat.props[14] = 0;
          return this.applyPoint(toWorldMat, arr2);
        }
        function toWorld(arr2, time2) {
          var toWorldMat = this.getMatrix(time2);
          return this.applyPoint(toWorldMat, arr2);
        }
        function fromWorldVec(arr2, time2) {
          var toWorldMat = this.getMatrix(time2);
          toWorldMat.props[12] = 0;
          toWorldMat.props[13] = 0;
          toWorldMat.props[14] = 0;
          return this.invertPoint(toWorldMat, arr2);
        }
        function fromWorld(arr2, time2) {
          var toWorldMat = this.getMatrix(time2);
          return this.invertPoint(toWorldMat, arr2);
        }
        function applyPoint(matrix, arr2) {
          if (this._elem.hierarchy && this._elem.hierarchy.length) {
            var i2;
            var len = this._elem.hierarchy.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(matrix);
            }
          }
          return matrix.applyToPointArray(arr2[0], arr2[1], arr2[2] || 0);
        }
        function invertPoint(matrix, arr2) {
          if (this._elem.hierarchy && this._elem.hierarchy.length) {
            var i2;
            var len = this._elem.hierarchy.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(matrix);
            }
          }
          return matrix.inversePoint(arr2);
        }
        function fromComp(arr2) {
          var toWorldMat = new Matrix();
          toWorldMat.reset();
          this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);
          if (this._elem.hierarchy && this._elem.hierarchy.length) {
            var i2;
            var len = this._elem.hierarchy.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              this._elem.hierarchy[i2].finalTransform.mProp.applyToMatrix(toWorldMat);
            }
            return toWorldMat.inversePoint(arr2);
          }
          return toWorldMat.inversePoint(arr2);
        }
        function sampleImage() {
          return [1, 1, 1, 1];
        }
        return function (elem2) {
          var transformInterface;
          function _registerMaskInterface(maskManager) {
            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem2);
          }
          function _registerEffectsInterface(effects) {
            _thisLayerFunction.effect = effects;
          }
          function _thisLayerFunction(name) {
            switch (name) {
              case "ADBE Root Vectors Group":
              case "Contents":
              case 2:
                return _thisLayerFunction.shapeInterface;
              case 1:
              case 6:
              case "Transform":
              case "transform":
              case "ADBE Transform Group":
                return transformInterface;
              case 4:
              case "ADBE Effect Parade":
              case "effects":
              case "Effects":
                return _thisLayerFunction.effect;
              case "ADBE Text Properties":
                return _thisLayerFunction.textInterface;
              default:
                return null;
            }
          }
          _thisLayerFunction.getMatrix = getMatrix;
          _thisLayerFunction.invertPoint = invertPoint;
          _thisLayerFunction.applyPoint = applyPoint;
          _thisLayerFunction.toWorld = toWorld;
          _thisLayerFunction.toWorldVec = toWorldVec;
          _thisLayerFunction.fromWorld = fromWorld;
          _thisLayerFunction.fromWorldVec = fromWorldVec;
          _thisLayerFunction.toComp = toWorld;
          _thisLayerFunction.fromComp = fromComp;
          _thisLayerFunction.sampleImage = sampleImage;
          _thisLayerFunction.sourceRectAtTime = elem2.sourceRectAtTime.bind(elem2);
          _thisLayerFunction._elem = elem2;
          transformInterface = TransformExpressionInterface(elem2.finalTransform.mProp);
          var anchorPointDescriptor = getDescriptor(transformInterface, "anchorPoint");
          Object.defineProperties(_thisLayerFunction, {
            hasParent: {
              get: function () {
                return elem2.hierarchy.length;
              }
            },
            parent: {
              get: function () {
                return elem2.hierarchy[0].layerInterface;
              }
            },
            rotation: getDescriptor(transformInterface, "rotation"),
            scale: getDescriptor(transformInterface, "scale"),
            position: getDescriptor(transformInterface, "position"),
            opacity: getDescriptor(transformInterface, "opacity"),
            anchorPoint: anchorPointDescriptor,
            anchor_point: anchorPointDescriptor,
            transform: {
              get: function () {
                return transformInterface;
              }
            },
            active: {
              get: function () {
                return elem2.isInRange;
              }
            }
          });
          _thisLayerFunction.startTime = elem2.data.st;
          _thisLayerFunction.index = elem2.data.ind;
          _thisLayerFunction.source = elem2.data.refId;
          _thisLayerFunction.height = elem2.data.ty === 0 ? elem2.data.h : 100;
          _thisLayerFunction.width = elem2.data.ty === 0 ? elem2.data.w : 100;
          _thisLayerFunction.inPoint = elem2.data.ip / elem2.comp.globalData.frameRate;
          _thisLayerFunction.outPoint = elem2.data.op / elem2.comp.globalData.frameRate;
          _thisLayerFunction._name = elem2.data.nm;
          _thisLayerFunction.registerMaskInterface = _registerMaskInterface;
          _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;
          return _thisLayerFunction;
        };
      }();
      var FootageInterface = function () {
        var outlineInterfaceFactory = function (elem2) {
          var currentPropertyName = "";
          var currentProperty = elem2.getFootageData();
          function init() {
            currentPropertyName = "";
            currentProperty = elem2.getFootageData();
            return searchProperty;
          }
          function searchProperty(value2) {
            if (currentProperty[value2]) {
              currentPropertyName = value2;
              currentProperty = currentProperty[value2];
              if (typeof currentProperty === "object") {
                return searchProperty;
              }
              return currentProperty;
            }
            var propertyNameIndex = value2.indexOf(currentPropertyName);
            if (propertyNameIndex !== -1) {
              var index2 = parseInt(value2.substr(propertyNameIndex + currentPropertyName.length), 10);
              currentProperty = currentProperty[index2];
              if (typeof currentProperty === "object") {
                return searchProperty;
              }
              return currentProperty;
            }
            return "";
          }
          return init;
        };
        var dataInterfaceFactory = function (elem2) {
          function interfaceFunction(value2) {
            if (value2 === "Outline") {
              return interfaceFunction.outlineInterface();
            }
            return null;
          }
          interfaceFunction._name = "Outline";
          interfaceFunction.outlineInterface = outlineInterfaceFactory(elem2);
          return interfaceFunction;
        };
        return function (elem2) {
          function _interfaceFunction(value2) {
            if (value2 === "Data") {
              return _interfaceFunction.dataInterface;
            }
            return null;
          }
          _interfaceFunction._name = "Data";
          _interfaceFunction.dataInterface = dataInterfaceFactory(elem2);
          return _interfaceFunction;
        };
      }();
      var CompExpressionInterface = function () {
        return function (comp) {
          function _thisLayerFunction(name) {
            var i2 = 0;
            var len = comp.layers.length;
            while (i2 < len) {
              if (comp.layers[i2].nm === name || comp.layers[i2].ind === name) {
                return comp.elements[i2].layerInterface;
              }
              i2 += 1;
            }
            return null;
          }
          Object.defineProperty(_thisLayerFunction, "_name", {
            value: comp.data.nm
          });
          _thisLayerFunction.layer = _thisLayerFunction;
          _thisLayerFunction.pixelAspect = 1;
          _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;
          _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;
          _thisLayerFunction.pixelAspect = 1;
          _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;
          _thisLayerFunction.displayStartTime = 0;
          _thisLayerFunction.numLayers = comp.layers.length;
          return _thisLayerFunction;
        };
      }();
      var TransformExpressionInterface = function () {
        return function (transform2) {
          function _thisFunction(name) {
            switch (name) {
              case "scale":
              case "Scale":
              case "ADBE Scale":
              case 6:
                return _thisFunction.scale;
              case "rotation":
              case "Rotation":
              case "ADBE Rotation":
              case "ADBE Rotate Z":
              case 10:
                return _thisFunction.rotation;
              case "ADBE Rotate X":
                return _thisFunction.xRotation;
              case "ADBE Rotate Y":
                return _thisFunction.yRotation;
              case "position":
              case "Position":
              case "ADBE Position":
              case 2:
                return _thisFunction.position;
              case "ADBE Position_0":
                return _thisFunction.xPosition;
              case "ADBE Position_1":
                return _thisFunction.yPosition;
              case "ADBE Position_2":
                return _thisFunction.zPosition;
              case "anchorPoint":
              case "AnchorPoint":
              case "Anchor Point":
              case "ADBE AnchorPoint":
              case 1:
                return _thisFunction.anchorPoint;
              case "opacity":
              case "Opacity":
              case 11:
                return _thisFunction.opacity;
              default:
                return null;
            }
          }
          Object.defineProperty(_thisFunction, "rotation", {
            get: ExpressionPropertyInterface(transform2.r || transform2.rz)
          });
          Object.defineProperty(_thisFunction, "zRotation", {
            get: ExpressionPropertyInterface(transform2.rz || transform2.r)
          });
          Object.defineProperty(_thisFunction, "xRotation", {
            get: ExpressionPropertyInterface(transform2.rx)
          });
          Object.defineProperty(_thisFunction, "yRotation", {
            get: ExpressionPropertyInterface(transform2.ry)
          });
          Object.defineProperty(_thisFunction, "scale", {
            get: ExpressionPropertyInterface(transform2.s)
          });
          var _px;
          var _py;
          var _pz;
          var _transformFactory;
          if (transform2.p) {
            _transformFactory = ExpressionPropertyInterface(transform2.p);
          } else {
            _px = ExpressionPropertyInterface(transform2.px);
            _py = ExpressionPropertyInterface(transform2.py);
            if (transform2.pz) {
              _pz = ExpressionPropertyInterface(transform2.pz);
            }
          }
          Object.defineProperty(_thisFunction, "position", {
            get: function () {
              if (transform2.p) {
                return _transformFactory();
              }
              return [_px(), _py(), _pz ? _pz() : 0];
            }
          });
          Object.defineProperty(_thisFunction, "xPosition", {
            get: ExpressionPropertyInterface(transform2.px)
          });
          Object.defineProperty(_thisFunction, "yPosition", {
            get: ExpressionPropertyInterface(transform2.py)
          });
          Object.defineProperty(_thisFunction, "zPosition", {
            get: ExpressionPropertyInterface(transform2.pz)
          });
          Object.defineProperty(_thisFunction, "anchorPoint", {
            get: ExpressionPropertyInterface(transform2.a)
          });
          Object.defineProperty(_thisFunction, "opacity", {
            get: ExpressionPropertyInterface(transform2.o)
          });
          Object.defineProperty(_thisFunction, "skew", {
            get: ExpressionPropertyInterface(transform2.sk)
          });
          Object.defineProperty(_thisFunction, "skewAxis", {
            get: ExpressionPropertyInterface(transform2.sa)
          });
          Object.defineProperty(_thisFunction, "orientation", {
            get: ExpressionPropertyInterface(transform2.or)
          });
          return _thisFunction;
        };
      }();
      var ProjectInterface = function () {
        function registerComposition(comp) {
          this.compositions.push(comp);
        }
        return function () {
          function _thisProjectFunction(name) {
            var i2 = 0;
            var len = this.compositions.length;
            while (i2 < len) {
              if (this.compositions[i2].data && this.compositions[i2].data.nm === name) {
                if (this.compositions[i2].prepareFrame && this.compositions[i2].data.xt) {
                  this.compositions[i2].prepareFrame(this.currentFrame);
                }
                return this.compositions[i2].compInterface;
              }
              i2 += 1;
            }
            return null;
          }
          _thisProjectFunction.compositions = [];
          _thisProjectFunction.currentFrame = 0;
          _thisProjectFunction.registerComposition = registerComposition;
          return _thisProjectFunction;
        };
      }();
      var EffectsExpressionInterface = function () {
        var ob2 = {
          createEffectsInterface
        };
        function createEffectsInterface(elem2, propertyGroup) {
          if (elem2.effectsManager) {
            var effectElements = [];
            var effectsData = elem2.data.ef;
            var i2;
            var len = elem2.effectsManager.effectElements.length;
            for (i2 = 0; i2 < len; i2 += 1) {
              effectElements.push(createGroupInterface(effectsData[i2], elem2.effectsManager.effectElements[i2], propertyGroup, elem2));
            }
            var effects = elem2.data.ef || [];
            var groupInterface = function (name) {
              i2 = 0;
              len = effects.length;
              while (i2 < len) {
                if (name === effects[i2].nm || name === effects[i2].mn || name === effects[i2].ix) {
                  return effectElements[i2];
                }
                i2 += 1;
              }
              return null;
            };
            Object.defineProperty(groupInterface, "numProperties", {
              get: function () {
                return effects.length;
              }
            });
            return groupInterface;
          }
          return null;
        }
        function createGroupInterface(data2, elements, propertyGroup, elem2) {
          function groupInterface(name) {
            var effects = data2.ef;
            var i3 = 0;
            var len2 = effects.length;
            while (i3 < len2) {
              if (name === effects[i3].nm || name === effects[i3].mn || name === effects[i3].ix) {
                if (effects[i3].ty === 5) {
                  return effectElements[i3];
                }
                return effectElements[i3]();
              }
              i3 += 1;
            }
            throw new Error();
          }
          var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);
          var effectElements = [];
          var i2;
          var len = data2.ef.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            if (data2.ef[i2].ty === 5) {
              effectElements.push(createGroupInterface(data2.ef[i2], elements.effectElements[i2], elements.effectElements[i2].propertyGroup, elem2));
            } else {
              effectElements.push(createValueInterface(elements.effectElements[i2], data2.ef[i2].ty, elem2, _propertyGroup));
            }
          }
          if (data2.mn === "ADBE Color Control") {
            Object.defineProperty(groupInterface, "color", {
              get: function () {
                return effectElements[0]();
              }
            });
          }
          Object.defineProperties(groupInterface, {
            numProperties: {
              get: function () {
                return data2.np;
              }
            },
            _name: {
              value: data2.nm
            },
            propertyGroup: {
              value: _propertyGroup
            }
          });
          groupInterface.enabled = data2.en !== 0;
          groupInterface.active = groupInterface.enabled;
          return groupInterface;
        }
        function createValueInterface(element, type, elem2, propertyGroup) {
          var expressionProperty = ExpressionPropertyInterface(element.p);
          function interfaceFunction() {
            if (type === 10) {
              return elem2.comp.compInterface(element.p.v);
            }
            return expressionProperty();
          }
          if (element.p.setGroupProperty) {
            element.p.setGroupProperty(PropertyInterface("", propertyGroup));
          }
          return interfaceFunction;
        }
        return ob2;
      }();
      var MaskManagerInterface = function () {
        function MaskInterface(mask, data2) {
          this._mask = mask;
          this._data = data2;
        }
        Object.defineProperty(MaskInterface.prototype, "maskPath", {
          get: function () {
            if (this._mask.prop.k) {
              this._mask.prop.getValue();
            }
            return this._mask.prop;
          }
        });
        Object.defineProperty(MaskInterface.prototype, "maskOpacity", {
          get: function () {
            if (this._mask.op.k) {
              this._mask.op.getValue();
            }
            return this._mask.op.v * 100;
          }
        });
        var MaskManager = function (maskManager) {
          var _masksInterfaces = createSizedArray(maskManager.viewData.length);
          var i2;
          var len = maskManager.viewData.length;
          for (i2 = 0; i2 < len; i2 += 1) {
            _masksInterfaces[i2] = new MaskInterface(maskManager.viewData[i2], maskManager.masksProperties[i2]);
          }
          var maskFunction = function (name) {
            i2 = 0;
            while (i2 < len) {
              if (maskManager.masksProperties[i2].nm === name) {
                return _masksInterfaces[i2];
              }
              i2 += 1;
            }
            return null;
          };
          return maskFunction;
        };
        return MaskManager;
      }();
      var ExpressionPropertyInterface = function () {
        var defaultUnidimensionalValue = {
          pv: 0,
          v: 0,
          mult: 1
        };
        var defaultMultidimensionalValue = {
          pv: [0, 0, 0],
          v: [0, 0, 0],
          mult: 1
        };
        function completeProperty(expressionValue, property2, type) {
          Object.defineProperty(expressionValue, "velocity", {
            get: function () {
              return property2.getVelocityAtTime(property2.comp.currentFrame);
            }
          });
          expressionValue.numKeys = property2.keyframes ? property2.keyframes.length : 0;
          expressionValue.key = function (pos) {
            if (!expressionValue.numKeys) {
              return 0;
            }
            var value2 = "";
            if ("s" in property2.keyframes[pos - 1]) {
              value2 = property2.keyframes[pos - 1].s;
            } else if ("e" in property2.keyframes[pos - 2]) {
              value2 = property2.keyframes[pos - 2].e;
            } else {
              value2 = property2.keyframes[pos - 2].s;
            }
            var valueProp = type === "unidimensional" ? new Number(value2) : Object.assign({}, value2);
            valueProp.time = property2.keyframes[pos - 1].t / property2.elem.comp.globalData.frameRate;
            valueProp.value = type === "unidimensional" ? value2[0] : value2;
            return valueProp;
          };
          expressionValue.valueAtTime = property2.getValueAtTime;
          expressionValue.speedAtTime = property2.getSpeedAtTime;
          expressionValue.velocityAtTime = property2.getVelocityAtTime;
          expressionValue.propertyGroup = property2.propertyGroup;
        }
        function UnidimensionalPropertyInterface(property2) {
          if (!property2 || !("pv" in property2)) {
            property2 = defaultUnidimensionalValue;
          }
          var mult = 1 / property2.mult;
          var val2 = property2.pv * mult;
          var expressionValue = new Number(val2);
          expressionValue.value = val2;
          completeProperty(expressionValue, property2, "unidimensional");
          return function () {
            if (property2.k) {
              property2.getValue();
            }
            val2 = property2.v * mult;
            if (expressionValue.value !== val2) {
              expressionValue = new Number(val2);
              expressionValue.value = val2;
              completeProperty(expressionValue, property2, "unidimensional");
            }
            return expressionValue;
          };
        }
        function MultidimensionalPropertyInterface(property2) {
          if (!property2 || !("pv" in property2)) {
            property2 = defaultMultidimensionalValue;
          }
          var mult = 1 / property2.mult;
          var len = property2.data && property2.data.l || property2.pv.length;
          var expressionValue = createTypedArray("float32", len);
          var arrValue = createTypedArray("float32", len);
          expressionValue.value = arrValue;
          completeProperty(expressionValue, property2, "multidimensional");
          return function () {
            if (property2.k) {
              property2.getValue();
            }
            for (var i2 = 0; i2 < len; i2 += 1) {
              arrValue[i2] = property2.v[i2] * mult;
              expressionValue[i2] = arrValue[i2];
            }
            return expressionValue;
          };
        }
        function defaultGetter() {
          return defaultUnidimensionalValue;
        }
        return function (property2) {
          if (!property2) {
            return defaultGetter;
          }
          if (property2.propType === "unidimensional") {
            return UnidimensionalPropertyInterface(property2);
          }
          return MultidimensionalPropertyInterface(property2);
        };
      }();
      var TextExpressionSelectorPropFactory = function () {
        function getValueProxy(index2, total) {
          this.textIndex = index2 + 1;
          this.textTotal = total;
          this.v = this.getValue() * this.mult;
          return this.v;
        }
        return function (elem2, data2) {
          this.pv = 1;
          this.comp = elem2.comp;
          this.elem = elem2;
          this.mult = 0.01;
          this.propType = "textSelector";
          this.textTotal = data2.totalChars;
          this.selectorValue = 100;
          this.lastValue = [1, 1, 1];
          this.k = true;
          this.x = true;
          this.getValue = ExpressionManager.initiateExpression.bind(this)(elem2, data2, this);
          this.getMult = getValueProxy;
          this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;
          if (this.kf) {
            this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);
          } else {
            this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);
          }
          this.setGroupProperty = expressionHelpers.setGroupProperty;
        };
      }();
      var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;
      TextSelectorProp.getTextSelectorProp = function (elem2, data2, arr2) {
        if (data2.t === 1) {
          return new TextExpressionSelectorPropFactory(elem2, data2, arr2);
        }
        return propertyGetTextProp(elem2, data2, arr2);
      };
      function SliderEffect(data2, elem2, container) {
        this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
      }
      function AngleEffect(data2, elem2, container) {
        this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
      }
      function ColorEffect(data2, elem2, container) {
        this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);
      }
      function PointEffect(data2, elem2, container) {
        this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);
      }
      function LayerIndexEffect(data2, elem2, container) {
        this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
      }
      function MaskIndexEffect(data2, elem2, container) {
        this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
      }
      function CheckboxEffect(data2, elem2, container) {
        this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
      }
      function NoValueEffect() {
        this.p = {};
      }
      function EffectsManager(data2, element) {
        var effects = data2.ef || [];
        this.effectElements = [];
        var i2;
        var len = effects.length;
        var effectItem;
        for (i2 = 0; i2 < len; i2 += 1) {
          effectItem = new GroupEffect(effects[i2], element);
          this.effectElements.push(effectItem);
        }
      }
      function GroupEffect(data2, element) {
        this.init(data2, element);
      }
      extendPrototype([DynamicPropertyContainer], GroupEffect);
      GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;
      GroupEffect.prototype.init = function (data2, element) {
        this.data = data2;
        this.effectElements = [];
        this.initDynamicPropertyContainer(element);
        var i2;
        var len = this.data.ef.length;
        var eff;
        var effects = this.data.ef;
        for (i2 = 0; i2 < len; i2 += 1) {
          eff = null;
          switch (effects[i2].ty) {
            case 0:
              eff = new SliderEffect(effects[i2], element, this);
              break;
            case 1:
              eff = new AngleEffect(effects[i2], element, this);
              break;
            case 2:
              eff = new ColorEffect(effects[i2], element, this);
              break;
            case 3:
              eff = new PointEffect(effects[i2], element, this);
              break;
            case 4:
            case 7:
              eff = new CheckboxEffect(effects[i2], element, this);
              break;
            case 10:
              eff = new LayerIndexEffect(effects[i2], element, this);
              break;
            case 11:
              eff = new MaskIndexEffect(effects[i2], element, this);
              break;
            case 5:
              eff = new EffectsManager(effects[i2], element);
              break;
            default:
              eff = new NoValueEffect(effects[i2]);
              break;
          }
          if (eff) {
            this.effectElements.push(eff);
          }
        }
      };
      var lottie = {};
      function setLocationHref(href) {
        locationHref = href;
      }
      function searchAnimations() {
        {
          animationManager.searchAnimations();
        }
      }
      function setSubframeRendering(flag) {
        subframeEnabled = flag;
      }
      function setIDPrefix(prefix) {
        idPrefix = prefix;
      }
      function loadAnimation(params) {
        return animationManager.loadAnimation(params);
      }
      function setQuality(value2) {
        if (typeof value2 === "string") {
          switch (value2) {
            case "high":
              defaultCurveSegments = 200;
              break;
            default:
            case "medium":
              defaultCurveSegments = 50;
              break;
            case "low":
              defaultCurveSegments = 10;
              break;
          }
        } else if (!isNaN(value2) && value2 > 1) {
          defaultCurveSegments = value2;
        }
      }
      function inBrowser() {
        return typeof navigator !== "undefined";
      }
      function installPlugin(type, plugin2) {
        if (type === "expressions") {
          expressionsPlugin = plugin2;
        }
      }
      function getFactory(name) {
        switch (name) {
          case "propertyFactory":
            return PropertyFactory;
          case "shapePropertyFactory":
            return ShapePropertyFactory;
          case "matrix":
            return Matrix;
          default:
            return null;
        }
      }
      lottie.play = animationManager.play;
      lottie.pause = animationManager.pause;
      lottie.setLocationHref = setLocationHref;
      lottie.togglePause = animationManager.togglePause;
      lottie.setSpeed = animationManager.setSpeed;
      lottie.setDirection = animationManager.setDirection;
      lottie.stop = animationManager.stop;
      lottie.searchAnimations = searchAnimations;
      lottie.registerAnimation = animationManager.registerAnimation;
      lottie.loadAnimation = loadAnimation;
      lottie.setSubframeRendering = setSubframeRendering;
      lottie.resize = animationManager.resize;
      lottie.goToAndStop = animationManager.goToAndStop;
      lottie.destroy = animationManager.destroy;
      lottie.setQuality = setQuality;
      lottie.inBrowser = inBrowser;
      lottie.installPlugin = installPlugin;
      lottie.freeze = animationManager.freeze;
      lottie.unfreeze = animationManager.unfreeze;
      lottie.setVolume = animationManager.setVolume;
      lottie.mute = animationManager.mute;
      lottie.unmute = animationManager.unmute;
      lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;
      lottie.setIDPrefix = setIDPrefix;
      lottie.__getFactory = getFactory;
      lottie.version = "5.7.14";
      function checkReady() {
        if (document.readyState === "complete") {
          clearInterval(readyStateCheckInterval);
          searchAnimations();
        }
      }
      function getQueryVariable(variable) {
        var vars = queryString.split("&");
        for (var i2 = 0; i2 < vars.length; i2 += 1) {
          var pair = vars[i2].split("=");
          if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
          }
        }
        return null;
      }
      var queryString;
      {
        var scripts = document.getElementsByTagName("script");
        var index = scripts.length - 1;
        var myScript = scripts[index] || {
          src: ""
        };
        queryString = myScript.src.replace(/^[^\?]+\??/, "");
        getQueryVariable("renderer");
      }
      var readyStateCheckInterval = setInterval(checkReady, 100);
      return lottie;
    });
  })(lottie);
  function _assertThisInitialized(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  /*!
   * GSAP 3.7.1
   * https://greensock.com
   *
   * @license Copyright 2008-2021, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */
  var _config = {
      autoSleep: 120,
      force3D: "auto",
      nullTargetWarn: 1,
      units: {
        lineHeight: ""
      }
    },
    _defaults = {
      duration: 0.5,
      overwrite: false,
      delay: 0
    },
    _suppressOverwrites,
    _bigNum$1 = 1e8,
    _tinyNum = 1 / _bigNum$1,
    _2PI = Math.PI * 2,
    _HALF_PI = _2PI / 4,
    _gsID = 0,
    _sqrt = Math.sqrt,
    _cos = Math.cos,
    _sin = Math.sin,
    _isString = function _isString2(value2) {
      return typeof value2 === "string";
    },
    _isFunction = function _isFunction2(value2) {
      return typeof value2 === "function";
    },
    _isNumber = function _isNumber2(value2) {
      return typeof value2 === "number";
    },
    _isUndefined = function _isUndefined2(value2) {
      return typeof value2 === "undefined";
    },
    _isObject = function _isObject2(value2) {
      return typeof value2 === "object";
    },
    _isNotFalse = function _isNotFalse2(value2) {
      return value2 !== false;
    },
    _windowExists$1 = function _windowExists2() {
      return typeof window !== "undefined";
    },
    _isFuncOrString = function _isFuncOrString2(value2) {
      return _isFunction(value2) || _isString(value2);
    },
    _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function () {},
    _isArray = Array.isArray,
    _strictNumExp = /(?:-?\.?\d|\.)+/gi,
    _numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
    _numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
    _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
    _relExp = /[+-]=-?[.\d]+/,
    _delimitedValueExp = /[^,'"\[\]\s]+/gi,
    _unitExp = /[\d.+\-=]+(?:e[-+]\d*)*/i,
    _globalTimeline,
    _win$1,
    _coreInitted,
    _doc$1,
    _globals = {},
    _installScope = {},
    _coreReady,
    _install = function _install2(scope) {
      return (_installScope = _merge(scope, _globals)) && gsap;
    },
    _missingPlugin = function _missingPlugin2(property2, value2) {
      return console.warn("Invalid property", property2, "set to", value2, "Missing plugin? gsap.registerPlugin()");
    },
    _warn = function _warn2(message, suppress) {
      return !suppress && console.warn(message);
    },
    _addGlobal = function _addGlobal2(name, obj) {
      return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
    },
    _emptyFunc = function _emptyFunc2() {
      return 0;
    },
    _reservedProps = {},
    _lazyTweens = [],
    _lazyLookup = {},
    _lastRenderedFrame,
    _plugins = {},
    _effects = {},
    _nextGCFrame = 30,
    _harnessPlugins = [],
    _callbackNames = "",
    _harness = function _harness2(targets) {
      var target = targets[0],
        harnessPlugin,
        i2;
      _isObject(target) || _isFunction(target) || (targets = [targets]);
      if (!(harnessPlugin = (target._gsap || {}).harness)) {
        i2 = _harnessPlugins.length;
        while (i2-- && !_harnessPlugins[i2].targetTest(target)) {}
        harnessPlugin = _harnessPlugins[i2];
      }
      i2 = targets.length;
      while (i2--) {
        targets[i2] && (targets[i2]._gsap || (targets[i2]._gsap = new GSCache(targets[i2], harnessPlugin))) || targets.splice(i2, 1);
      }
      return targets;
    },
    _getCache = function _getCache2(target) {
      return target._gsap || _harness(toArray(target))[0]._gsap;
    },
    _getProperty = function _getProperty2(target, property2, v2) {
      return (v2 = target[property2]) && _isFunction(v2) ? target[property2]() : _isUndefined(v2) && target.getAttribute && target.getAttribute(property2) || v2;
    },
    _forEachName = function _forEachName2(names, func) {
      return (names = names.split(",")).forEach(func) || names;
    },
    _round = function _round2(value2) {
      return Math.round(value2 * 1e5) / 1e5 || 0;
    },
    _arrayContainsAny = function _arrayContainsAny2(toSearch, toFind) {
      var l2 = toFind.length,
        i2 = 0;
      for (; toSearch.indexOf(toFind[i2]) < 0 && ++i2 < l2;) {}
      return i2 < l2;
    },
    _lazyRender = function _lazyRender2() {
      var l2 = _lazyTweens.length,
        a2 = _lazyTweens.slice(0),
        i2,
        tween;
      _lazyLookup = {};
      _lazyTweens.length = 0;
      for (i2 = 0; i2 < l2; i2++) {
        tween = a2[i2];
        tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
      }
    },
    _lazySafeRender = function _lazySafeRender2(animation, time2, suppressEvents, force) {
      _lazyTweens.length && _lazyRender();
      animation.render(time2, suppressEvents, force);
      _lazyTweens.length && _lazyRender();
    },
    _numericIfPossible = function _numericIfPossible2(value2) {
      var n2 = parseFloat(value2);
      return (n2 || n2 === 0) && (value2 + "").match(_delimitedValueExp).length < 2 ? n2 : _isString(value2) ? value2.trim() : value2;
    },
    _passThrough = function _passThrough2(p2) {
      return p2;
    },
    _setDefaults = function _setDefaults2(obj, defaults2) {
      for (var p2 in defaults2) {
        p2 in obj || (obj[p2] = defaults2[p2]);
      }
      return obj;
    },
    _setKeyframeDefaults = function _setKeyframeDefaults2(obj, defaults2) {
      for (var p2 in defaults2) {
        p2 in obj || p2 === "duration" || p2 === "ease" || (obj[p2] = defaults2[p2]);
      }
    },
    _merge = function _merge2(base, toMerge) {
      for (var p2 in toMerge) {
        base[p2] = toMerge[p2];
      }
      return base;
    },
    _mergeDeep = function _mergeDeep2(base, toMerge) {
      for (var p2 in toMerge) {
        p2 !== "__proto__" && p2 !== "constructor" && p2 !== "prototype" && (base[p2] = _isObject(toMerge[p2]) ? _mergeDeep2(base[p2] || (base[p2] = {}), toMerge[p2]) : toMerge[p2]);
      }
      return base;
    },
    _copyExcluding = function _copyExcluding2(obj, excluding) {
      var copy = {},
        p2;
      for (p2 in obj) {
        p2 in excluding || (copy[p2] = obj[p2]);
      }
      return copy;
    },
    _inheritDefaults = function _inheritDefaults2(vars) {
      var parent2 = vars.parent || _globalTimeline,
        func = vars.keyframes ? _setKeyframeDefaults : _setDefaults;
      if (_isNotFalse(vars.inherit)) {
        while (parent2) {
          func(vars, parent2.vars.defaults);
          parent2 = parent2.parent || parent2._dp;
        }
      }
      return vars;
    },
    _arraysMatch = function _arraysMatch2(a1, a2) {
      var i2 = a1.length,
        match = i2 === a2.length;
      while (match && i2-- && a1[i2] === a2[i2]) {}
      return i2 < 0;
    },
    _addLinkedListItem = function _addLinkedListItem2(parent2, child, firstProp, lastProp, sortBy) {
      if (firstProp === void 0) {
        firstProp = "_first";
      }
      if (lastProp === void 0) {
        lastProp = "_last";
      }
      var prev = parent2[lastProp],
        t2;
      if (sortBy) {
        t2 = child[sortBy];
        while (prev && prev[sortBy] > t2) {
          prev = prev._prev;
        }
      }
      if (prev) {
        child._next = prev._next;
        prev._next = child;
      } else {
        child._next = parent2[firstProp];
        parent2[firstProp] = child;
      }
      if (child._next) {
        child._next._prev = child;
      } else {
        parent2[lastProp] = child;
      }
      child._prev = prev;
      child.parent = child._dp = parent2;
      return child;
    },
    _removeLinkedListItem = function _removeLinkedListItem2(parent2, child, firstProp, lastProp) {
      if (firstProp === void 0) {
        firstProp = "_first";
      }
      if (lastProp === void 0) {
        lastProp = "_last";
      }
      var prev = child._prev,
        next = child._next;
      if (prev) {
        prev._next = next;
      } else if (parent2[firstProp] === child) {
        parent2[firstProp] = next;
      }
      if (next) {
        next._prev = prev;
      } else if (parent2[lastProp] === child) {
        parent2[lastProp] = prev;
      }
      child._next = child._prev = child.parent = null;
    },
    _removeFromParent = function _removeFromParent2(child, onlyIfParentHasAutoRemove) {
      child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove(child);
      child._act = 0;
    },
    _uncache = function _uncache2(animation, child) {
      if (animation && (!child || child._end > animation._dur || child._start < 0)) {
        var a2 = animation;
        while (a2) {
          a2._dirty = 1;
          a2 = a2.parent;
        }
      }
      return animation;
    },
    _recacheAncestors = function _recacheAncestors2(animation) {
      var parent2 = animation.parent;
      while (parent2 && parent2.parent) {
        parent2._dirty = 1;
        parent2.totalDuration();
        parent2 = parent2.parent;
      }
      return animation;
    },
    _hasNoPausedAncestors = function _hasNoPausedAncestors2(animation) {
      return !animation || animation._ts && _hasNoPausedAncestors2(animation.parent);
    },
    _elapsedCycleDuration = function _elapsedCycleDuration2(animation) {
      return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
    },
    _animationCycle = function _animationCycle2(tTime, cycleDuration) {
      var whole = Math.floor(tTime /= cycleDuration);
      return tTime && whole === tTime ? whole - 1 : whole;
    },
    _parentToChildTotalTime = function _parentToChildTotalTime2(parentTime, child) {
      return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
    },
    _setEnd = function _setEnd2(animation) {
      return animation._end = _round(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
    },
    _alignPlayhead = function _alignPlayhead2(animation, totalTime) {
      var parent2 = animation._dp;
      if (parent2 && parent2.smoothChildTiming && animation._ts) {
        animation._start = _round(parent2._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));
        _setEnd(animation);
        parent2._dirty || _uncache(parent2, animation);
      }
      return animation;
    },
    _postAddChecks = function _postAddChecks2(timeline, child) {
      var t2;
      if (child._time || child._initted && !child._dur) {
        t2 = _parentToChildTotalTime(timeline.rawTime(), child);
        if (!child._dur || _clamp(0, child.totalDuration(), t2) - child._tTime > _tinyNum) {
          child.render(t2, true);
        }
      }
      if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
        if (timeline._dur < timeline.duration()) {
          t2 = timeline;
          while (t2._dp) {
            t2.rawTime() >= 0 && t2.totalTime(t2._tTime);
            t2 = t2._dp;
          }
        }
        timeline._zTime = -_tinyNum;
      }
    },
    _addToTimeline = function _addToTimeline2(timeline, child, position, skipChecks) {
      child.parent && _removeFromParent(child);
      child._start = _round((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);
      child._end = _round(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));
      _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);
      _isFromOrFromStart(child) || (timeline._recent = child);
      skipChecks || _postAddChecks(timeline, child);
      return timeline;
    },
    _scrollTrigger = function _scrollTrigger2(animation, trigger) {
      return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
    },
    _attemptInitTween = function _attemptInitTween2(tween, totalTime, force, suppressEvents) {
      _initTween(tween, totalTime);
      if (!tween._initted) {
        return 1;
      }
      if (!force && tween._pt && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
        _lazyTweens.push(tween);
        tween._lazy = [totalTime, suppressEvents];
        return 1;
      }
    },
    _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart2(_ref) {
      var parent2 = _ref.parent;
      return parent2 && parent2._ts && parent2._initted && !parent2._lock && (parent2.rawTime() < 0 || _parentPlayheadIsBeforeStart2(parent2));
    },
    _isFromOrFromStart = function _isFromOrFromStart2(_ref2) {
      var data2 = _ref2.data;
      return data2 === "isFromStart" || data2 === "isStart";
    },
    _renderZeroDurationTween = function _renderZeroDurationTween2(tween, totalTime, suppressEvents, force) {
      var prevRatio = tween.ratio,
        ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1,
        repeatDelay = tween._rDelay,
        tTime = 0,
        pt2,
        iteration,
        prevIteration;
      if (repeatDelay && tween._repeat) {
        tTime = _clamp(0, tween._tDur, totalTime);
        iteration = _animationCycle(tTime, repeatDelay);
        prevIteration = _animationCycle(tween._tTime, repeatDelay);
        tween._yoyo && iteration & 1 && (ratio = 1 - ratio);
        if (iteration !== prevIteration) {
          prevRatio = 1 - ratio;
          tween.vars.repeatRefresh && tween._initted && tween.invalidate();
        }
      }
      if (ratio !== prevRatio || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
        if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents)) {
          return;
        }
        prevIteration = tween._zTime;
        tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0);
        suppressEvents || (suppressEvents = totalTime && !prevIteration);
        tween.ratio = ratio;
        tween._from && (ratio = 1 - ratio);
        tween._time = 0;
        tween._tTime = tTime;
        pt2 = tween._pt;
        while (pt2) {
          pt2.r(ratio, pt2.d);
          pt2 = pt2._next;
        }
        tween._startAt && totalTime < 0 && tween._startAt.render(totalTime, true, true);
        tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
        tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");
        if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
          ratio && _removeFromParent(tween, 1);
          if (!suppressEvents) {
            _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);
            tween._prom && tween._prom();
          }
        }
      } else if (!tween._zTime) {
        tween._zTime = totalTime;
      }
    },
    _findNextPauseTween = function _findNextPauseTween2(animation, prevTime, time2) {
      var child;
      if (time2 > prevTime) {
        child = animation._first;
        while (child && child._start <= time2) {
          if (!child._dur && child.data === "isPause" && child._start > prevTime) {
            return child;
          }
          child = child._next;
        }
      } else {
        child = animation._last;
        while (child && child._start >= time2) {
          if (!child._dur && child.data === "isPause" && child._start < prevTime) {
            return child;
          }
          child = child._prev;
        }
      }
    },
    _setDuration = function _setDuration2(animation, duration, skipUncache, leavePlayhead) {
      var repeat = animation._repeat,
        dur = _round(duration) || 0,
        totalProgress = animation._tTime / animation._tDur;
      totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
      animation._dur = dur;
      animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _round(dur * (repeat + 1) + animation._rDelay * repeat);
      totalProgress && !leavePlayhead ? _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress) : animation.parent && _setEnd(animation);
      skipUncache || _uncache(animation.parent, animation);
      return animation;
    },
    _onUpdateTotalDuration = function _onUpdateTotalDuration2(animation) {
      return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
    },
    _zeroPosition = {
      _start: 0,
      endTime: _emptyFunc,
      totalDuration: _emptyFunc
    },
    _parsePosition = function _parsePosition2(animation, position, percentAnimation) {
      var labels = animation.labels,
        recent = animation._recent || _zeroPosition,
        clippedDuration = animation.duration() >= _bigNum$1 ? recent.endTime(false) : animation._dur,
        i2,
        offset,
        isPercent;
      if (_isString(position) && (isNaN(position) || position in labels)) {
        offset = position.charAt(0);
        isPercent = position.substr(-1) === "%";
        i2 = position.indexOf("=");
        if (offset === "<" || offset === ">") {
          i2 >= 0 && (position = position.replace(/=/, ""));
          return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i2 < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
        }
        if (i2 < 0) {
          position in labels || (labels[position] = clippedDuration);
          return labels[position];
        }
        offset = parseFloat(position.charAt(i2 - 1) + position.substr(i2 + 1));
        if (isPercent && percentAnimation) {
          offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
        }
        return i2 > 1 ? _parsePosition2(animation, position.substr(0, i2 - 1), percentAnimation) + offset : clippedDuration + offset;
      }
      return position == null ? clippedDuration : +position;
    },
    _createTweenType = function _createTweenType2(type, params, timeline) {
      var isLegacy = _isNumber(params[1]),
        varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1),
        vars = params[varsIndex],
        irVars,
        parent2;
      isLegacy && (vars.duration = params[1]);
      vars.parent = timeline;
      if (type) {
        irVars = vars;
        parent2 = timeline;
        while (parent2 && !("immediateRender" in irVars)) {
          irVars = parent2.vars.defaults || {};
          parent2 = _isNotFalse(parent2.vars.inherit) && parent2.parent;
        }
        vars.immediateRender = _isNotFalse(irVars.immediateRender);
        type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1];
      }
      return new Tween(params[0], vars, params[varsIndex + 1]);
    },
    _conditionalReturn = function _conditionalReturn2(value2, func) {
      return value2 || value2 === 0 ? func(value2) : func;
    },
    _clamp = function _clamp2(min, max, value2) {
      return value2 < min ? min : value2 > max ? max : value2;
    },
    getUnit = function getUnit2(value2) {
      if (typeof value2 !== "string") {
        return "";
      }
      var v2 = _unitExp.exec(value2);
      return v2 ? value2.substr(v2.index + v2[0].length) : "";
    },
    clamp = function clamp2(min, max, value2) {
      return _conditionalReturn(value2, function (v2) {
        return _clamp(min, max, v2);
      });
    },
    _slice = [].slice,
    _isArrayLike = function _isArrayLike2(value2, nonEmpty) {
      return value2 && _isObject(value2) && "length" in value2 && (!nonEmpty && !value2.length || value2.length - 1 in value2 && _isObject(value2[0])) && !value2.nodeType && value2 !== _win$1;
    },
    _flatten = function _flatten2(ar2, leaveStrings, accumulator) {
      if (accumulator === void 0) {
        accumulator = [];
      }
      return ar2.forEach(function (value2) {
        var _accumulator;
        return _isString(value2) && !leaveStrings || _isArrayLike(value2, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value2)) : accumulator.push(value2);
      }) || accumulator;
    },
    toArray = function toArray2(value2, scope, leaveStrings) {
      return _isString(value2) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc$1).querySelectorAll(value2), 0) : _isArray(value2) ? _flatten(value2, leaveStrings) : _isArrayLike(value2) ? _slice.call(value2, 0) : value2 ? [value2] : [];
    },
    selector = function selector2(value2) {
      value2 = toArray(value2)[0] || _warn("Invalid scope") || {};
      return function (v2) {
        var el = value2.current || value2.nativeElement || value2;
        return toArray(v2, el.querySelectorAll ? el : el === value2 ? _warn("Invalid scope") || _doc$1.createElement("div") : value2);
      };
    },
    shuffle = function shuffle2(a2) {
      return a2.sort(function () {
        return 0.5 - Math.random();
      });
    },
    distribute = function distribute2(v2) {
      if (_isFunction(v2)) {
        return v2;
      }
      var vars = _isObject(v2) ? v2 : {
          each: v2
        },
        ease = _parseEase(vars.ease),
        from = vars.from || 0,
        base = parseFloat(vars.base) || 0,
        cache = {},
        isDecimal = from > 0 && from < 1,
        ratios = isNaN(from) || isDecimal,
        axis = vars.axis,
        ratioX = from,
        ratioY = from;
      if (_isString(from)) {
        ratioX = ratioY = {
          center: 0.5,
          edges: 0.5,
          end: 1
        }[from] || 0;
      } else if (!isDecimal && ratios) {
        ratioX = from[0];
        ratioY = from[1];
      }
      return function (i2, target, a2) {
        var l2 = (a2 || vars).length,
          distances = cache[l2],
          originX,
          originY,
          x2,
          y2,
          d2,
          j2,
          max,
          min,
          wrapAt;
        if (!distances) {
          wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum$1])[1];
          if (!wrapAt) {
            max = -_bigNum$1;
            while (max < (max = a2[wrapAt++].getBoundingClientRect().left) && wrapAt < l2) {}
            wrapAt--;
          }
          distances = cache[l2] = [];
          originX = ratios ? Math.min(wrapAt, l2) * ratioX - 0.5 : from % wrapAt;
          originY = ratios ? l2 * ratioY / wrapAt - 0.5 : from / wrapAt | 0;
          max = 0;
          min = _bigNum$1;
          for (j2 = 0; j2 < l2; j2++) {
            x2 = j2 % wrapAt - originX;
            y2 = originY - (j2 / wrapAt | 0);
            distances[j2] = d2 = !axis ? _sqrt(x2 * x2 + y2 * y2) : Math.abs(axis === "y" ? y2 : x2);
            d2 > max && (max = d2);
            d2 < min && (min = d2);
          }
          from === "random" && shuffle(distances);
          distances.max = max - min;
          distances.min = min;
          distances.v = l2 = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l2 ? l2 - 1 : !axis ? Math.max(wrapAt, l2 / wrapAt) : axis === "y" ? l2 / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
          distances.b = l2 < 0 ? base - l2 : base;
          distances.u = getUnit(vars.amount || vars.each) || 0;
          ease = ease && l2 < 0 ? _invertEase(ease) : ease;
        }
        l2 = (distances[i2] - distances.min) / distances.max || 0;
        return _round(distances.b + (ease ? ease(l2) : l2) * distances.v) + distances.u;
      };
    },
    _roundModifier = function _roundModifier2(v2) {
      var p2 = v2 < 1 ? Math.pow(10, (v2 + "").length - 2) : 1;
      return function (raw) {
        var n2 = Math.round(parseFloat(raw) / v2) * v2 * p2;
        return (n2 - n2 % 1) / p2 + (_isNumber(raw) ? 0 : getUnit(raw));
      };
    },
    snap = function snap2(snapTo, value2) {
      var isArray2 = _isArray(snapTo),
        radius,
        is2D;
      if (!isArray2 && _isObject(snapTo)) {
        radius = isArray2 = snapTo.radius || _bigNum$1;
        if (snapTo.values) {
          snapTo = toArray(snapTo.values);
          if (is2D = !_isNumber(snapTo[0])) {
            radius *= radius;
          }
        } else {
          snapTo = _roundModifier(snapTo.increment);
        }
      }
      return _conditionalReturn(value2, !isArray2 ? _roundModifier(snapTo) : _isFunction(snapTo) ? function (raw) {
        is2D = snapTo(raw);
        return Math.abs(is2D - raw) <= radius ? is2D : raw;
      } : function (raw) {
        var x2 = parseFloat(is2D ? raw.x : raw),
          y2 = parseFloat(is2D ? raw.y : 0),
          min = _bigNum$1,
          closest = 0,
          i2 = snapTo.length,
          dx,
          dy;
        while (i2--) {
          if (is2D) {
            dx = snapTo[i2].x - x2;
            dy = snapTo[i2].y - y2;
            dx = dx * dx + dy * dy;
          } else {
            dx = Math.abs(snapTo[i2] - x2);
          }
          if (dx < min) {
            min = dx;
            closest = i2;
          }
        }
        closest = !radius || min <= radius ? snapTo[closest] : raw;
        return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
      });
    },
    random = function random2(min, max, roundingIncrement, returnFunction) {
      return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function () {
        return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * 0.99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
      });
    },
    pipe = function pipe2() {
      for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
        functions[_key] = arguments[_key];
      }
      return function (value2) {
        return functions.reduce(function (v2, f2) {
          return f2(v2);
        }, value2);
      };
    },
    unitize = function unitize2(func, unit) {
      return function (value2) {
        return func(parseFloat(value2)) + (unit || getUnit(value2));
      };
    },
    normalize = function normalize2(min, max, value2) {
      return mapRange(min, max, 0, 1, value2);
    },
    _wrapArray = function _wrapArray2(a2, wrapper, value2) {
      return _conditionalReturn(value2, function (index2) {
        return a2[~~wrapper(index2)];
      });
    },
    wrap = function wrap2(min, max, value2) {
      var range = max - min;
      return _isArray(min) ? _wrapArray(min, wrap2(0, min.length), max) : _conditionalReturn(value2, function (value3) {
        return (range + (value3 - min) % range) % range + min;
      });
    },
    wrapYoyo = function wrapYoyo2(min, max, value2) {
      var range = max - min,
        total = range * 2;
      return _isArray(min) ? _wrapArray(min, wrapYoyo2(0, min.length - 1), max) : _conditionalReturn(value2, function (value3) {
        value3 = (total + (value3 - min) % total) % total || 0;
        return min + (value3 > range ? total - value3 : value3);
      });
    },
    _replaceRandom = function _replaceRandom2(value2) {
      var prev = 0,
        s2 = "",
        i2,
        nums,
        end,
        isArray2;
      while (~(i2 = value2.indexOf("random(", prev))) {
        end = value2.indexOf(")", i2);
        isArray2 = value2.charAt(i2 + 7) === "[";
        nums = value2.substr(i2 + 7, end - i2 - 7).match(isArray2 ? _delimitedValueExp : _strictNumExp);
        s2 += value2.substr(prev, i2 - prev) + random(isArray2 ? nums : +nums[0], isArray2 ? 0 : +nums[1], +nums[2] || 1e-5);
        prev = end + 1;
      }
      return s2 + value2.substr(prev, value2.length - prev);
    },
    mapRange = function mapRange2(inMin, inMax, outMin, outMax, value2) {
      var inRange = inMax - inMin,
        outRange = outMax - outMin;
      return _conditionalReturn(value2, function (value3) {
        return outMin + ((value3 - inMin) / inRange * outRange || 0);
      });
    },
    interpolate = function interpolate2(start, end, progress, mutate) {
      var func = isNaN(start + end) ? 0 : function (p3) {
        return (1 - p3) * start + p3 * end;
      };
      if (!func) {
        var isString2 = _isString(start),
          master = {},
          p2,
          i2,
          interpolators,
          l2,
          il;
        progress === true && (mutate = 1) && (progress = null);
        if (isString2) {
          start = {
            p: start
          };
          end = {
            p: end
          };
        } else if (_isArray(start) && !_isArray(end)) {
          interpolators = [];
          l2 = start.length;
          il = l2 - 2;
          for (i2 = 1; i2 < l2; i2++) {
            interpolators.push(interpolate2(start[i2 - 1], start[i2]));
          }
          l2--;
          func = function func2(p3) {
            p3 *= l2;
            var i3 = Math.min(il, ~~p3);
            return interpolators[i3](p3 - i3);
          };
          progress = end;
        } else if (!mutate) {
          start = _merge(_isArray(start) ? [] : {}, start);
        }
        if (!interpolators) {
          for (p2 in end) {
            _addPropTween.call(master, start, p2, "get", end[p2]);
          }
          func = function func2(p3) {
            return _renderPropTweens(p3, master) || (isString2 ? start.p : start);
          };
        }
      }
      return _conditionalReturn(progress, func);
    },
    _getLabelInDirection = function _getLabelInDirection2(timeline, fromTime, backward) {
      var labels = timeline.labels,
        min = _bigNum$1,
        p2,
        distance,
        label;
      for (p2 in labels) {
        distance = labels[p2] - fromTime;
        if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
          label = p2;
          min = distance;
        }
      }
      return label;
    },
    _callback = function _callback2(animation, type, executeLazyFirst) {
      var v2 = animation.vars,
        callback = v2[type],
        params,
        scope;
      if (!callback) {
        return;
      }
      params = v2[type + "Params"];
      scope = v2.callbackScope || animation;
      executeLazyFirst && _lazyTweens.length && _lazyRender();
      return params ? callback.apply(scope, params) : callback.call(scope);
    },
    _interrupt = function _interrupt2(animation) {
      _removeFromParent(animation);
      animation.scrollTrigger && animation.scrollTrigger.kill(false);
      animation.progress() < 1 && _callback(animation, "onInterrupt");
      return animation;
    },
    _quickTween,
    _createPlugin = function _createPlugin2(config) {
      config = !config.name && config["default"] || config;
      var name = config.name,
        isFunc = _isFunction(config),
        Plugin = name && !isFunc && config.init ? function () {
          this._props = [];
        } : config,
        instanceDefaults = {
          init: _emptyFunc,
          render: _renderPropTweens,
          add: _addPropTween,
          kill: _killPropTweensOf,
          modifier: _addPluginModifier,
          rawVars: 0
        },
        statics = {
          targetTest: 0,
          get: 0,
          getSetter: _getSetter,
          aliases: {},
          register: 0
        };
      _wake();
      if (config !== Plugin) {
        if (_plugins[name]) {
          return;
        }
        _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics));
        _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics)));
        _plugins[Plugin.prop = name] = Plugin;
        if (config.targetTest) {
          _harnessPlugins.push(Plugin);
          _reservedProps[name] = 1;
        }
        name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin";
      }
      _addGlobal(name, Plugin);
      config.register && config.register(gsap, Plugin, PropTween);
    },
    _255 = 255,
    _colorLookup = {
      aqua: [0, _255, _255],
      lime: [0, _255, 0],
      silver: [192, 192, 192],
      black: [0, 0, 0],
      maroon: [128, 0, 0],
      teal: [0, 128, 128],
      blue: [0, 0, _255],
      navy: [0, 0, 128],
      white: [_255, _255, _255],
      olive: [128, 128, 0],
      yellow: [_255, _255, 0],
      orange: [_255, 165, 0],
      gray: [128, 128, 128],
      purple: [128, 0, 128],
      green: [0, 128, 0],
      red: [_255, 0, 0],
      pink: [_255, 192, 203],
      cyan: [0, _255, _255],
      transparent: [_255, _255, _255, 0]
    },
    _hue = function _hue2(h2, m1, m2) {
      h2 = h2 < 0 ? h2 + 1 : h2 > 1 ? h2 - 1 : h2;
      return (h2 * 6 < 1 ? m1 + (m2 - m1) * h2 * 6 : h2 < 0.5 ? m2 : h2 * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h2) * 6 : m1) * _255 + 0.5 | 0;
    },
    splitColor = function splitColor2(v2, toHSL, forceAlpha) {
      var a2 = !v2 ? _colorLookup.black : _isNumber(v2) ? [v2 >> 16, v2 >> 8 & _255, v2 & _255] : 0,
        r2,
        g2,
        b2,
        h2,
        s2,
        l2,
        max,
        min,
        d2,
        wasHSL;
      if (!a2) {
        if (v2.substr(-1) === ",") {
          v2 = v2.substr(0, v2.length - 1);
        }
        if (_colorLookup[v2]) {
          a2 = _colorLookup[v2];
        } else if (v2.charAt(0) === "#") {
          if (v2.length < 6) {
            r2 = v2.charAt(1);
            g2 = v2.charAt(2);
            b2 = v2.charAt(3);
            v2 = "#" + r2 + r2 + g2 + g2 + b2 + b2 + (v2.length === 5 ? v2.charAt(4) + v2.charAt(4) : "");
          }
          if (v2.length === 9) {
            a2 = parseInt(v2.substr(1, 6), 16);
            return [a2 >> 16, a2 >> 8 & _255, a2 & _255, parseInt(v2.substr(7), 16) / 255];
          }
          v2 = parseInt(v2.substr(1), 16);
          a2 = [v2 >> 16, v2 >> 8 & _255, v2 & _255];
        } else if (v2.substr(0, 3) === "hsl") {
          a2 = wasHSL = v2.match(_strictNumExp);
          if (!toHSL) {
            h2 = +a2[0] % 360 / 360;
            s2 = +a2[1] / 100;
            l2 = +a2[2] / 100;
            g2 = l2 <= 0.5 ? l2 * (s2 + 1) : l2 + s2 - l2 * s2;
            r2 = l2 * 2 - g2;
            a2.length > 3 && (a2[3] *= 1);
            a2[0] = _hue(h2 + 1 / 3, r2, g2);
            a2[1] = _hue(h2, r2, g2);
            a2[2] = _hue(h2 - 1 / 3, r2, g2);
          } else if (~v2.indexOf("=")) {
            a2 = v2.match(_numExp);
            forceAlpha && a2.length < 4 && (a2[3] = 1);
            return a2;
          }
        } else {
          a2 = v2.match(_strictNumExp) || _colorLookup.transparent;
        }
        a2 = a2.map(Number);
      }
      if (toHSL && !wasHSL) {
        r2 = a2[0] / _255;
        g2 = a2[1] / _255;
        b2 = a2[2] / _255;
        max = Math.max(r2, g2, b2);
        min = Math.min(r2, g2, b2);
        l2 = (max + min) / 2;
        if (max === min) {
          h2 = s2 = 0;
        } else {
          d2 = max - min;
          s2 = l2 > 0.5 ? d2 / (2 - max - min) : d2 / (max + min);
          h2 = max === r2 ? (g2 - b2) / d2 + (g2 < b2 ? 6 : 0) : max === g2 ? (b2 - r2) / d2 + 2 : (r2 - g2) / d2 + 4;
          h2 *= 60;
        }
        a2[0] = ~~(h2 + 0.5);
        a2[1] = ~~(s2 * 100 + 0.5);
        a2[2] = ~~(l2 * 100 + 0.5);
      }
      forceAlpha && a2.length < 4 && (a2[3] = 1);
      return a2;
    },
    _colorOrderData = function _colorOrderData2(v2) {
      var values = [],
        c2 = [],
        i2 = -1;
      v2.split(_colorExp).forEach(function (v3) {
        var a2 = v3.match(_numWithUnitExp) || [];
        values.push.apply(values, a2);
        c2.push(i2 += a2.length + 1);
      });
      values.c = c2;
      return values;
    },
    _formatColors = function _formatColors2(s2, toHSL, orderMatchData) {
      var result = "",
        colors = (s2 + result).match(_colorExp),
        type = toHSL ? "hsla(" : "rgba(",
        i2 = 0,
        c2,
        shell,
        d2,
        l2;
      if (!colors) {
        return s2;
      }
      colors = colors.map(function (color) {
        return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : color.join(",")) + ")";
      });
      if (orderMatchData) {
        d2 = _colorOrderData(s2);
        c2 = orderMatchData.c;
        if (c2.join(result) !== d2.c.join(result)) {
          shell = s2.replace(_colorExp, "1").split(_numWithUnitExp);
          l2 = shell.length - 1;
          for (; i2 < l2; i2++) {
            result += shell[i2] + (~c2.indexOf(i2) ? colors.shift() || type + "0,0,0,0)" : (d2.length ? d2 : colors.length ? colors : orderMatchData).shift());
          }
        }
      }
      if (!shell) {
        shell = s2.split(_colorExp);
        l2 = shell.length - 1;
        for (; i2 < l2; i2++) {
          result += shell[i2] + colors[i2];
        }
      }
      return result + shell[l2];
    },
    _colorExp = function () {
      var s2 = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",
        p2;
      for (p2 in _colorLookup) {
        s2 += "|" + p2 + "\\b";
      }
      return new RegExp(s2 + ")", "gi");
    }(),
    _hslExp = /hsl[a]?\(/,
    _colorStringFilter = function _colorStringFilter2(a2) {
      var combined = a2.join(" "),
        toHSL;
      _colorExp.lastIndex = 0;
      if (_colorExp.test(combined)) {
        toHSL = _hslExp.test(combined);
        a2[1] = _formatColors(a2[1], toHSL);
        a2[0] = _formatColors(a2[0], toHSL, _colorOrderData(a2[1]));
        return true;
      }
    },
    _tickerActive,
    _ticker = function () {
      var _getTime = Date.now,
        _lagThreshold = 500,
        _adjustedLag = 33,
        _startTime = _getTime(),
        _lastUpdate = _startTime,
        _gap = 1e3 / 240,
        _nextTime = _gap,
        _listeners = [],
        _id,
        _req,
        _raf,
        _self,
        _delta,
        _i2,
        _tick = function _tick2(v2) {
          var elapsed = _getTime() - _lastUpdate,
            manual = v2 === true,
            overlap,
            dispatch,
            time2,
            frame;
          elapsed > _lagThreshold && (_startTime += elapsed - _adjustedLag);
          _lastUpdate += elapsed;
          time2 = _lastUpdate - _startTime;
          overlap = time2 - _nextTime;
          if (overlap > 0 || manual) {
            frame = ++_self.frame;
            _delta = time2 - _self.time * 1e3;
            _self.time = time2 = time2 / 1e3;
            _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
            dispatch = 1;
          }
          manual || (_id = _req(_tick2));
          if (dispatch) {
            for (_i2 = 0; _i2 < _listeners.length; _i2++) {
              _listeners[_i2](time2, _delta, frame, v2);
            }
          }
        };
      _self = {
        time: 0,
        frame: 0,
        tick: function tick() {
          _tick(true);
        },
        deltaRatio: function deltaRatio(fps) {
          return _delta / (1e3 / (fps || 60));
        },
        wake: function wake() {
          if (_coreReady) {
            if (!_coreInitted && _windowExists$1()) {
              _win$1 = _coreInitted = window;
              _doc$1 = _win$1.document || {};
              _globals.gsap = gsap;
              (_win$1.gsapVersions || (_win$1.gsapVersions = [])).push(gsap.version);
              _install(_installScope || _win$1.GreenSockGlobals || !_win$1.gsap && _win$1 || {});
              _raf = _win$1.requestAnimationFrame;
            }
            _id && _self.sleep();
            _req = _raf || function (f2) {
              return setTimeout(f2, _nextTime - _self.time * 1e3 + 1 | 0);
            };
            _tickerActive = 1;
            _tick(2);
          }
        },
        sleep: function sleep() {
          (_raf ? _win$1.cancelAnimationFrame : clearTimeout)(_id);
          _tickerActive = 0;
          _req = _emptyFunc;
        },
        lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
          _lagThreshold = threshold || 1 / _tinyNum;
          _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);
        },
        fps: function fps(_fps) {
          _gap = 1e3 / (_fps || 240);
          _nextTime = _self.time * 1e3 + _gap;
        },
        add: function add(callback) {
          _listeners.indexOf(callback) < 0 && _listeners.push(callback);
          _wake();
        },
        remove: function remove(callback) {
          var i2;
          ~(i2 = _listeners.indexOf(callback)) && _listeners.splice(i2, 1) && _i2 >= i2 && _i2--;
        },
        _listeners
      };
      return _self;
    }(),
    _wake = function _wake2() {
      return !_tickerActive && _ticker.wake();
    },
    _easeMap = {},
    _customEaseExp = /^[\d.\-M][\d.\-,\s]/,
    _quotesExp = /["']/g,
    _parseObjectInString = function _parseObjectInString2(value2) {
      var obj = {},
        split2 = value2.substr(1, value2.length - 3).split(":"),
        key = split2[0],
        i2 = 1,
        l2 = split2.length,
        index2,
        val2,
        parsedVal;
      for (; i2 < l2; i2++) {
        val2 = split2[i2];
        index2 = i2 !== l2 - 1 ? val2.lastIndexOf(",") : val2.length;
        parsedVal = val2.substr(0, index2);
        obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
        key = val2.substr(index2 + 1).trim();
      }
      return obj;
    },
    _valueInParentheses = function _valueInParentheses2(value2) {
      var open = value2.indexOf("(") + 1,
        close = value2.indexOf(")"),
        nested = value2.indexOf("(", open);
      return value2.substring(open, ~nested && nested < close ? value2.indexOf(")", close + 1) : close);
    },
    _configEaseFromString = function _configEaseFromString2(name) {
      var split2 = (name + "").split("("),
        ease = _easeMap[split2[0]];
      return ease && split2.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split2[1])] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
    },
    _invertEase = function _invertEase2(ease) {
      return function (p2) {
        return 1 - ease(1 - p2);
      };
    },
    _propagateYoyoEase = function _propagateYoyoEase2(timeline, isYoyo) {
      var child = timeline._first,
        ease;
      while (child) {
        if (child instanceof Timeline) {
          _propagateYoyoEase2(child, isYoyo);
        } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
          if (child.timeline) {
            _propagateYoyoEase2(child.timeline, isYoyo);
          } else {
            ease = child._ease;
            child._ease = child._yEase;
            child._yEase = ease;
            child._yoyo = isYoyo;
          }
        }
        child = child._next;
      }
    },
    _parseEase = function _parseEase2(ease, defaultEase) {
      return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
    },
    _insertEase = function _insertEase2(names, easeIn, easeOut, easeInOut) {
      if (easeOut === void 0) {
        easeOut = function easeOut2(p2) {
          return 1 - easeIn(1 - p2);
        };
      }
      if (easeInOut === void 0) {
        easeInOut = function easeInOut2(p2) {
          return p2 < 0.5 ? easeIn(p2 * 2) / 2 : 1 - easeIn((1 - p2) * 2) / 2;
        };
      }
      var ease = {
          easeIn,
          easeOut,
          easeInOut
        },
        lowercaseName;
      _forEachName(names, function (name) {
        _easeMap[name] = _globals[name] = ease;
        _easeMap[lowercaseName = name.toLowerCase()] = easeOut;
        for (var p2 in ease) {
          _easeMap[lowercaseName + (p2 === "easeIn" ? ".in" : p2 === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p2] = ease[p2];
        }
      });
      return ease;
    },
    _easeInOutFromOut = function _easeInOutFromOut2(easeOut) {
      return function (p2) {
        return p2 < 0.5 ? (1 - easeOut(1 - p2 * 2)) / 2 : 0.5 + easeOut((p2 - 0.5) * 2) / 2;
      };
    },
    _configElastic = function _configElastic2(type, amplitude, period) {
      var p1 = amplitude >= 1 ? amplitude : 1,
        p2 = (period || (type ? 0.3 : 0.45)) / (amplitude < 1 ? amplitude : 1),
        p3 = p2 / _2PI * (Math.asin(1 / p1) || 0),
        easeOut = function easeOut2(p4) {
          return p4 === 1 ? 1 : p1 * Math.pow(2, -10 * p4) * _sin((p4 - p3) * p2) + 1;
        },
        ease = type === "out" ? easeOut : type === "in" ? function (p4) {
          return 1 - easeOut(1 - p4);
        } : _easeInOutFromOut(easeOut);
      p2 = _2PI / p2;
      ease.config = function (amplitude2, period2) {
        return _configElastic2(type, amplitude2, period2);
      };
      return ease;
    },
    _configBack = function _configBack2(type, overshoot) {
      if (overshoot === void 0) {
        overshoot = 1.70158;
      }
      var easeOut = function easeOut2(p2) {
          return p2 ? --p2 * p2 * ((overshoot + 1) * p2 + overshoot) + 1 : 0;
        },
        ease = type === "out" ? easeOut : type === "in" ? function (p2) {
          return 1 - easeOut(1 - p2);
        } : _easeInOutFromOut(easeOut);
      ease.config = function (overshoot2) {
        return _configBack2(type, overshoot2);
      };
      return ease;
    };
  _forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function (name, i2) {
    var power = i2 < 5 ? i2 + 1 : i2;
    _insertEase(name + ",Power" + (power - 1), i2 ? function (p2) {
      return Math.pow(p2, power);
    } : function (p2) {
      return p2;
    }, function (p2) {
      return 1 - Math.pow(1 - p2, power);
    }, function (p2) {
      return p2 < 0.5 ? Math.pow(p2 * 2, power) / 2 : 1 - Math.pow((1 - p2) * 2, power) / 2;
    });
  });
  _easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;
  _insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());
  (function (n2, c2) {
    var n1 = 1 / c2,
      n22 = 2 * n1,
      n3 = 2.5 * n1,
      easeOut = function easeOut2(p2) {
        return p2 < n1 ? n2 * p2 * p2 : p2 < n22 ? n2 * Math.pow(p2 - 1.5 / c2, 2) + 0.75 : p2 < n3 ? n2 * (p2 -= 2.25 / c2) * p2 + 0.9375 : n2 * Math.pow(p2 - 2.625 / c2, 2) + 0.984375;
      };
    _insertEase("Bounce", function (p2) {
      return 1 - easeOut(1 - p2);
    }, easeOut);
  })(7.5625, 2.75);
  _insertEase("Expo", function (p2) {
    return p2 ? Math.pow(2, 10 * (p2 - 1)) : 0;
  });
  _insertEase("Circ", function (p2) {
    return -(_sqrt(1 - p2 * p2) - 1);
  });
  _insertEase("Sine", function (p2) {
    return p2 === 1 ? 1 : -_cos(p2 * _HALF_PI) + 1;
  });
  _insertEase("Back", _configBack("in"), _configBack("out"), _configBack());
  _easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
    config: function config(steps, immediateStart) {
      if (steps === void 0) {
        steps = 1;
      }
      var p1 = 1 / steps,
        p2 = steps + (immediateStart ? 0 : 1),
        p3 = immediateStart ? 1 : 0,
        max = 1 - _tinyNum;
      return function (p4) {
        return ((p2 * _clamp(0, max, p4) | 0) + p3) * p1;
      };
    }
  };
  _defaults.ease = _easeMap["quad.out"];
  _forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function (name) {
    return _callbackNames += name + "," + name + "Params,";
  });
  var GSCache = function GSCache2(target, harness) {
    this.id = _gsID++;
    target._gsap = this;
    this.target = target;
    this.harness = harness;
    this.get = harness ? harness.get : _getProperty;
    this.set = harness ? harness.getSetter : _getSetter;
  };
  var Animation = /* @__PURE__ */function () {
    function Animation2(vars) {
      this.vars = vars;
      this._delay = +vars.delay || 0;
      if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
        this._rDelay = vars.repeatDelay || 0;
        this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
      }
      this._ts = 1;
      _setDuration(this, +vars.duration, 1, 1);
      this.data = vars.data;
      _tickerActive || _ticker.wake();
    }
    var _proto = Animation2.prototype;
    _proto.delay = function delay(value2) {
      if (value2 || value2 === 0) {
        this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value2 - this._delay);
        this._delay = value2;
        return this;
      }
      return this._delay;
    };
    _proto.duration = function duration(value2) {
      return arguments.length ? this.totalDuration(this._repeat > 0 ? value2 + (value2 + this._rDelay) * this._repeat : value2) : this.totalDuration() && this._dur;
    };
    _proto.totalDuration = function totalDuration(value2) {
      if (!arguments.length) {
        return this._tDur;
      }
      this._dirty = 0;
      return _setDuration(this, this._repeat < 0 ? value2 : (value2 - this._repeat * this._rDelay) / (this._repeat + 1));
    };
    _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
      _wake();
      if (!arguments.length) {
        return this._tTime;
      }
      var parent2 = this._dp;
      if (parent2 && parent2.smoothChildTiming && this._ts) {
        _alignPlayhead(this, _totalTime);
        !parent2._dp || parent2.parent || _postAddChecks(parent2, this);
        while (parent2.parent) {
          if (parent2.parent._time !== parent2._start + (parent2._ts >= 0 ? parent2._tTime / parent2._ts : (parent2.totalDuration() - parent2._tTime) / -parent2._ts)) {
            parent2.totalTime(parent2._tTime, true);
          }
          parent2 = parent2.parent;
        }
        if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {
          _addToTimeline(this._dp, this, this._start - this._delay);
        }
      }
      if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
        this._ts || (this._pTime = _totalTime);
        _lazySafeRender(this, _totalTime, suppressEvents);
      }
      return this;
    };
    _proto.time = function time2(value2, suppressEvents) {
      return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value2 + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value2 ? this._dur : 0), suppressEvents) : this._time;
    };
    _proto.totalProgress = function totalProgress(value2, suppressEvents) {
      return arguments.length ? this.totalTime(this.totalDuration() * value2, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
    };
    _proto.progress = function progress(value2, suppressEvents) {
      return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value2 : value2) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
    };
    _proto.iteration = function iteration(value2, suppressEvents) {
      var cycleDuration = this.duration() + this._rDelay;
      return arguments.length ? this.totalTime(this._time + (value2 - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
    };
    _proto.timeScale = function timeScale(value2) {
      if (!arguments.length) {
        return this._rts === -_tinyNum ? 0 : this._rts;
      }
      if (this._rts === value2) {
        return this;
      }
      var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime;
      this._rts = +value2 || 0;
      this._ts = this._ps || value2 === -_tinyNum ? 0 : this._rts;
      return _recacheAncestors(this.totalTime(_clamp(-this._delay, this._tDur, tTime), true));
    };
    _proto.paused = function paused(value2) {
      if (!arguments.length) {
        return this._ps;
      }
      if (this._ps !== value2) {
        this._ps = value2;
        if (value2) {
          this._pTime = this._tTime || Math.max(-this._delay, this.rawTime());
          this._ts = this._act = 0;
        } else {
          _wake();
          this._ts = this._rts;
          this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum));
        }
      }
      return this;
    };
    _proto.startTime = function startTime(value2) {
      if (arguments.length) {
        this._start = value2;
        var parent2 = this.parent || this._dp;
        parent2 && (parent2._sort || !this.parent) && _addToTimeline(parent2, this, value2 - this._delay);
        return this;
      }
      return this._start;
    };
    _proto.endTime = function endTime(includeRepeats) {
      return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts);
    };
    _proto.rawTime = function rawTime(wrapRepeats) {
      var parent2 = this.parent || this._dp;
      return !parent2 ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent2.rawTime(wrapRepeats), this);
    };
    _proto.globalTime = function globalTime(rawTime) {
      var animation = this,
        time2 = arguments.length ? rawTime : animation.rawTime();
      while (animation) {
        time2 = animation._start + time2 / (animation._ts || 1);
        animation = animation._dp;
      }
      return time2;
    };
    _proto.repeat = function repeat(value2) {
      if (arguments.length) {
        this._repeat = value2 === Infinity ? -2 : value2;
        return _onUpdateTotalDuration(this);
      }
      return this._repeat === -2 ? Infinity : this._repeat;
    };
    _proto.repeatDelay = function repeatDelay(value2) {
      if (arguments.length) {
        var time2 = this._time;
        this._rDelay = value2;
        _onUpdateTotalDuration(this);
        return time2 ? this.time(time2) : this;
      }
      return this._rDelay;
    };
    _proto.yoyo = function yoyo(value2) {
      if (arguments.length) {
        this._yoyo = value2;
        return this;
      }
      return this._yoyo;
    };
    _proto.seek = function seek(position, suppressEvents) {
      return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
    };
    _proto.restart = function restart(includeDelay, suppressEvents) {
      return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
    };
    _proto.play = function play(from, suppressEvents) {
      from != null && this.seek(from, suppressEvents);
      return this.reversed(false).paused(false);
    };
    _proto.reverse = function reverse(from, suppressEvents) {
      from != null && this.seek(from || this.totalDuration(), suppressEvents);
      return this.reversed(true).paused(false);
    };
    _proto.pause = function pause(atTime, suppressEvents) {
      atTime != null && this.seek(atTime, suppressEvents);
      return this.paused(true);
    };
    _proto.resume = function resume() {
      return this.paused(false);
    };
    _proto.reversed = function reversed(value2) {
      if (arguments.length) {
        !!value2 !== this.reversed() && this.timeScale(-this._rts || (value2 ? -_tinyNum : 0));
        return this;
      }
      return this._rts < 0;
    };
    _proto.invalidate = function invalidate() {
      this._initted = this._act = 0;
      this._zTime = -_tinyNum;
      return this;
    };
    _proto.isActive = function isActive() {
      var parent2 = this.parent || this._dp,
        start = this._start,
        rawTime;
      return !!(!parent2 || this._ts && this._initted && parent2.isActive() && (rawTime = parent2.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
    };
    _proto.eventCallback = function eventCallback(type, callback, params) {
      var vars = this.vars;
      if (arguments.length > 1) {
        if (!callback) {
          delete vars[type];
        } else {
          vars[type] = callback;
          params && (vars[type + "Params"] = params);
          type === "onUpdate" && (this._onUpdate = callback);
        }
        return this;
      }
      return vars[type];
    };
    _proto.then = function then(onFulfilled) {
      var self2 = this;
      return new Promise(function (resolve) {
        var f2 = _isFunction(onFulfilled) ? onFulfilled : _passThrough,
          _resolve = function _resolve2() {
            var _then = self2.then;
            self2.then = null;
            _isFunction(f2) && (f2 = f2(self2)) && (f2.then || f2 === self2) && (self2.then = _then);
            resolve(f2);
            self2.then = _then;
          };
        if (self2._initted && self2.totalProgress() === 1 && self2._ts >= 0 || !self2._tTime && self2._ts < 0) {
          _resolve();
        } else {
          self2._prom = _resolve;
        }
      });
    };
    _proto.kill = function kill() {
      _interrupt(this);
    };
    return Animation2;
  }();
  _setDefaults(Animation.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: false,
    parent: null,
    _initted: false,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -_tinyNum,
    _prom: 0,
    _ps: false,
    _rts: 1
  });
  var Timeline = /* @__PURE__ */function (_Animation) {
    _inheritsLoose(Timeline2, _Animation);
    function Timeline2(vars, position) {
      var _this;
      if (vars === void 0) {
        vars = {};
      }
      _this = _Animation.call(this, vars) || this;
      _this.labels = {};
      _this.smoothChildTiming = !!vars.smoothChildTiming;
      _this.autoRemoveChildren = !!vars.autoRemoveChildren;
      _this._sort = _isNotFalse(vars.sortChildren);
      _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
      vars.reversed && _this.reverse();
      vars.paused && _this.paused(true);
      vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
      return _this;
    }
    var _proto2 = Timeline2.prototype;
    _proto2.to = function to2(targets, vars, position) {
      _createTweenType(0, arguments, this);
      return this;
    };
    _proto2.from = function from(targets, vars, position) {
      _createTweenType(1, arguments, this);
      return this;
    };
    _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
      _createTweenType(2, arguments, this);
      return this;
    };
    _proto2.set = function set(targets, vars, position) {
      vars.duration = 0;
      vars.parent = this;
      _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
      vars.immediateRender = !!vars.immediateRender;
      new Tween(targets, vars, _parsePosition(this, position), 1);
      return this;
    };
    _proto2.call = function call(callback, params, position) {
      return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
    };
    _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.duration = duration;
      vars.stagger = vars.stagger || stagger;
      vars.onComplete = onCompleteAll;
      vars.onCompleteParams = onCompleteAllParams;
      vars.parent = this;
      new Tween(targets, vars, _parsePosition(this, position));
      return this;
    };
    _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.runBackwards = 1;
      _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
      return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
    };
    _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
      toVars.startAt = fromVars;
      _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
      return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
    };
    _proto2.render = function render2(totalTime, suppressEvents, force) {
      var prevTime = this._time,
        tDur = this._dirty ? this.totalDuration() : this._tDur,
        dur = this._dur,
        tTime = this !== _globalTimeline && totalTime > tDur - _tinyNum && totalTime >= 0 ? tDur : totalTime < _tinyNum ? 0 : totalTime,
        crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur),
        time2,
        child,
        next,
        iteration,
        cycleDuration,
        prevPaused,
        pauseTween,
        timeScale,
        prevStart,
        prevIteration,
        yoyo,
        isYoyo;
      if (tTime !== this._tTime || force || crossingStart) {
        if (prevTime !== this._time && dur) {
          tTime += this._time - prevTime;
          totalTime += this._time - prevTime;
        }
        time2 = tTime;
        prevStart = this._start;
        timeScale = this._ts;
        prevPaused = !timeScale;
        if (crossingStart) {
          dur || (prevTime = this._zTime);
          (totalTime || !suppressEvents) && (this._zTime = totalTime);
        }
        if (this._repeat) {
          yoyo = this._yoyo;
          cycleDuration = dur + this._rDelay;
          if (this._repeat < -1 && totalTime < 0) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }
          time2 = _round(tTime % cycleDuration);
          if (tTime === tDur) {
            iteration = this._repeat;
            time2 = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);
            if (iteration && iteration === tTime / cycleDuration) {
              time2 = dur;
              iteration--;
            }
            time2 > dur && (time2 = dur);
          }
          prevIteration = _animationCycle(this._tTime, cycleDuration);
          !prevTime && this._tTime && prevIteration !== iteration && (prevIteration = iteration);
          if (yoyo && iteration & 1) {
            time2 = dur - time2;
            isYoyo = 1;
          }
          if (iteration !== prevIteration && !this._lock) {
            var rewinding = yoyo && prevIteration & 1,
              doesWrap = rewinding === (yoyo && iteration & 1);
            iteration < prevIteration && (rewinding = !rewinding);
            prevTime = rewinding ? 0 : dur;
            this._lock = 1;
            this.render(prevTime || (isYoyo ? 0 : _round(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
            this._tTime = tTime;
            !suppressEvents && this.parent && _callback(this, "onRepeat");
            this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);
            if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
              return this;
            }
            dur = this._dur;
            tDur = this._tDur;
            if (doesWrap) {
              this._lock = 2;
              prevTime = rewinding ? dur : -1e-4;
              this.render(prevTime, true);
              this.vars.repeatRefresh && !isYoyo && this.invalidate();
            }
            this._lock = 0;
            if (!this._ts && !prevPaused) {
              return this;
            }
            _propagateYoyoEase(this, isYoyo);
          }
        }
        if (this._hasPause && !this._forcing && this._lock < 2) {
          pauseTween = _findNextPauseTween(this, _round(prevTime), _round(time2));
          if (pauseTween) {
            tTime -= time2 - (time2 = pauseTween._start);
          }
        }
        this._tTime = tTime;
        this._time = time2;
        this._act = !timeScale;
        if (!this._initted) {
          this._onUpdate = this.vars.onUpdate;
          this._initted = 1;
          this._zTime = totalTime;
          prevTime = 0;
        }
        if (!prevTime && time2 && !suppressEvents) {
          _callback(this, "onStart");
          if (this._tTime !== tTime) {
            return this;
          }
        }
        if (time2 >= prevTime && totalTime >= 0) {
          child = this._first;
          while (child) {
            next = child._next;
            if ((child._act || time2 >= child._start) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }
              child.render(child._ts > 0 ? (time2 - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time2 - child._start) * child._ts, suppressEvents, force);
              if (time2 !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = -_tinyNum);
                break;
              }
            }
            child = next;
          }
        } else {
          child = this._last;
          var adjustedTime = totalTime < 0 ? totalTime : time2;
          while (child) {
            next = child._prev;
            if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }
              child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force);
              if (time2 !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum);
                break;
              }
            }
            child = next;
          }
        }
        if (pauseTween && !suppressEvents) {
          this.pause();
          pauseTween.render(time2 >= prevTime ? 0 : -_tinyNum)._zTime = time2 >= prevTime ? 1 : -1;
          if (this._ts) {
            this._start = prevStart;
            _setEnd(this);
            return this.render(totalTime, suppressEvents, force);
          }
        }
        this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
        if (tTime === tDur && tDur >= this.totalDuration() || !tTime && prevTime) {
          if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) {
            if (!this._lock) {
              (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);
              if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
                _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);
                this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
              }
            }
          }
        }
      }
      return this;
    };
    _proto2.add = function add(child, position) {
      var _this2 = this;
      _isNumber(position) || (position = _parsePosition(this, position, child));
      if (!(child instanceof Animation)) {
        if (_isArray(child)) {
          child.forEach(function (obj) {
            return _this2.add(obj, position);
          });
          return this;
        }
        if (_isString(child)) {
          return this.addLabel(child, position);
        }
        if (_isFunction(child)) {
          child = Tween.delayedCall(0, child);
        } else {
          return this;
        }
      }
      return this !== child ? _addToTimeline(this, child, position) : this;
    };
    _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
      if (nested === void 0) {
        nested = true;
      }
      if (tweens === void 0) {
        tweens = true;
      }
      if (timelines === void 0) {
        timelines = true;
      }
      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = -_bigNum$1;
      }
      var a2 = [],
        child = this._first;
      while (child) {
        if (child._start >= ignoreBeforeTime) {
          if (child instanceof Tween) {
            tweens && a2.push(child);
          } else {
            timelines && a2.push(child);
            nested && a2.push.apply(a2, child.getChildren(true, tweens, timelines));
          }
        }
        child = child._next;
      }
      return a2;
    };
    _proto2.getById = function getById(id) {
      var animations = this.getChildren(1, 1, 1),
        i2 = animations.length;
      while (i2--) {
        if (animations[i2].vars.id === id) {
          return animations[i2];
        }
      }
    };
    _proto2.remove = function remove(child) {
      if (_isString(child)) {
        return this.removeLabel(child);
      }
      if (_isFunction(child)) {
        return this.killTweensOf(child);
      }
      _removeLinkedListItem(this, child);
      if (child === this._recent) {
        this._recent = this._last;
      }
      return _uncache(this);
    };
    _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
      if (!arguments.length) {
        return this._tTime;
      }
      this._forcing = 1;
      if (!this._dp && this._ts) {
        this._start = _round(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
      }
      _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);
      this._forcing = 0;
      return this;
    };
    _proto2.addLabel = function addLabel(label, position) {
      this.labels[label] = _parsePosition(this, position);
      return this;
    };
    _proto2.removeLabel = function removeLabel(label) {
      delete this.labels[label];
      return this;
    };
    _proto2.addPause = function addPause(position, callback, params) {
      var t2 = Tween.delayedCall(0, callback || _emptyFunc, params);
      t2.data = "isPause";
      this._hasPause = 1;
      return _addToTimeline(this, t2, _parsePosition(this, position));
    };
    _proto2.removePause = function removePause(position) {
      var child = this._first;
      position = _parsePosition(this, position);
      while (child) {
        if (child._start === position && child.data === "isPause") {
          _removeFromParent(child);
        }
        child = child._next;
      }
    };
    _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      var tweens = this.getTweensOf(targets, onlyActive),
        i2 = tweens.length;
      while (i2--) {
        _overwritingTween !== tweens[i2] && tweens[i2].kill(targets, props);
      }
      return this;
    };
    _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
      var a2 = [],
        parsedTargets = toArray(targets),
        child = this._first,
        isGlobalTime = _isNumber(onlyActive),
        children;
      while (child) {
        if (child instanceof Tween) {
          if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {
            a2.push(child);
          }
        } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
          a2.push.apply(a2, children);
        }
        child = child._next;
      }
      return a2;
    };
    _proto2.tweenTo = function tweenTo(position, vars) {
      vars = vars || {};
      var tl = this,
        endTime = _parsePosition(tl, position),
        _vars = vars,
        startAt = _vars.startAt,
        _onStart = _vars.onStart,
        onStartParams = _vars.onStartParams,
        immediateRender = _vars.immediateRender,
        initted,
        tween = Tween.to(tl, _setDefaults({
          ease: vars.ease || "none",
          lazy: false,
          immediateRender: false,
          time: endTime,
          overwrite: "auto",
          duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
          onStart: function onStart() {
            tl.pause();
            if (!initted) {
              var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
              tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
              initted = 1;
            }
            _onStart && _onStart.apply(tween, onStartParams || []);
          }
        }, vars));
      return immediateRender ? tween.render(0) : tween;
    };
    _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
      return this.tweenTo(toPosition, _setDefaults({
        startAt: {
          time: _parsePosition(this, fromPosition)
        }
      }, vars));
    };
    _proto2.recent = function recent() {
      return this._recent;
    };
    _proto2.nextLabel = function nextLabel(afterTime) {
      if (afterTime === void 0) {
        afterTime = this._time;
      }
      return _getLabelInDirection(this, _parsePosition(this, afterTime));
    };
    _proto2.previousLabel = function previousLabel(beforeTime) {
      if (beforeTime === void 0) {
        beforeTime = this._time;
      }
      return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
    };
    _proto2.currentLabel = function currentLabel(value2) {
      return arguments.length ? this.seek(value2, true) : this.previousLabel(this._time + _tinyNum);
    };
    _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = 0;
      }
      var child = this._first,
        labels = this.labels,
        p2;
      while (child) {
        if (child._start >= ignoreBeforeTime) {
          child._start += amount;
          child._end += amount;
        }
        child = child._next;
      }
      if (adjustLabels) {
        for (p2 in labels) {
          if (labels[p2] >= ignoreBeforeTime) {
            labels[p2] += amount;
          }
        }
      }
      return _uncache(this);
    };
    _proto2.invalidate = function invalidate() {
      var child = this._first;
      this._lock = 0;
      while (child) {
        child.invalidate();
        child = child._next;
      }
      return _Animation.prototype.invalidate.call(this);
    };
    _proto2.clear = function clear(includeLabels) {
      if (includeLabels === void 0) {
        includeLabels = true;
      }
      var child = this._first,
        next;
      while (child) {
        next = child._next;
        this.remove(child);
        child = next;
      }
      this._dp && (this._time = this._tTime = this._pTime = 0);
      includeLabels && (this.labels = {});
      return _uncache(this);
    };
    _proto2.totalDuration = function totalDuration(value2) {
      var max = 0,
        self2 = this,
        child = self2._last,
        prevStart = _bigNum$1,
        prev,
        start,
        parent2;
      if (arguments.length) {
        return self2.timeScale((self2._repeat < 0 ? self2.duration() : self2.totalDuration()) / (self2.reversed() ? -value2 : value2));
      }
      if (self2._dirty) {
        parent2 = self2.parent;
        while (child) {
          prev = child._prev;
          child._dirty && child.totalDuration();
          start = child._start;
          if (start > prevStart && self2._sort && child._ts && !self2._lock) {
            self2._lock = 1;
            _addToTimeline(self2, child, start - child._delay, 1)._lock = 0;
          } else {
            prevStart = start;
          }
          if (start < 0 && child._ts) {
            max -= start;
            if (!parent2 && !self2._dp || parent2 && parent2.smoothChildTiming) {
              self2._start += start / self2._ts;
              self2._time -= start;
              self2._tTime -= start;
            }
            self2.shiftChildren(-start, false, -Infinity);
            prevStart = 0;
          }
          child._end > max && child._ts && (max = child._end);
          child = prev;
        }
        _setDuration(self2, self2 === _globalTimeline && self2._time > max ? self2._time : max, 1, 1);
        self2._dirty = 0;
      }
      return self2._tDur;
    };
    Timeline2.updateRoot = function updateRoot(time2) {
      if (_globalTimeline._ts) {
        _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time2, _globalTimeline));
        _lastRenderedFrame = _ticker.frame;
      }
      if (_ticker.frame >= _nextGCFrame) {
        _nextGCFrame += _config.autoSleep || 120;
        var child = _globalTimeline._first;
        if (!child || !child._ts) {
          if (_config.autoSleep && _ticker._listeners.length < 2) {
            while (child && !child._ts) {
              child = child._next;
            }
            child || _ticker.sleep();
          }
        }
      }
    };
    return Timeline2;
  }(Animation);
  _setDefaults(Timeline.prototype, {
    _lock: 0,
    _hasPause: 0,
    _forcing: 0
  });
  var _addComplexStringPropTween = function _addComplexStringPropTween2(target, prop, start, end, setter, stringFilter, funcParam) {
      var pt2 = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter),
        index2 = 0,
        matchIndex = 0,
        result,
        startNums,
        color,
        endNum,
        chunk,
        startNum,
        hasRandom,
        a2;
      pt2.b = start;
      pt2.e = end;
      start += "";
      end += "";
      if (hasRandom = ~end.indexOf("random(")) {
        end = _replaceRandom(end);
      }
      if (stringFilter) {
        a2 = [start, end];
        stringFilter(a2, target, prop);
        start = a2[0];
        end = a2[1];
      }
      startNums = start.match(_complexStringNumExp) || [];
      while (result = _complexStringNumExp.exec(end)) {
        endNum = result[0];
        chunk = end.substring(index2, result.index);
        if (color) {
          color = (color + 1) % 5;
        } else if (chunk.substr(-5) === "rgba(") {
          color = 1;
        }
        if (endNum !== startNums[matchIndex++]) {
          startNum = parseFloat(startNums[matchIndex - 1]) || 0;
          pt2._pt = {
            _next: pt2._pt,
            p: chunk || matchIndex === 1 ? chunk : ",",
            //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
            s: startNum,
            c: endNum.charAt(1) === "=" ? parseFloat(endNum.substr(2)) * (endNum.charAt(0) === "-" ? -1 : 1) : parseFloat(endNum) - startNum,
            m: color && color < 4 ? Math.round : 0
          };
          index2 = _complexStringNumExp.lastIndex;
        }
      }
      pt2.c = index2 < end.length ? end.substring(index2, end.length) : "";
      pt2.fp = funcParam;
      if (_relExp.test(end) || hasRandom) {
        pt2.e = 0;
      }
      this._pt = pt2;
      return pt2;
    },
    _addPropTween = function _addPropTween2(target, prop, start, end, index2, targets, modifier, stringFilter, funcParam) {
      _isFunction(end) && (end = end(index2 || 0, target, targets));
      var currentValue = target[prop],
        parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](),
        setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc,
        pt2;
      if (_isString(end)) {
        if (~end.indexOf("random(")) {
          end = _replaceRandom(end);
        }
        if (end.charAt(1) === "=") {
          pt2 = parseFloat(parsedStart) + parseFloat(end.substr(2)) * (end.charAt(0) === "-" ? -1 : 1) + (getUnit(parsedStart) || 0);
          if (pt2 || pt2 === 0) {
            end = pt2;
          }
        }
      }
      if (parsedStart !== end) {
        if (!isNaN(parsedStart * end) && end !== "") {
          pt2 = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
          funcParam && (pt2.fp = funcParam);
          modifier && pt2.modifier(modifier, this, target);
          return this._pt = pt2;
        }
        !currentValue && !(prop in target) && _missingPlugin(prop, end);
        return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
      }
    },
    _processVars = function _processVars2(vars, index2, target, targets, tween) {
      _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index2, target, targets));
      if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {
        return _isString(vars) ? _parseFuncOrString(vars, tween, index2, target, targets) : vars;
      }
      var copy = {},
        p2;
      for (p2 in vars) {
        copy[p2] = _parseFuncOrString(vars[p2], tween, index2, target, targets);
      }
      return copy;
    },
    _checkPlugin = function _checkPlugin2(property2, vars, tween, index2, target, targets) {
      var plugin2, pt2, ptLookup, i2;
      if (_plugins[property2] && (plugin2 = new _plugins[property2]()).init(target, plugin2.rawVars ? vars[property2] : _processVars(vars[property2], index2, target, targets, tween), tween, index2, targets) !== false) {
        tween._pt = pt2 = new PropTween(tween._pt, target, property2, 0, 1, plugin2.render, plugin2, 0, plugin2.priority);
        if (tween !== _quickTween) {
          ptLookup = tween._ptLookup[tween._targets.indexOf(target)];
          i2 = plugin2._props.length;
          while (i2--) {
            ptLookup[plugin2._props[i2]] = pt2;
          }
        }
      }
      return plugin2;
    },
    _overwritingTween,
    _initTween = function _initTween2(tween, time2) {
      var vars = tween.vars,
        ease = vars.ease,
        startAt = vars.startAt,
        immediateRender = vars.immediateRender,
        lazy = vars.lazy,
        onUpdate = vars.onUpdate,
        onUpdateParams = vars.onUpdateParams,
        callbackScope = vars.callbackScope,
        runBackwards = vars.runBackwards,
        yoyoEase = vars.yoyoEase,
        keyframes = vars.keyframes,
        autoRevert = vars.autoRevert,
        dur = tween._dur,
        prevStartAt = tween._startAt,
        targets = tween._targets,
        parent2 = tween.parent,
        fullTargets = parent2 && parent2.data === "nested" ? parent2.parent._targets : targets,
        autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites,
        tl = tween.timeline,
        cleanVars,
        i2,
        p2,
        pt2,
        target,
        hasPriority,
        gsData,
        harness,
        plugin2,
        ptLookup,
        index2,
        harnessVars,
        overwritten;
      tl && (!keyframes || !ease) && (ease = "none");
      tween._ease = _parseEase(ease, _defaults.ease);
      tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;
      if (yoyoEase && tween._yoyo && !tween._repeat) {
        yoyoEase = tween._yEase;
        tween._yEase = tween._ease;
        tween._ease = yoyoEase;
      }
      tween._from = !tl && !!vars.runBackwards;
      if (!tl) {
        harness = targets[0] ? _getCache(targets[0]).harness : 0;
        harnessVars = harness && vars[harness.prop];
        cleanVars = _copyExcluding(vars, _reservedProps);
        prevStartAt && prevStartAt.render(-1, true).kill();
        if (startAt) {
          _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
            data: "isStart",
            overwrite: false,
            parent: parent2,
            immediateRender: true,
            lazy: _isNotFalse(lazy),
            startAt: null,
            delay: 0,
            onUpdate,
            onUpdateParams,
            callbackScope,
            stagger: 0
          }, startAt)));
          time2 < 0 && !immediateRender && !autoRevert && tween._startAt.render(-1, true);
          if (immediateRender) {
            time2 > 0 && !autoRevert && (tween._startAt = 0);
            if (dur && time2 <= 0) {
              time2 && (tween._zTime = time2);
              return;
            }
          } else if (autoRevert === false) {
            tween._startAt = 0;
          }
        } else if (runBackwards && dur) {
          if (prevStartAt) {
            !autoRevert && (tween._startAt = 0);
          } else {
            time2 && (immediateRender = false);
            p2 = _setDefaults({
              overwrite: false,
              data: "isFromStart",
              //we tag the tween with as "isFromStart" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a "from()" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.
              lazy: immediateRender && _isNotFalse(lazy),
              immediateRender,
              //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)
              stagger: 0,
              parent: parent2
              //ensures that nested tweens that had a stagger are handled properly, like gsap.from(".class", {y:gsap.utils.wrap([-100,100])})
            }, cleanVars);
            harnessVars && (p2[harness.prop] = harnessVars);
            _removeFromParent(tween._startAt = Tween.set(targets, p2));
            time2 < 0 && tween._startAt.render(-1, true);
            if (!immediateRender) {
              _initTween2(tween._startAt, _tinyNum);
            } else if (!time2) {
              return;
            }
          }
        }
        tween._pt = 0;
        lazy = dur && _isNotFalse(lazy) || lazy && !dur;
        for (i2 = 0; i2 < targets.length; i2++) {
          target = targets[i2];
          gsData = target._gsap || _harness(targets)[i2]._gsap;
          tween._ptLookup[i2] = ptLookup = {};
          _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender();
          index2 = fullTargets === targets ? i2 : fullTargets.indexOf(target);
          if (harness && (plugin2 = new harness()).init(target, harnessVars || cleanVars, tween, index2, fullTargets) !== false) {
            tween._pt = pt2 = new PropTween(tween._pt, target, plugin2.name, 0, 1, plugin2.render, plugin2, 0, plugin2.priority);
            plugin2._props.forEach(function (name) {
              ptLookup[name] = pt2;
            });
            plugin2.priority && (hasPriority = 1);
          }
          if (!harness || harnessVars) {
            for (p2 in cleanVars) {
              if (_plugins[p2] && (plugin2 = _checkPlugin(p2, cleanVars, tween, index2, target, fullTargets))) {
                plugin2.priority && (hasPriority = 1);
              } else {
                ptLookup[p2] = pt2 = _addPropTween.call(tween, target, p2, "get", cleanVars[p2], index2, fullTargets, 0, vars.stringFilter);
              }
            }
          }
          tween._op && tween._op[i2] && tween.kill(target, tween._op[i2]);
          if (autoOverwrite && tween._pt) {
            _overwritingTween = tween;
            _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(0));
            overwritten = !tween.parent;
            _overwritingTween = 0;
          }
          tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
        }
        hasPriority && _sortPropTweensByPriority(tween);
        tween._onInit && tween._onInit(tween);
      }
      tween._onUpdate = onUpdate;
      tween._initted = (!tween._op || tween._pt) && !overwritten;
    },
    _addAliasesToVars = function _addAliasesToVars2(targets, vars) {
      var harness = targets[0] ? _getCache(targets[0]).harness : 0,
        propertyAliases = harness && harness.aliases,
        copy,
        p2,
        i2,
        aliases;
      if (!propertyAliases) {
        return vars;
      }
      copy = _merge({}, vars);
      for (p2 in propertyAliases) {
        if (p2 in copy) {
          aliases = propertyAliases[p2].split(",");
          i2 = aliases.length;
          while (i2--) {
            copy[aliases[i2]] = copy[p2];
          }
        }
      }
      return copy;
    },
    _parseFuncOrString = function _parseFuncOrString2(value2, tween, i2, target, targets) {
      return _isFunction(value2) ? value2.call(tween, i2, target, targets) : _isString(value2) && ~value2.indexOf("random(") ? _replaceRandom(value2) : value2;
    },
    _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",
    _staggerPropsToSkip = (_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger").split(",");
  var Tween = /* @__PURE__ */function (_Animation2) {
    _inheritsLoose(Tween2, _Animation2);
    function Tween2(targets, vars, position, skipInherit) {
      var _this3;
      if (typeof vars === "number") {
        position.duration = vars;
        vars = position;
        position = null;
      }
      _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
      var _this3$vars = _this3.vars,
        duration = _this3$vars.duration,
        delay = _this3$vars.delay,
        immediateRender = _this3$vars.immediateRender,
        stagger = _this3$vars.stagger,
        overwrite = _this3$vars.overwrite,
        keyframes = _this3$vars.keyframes,
        defaults2 = _this3$vars.defaults,
        scrollTrigger = _this3$vars.scrollTrigger,
        yoyoEase = _this3$vars.yoyoEase,
        parent2 = vars.parent || _globalTimeline,
        parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets),
        tl,
        i2,
        copy,
        l2,
        p2,
        curTarget,
        staggerFunc,
        staggerVarsToMerge;
      _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://greensock.com", !_config.nullTargetWarn) || [];
      _this3._ptLookup = [];
      _this3._overwrite = overwrite;
      if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
        vars = _this3.vars;
        tl = _this3.timeline = new Timeline({
          data: "nested",
          defaults: defaults2 || {}
        });
        tl.kill();
        tl.parent = tl._dp = _assertThisInitialized(_this3);
        tl._start = 0;
        if (keyframes) {
          _setDefaults(tl.vars.defaults, {
            ease: "none"
          });
          stagger ? parsedTargets.forEach(function (t2, i3) {
            return keyframes.forEach(function (frame, j2) {
              return tl.to(t2, frame, j2 ? ">" : i3 * stagger);
            });
          }) : keyframes.forEach(function (frame) {
            return tl.to(parsedTargets, frame, ">");
          });
        } else {
          l2 = parsedTargets.length;
          staggerFunc = stagger ? distribute(stagger) : _emptyFunc;
          if (_isObject(stagger)) {
            for (p2 in stagger) {
              if (~_staggerTweenProps.indexOf(p2)) {
                staggerVarsToMerge || (staggerVarsToMerge = {});
                staggerVarsToMerge[p2] = stagger[p2];
              }
            }
          }
          for (i2 = 0; i2 < l2; i2++) {
            copy = {};
            for (p2 in vars) {
              if (_staggerPropsToSkip.indexOf(p2) < 0) {
                copy[p2] = vars[p2];
              }
            }
            copy.stagger = 0;
            yoyoEase && (copy.yoyoEase = yoyoEase);
            staggerVarsToMerge && _merge(copy, staggerVarsToMerge);
            curTarget = parsedTargets[i2];
            copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i2, curTarget, parsedTargets);
            copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i2, curTarget, parsedTargets) || 0) - _this3._delay;
            if (!stagger && l2 === 1 && copy.delay) {
              _this3._delay = delay = copy.delay;
              _this3._start += delay;
              copy.delay = 0;
            }
            tl.to(curTarget, copy, staggerFunc(i2, curTarget, parsedTargets));
          }
          tl.duration() ? duration = delay = 0 : _this3.timeline = 0;
        }
        duration || _this3.duration(duration = tl.duration());
      } else {
        _this3.timeline = 0;
      }
      if (overwrite === true && !_suppressOverwrites) {
        _overwritingTween = _assertThisInitialized(_this3);
        _globalTimeline.killTweensOf(parsedTargets);
        _overwritingTween = 0;
      }
      _addToTimeline(parent2, _assertThisInitialized(_this3), position);
      vars.reversed && _this3.reverse();
      vars.paused && _this3.paused(true);
      if (immediateRender || !duration && !keyframes && _this3._start === _round(parent2._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent2.data !== "nested") {
        _this3._tTime = -_tinyNum;
        _this3.render(Math.max(0, -delay));
      }
      scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
      return _this3;
    }
    var _proto3 = Tween2.prototype;
    _proto3.render = function render2(totalTime, suppressEvents, force) {
      var prevTime = this._time,
        tDur = this._tDur,
        dur = this._dur,
        tTime = totalTime > tDur - _tinyNum && totalTime >= 0 ? tDur : totalTime < _tinyNum ? 0 : totalTime,
        time2,
        pt2,
        iteration,
        cycleDuration,
        prevIteration,
        isYoyo,
        ratio,
        timeline,
        yoyoEase;
      if (!dur) {
        _renderZeroDurationTween(this, totalTime, suppressEvents, force);
      } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== totalTime < 0) {
        time2 = tTime;
        timeline = this.timeline;
        if (this._repeat) {
          cycleDuration = dur + this._rDelay;
          if (this._repeat < -1 && totalTime < 0) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }
          time2 = _round(tTime % cycleDuration);
          if (tTime === tDur) {
            iteration = this._repeat;
            time2 = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);
            if (iteration && iteration === tTime / cycleDuration) {
              time2 = dur;
              iteration--;
            }
            time2 > dur && (time2 = dur);
          }
          isYoyo = this._yoyo && iteration & 1;
          if (isYoyo) {
            yoyoEase = this._yEase;
            time2 = dur - time2;
          }
          prevIteration = _animationCycle(this._tTime, cycleDuration);
          if (time2 === prevTime && !force && this._initted) {
            return this;
          }
          if (iteration !== prevIteration) {
            timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo);
            if (this.vars.repeatRefresh && !isYoyo && !this._lock) {
              this._lock = force = 1;
              this.render(_round(cycleDuration * iteration), true).invalidate()._lock = 0;
            }
          }
        }
        if (!this._initted) {
          if (_attemptInitTween(this, totalTime < 0 ? totalTime : time2, force, suppressEvents)) {
            this._tTime = 0;
            return this;
          }
          if (dur !== this._dur) {
            return this.render(totalTime, suppressEvents, force);
          }
        }
        this._tTime = tTime;
        this._time = time2;
        if (!this._act && this._ts) {
          this._act = 1;
          this._lazy = 0;
        }
        this.ratio = ratio = (yoyoEase || this._ease)(time2 / dur);
        if (this._from) {
          this.ratio = ratio = 1 - ratio;
        }
        if (time2 && !prevTime && !suppressEvents) {
          _callback(this, "onStart");
          if (this._tTime !== tTime) {
            return this;
          }
        }
        pt2 = this._pt;
        while (pt2) {
          pt2.r(ratio, pt2.d);
          pt2 = pt2._next;
        }
        timeline && timeline.render(totalTime < 0 ? totalTime : !time2 && isYoyo ? -_tinyNum : timeline._dur * ratio, suppressEvents, force) || this._startAt && (this._zTime = totalTime);
        if (this._onUpdate && !suppressEvents) {
          totalTime < 0 && this._startAt && this._startAt.render(totalTime, true, force);
          _callback(this, "onUpdate");
        }
        this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");
        if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
          totalTime < 0 && this._startAt && !this._onUpdate && this._startAt.render(totalTime, true, true);
          (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);
          if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime)) {
            _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);
            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
          }
        }
      }
      return this;
    };
    _proto3.targets = function targets() {
      return this._targets;
    };
    _proto3.invalidate = function invalidate() {
      this._pt = this._op = this._startAt = this._onUpdate = this._lazy = this.ratio = 0;
      this._ptLookup = [];
      this.timeline && this.timeline.invalidate();
      return _Animation2.prototype.invalidate.call(this);
    };
    _proto3.kill = function kill(targets, vars) {
      if (vars === void 0) {
        vars = "all";
      }
      if (!targets && (!vars || vars === "all")) {
        this._lazy = this._pt = 0;
        return this.parent ? _interrupt(this) : this;
      }
      if (this.timeline) {
        var tDur = this.timeline.totalDuration();
        this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this);
        this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1);
        return this;
      }
      var parsedTargets = this._targets,
        killingTargets = targets ? toArray(targets) : parsedTargets,
        propTweenLookup = this._ptLookup,
        firstPT = this._pt,
        overwrittenProps,
        curLookup,
        curOverwriteProps,
        props,
        p2,
        pt2,
        i2;
      if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
        vars === "all" && (this._pt = 0);
        return _interrupt(this);
      }
      overwrittenProps = this._op = this._op || [];
      if (vars !== "all") {
        if (_isString(vars)) {
          p2 = {};
          _forEachName(vars, function (name) {
            return p2[name] = 1;
          });
          vars = p2;
        }
        vars = _addAliasesToVars(parsedTargets, vars);
      }
      i2 = parsedTargets.length;
      while (i2--) {
        if (~killingTargets.indexOf(parsedTargets[i2])) {
          curLookup = propTweenLookup[i2];
          if (vars === "all") {
            overwrittenProps[i2] = vars;
            props = curLookup;
            curOverwriteProps = {};
          } else {
            curOverwriteProps = overwrittenProps[i2] = overwrittenProps[i2] || {};
            props = vars;
          }
          for (p2 in props) {
            pt2 = curLookup && curLookup[p2];
            if (pt2) {
              if (!("kill" in pt2.d) || pt2.d.kill(p2) === true) {
                _removeLinkedListItem(this, pt2, "_pt");
              }
              delete curLookup[p2];
            }
            if (curOverwriteProps !== "all") {
              curOverwriteProps[p2] = 1;
            }
          }
        }
      }
      this._initted && !this._pt && firstPT && _interrupt(this);
      return this;
    };
    Tween2.to = function to2(targets, vars) {
      return new Tween2(targets, vars, arguments[2]);
    };
    Tween2.from = function from(targets, vars) {
      return _createTweenType(1, arguments);
    };
    Tween2.delayedCall = function delayedCall(delay, callback, params, scope) {
      return new Tween2(callback, 0, {
        immediateRender: false,
        lazy: false,
        overwrite: false,
        delay,
        onComplete: callback,
        onReverseComplete: callback,
        onCompleteParams: params,
        onReverseCompleteParams: params,
        callbackScope: scope
      });
    };
    Tween2.fromTo = function fromTo(targets, fromVars, toVars) {
      return _createTweenType(2, arguments);
    };
    Tween2.set = function set(targets, vars) {
      vars.duration = 0;
      vars.repeatDelay || (vars.repeat = 0);
      return new Tween2(targets, vars);
    };
    Tween2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      return _globalTimeline.killTweensOf(targets, props, onlyActive);
    };
    return Tween2;
  }(Animation);
  _setDefaults(Tween.prototype, {
    _targets: [],
    _lazy: 0,
    _startAt: 0,
    _op: 0,
    _onInit: 0
  });
  _forEachName("staggerTo,staggerFrom,staggerFromTo", function (name) {
    Tween[name] = function () {
      var tl = new Timeline(),
        params = _slice.call(arguments, 0);
      params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
      return tl[name].apply(tl, params);
    };
  });
  var _setterPlain = function _setterPlain2(target, property2, value2) {
      return target[property2] = value2;
    },
    _setterFunc = function _setterFunc2(target, property2, value2) {
      return target[property2](value2);
    },
    _setterFuncWithParam = function _setterFuncWithParam2(target, property2, value2, data2) {
      return target[property2](data2.fp, value2);
    },
    _setterAttribute = function _setterAttribute2(target, property2, value2) {
      return target.setAttribute(property2, value2);
    },
    _getSetter = function _getSetter2(target, property2) {
      return _isFunction(target[property2]) ? _setterFunc : _isUndefined(target[property2]) && target.setAttribute ? _setterAttribute : _setterPlain;
    },
    _renderPlain = function _renderPlain2(ratio, data2) {
      return data2.set(data2.t, data2.p, Math.round((data2.s + data2.c * ratio) * 1e6) / 1e6, data2);
    },
    _renderBoolean = function _renderBoolean2(ratio, data2) {
      return data2.set(data2.t, data2.p, !!(data2.s + data2.c * ratio), data2);
    },
    _renderComplexString = function _renderComplexString2(ratio, data2) {
      var pt2 = data2._pt,
        s2 = "";
      if (!ratio && data2.b) {
        s2 = data2.b;
      } else if (ratio === 1 && data2.e) {
        s2 = data2.e;
      } else {
        while (pt2) {
          s2 = pt2.p + (pt2.m ? pt2.m(pt2.s + pt2.c * ratio) : Math.round((pt2.s + pt2.c * ratio) * 1e4) / 1e4) + s2;
          pt2 = pt2._next;
        }
        s2 += data2.c;
      }
      data2.set(data2.t, data2.p, s2, data2);
    },
    _renderPropTweens = function _renderPropTweens2(ratio, data2) {
      var pt2 = data2._pt;
      while (pt2) {
        pt2.r(ratio, pt2.d);
        pt2 = pt2._next;
      }
    },
    _addPluginModifier = function _addPluginModifier2(modifier, tween, target, property2) {
      var pt2 = this._pt,
        next;
      while (pt2) {
        next = pt2._next;
        pt2.p === property2 && pt2.modifier(modifier, tween, target);
        pt2 = next;
      }
    },
    _killPropTweensOf = function _killPropTweensOf2(property2) {
      var pt2 = this._pt,
        hasNonDependentRemaining,
        next;
      while (pt2) {
        next = pt2._next;
        if (pt2.p === property2 && !pt2.op || pt2.op === property2) {
          _removeLinkedListItem(this, pt2, "_pt");
        } else if (!pt2.dep) {
          hasNonDependentRemaining = 1;
        }
        pt2 = next;
      }
      return !hasNonDependentRemaining;
    },
    _setterWithModifier = function _setterWithModifier2(target, property2, value2, data2) {
      data2.mSet(target, property2, data2.m.call(data2.tween, value2, data2.mt), data2);
    },
    _sortPropTweensByPriority = function _sortPropTweensByPriority2(parent2) {
      var pt2 = parent2._pt,
        next,
        pt22,
        first,
        last2;
      while (pt2) {
        next = pt2._next;
        pt22 = first;
        while (pt22 && pt22.pr > pt2.pr) {
          pt22 = pt22._next;
        }
        if (pt2._prev = pt22 ? pt22._prev : last2) {
          pt2._prev._next = pt2;
        } else {
          first = pt2;
        }
        if (pt2._next = pt22) {
          pt22._prev = pt2;
        } else {
          last2 = pt2;
        }
        pt2 = next;
      }
      parent2._pt = first;
    };
  var PropTween = /* @__PURE__ */function () {
    function PropTween2(next, target, prop, start, change, renderer, data2, setter, priority) {
      this.t = target;
      this.s = start;
      this.c = change;
      this.p = prop;
      this.r = renderer || _renderPlain;
      this.d = data2 || this;
      this.set = setter || _setterPlain;
      this.pr = priority || 0;
      this._next = next;
      if (next) {
        next._prev = this;
      }
    }
    var _proto4 = PropTween2.prototype;
    _proto4.modifier = function modifier(func, tween, target) {
      this.mSet = this.mSet || this.set;
      this.set = _setterWithModifier;
      this.m = func;
      this.mt = target;
      this.tween = tween;
    };
    return PropTween2;
  }();
  _forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function (name) {
    return _reservedProps[name] = 1;
  });
  _globals.TweenMax = _globals.TweenLite = Tween;
  _globals.TimelineLite = _globals.TimelineMax = Timeline;
  _globalTimeline = new Timeline({
    sortChildren: false,
    defaults: _defaults,
    autoRemoveChildren: true,
    id: "root",
    smoothChildTiming: true
  });
  _config.stringFilter = _colorStringFilter;
  var _gsap = {
    registerPlugin: function registerPlugin() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      args.forEach(function (config) {
        return _createPlugin(config);
      });
    },
    timeline: function timeline(vars) {
      return new Timeline(vars);
    },
    getTweensOf: function getTweensOf(targets, onlyActive) {
      return _globalTimeline.getTweensOf(targets, onlyActive);
    },
    getProperty: function getProperty(target, property2, unit, uncache) {
      _isString(target) && (target = toArray(target)[0]);
      var getter = _getCache(target || {}).get,
        format = unit ? _passThrough : _numericIfPossible;
      unit === "native" && (unit = "");
      return !target ? target : !property2 ? function (property3, unit2, uncache2) {
        return format((_plugins[property3] && _plugins[property3].get || getter)(target, property3, unit2, uncache2));
      } : format((_plugins[property2] && _plugins[property2].get || getter)(target, property2, unit, uncache));
    },
    quickSetter: function quickSetter(target, property2, unit) {
      target = toArray(target);
      if (target.length > 1) {
        var setters = target.map(function (t2) {
            return gsap.quickSetter(t2, property2, unit);
          }),
          l2 = setters.length;
        return function (value2) {
          var i2 = l2;
          while (i2--) {
            setters[i2](value2);
          }
        };
      }
      target = target[0] || {};
      var Plugin = _plugins[property2],
        cache = _getCache(target),
        p2 = cache.harness && (cache.harness.aliases || {})[property2] || property2,
        setter = Plugin ? function (value2) {
          var p3 = new Plugin();
          _quickTween._pt = 0;
          p3.init(target, unit ? value2 + unit : value2, _quickTween, 0, [target]);
          p3.render(1, p3);
          _quickTween._pt && _renderPropTweens(1, _quickTween);
        } : cache.set(target, p2);
      return Plugin ? setter : function (value2) {
        return setter(target, p2, unit ? value2 + unit : value2, cache, 1);
      };
    },
    isTweening: function isTweening(targets) {
      return _globalTimeline.getTweensOf(targets, true).length > 0;
    },
    defaults: function defaults2(value2) {
      value2 && value2.ease && (value2.ease = _parseEase(value2.ease, _defaults.ease));
      return _mergeDeep(_defaults, value2 || {});
    },
    config: function config(value2) {
      return _mergeDeep(_config, value2 || {});
    },
    registerEffect: function registerEffect(_ref3) {
      var name = _ref3.name,
        effect2 = _ref3.effect,
        plugins = _ref3.plugins,
        defaults2 = _ref3.defaults,
        extendTimeline = _ref3.extendTimeline;
      (plugins || "").split(",").forEach(function (pluginName) {
        return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
      });
      _effects[name] = function (targets, vars, tl) {
        return effect2(toArray(targets), _setDefaults(vars || {}, defaults2), tl);
      };
      if (extendTimeline) {
        Timeline.prototype[name] = function (targets, vars, position) {
          return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
        };
      }
    },
    registerEase: function registerEase(name, ease) {
      _easeMap[name] = _parseEase(ease);
    },
    parseEase: function parseEase(ease, defaultEase) {
      return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
    },
    getById: function getById(id) {
      return _globalTimeline.getById(id);
    },
    exportRoot: function exportRoot(vars, includeDelayedCalls) {
      if (vars === void 0) {
        vars = {};
      }
      var tl = new Timeline(vars),
        child,
        next;
      tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);
      _globalTimeline.remove(tl);
      tl._dp = 0;
      tl._time = tl._tTime = _globalTimeline._time;
      child = _globalTimeline._first;
      while (child) {
        next = child._next;
        if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
          _addToTimeline(tl, child, child._start - child._delay);
        }
        child = next;
      }
      _addToTimeline(_globalTimeline, tl, 0);
      return tl;
    },
    utils: {
      wrap,
      wrapYoyo,
      distribute,
      random,
      snap,
      normalize,
      getUnit,
      clamp,
      splitColor,
      toArray,
      selector,
      mapRange,
      pipe,
      unitize,
      interpolate,
      shuffle
    },
    install: _install,
    effects: _effects,
    ticker: _ticker,
    updateRoot: Timeline.updateRoot,
    plugins: _plugins,
    globalTimeline: _globalTimeline,
    core: {
      PropTween,
      globals: _addGlobal,
      Tween,
      Timeline,
      Animation,
      getCache: _getCache,
      _removeLinkedListItem,
      suppressOverwrites: function suppressOverwrites(value2) {
        return _suppressOverwrites = value2;
      }
    }
  };
  _forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function (name) {
    return _gsap[name] = Tween[name];
  });
  _ticker.add(Timeline.updateRoot);
  _quickTween = _gsap.to({}, {
    duration: 0
  });
  var _getPluginPropTween = function _getPluginPropTween2(plugin2, prop) {
      var pt2 = plugin2._pt;
      while (pt2 && pt2.p !== prop && pt2.op !== prop && pt2.fp !== prop) {
        pt2 = pt2._next;
      }
      return pt2;
    },
    _addModifiers = function _addModifiers2(tween, modifiers) {
      var targets = tween._targets,
        p2,
        i2,
        pt2;
      for (p2 in modifiers) {
        i2 = targets.length;
        while (i2--) {
          pt2 = tween._ptLookup[i2][p2];
          if (pt2 && (pt2 = pt2.d)) {
            if (pt2._pt) {
              pt2 = _getPluginPropTween(pt2, p2);
            }
            pt2 && pt2.modifier && pt2.modifier(modifiers[p2], tween, targets[i2], p2);
          }
        }
      }
    },
    _buildModifierPlugin = function _buildModifierPlugin2(name, modifier) {
      return {
        name,
        rawVars: 1,
        //don't pre-process function-based values or "random()" strings.
        init: function init(target, vars, tween) {
          tween._onInit = function (tween2) {
            var temp, p2;
            if (_isString(vars)) {
              temp = {};
              _forEachName(vars, function (name2) {
                return temp[name2] = 1;
              });
              vars = temp;
            }
            if (modifier) {
              temp = {};
              for (p2 in vars) {
                temp[p2] = modifier(vars[p2]);
              }
              vars = temp;
            }
            _addModifiers(tween2, vars);
          };
        }
      };
    };
  var gsap = _gsap.registerPlugin({
    name: "attr",
    init: function init(target, vars, tween, index2, targets) {
      var p2, pt2;
      for (p2 in vars) {
        pt2 = this.add(target, "setAttribute", (target.getAttribute(p2) || 0) + "", vars[p2], index2, targets, 0, 0, p2);
        pt2 && (pt2.op = p2);
        this._props.push(p2);
      }
    }
  }, {
    name: "endArray",
    init: function init(target, value2) {
      var i2 = value2.length;
      while (i2--) {
        this.add(target, i2, target[i2] || 0, value2[i2]);
      }
    }
  }, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap;
  Tween.version = Timeline.version = gsap.version = "3.7.1";
  _coreReady = 1;
  _windowExists$1() && _wake();
  _easeMap.Power0;
  _easeMap.Power1;
  _easeMap.Power2;
  _easeMap.Power3;
  _easeMap.Power4;
  _easeMap.Linear;
  _easeMap.Quad;
  _easeMap.Cubic;
  _easeMap.Quart;
  _easeMap.Quint;
  _easeMap.Strong;
  _easeMap.Elastic;
  _easeMap.Back;
  _easeMap.SteppedEase;
  _easeMap.Bounce;
  _easeMap.Sine;
  _easeMap.Expo;
  _easeMap.Circ;
  /*!
   * CSSPlugin 3.7.1
   * https://greensock.com
   *
   * Copyright 2008-2021, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */
  var _win,
    _doc,
    _docElement,
    _pluginInitted,
    _tempDiv,
    _recentSetterPlugin,
    _windowExists = function _windowExists2() {
      return typeof window !== "undefined";
    },
    _transformProps = {},
    _RAD2DEG = 180 / Math.PI,
    _DEG2RAD = Math.PI / 180,
    _atan2 = Math.atan2,
    _bigNum = 1e8,
    _capsExp = /([A-Z])/g,
    _horizontalExp = /(?:left|right|width|margin|padding|x)/i,
    _complexExp = /[\s,\(]\S/,
    _propertyAliases = {
      autoAlpha: "opacity,visibility",
      scale: "scaleX,scaleY",
      alpha: "opacity"
    },
    _renderCSSProp = function _renderCSSProp2(ratio, data2) {
      return data2.set(data2.t, data2.p, Math.round((data2.s + data2.c * ratio) * 1e4) / 1e4 + data2.u, data2);
    },
    _renderPropWithEnd = function _renderPropWithEnd2(ratio, data2) {
      return data2.set(data2.t, data2.p, ratio === 1 ? data2.e : Math.round((data2.s + data2.c * ratio) * 1e4) / 1e4 + data2.u, data2);
    },
    _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning2(ratio, data2) {
      return data2.set(data2.t, data2.p, ratio ? Math.round((data2.s + data2.c * ratio) * 1e4) / 1e4 + data2.u : data2.b, data2);
    },
    _renderRoundedCSSProp = function _renderRoundedCSSProp2(ratio, data2) {
      var value2 = data2.s + data2.c * ratio;
      data2.set(data2.t, data2.p, ~~(value2 + (value2 < 0 ? -0.5 : 0.5)) + data2.u, data2);
    },
    _renderNonTweeningValue = function _renderNonTweeningValue2(ratio, data2) {
      return data2.set(data2.t, data2.p, ratio ? data2.e : data2.b, data2);
    },
    _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd2(ratio, data2) {
      return data2.set(data2.t, data2.p, ratio !== 1 ? data2.b : data2.e, data2);
    },
    _setterCSSStyle = function _setterCSSStyle2(target, property2, value2) {
      return target.style[property2] = value2;
    },
    _setterCSSProp = function _setterCSSProp2(target, property2, value2) {
      return target.style.setProperty(property2, value2);
    },
    _setterTransform = function _setterTransform2(target, property2, value2) {
      return target._gsap[property2] = value2;
    },
    _setterScale = function _setterScale2(target, property2, value2) {
      return target._gsap.scaleX = target._gsap.scaleY = value2;
    },
    _setterScaleWithRender = function _setterScaleWithRender2(target, property2, value2, data2, ratio) {
      var cache = target._gsap;
      cache.scaleX = cache.scaleY = value2;
      cache.renderTransform(ratio, cache);
    },
    _setterTransformWithRender = function _setterTransformWithRender2(target, property2, value2, data2, ratio) {
      var cache = target._gsap;
      cache[property2] = value2;
      cache.renderTransform(ratio, cache);
    },
    _transformProp = "transform",
    _transformOriginProp = _transformProp + "Origin",
    _supports3D,
    _createElement = function _createElement2(type, ns2) {
      var e2 = _doc.createElementNS ? _doc.createElementNS((ns2 || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc.createElement(type);
      return e2.style ? e2 : _doc.createElement(type);
    },
    _getComputedProperty = function _getComputedProperty2(target, property2, skipPrefixFallback) {
      var cs = getComputedStyle(target);
      return cs[property2] || cs.getPropertyValue(property2.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property2) || !skipPrefixFallback && _getComputedProperty2(target, _checkPropPrefix(property2) || property2, 1) || "";
    },
    _prefixes = "O,Moz,ms,Ms,Webkit".split(","),
    _checkPropPrefix = function _checkPropPrefix2(property2, element, preferPrefix) {
      var e2 = element || _tempDiv,
        s2 = e2.style,
        i2 = 5;
      if (property2 in s2 && !preferPrefix) {
        return property2;
      }
      property2 = property2.charAt(0).toUpperCase() + property2.substr(1);
      while (i2-- && !(_prefixes[i2] + property2 in s2)) {}
      return i2 < 0 ? null : (i2 === 3 ? "ms" : i2 >= 0 ? _prefixes[i2] : "") + property2;
    },
    _initCore = function _initCore2() {
      if (_windowExists() && window.document) {
        _win = window;
        _doc = _win.document;
        _docElement = _doc.documentElement;
        _tempDiv = _createElement("div") || {
          style: {}
        };
        _createElement("div");
        _transformProp = _checkPropPrefix(_transformProp);
        _transformOriginProp = _transformProp + "Origin";
        _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0";
        _supports3D = !!_checkPropPrefix("perspective");
        _pluginInitted = 1;
      }
    },
    _getBBoxHack = function _getBBoxHack2(swapIfPossible) {
      var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
        oldParent = this.parentNode,
        oldSibling = this.nextSibling,
        oldCSS = this.style.cssText,
        bbox;
      _docElement.appendChild(svg);
      svg.appendChild(this);
      this.style.display = "block";
      if (swapIfPossible) {
        try {
          bbox = this.getBBox();
          this._gsapBBox = this.getBBox;
          this.getBBox = _getBBoxHack2;
        } catch (e2) {}
      } else if (this._gsapBBox) {
        bbox = this._gsapBBox();
      }
      if (oldParent) {
        if (oldSibling) {
          oldParent.insertBefore(this, oldSibling);
        } else {
          oldParent.appendChild(this);
        }
      }
      _docElement.removeChild(svg);
      this.style.cssText = oldCSS;
      return bbox;
    },
    _getAttributeFallbacks = function _getAttributeFallbacks2(target, attributesArray) {
      var i2 = attributesArray.length;
      while (i2--) {
        if (target.hasAttribute(attributesArray[i2])) {
          return target.getAttribute(attributesArray[i2]);
        }
      }
    },
    _getBBox = function _getBBox2(target) {
      var bounds;
      try {
        bounds = target.getBBox();
      } catch (error) {
        bounds = _getBBoxHack.call(target, true);
      }
      bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true));
      return bounds && !bounds.width && !bounds.x && !bounds.y ? {
        x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
        y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
        width: 0,
        height: 0
      } : bounds;
    },
    _isSVG = function _isSVG2(e2) {
      return !!(e2.getCTM && (!e2.parentNode || e2.ownerSVGElement) && _getBBox(e2));
    },
    _removeProperty = function _removeProperty2(target, property2) {
      if (property2) {
        var style = target.style;
        if (property2 in _transformProps && property2 !== _transformOriginProp) {
          property2 = _transformProp;
        }
        if (style.removeProperty) {
          if (property2.substr(0, 2) === "ms" || property2.substr(0, 6) === "webkit") {
            property2 = "-" + property2;
          }
          style.removeProperty(property2.replace(_capsExp, "-$1").toLowerCase());
        } else {
          style.removeAttribute(property2);
        }
      }
    },
    _addNonTweeningPT = function _addNonTweeningPT2(plugin2, target, property2, beginning, end, onlySetAtEnd) {
      var pt2 = new PropTween(plugin2._pt, target, property2, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
      plugin2._pt = pt2;
      pt2.b = beginning;
      pt2.e = end;
      plugin2._props.push(property2);
      return pt2;
    },
    _nonConvertibleUnits = {
      deg: 1,
      rad: 1,
      turn: 1
    },
    _convertToUnit = function _convertToUnit2(target, property2, value2, unit) {
      var curValue = parseFloat(value2) || 0,
        curUnit = (value2 + "").trim().substr((curValue + "").length) || "px",
        style = _tempDiv.style,
        horizontal = _horizontalExp.test(property2),
        isRootSVG = target.tagName.toLowerCase() === "svg",
        measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"),
        amount = 100,
        toPixels = unit === "px",
        toPercent = unit === "%",
        px,
        parent2,
        cache,
        isSVG;
      if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {
        return curValue;
      }
      curUnit !== "px" && !toPixels && (curValue = _convertToUnit2(target, property2, value2, "px"));
      isSVG = target.getCTM && _isSVG(target);
      if ((toPercent || curUnit === "%") && (_transformProps[property2] || ~property2.indexOf("adius"))) {
        px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
        return _round(toPercent ? curValue / px * amount : curValue / 100 * px);
      }
      style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
      parent2 = ~property2.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;
      if (isSVG) {
        parent2 = (target.ownerSVGElement || {}).parentNode;
      }
      if (!parent2 || parent2 === _doc || !parent2.appendChild) {
        parent2 = _doc.body;
      }
      cache = parent2._gsap;
      if (cache && toPercent && cache.width && horizontal && cache.time === _ticker.time) {
        return _round(curValue / cache.width * amount);
      } else {
        (toPercent || curUnit === "%") && (style.position = _getComputedProperty(target, "position"));
        parent2 === target && (style.position = "static");
        parent2.appendChild(_tempDiv);
        px = _tempDiv[measureProperty];
        parent2.removeChild(_tempDiv);
        style.position = "absolute";
        if (horizontal && toPercent) {
          cache = _getCache(parent2);
          cache.time = _ticker.time;
          cache.width = parent2[measureProperty];
        }
      }
      return _round(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
    },
    _get = function _get2(target, property2, unit, uncache) {
      var value2;
      _pluginInitted || _initCore();
      if (property2 in _propertyAliases && property2 !== "transform") {
        property2 = _propertyAliases[property2];
        if (~property2.indexOf(",")) {
          property2 = property2.split(",")[0];
        }
      }
      if (_transformProps[property2] && property2 !== "transform") {
        value2 = _parseTransform(target, uncache);
        value2 = property2 !== "transformOrigin" ? value2[property2] : value2.svg ? value2.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value2.zOrigin + "px";
      } else {
        value2 = target.style[property2];
        if (!value2 || value2 === "auto" || uncache || ~(value2 + "").indexOf("calc(")) {
          value2 = _specialProps[property2] && _specialProps[property2](target, property2, unit) || _getComputedProperty(target, property2) || _getProperty(target, property2) || (property2 === "opacity" ? 1 : 0);
        }
      }
      return unit && !~(value2 + "").trim().indexOf(" ") ? _convertToUnit(target, property2, value2, unit) + unit : value2;
    },
    _tweenComplexCSSString = function _tweenComplexCSSString2(target, prop, start, end) {
      if (!start || start === "none") {
        var p2 = _checkPropPrefix(prop, target, 1),
          s2 = p2 && _getComputedProperty(target, p2, 1);
        if (s2 && s2 !== start) {
          prop = p2;
          start = s2;
        } else if (prop === "borderColor") {
          start = _getComputedProperty(target, "borderTopColor");
        }
      }
      var pt2 = new PropTween(this._pt, target.style, prop, 0, 1, _renderComplexString),
        index2 = 0,
        matchIndex = 0,
        a2,
        result,
        startValues,
        startNum,
        color,
        startValue,
        endValue,
        endNum,
        chunk,
        endUnit,
        startUnit,
        relative,
        endValues;
      pt2.b = start;
      pt2.e = end;
      start += "";
      end += "";
      if (end === "auto") {
        target.style[prop] = end;
        end = _getComputedProperty(target, prop) || end;
        target.style[prop] = start;
      }
      a2 = [start, end];
      _colorStringFilter(a2);
      start = a2[0];
      end = a2[1];
      startValues = start.match(_numWithUnitExp) || [];
      endValues = end.match(_numWithUnitExp) || [];
      if (endValues.length) {
        while (result = _numWithUnitExp.exec(end)) {
          endValue = result[0];
          chunk = end.substring(index2, result.index);
          if (color) {
            color = (color + 1) % 5;
          } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
            color = 1;
          }
          if (endValue !== (startValue = startValues[matchIndex++] || "")) {
            startNum = parseFloat(startValue) || 0;
            startUnit = startValue.substr((startNum + "").length);
            relative = endValue.charAt(1) === "=" ? +(endValue.charAt(0) + "1") : 0;
            if (relative) {
              endValue = endValue.substr(2);
            }
            endNum = parseFloat(endValue);
            endUnit = endValue.substr((endNum + "").length);
            index2 = _numWithUnitExp.lastIndex - endUnit.length;
            if (!endUnit) {
              endUnit = endUnit || _config.units[prop] || startUnit;
              if (index2 === end.length) {
                end += endUnit;
                pt2.e += endUnit;
              }
            }
            if (startUnit !== endUnit) {
              startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
            }
            pt2._pt = {
              _next: pt2._pt,
              p: chunk || matchIndex === 1 ? chunk : ",",
              //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
              s: startNum,
              c: relative ? relative * endNum : endNum - startNum,
              m: color && color < 4 || prop === "zIndex" ? Math.round : 0
            };
          }
        }
        pt2.c = index2 < end.length ? end.substring(index2, end.length) : "";
      } else {
        pt2.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
      }
      _relExp.test(end) && (pt2.e = 0);
      this._pt = pt2;
      return pt2;
    },
    _keywordToPercent = {
      top: "0%",
      bottom: "100%",
      left: "0%",
      right: "100%",
      center: "50%"
    },
    _convertKeywordsToPercentages = function _convertKeywordsToPercentages2(value2) {
      var split2 = value2.split(" "),
        x2 = split2[0],
        y2 = split2[1] || "50%";
      if (x2 === "top" || x2 === "bottom" || y2 === "left" || y2 === "right") {
        value2 = x2;
        x2 = y2;
        y2 = value2;
      }
      split2[0] = _keywordToPercent[x2] || x2;
      split2[1] = _keywordToPercent[y2] || y2;
      return split2.join(" ");
    },
    _renderClearProps = function _renderClearProps2(ratio, data2) {
      if (data2.tween && data2.tween._time === data2.tween._dur) {
        var target = data2.t,
          style = target.style,
          props = data2.u,
          cache = target._gsap,
          prop,
          clearTransforms,
          i2;
        if (props === "all" || props === true) {
          style.cssText = "";
          clearTransforms = 1;
        } else {
          props = props.split(",");
          i2 = props.length;
          while (--i2 > -1) {
            prop = props[i2];
            if (_transformProps[prop]) {
              clearTransforms = 1;
              prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
            }
            _removeProperty(target, prop);
          }
        }
        if (clearTransforms) {
          _removeProperty(target, _transformProp);
          if (cache) {
            cache.svg && target.removeAttribute("transform");
            _parseTransform(target, 1);
            cache.uncache = 1;
          }
        }
      }
    },
    _specialProps = {
      clearProps: function clearProps(plugin2, target, property2, endValue, tween) {
        if (tween.data !== "isFromStart") {
          var pt2 = plugin2._pt = new PropTween(plugin2._pt, target, property2, 0, 0, _renderClearProps);
          pt2.u = endValue;
          pt2.pr = -10;
          pt2.tween = tween;
          plugin2._props.push(property2);
          return 1;
        }
      }
      /* className feature (about 0.4kb gzipped).
      , className(plugin, target, property, endValue, tween) {
      	let _renderClassName = (ratio, data) => {
      			data.css.render(ratio, data.css);
      			if (!ratio || ratio === 1) {
      				let inline = data.rmv,
      					target = data.t,
      					p;
      				target.setAttribute("class", ratio ? data.e : data.b);
      				for (p in inline) {
      					_removeProperty(target, p);
      				}
      			}
      		},
      		_getAllStyles = (target) => {
      			let styles = {},
      				computed = getComputedStyle(target),
      				p;
      			for (p in computed) {
      				if (isNaN(p) && p !== "cssText" && p !== "length") {
      					styles[p] = computed[p];
      				}
      			}
      			_setDefaults(styles, _parseTransform(target, 1));
      			return styles;
      		},
      		startClassList = target.getAttribute("class"),
      		style = target.style,
      		cssText = style.cssText,
      		cache = target._gsap,
      		classPT = cache.classPT,
      		inlineToRemoveAtEnd = {},
      		data = {t:target, plugin:plugin, rmv:inlineToRemoveAtEnd, b:startClassList, e:(endValue.charAt(1) !== "=") ? endValue : startClassList.replace(new RegExp("(?:\\s|^)" + endValue.substr(2) + "(?![\\w-])"), "") + ((endValue.charAt(0) === "+") ? " " + endValue.substr(2) : "")},
      		changingVars = {},
      		startVars = _getAllStyles(target),
      		transformRelated = /(transform|perspective)/i,
      		endVars, p;
      	if (classPT) {
      		classPT.r(1, classPT.d);
      		_removeLinkedListItem(classPT.d.plugin, classPT, "_pt");
      	}
      	target.setAttribute("class", data.e);
      	endVars = _getAllStyles(target, true);
      	target.setAttribute("class", startClassList);
      	for (p in endVars) {
      		if (endVars[p] !== startVars[p] && !transformRelated.test(p)) {
      			changingVars[p] = endVars[p];
      			if (!style[p] && style[p] !== "0") {
      				inlineToRemoveAtEnd[p] = 1;
      			}
      		}
      	}
      	cache.classPT = plugin._pt = new PropTween(plugin._pt, target, "className", 0, 0, _renderClassName, data, 0, -11);
      	if (style.cssText !== cssText) { //only apply if things change. Otherwise, in cases like a background-image that's pulled dynamically, it could cause a refresh. See https://greensock.com/forums/topic/20368-possible-gsap-bug-switching-classnames-in-chrome/.
      		style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).
      	}
      	_parseTransform(target, true); //to clear the caching of transforms
      	data.css = new gsap.plugins.css();
      	data.css.init(target, changingVars, tween);
      	plugin._props.push(...data.css._props);
      	return 1;
      }
      */
    },
    _identity2DMatrix = [1, 0, 0, 1, 0, 0],
    _rotationalProperties = {},
    _isNullTransform = function _isNullTransform2(value2) {
      return value2 === "matrix(1, 0, 0, 1, 0, 0)" || value2 === "none" || !value2;
    },
    _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray2(target) {
      var matrixString = _getComputedProperty(target, _transformProp);
      return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_numExp).map(_round);
    },
    _getMatrix = function _getMatrix2(target, force2D) {
      var cache = target._gsap || _getCache(target),
        style = target.style,
        matrix = _getComputedTransformMatrixAsArray(target),
        parent2,
        nextSibling,
        temp,
        addedToDOM;
      if (cache.svg && target.getAttribute("transform")) {
        temp = target.transform.baseVal.consolidate().matrix;
        matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
        return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
      } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
        temp = style.display;
        style.display = "block";
        parent2 = target.parentNode;
        if (!parent2 || !target.offsetParent) {
          addedToDOM = 1;
          nextSibling = target.nextSibling;
          _docElement.appendChild(target);
        }
        matrix = _getComputedTransformMatrixAsArray(target);
        temp ? style.display = temp : _removeProperty(target, "display");
        if (addedToDOM) {
          nextSibling ? parent2.insertBefore(target, nextSibling) : parent2 ? parent2.appendChild(target) : _docElement.removeChild(target);
        }
      }
      return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
    },
    _applySVGOrigin = function _applySVGOrigin2(target, origin2, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
      var cache = target._gsap,
        matrix = matrixArray || _getMatrix(target, true),
        xOriginOld = cache.xOrigin || 0,
        yOriginOld = cache.yOrigin || 0,
        xOffsetOld = cache.xOffset || 0,
        yOffsetOld = cache.yOffset || 0,
        a2 = matrix[0],
        b2 = matrix[1],
        c2 = matrix[2],
        d2 = matrix[3],
        tx = matrix[4],
        ty = matrix[5],
        originSplit = origin2.split(" "),
        xOrigin = parseFloat(originSplit[0]) || 0,
        yOrigin = parseFloat(originSplit[1]) || 0,
        bounds,
        determinant,
        x2,
        y2;
      if (!originIsAbsolute) {
        bounds = _getBBox(target);
        xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
        yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin);
      } else if (matrix !== _identity2DMatrix && (determinant = a2 * d2 - b2 * c2)) {
        x2 = xOrigin * (d2 / determinant) + yOrigin * (-c2 / determinant) + (c2 * ty - d2 * tx) / determinant;
        y2 = xOrigin * (-b2 / determinant) + yOrigin * (a2 / determinant) - (a2 * ty - b2 * tx) / determinant;
        xOrigin = x2;
        yOrigin = y2;
      }
      if (smooth || smooth !== false && cache.smooth) {
        tx = xOrigin - xOriginOld;
        ty = yOrigin - yOriginOld;
        cache.xOffset = xOffsetOld + (tx * a2 + ty * c2) - tx;
        cache.yOffset = yOffsetOld + (tx * b2 + ty * d2) - ty;
      } else {
        cache.xOffset = cache.yOffset = 0;
      }
      cache.xOrigin = xOrigin;
      cache.yOrigin = yOrigin;
      cache.smooth = !!smooth;
      cache.origin = origin2;
      cache.originIsAbsolute = !!originIsAbsolute;
      target.style[_transformOriginProp] = "0px 0px";
      if (pluginToAddPropTweensTo) {
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);
        _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
      }
      target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
    },
    _parseTransform = function _parseTransform2(target, uncache) {
      var cache = target._gsap || new GSCache(target);
      if ("x" in cache && !uncache && !cache.uncache) {
        return cache;
      }
      var style = target.style,
        invertedScaleX = cache.scaleX < 0,
        px = "px",
        deg = "deg",
        origin2 = _getComputedProperty(target, _transformOriginProp) || "0",
        x2,
        y2,
        z2,
        scaleX,
        scaleY,
        rotation,
        rotationX,
        rotationY,
        skewX,
        skewY,
        perspective,
        xOrigin,
        yOrigin,
        matrix,
        angle,
        cos,
        sin,
        a2,
        b2,
        c2,
        d2,
        a12,
        a22,
        t1,
        t2,
        t3,
        a13,
        a23,
        a33,
        a42,
        a43,
        a32;
      x2 = y2 = z2 = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
      scaleX = scaleY = 1;
      cache.svg = !!(target.getCTM && _isSVG(target));
      matrix = _getMatrix(target, cache.svg);
      if (cache.svg) {
        t1 = (!cache.uncache || origin2 === "0px 0px") && !uncache && target.getAttribute("data-svg-origin");
        _applySVGOrigin(target, t1 || origin2, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
      }
      xOrigin = cache.xOrigin || 0;
      yOrigin = cache.yOrigin || 0;
      if (matrix !== _identity2DMatrix) {
        a2 = matrix[0];
        b2 = matrix[1];
        c2 = matrix[2];
        d2 = matrix[3];
        x2 = a12 = matrix[4];
        y2 = a22 = matrix[5];
        if (matrix.length === 6) {
          scaleX = Math.sqrt(a2 * a2 + b2 * b2);
          scaleY = Math.sqrt(d2 * d2 + c2 * c2);
          rotation = a2 || b2 ? _atan2(b2, a2) * _RAD2DEG : 0;
          skewX = c2 || d2 ? _atan2(c2, d2) * _RAD2DEG + rotation : 0;
          skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));
          if (cache.svg) {
            x2 -= xOrigin - (xOrigin * a2 + yOrigin * c2);
            y2 -= yOrigin - (xOrigin * b2 + yOrigin * d2);
          }
        } else {
          a32 = matrix[6];
          a42 = matrix[7];
          a13 = matrix[8];
          a23 = matrix[9];
          a33 = matrix[10];
          a43 = matrix[11];
          x2 = matrix[12];
          y2 = matrix[13];
          z2 = matrix[14];
          angle = _atan2(a32, a33);
          rotationX = angle * _RAD2DEG;
          if (angle) {
            cos = Math.cos(-angle);
            sin = Math.sin(-angle);
            t1 = a12 * cos + a13 * sin;
            t2 = a22 * cos + a23 * sin;
            t3 = a32 * cos + a33 * sin;
            a13 = a12 * -sin + a13 * cos;
            a23 = a22 * -sin + a23 * cos;
            a33 = a32 * -sin + a33 * cos;
            a43 = a42 * -sin + a43 * cos;
            a12 = t1;
            a22 = t2;
            a32 = t3;
          }
          angle = _atan2(-c2, a33);
          rotationY = angle * _RAD2DEG;
          if (angle) {
            cos = Math.cos(-angle);
            sin = Math.sin(-angle);
            t1 = a2 * cos - a13 * sin;
            t2 = b2 * cos - a23 * sin;
            t3 = c2 * cos - a33 * sin;
            a43 = d2 * sin + a43 * cos;
            a2 = t1;
            b2 = t2;
            c2 = t3;
          }
          angle = _atan2(b2, a2);
          rotation = angle * _RAD2DEG;
          if (angle) {
            cos = Math.cos(angle);
            sin = Math.sin(angle);
            t1 = a2 * cos + b2 * sin;
            t2 = a12 * cos + a22 * sin;
            b2 = b2 * cos - a2 * sin;
            a22 = a22 * cos - a12 * sin;
            a2 = t1;
            a12 = t2;
          }
          if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
            rotationX = rotation = 0;
            rotationY = 180 - rotationY;
          }
          scaleX = _round(Math.sqrt(a2 * a2 + b2 * b2 + c2 * c2));
          scaleY = _round(Math.sqrt(a22 * a22 + a32 * a32));
          angle = _atan2(a12, a22);
          skewX = Math.abs(angle) > 2e-4 ? angle * _RAD2DEG : 0;
          perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
        }
        if (cache.svg) {
          t1 = target.getAttribute("transform");
          cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
          t1 && target.setAttribute("transform", t1);
        }
      }
      if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
        if (invertedScaleX) {
          scaleX *= -1;
          skewX += rotation <= 0 ? 180 : -180;
          rotation += rotation <= 0 ? 180 : -180;
        } else {
          scaleY *= -1;
          skewX += skewX <= 0 ? 180 : -180;
        }
      }
      cache.x = x2 - ((cache.xPercent = x2 && (cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x2) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
      cache.y = y2 - ((cache.yPercent = y2 && (cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y2) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
      cache.z = z2 + px;
      cache.scaleX = _round(scaleX);
      cache.scaleY = _round(scaleY);
      cache.rotation = _round(rotation) + deg;
      cache.rotationX = _round(rotationX) + deg;
      cache.rotationY = _round(rotationY) + deg;
      cache.skewX = skewX + deg;
      cache.skewY = skewY + deg;
      cache.transformPerspective = perspective + px;
      if (cache.zOrigin = parseFloat(origin2.split(" ")[2]) || 0) {
        style[_transformOriginProp] = _firstTwoOnly(origin2);
      }
      cache.xOffset = cache.yOffset = 0;
      cache.force3D = _config.force3D;
      cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
      cache.uncache = 0;
      return cache;
    },
    _firstTwoOnly = function _firstTwoOnly2(value2) {
      return (value2 = value2.split(" "))[0] + " " + value2[1];
    },
    _addPxTranslate = function _addPxTranslate2(target, start, value2) {
      var unit = getUnit(start);
      return _round(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value2 + "px", unit))) + unit;
    },
    _renderNon3DTransforms = function _renderNon3DTransforms2(ratio, cache) {
      cache.z = "0px";
      cache.rotationY = cache.rotationX = "0deg";
      cache.force3D = 0;
      _renderCSSTransforms(ratio, cache);
    },
    _zeroDeg = "0deg",
    _zeroPx = "0px",
    _endParenthesis = ") ",
    _renderCSSTransforms = function _renderCSSTransforms2(ratio, cache) {
      var _ref = cache || this,
        xPercent = _ref.xPercent,
        yPercent = _ref.yPercent,
        x2 = _ref.x,
        y2 = _ref.y,
        z2 = _ref.z,
        rotation = _ref.rotation,
        rotationY = _ref.rotationY,
        rotationX = _ref.rotationX,
        skewX = _ref.skewX,
        skewY = _ref.skewY,
        scaleX = _ref.scaleX,
        scaleY = _ref.scaleY,
        transformPerspective = _ref.transformPerspective,
        force3D = _ref.force3D,
        target = _ref.target,
        zOrigin = _ref.zOrigin,
        transforms = "",
        use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true;
      if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
        var angle = parseFloat(rotationY) * _DEG2RAD,
          a13 = Math.sin(angle),
          a33 = Math.cos(angle),
          cos;
        angle = parseFloat(rotationX) * _DEG2RAD;
        cos = Math.cos(angle);
        x2 = _addPxTranslate(target, x2, a13 * cos * -zOrigin);
        y2 = _addPxTranslate(target, y2, -Math.sin(angle) * -zOrigin);
        z2 = _addPxTranslate(target, z2, a33 * cos * -zOrigin + zOrigin);
      }
      if (transformPerspective !== _zeroPx) {
        transforms += "perspective(" + transformPerspective + _endParenthesis;
      }
      if (xPercent || yPercent) {
        transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
      }
      if (use3D || x2 !== _zeroPx || y2 !== _zeroPx || z2 !== _zeroPx) {
        transforms += z2 !== _zeroPx || use3D ? "translate3d(" + x2 + ", " + y2 + ", " + z2 + ") " : "translate(" + x2 + ", " + y2 + _endParenthesis;
      }
      if (rotation !== _zeroDeg) {
        transforms += "rotate(" + rotation + _endParenthesis;
      }
      if (rotationY !== _zeroDeg) {
        transforms += "rotateY(" + rotationY + _endParenthesis;
      }
      if (rotationX !== _zeroDeg) {
        transforms += "rotateX(" + rotationX + _endParenthesis;
      }
      if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
        transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
      }
      if (scaleX !== 1 || scaleY !== 1) {
        transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
      }
      target.style[_transformProp] = transforms || "translate(0, 0)";
    },
    _renderSVGTransforms = function _renderSVGTransforms2(ratio, cache) {
      var _ref2 = cache || this,
        xPercent = _ref2.xPercent,
        yPercent = _ref2.yPercent,
        x2 = _ref2.x,
        y2 = _ref2.y,
        rotation = _ref2.rotation,
        skewX = _ref2.skewX,
        skewY = _ref2.skewY,
        scaleX = _ref2.scaleX,
        scaleY = _ref2.scaleY,
        target = _ref2.target,
        xOrigin = _ref2.xOrigin,
        yOrigin = _ref2.yOrigin,
        xOffset = _ref2.xOffset,
        yOffset = _ref2.yOffset,
        forceCSS = _ref2.forceCSS,
        tx = parseFloat(x2),
        ty = parseFloat(y2),
        a11,
        a21,
        a12,
        a22,
        temp;
      rotation = parseFloat(rotation);
      skewX = parseFloat(skewX);
      skewY = parseFloat(skewY);
      if (skewY) {
        skewY = parseFloat(skewY);
        skewX += skewY;
        rotation += skewY;
      }
      if (rotation || skewX) {
        rotation *= _DEG2RAD;
        skewX *= _DEG2RAD;
        a11 = Math.cos(rotation) * scaleX;
        a21 = Math.sin(rotation) * scaleX;
        a12 = Math.sin(rotation - skewX) * -scaleY;
        a22 = Math.cos(rotation - skewX) * scaleY;
        if (skewX) {
          skewY *= _DEG2RAD;
          temp = Math.tan(skewX - skewY);
          temp = Math.sqrt(1 + temp * temp);
          a12 *= temp;
          a22 *= temp;
          if (skewY) {
            temp = Math.tan(skewY);
            temp = Math.sqrt(1 + temp * temp);
            a11 *= temp;
            a21 *= temp;
          }
        }
        a11 = _round(a11);
        a21 = _round(a21);
        a12 = _round(a12);
        a22 = _round(a22);
      } else {
        a11 = scaleX;
        a22 = scaleY;
        a21 = a12 = 0;
      }
      if (tx && !~(x2 + "").indexOf("px") || ty && !~(y2 + "").indexOf("px")) {
        tx = _convertToUnit(target, "x", x2, "px");
        ty = _convertToUnit(target, "y", y2, "px");
      }
      if (xOrigin || yOrigin || xOffset || yOffset) {
        tx = _round(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
        ty = _round(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
      }
      if (xPercent || yPercent) {
        temp = target.getBBox();
        tx = _round(tx + xPercent / 100 * temp.width);
        ty = _round(ty + yPercent / 100 * temp.height);
      }
      temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
      target.setAttribute("transform", temp);
      forceCSS && (target.style[_transformProp] = temp);
    },
    _addRotationalPropTween = function _addRotationalPropTween2(plugin2, target, property2, startNum, endValue, relative) {
      var cap = 360,
        isString2 = _isString(endValue),
        endNum = parseFloat(endValue) * (isString2 && ~endValue.indexOf("rad") ? _RAD2DEG : 1),
        change = relative ? endNum * relative : endNum - startNum,
        finalValue = startNum + change + "deg",
        direction,
        pt2;
      if (isString2) {
        direction = endValue.split("_")[1];
        if (direction === "short") {
          change %= cap;
          if (change !== change % (cap / 2)) {
            change += change < 0 ? cap : -cap;
          }
        }
        if (direction === "cw" && change < 0) {
          change = (change + cap * _bigNum) % cap - ~~(change / cap) * cap;
        } else if (direction === "ccw" && change > 0) {
          change = (change - cap * _bigNum) % cap - ~~(change / cap) * cap;
        }
      }
      plugin2._pt = pt2 = new PropTween(plugin2._pt, target, property2, startNum, change, _renderPropWithEnd);
      pt2.e = finalValue;
      pt2.u = "deg";
      plugin2._props.push(property2);
      return pt2;
    },
    _assign = function _assign2(target, source) {
      for (var p2 in source) {
        target[p2] = source[p2];
      }
      return target;
    },
    _addRawTransformPTs = function _addRawTransformPTs2(plugin2, transforms, target) {
      var startCache = _assign({}, target._gsap),
        exclude = "perspective,force3D,transformOrigin,svgOrigin",
        style = target.style,
        endCache,
        p2,
        startValue,
        endValue,
        startNum,
        endNum,
        startUnit,
        endUnit;
      if (startCache.svg) {
        startValue = target.getAttribute("transform");
        target.setAttribute("transform", "");
        style[_transformProp] = transforms;
        endCache = _parseTransform(target, 1);
        _removeProperty(target, _transformProp);
        target.setAttribute("transform", startValue);
      } else {
        startValue = getComputedStyle(target)[_transformProp];
        style[_transformProp] = transforms;
        endCache = _parseTransform(target, 1);
        style[_transformProp] = startValue;
      }
      for (p2 in _transformProps) {
        startValue = startCache[p2];
        endValue = endCache[p2];
        if (startValue !== endValue && exclude.indexOf(p2) < 0) {
          startUnit = getUnit(startValue);
          endUnit = getUnit(endValue);
          startNum = startUnit !== endUnit ? _convertToUnit(target, p2, startValue, endUnit) : parseFloat(startValue);
          endNum = parseFloat(endValue);
          plugin2._pt = new PropTween(plugin2._pt, endCache, p2, startNum, endNum - startNum, _renderCSSProp);
          plugin2._pt.u = endUnit || 0;
          plugin2._props.push(p2);
        }
      }
      _assign(endCache, startCache);
    };
  _forEachName("padding,margin,Width,Radius", function (name, index2) {
    var t2 = "Top",
      r2 = "Right",
      b2 = "Bottom",
      l2 = "Left",
      props = (index2 < 3 ? [t2, r2, b2, l2] : [t2 + l2, t2 + r2, b2 + r2, b2 + l2]).map(function (side) {
        return index2 < 2 ? name + side : "border" + side + name;
      });
    _specialProps[index2 > 1 ? "border" + name : name] = function (plugin2, target, property2, endValue, tween) {
      var a2, vars;
      if (arguments.length < 4) {
        a2 = props.map(function (prop) {
          return _get(plugin2, prop, property2);
        });
        vars = a2.join(" ");
        return vars.split(a2[0]).length === 5 ? a2[0] : vars;
      }
      a2 = (endValue + "").split(" ");
      vars = {};
      props.forEach(function (prop, i2) {
        return vars[prop] = a2[i2] = a2[i2] || a2[(i2 - 1) / 2 | 0];
      });
      plugin2.init(target, vars, tween);
    };
  });
  var CSSPlugin = {
    name: "css",
    register: _initCore,
    targetTest: function targetTest(target) {
      return target.style && target.nodeType;
    },
    init: function init(target, vars, tween, index2, targets) {
      var props = this._props,
        style = target.style,
        startAt = tween.vars.startAt,
        startValue,
        endValue,
        endNum,
        startNum,
        type,
        specialProp,
        p2,
        startUnit,
        endUnit,
        relative,
        isTransformRelated,
        transformPropTween,
        cache,
        smooth,
        hasPriority;
      _pluginInitted || _initCore();
      for (p2 in vars) {
        if (p2 === "autoRound") {
          continue;
        }
        endValue = vars[p2];
        if (_plugins[p2] && _checkPlugin(p2, vars, tween, index2, target, targets)) {
          continue;
        }
        type = typeof endValue;
        specialProp = _specialProps[p2];
        if (type === "function") {
          endValue = endValue.call(tween, index2, target, targets);
          type = typeof endValue;
        }
        if (type === "string" && ~endValue.indexOf("random(")) {
          endValue = _replaceRandom(endValue);
        }
        if (specialProp) {
          specialProp(this, target, p2, endValue, tween) && (hasPriority = 1);
        } else if (p2.substr(0, 2) === "--") {
          startValue = (getComputedStyle(target).getPropertyValue(p2) + "").trim();
          endValue += "";
          _colorExp.lastIndex = 0;
          if (!_colorExp.test(startValue)) {
            startUnit = getUnit(startValue);
            endUnit = getUnit(endValue);
          }
          endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p2, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
          this.add(style, "setProperty", startValue, endValue, index2, targets, 0, 0, p2);
          props.push(p2);
        } else if (type !== "undefined") {
          if (startAt && p2 in startAt) {
            startValue = typeof startAt[p2] === "function" ? startAt[p2].call(tween, index2, target, targets) : startAt[p2];
            p2 in _config.units && !getUnit(startValue) && (startValue += _config.units[p2]);
            (startValue + "").charAt(1) === "=" && (startValue = _get(target, p2));
          } else {
            startValue = _get(target, p2);
          }
          startNum = parseFloat(startValue);
          relative = type === "string" && endValue.charAt(1) === "=" ? +(endValue.charAt(0) + "1") : 0;
          relative && (endValue = endValue.substr(2));
          endNum = parseFloat(endValue);
          if (p2 in _propertyAliases) {
            if (p2 === "autoAlpha") {
              if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
                startNum = 0;
              }
              _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
            }
            if (p2 !== "scale" && p2 !== "transform") {
              p2 = _propertyAliases[p2];
              ~p2.indexOf(",") && (p2 = p2.split(",")[0]);
            }
          }
          isTransformRelated = p2 in _transformProps;
          if (isTransformRelated) {
            if (!transformPropTween) {
              cache = target._gsap;
              cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform);
              smooth = vars.smoothOrigin !== false && cache.smooth;
              transformPropTween = this._pt = new PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1);
              transformPropTween.dep = 1;
            }
            if (p2 === "scale") {
              this._pt = new PropTween(this._pt, cache, "scaleY", cache.scaleY, (relative ? relative * endNum : endNum - cache.scaleY) || 0);
              props.push("scaleY", p2);
              p2 += "X";
            } else if (p2 === "transformOrigin") {
              endValue = _convertKeywordsToPercentages(endValue);
              if (cache.svg) {
                _applySVGOrigin(target, endValue, 0, smooth, 0, this);
              } else {
                endUnit = parseFloat(endValue.split(" ")[2]) || 0;
                endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);
                _addNonTweeningPT(this, style, p2, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
              }
              continue;
            } else if (p2 === "svgOrigin") {
              _applySVGOrigin(target, endValue, 1, smooth, 0, this);
              continue;
            } else if (p2 in _rotationalProperties) {
              _addRotationalPropTween(this, cache, p2, startNum, endValue, relative);
              continue;
            } else if (p2 === "smoothOrigin") {
              _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);
              continue;
            } else if (p2 === "force3D") {
              cache[p2] = endValue;
              continue;
            } else if (p2 === "transform") {
              _addRawTransformPTs(this, endValue, target);
              continue;
            }
          } else if (!(p2 in style)) {
            p2 = _checkPropPrefix(p2) || p2;
          }
          if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p2 in style) {
            startUnit = (startValue + "").substr((startNum + "").length);
            endNum || (endNum = 0);
            endUnit = getUnit(endValue) || (p2 in _config.units ? _config.units[p2] : startUnit);
            startUnit !== endUnit && (startNum = _convertToUnit(target, p2, startValue, endUnit));
            this._pt = new PropTween(this._pt, isTransformRelated ? cache : style, p2, startNum, relative ? relative * endNum : endNum - startNum, !isTransformRelated && (endUnit === "px" || p2 === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
            this._pt.u = endUnit || 0;
            if (startUnit !== endUnit) {
              this._pt.b = startValue;
              this._pt.r = _renderCSSPropWithBeginning;
            }
          } else if (!(p2 in style)) {
            if (p2 in target) {
              this.add(target, p2, startValue || target[p2], endValue, index2, targets);
            } else {
              _missingPlugin(p2, endValue);
              continue;
            }
          } else {
            _tweenComplexCSSString.call(this, target, p2, startValue, endValue);
          }
          props.push(p2);
        }
      }
      hasPriority && _sortPropTweensByPriority(this);
    },
    get: _get,
    aliases: _propertyAliases,
    getSetter: function getSetter(target, property2, plugin2) {
      var p2 = _propertyAliases[property2];
      p2 && p2.indexOf(",") < 0 && (property2 = p2);
      return property2 in _transformProps && property2 !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin2 && _recentSetterPlugin === plugin2 ? property2 === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin2 || {}) && (property2 === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !_isUndefined(target.style[property2]) ? _setterCSSStyle : ~property2.indexOf("-") ? _setterCSSProp : _getSetter(target, property2);
    },
    core: {
      _removeProperty,
      _getMatrix
    }
  };
  gsap.utils.checkPrefix = _checkPropPrefix;
  (function (positionAndScale, rotation, others, aliases) {
    var all = _forEachName(positionAndScale + "," + rotation + "," + others, function (name) {
      _transformProps[name] = 1;
    });
    _forEachName(rotation, function (name) {
      _config.units[name] = "deg";
      _rotationalProperties[name] = 1;
    });
    _propertyAliases[all[13]] = positionAndScale + "," + rotation;
    _forEachName(aliases, function (name) {
      var split2 = name.split(":");
      _propertyAliases[split2[1]] = all[split2[0]];
    });
  })("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");
  _forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function (name) {
    _config.units[name] = "px";
  });
  gsap.registerPlugin(CSSPlugin);
  var gsapWithCSS = gsap.registerPlugin(CSSPlugin) || gsap;
  gsapWithCSS.core.Tween;
  var render$5 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "one-result-modal",
      style: _vm.styleObject
    }, [_c("div", {
      staticClass: "st-header"
    }, [_c("div", {
      staticClass: "message"
    }, [_vm._v("恭喜你中奖啦")]), _c("CloseIcon", {
      staticClass: "close",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content",
      class: {
        win: _vm.res.length === 1
      }
    }, [_c("div", {
      staticClass: "result-bg"
    }), _c("div", {
      staticClass: "gift-wrap"
    }, [_c("div", {
      staticClass: "avatar"
    }, [_c("PhImage", {
      staticClass: "logo",
      attrs: {
        "src": [_vm.giftImg, 126, 126]
      }
    })], 1), _c("div", {
      staticClass: "name"
    }, [_vm._v(_vm._s(_vm.giftName))]), _c("div", {
      staticClass: "desc"
    }, [_vm._v(_vm._s(_vm.descStr))])])]), _c("div", {
      staticClass: "tip"
    }, [_c("div", {
      staticClass: "tip-text"
    }, [[_vm._v(" 中奖信息可以在《我的中奖记录》中查看 ")]], 2), _c("div", {
      staticClass: "redirect",
      on: {
        "click": _vm.openRecord
      }
    }, [[_vm._v(" 前往查看 ")]], 2)])]);
  };
  var staticRenderFns$5 = [];
  const OneResultModal_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$5 = {
    name: "OneResultModal",
    components: {
      CloseIcon: IconClose$1,
      PhImage
    },
    props: ["res", "config", "ativityId"],
    data() {
      return {
        pageConfig: window.__match_page_config || {}
      };
    },
    computed: {
      styleObject() {
        return {
          "backgroundColor": this.config.popBgColor || "#3C3F69",
          "color": this.config.popFontColor || "#fff"
        };
      },
      descStr() {
        var _a2, _b2;
        return ((_b2 = (_a2 = this.res[0]) == null ? void 0 : _a2.award_info) == null ? void 0 : _b2.description) || "";
      },
      giftName() {
        var _a2, _b2, _c;
        return ((_b2 = (_a2 = this.res[0]) == null ? void 0 : _a2.award_info) == null ? void 0 : _b2.name) || ((_c = this.res[0]) == null ? void 0 : _c.gift_name);
      },
      giftImg() {
        var _a2, _b2, _c;
        return ((_b2 = (_a2 = this.res[0]) == null ? void 0 : _a2.award_info) == null ? void 0 : _b2.icon) || ((_c = this.res[0]) == null ? void 0 : _c.img_url);
      },
      awardType() {
        var _a2, _b2;
        return ((_b2 = (_a2 = this.res[0]) == null ? void 0 : _a2.award_info) == null ? void 0 : _b2.type) || "";
      }
    },
    methods: {
      openRecord() {
        this.close();
        openLink(`${recordLink}?activity_id=${this.ativityId}`, true);
      },
      close() {
        this.$emit("close");
      }
    }
  };
  const __cssModules$5 = {};
  var __component__$5 = /* @__PURE__ */normalizeComponent(__vue2_script$5, render$5, staticRenderFns$5, false, __vue2_injectStyles$5, "f3dbe92e", null, null);
  function __vue2_injectStyles$5(context) {
    for (let o2 in __cssModules$5) {
      this[o2] = __cssModules$5[o2];
    }
  }
  const OneResultModal = /* @__PURE__ */function () {
    return __component__$5.exports;
  }();
  var render$4 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "ten-result-modal",
      style: _vm.styleObject
    }, [_c("div", {
      staticClass: "st-header"
    }, [_c("div", {
      staticClass: "message"
    }, [_vm._v("恭喜你中奖啦")]), _c("CloseIcon", {
      staticClass: "close",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content",
      class: {
        win: _vm.res.length === 2,
        content: true,
        "fix-content": _vm.res.length > 2
      },
      style: _vm.contentStyle
    }, _vm._l(this.res, function (item, index2) {
      return _c("div", {
        key: index2 + 1,
        staticClass: "gift-wrap"
      }, [_c("div", {
        staticClass: "avatar",
        style: {
          width: _vm.imageSize + "px",
          height: _vm.imageSize + "px"
        }
      }, [_c("PhImage", {
        staticClass: "logo",
        attrs: {
          "src": [_vm.giftImg(item), _vm.imageSize, _vm.imageSize]
        }
      })], 1), _c("div", {
        staticClass: "name"
      }, [_vm._v(_vm._s(_vm.giftName(item)))])]);
    }), 0), _c("div", {
      staticClass: "tip"
    }, [_c("div", {
      staticClass: "tip-text"
    }, [_vm._v(" 中奖信息请在《我的中奖记录》中查看 ")]), _c("div", {
      staticClass: "redirect",
      on: {
        "click": _vm.openRecord
      }
    }, [_vm._v("前往查看")])])]);
  };
  var staticRenderFns$4 = [];
  const TenResultModal_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$4 = {
    name: "TenResultModal",
    components: {
      CloseIcon: IconClose$1,
      PhImage
    },
    props: ["res", "config", "ativityId"],
    data() {
      return {
        pageConfig: window.__match_page_config || {}
      };
    },
    methods: {
      openRecord() {
        this.close();
        openLink(`${recordLink}?activity_id=${this.ativityId}`, true);
      },
      giftName(item) {
        var _a2;
        return ((_a2 = item.award_info) == null ? void 0 : _a2.name) || item.gift_name;
      },
      giftImg(item) {
        var _a2;
        return ((_a2 = item == null ? void 0 : item.award_info) == null ? void 0 : _a2.icon) || (item == null ? void 0 : item.img_url);
      },
      close() {
        this.$emit("close");
      }
    },
    computed: {
      styleObject() {
        return {
          "backgroundColor": this.config.popBgColor || "#3C3F69",
          "color": this.config.popFontColor || "#fff"
        };
      },
      contentStyle() {
        if (this.res.length > 3) {
          return {
            paddingTop: "27px"
          };
        }
        if (this.res.length === 3) {
          return {
            paddingTop: "48px"
          };
        }
        if (this.res.length === 2) {
          return {
            paddingTop: "37px",
            paddingLeft: "30px",
            paddingRight: "30px"
          };
        }
      },
      imageSize() {
        if (this.res.length === 2) {
          return 102;
        } else {
          return 80;
        }
      }
      // styleObject(){
      //   return {
      //     'backgroundColor': this.config.bgColor || '#000220'
      //   }
      // }
    }
  };
  const __cssModules$4 = {};
  var __component__$4 = /* @__PURE__ */normalizeComponent(__vue2_script$4, render$4, staticRenderFns$4, false, __vue2_injectStyles$4, "a22b0df6", null, null);
  function __vue2_injectStyles$4(context) {
    for (let o2 in __cssModules$4) {
      this[o2] = __cssModules$4[o2];
    }
  }
  const TenResultModal = /* @__PURE__ */function () {
    return __component__$4.exports;
  }();
  var render$3 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "no-result-modal",
      style: _vm.styleObject
    }, [_c("div", {
      staticClass: "st-header"
    }, [_c("div", {
      staticClass: "message"
    }, [_vm._v(_vm._s(_vm.textObject))]), _c("CloseIcon", {
      staticClass: "close",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "gift-wrap"
    }, [_c("div", {
      staticClass: "avatar"
    }, [_c("PhImage", {
      staticClass: "logo",
      attrs: {
        "src": [_vm.thanksPic, 100, 100]
      }
    })], 1), _c("div", {
      staticClass: "desc"
    }, [_vm._v("谢谢参与")])])])]);
  };
  var staticRenderFns$3 = [];
  const NoResultModal_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$3 = {
    name: "NoResultModal",
    components: {
      CloseIcon: IconClose$1,
      PhImage
    },
    props: ["res", "config", "typeLen"],
    data() {
      return {
        pageConfig: window.__match_page_config || {}
      };
    },
    computed: {
      textObject() {
        if (this.typeLen === 10) {
          return "很遗憾，十连抽没有中奖";
        } else {
          return "很遗憾，没有中奖";
        }
      },
      styleObject() {
        return {
          "backgroundColor": this.config.popBgColor || "#3C3F69",
          "color": this.config.popFontColor || "#fff"
        };
      },
      thanksPic() {
        return this.config.thanks_pic || "https://i0.hdslb.com/bfs/activity-plat/static/20230215/6319485c5f03766492e9daedb18d2697/n8K6KitGWT.png";
      }
    },
    methods: {
      close() {
        this.$emit("close");
      }
    }
  };
  const __cssModules$3 = {};
  var __component__$3 = /* @__PURE__ */normalizeComponent(__vue2_script$3, render$3, staticRenderFns$3, false, __vue2_injectStyles$3, "7ea6acb5", null, null);
  function __vue2_injectStyles$3(context) {
    for (let o2 in __cssModules$3) {
      this[o2] = __cssModules$3[o2];
    }
  }
  const NoResultModal = /* @__PURE__ */function () {
    return __component__$3.exports;
  }();
  var svga_min = {
    exports: {}
  };
  (function (module, exports) {
    !function (e2, t2) {
      module.exports = t2();
    }(window, function () {
      return function (e2) {
        function t2(i2) {
          if (r2[i2]) return r2[i2].exports;
          var n2 = r2[i2] = {
            i: i2,
            l: false,
            exports: {}
          };
          return e2[i2].call(n2.exports, n2, n2.exports, t2), n2.l = true, n2.exports;
        }
        var r2 = {};
        return t2.m = e2, t2.c = r2, t2.d = function (e3, r3, i2) {
          t2.o(e3, r3) || Object.defineProperty(e3, r3, {
            enumerable: true,
            get: i2
          });
        }, t2.r = function (e3) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, {
            value: "Module"
          }), Object.defineProperty(e3, "__esModule", {
            value: true
          });
        }, t2.t = function (e3, r3) {
          if (1 & r3 && (e3 = t2(e3)), 8 & r3) return e3;
          if (4 & r3 && "object" == typeof e3 && e3 && e3.__esModule) return e3;
          var i2 = /* @__PURE__ */Object.create(null);
          if (t2.r(i2), Object.defineProperty(i2, "default", {
            enumerable: true,
            value: e3
          }), 2 & r3 && "string" != typeof e3) for (var n2 in e3) t2.d(i2, n2, function (t3) {
            return e3[t3];
          }.bind(null, n2));
          return i2;
        }, t2.n = function (e3) {
          var r3 = e3 && e3.__esModule ? function () {
            return e3.default;
          } : function () {
            return e3;
          };
          return t2.d(r3, "a", r3), r3;
        }, t2.o = function (e3, t3) {
          return Object.prototype.hasOwnProperty.call(e3, t3);
        }, t2.p = "", t2(t2.s = 64);
      }([function (e2, t2, r2) {
        var i2,
          n2,
          o2 = e2.exports = r2(1),
          s2 = r2(20);
        o2.codegen = r2(47), o2.fetch = r2(48), o2.path = r2(49), o2.fs = o2.inquire("fs"), o2.toArray = function (e3) {
          if (e3) {
            for (var t3 = Object.keys(e3), r3 = new Array(t3.length), i3 = 0; i3 < t3.length;) r3[i3] = e3[t3[i3++]];
            return r3;
          }
          return [];
        }, o2.toObject = function (e3) {
          for (var t3 = {}, r3 = 0; r3 < e3.length;) {
            var i3 = e3[r3++],
              n3 = e3[r3++];
            void 0 !== n3 && (t3[i3] = n3);
          }
          return t3;
        };
        var a2 = /\\/g,
          f2 = /"/g;
        o2.isReserved = function (e3) {
          return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(e3);
        }, o2.safeProp = function (e3) {
          return !/^[$\w_]+$/.test(e3) || o2.isReserved(e3) ? '["' + e3.replace(a2, "\\\\").replace(f2, '\\"') + '"]' : "." + e3;
        }, o2.ucFirst = function (e3) {
          return e3.charAt(0).toUpperCase() + e3.substring(1);
        };
        var l2 = /_([a-z])/g;
        o2.camelCase = function (e3) {
          return e3.substring(0, 1) + e3.substring(1).replace(l2, function (e4, t3) {
            return t3.toUpperCase();
          });
        }, o2.compareFieldsById = function (e3, t3) {
          return e3.id - t3.id;
        }, o2.decorateType = function (e3, t3) {
          if (e3.$type) return t3 && e3.$type.name !== t3 && (o2.decorateRoot.remove(e3.$type), e3.$type.name = t3, o2.decorateRoot.add(e3.$type)), e3.$type;
          i2 || (i2 = r2(22));
          var n3 = new i2(t3 || e3.name);
          return o2.decorateRoot.add(n3), n3.ctor = e3, Object.defineProperty(e3, "$type", {
            value: n3,
            enumerable: false
          }), Object.defineProperty(e3.prototype, "$type", {
            value: n3,
            enumerable: false
          }), n3;
        };
        var u2 = 0;
        o2.decorateEnum = function (e3) {
          if (e3.$type) return e3.$type;
          n2 || (n2 = r2(2));
          var t3 = new n2("Enum" + u2++, e3);
          return o2.decorateRoot.add(t3), Object.defineProperty(e3, "$type", {
            value: t3,
            enumerable: false
          }), t3;
        }, o2.setProperty = function (e3, t3, r3) {
          if ("object" != typeof e3) throw TypeError("dst must be an object");
          if (!t3) throw TypeError("path must be specified");
          return function e4(t4, r4, i3) {
            var n3 = r4.shift();
            if (r4.length > 0) t4[n3] = e4(t4[n3] || {}, r4, i3);else {
              var o3 = t4[n3];
              o3 && (i3 = [].concat(o3).concat(i3)), t4[n3] = i3;
            }
            return t4;
          }(e3, t3 = t3.split("."), r3);
        }, Object.defineProperty(o2, "decorateRoot", {
          get: function () {
            return s2.decorated || (s2.decorated = new (r2(30))());
          }
        });
      }, function (e2, t2, r2) {
        (function (e3) {
          function i2(e4, t3, r3) {
            for (var i3 = Object.keys(t3), n3 = 0; n3 < i3.length; ++n3) void 0 !== e4[i3[n3]] && r3 || (e4[i3[n3]] = t3[i3[n3]]);
            return e4;
          }
          function n2(e4) {
            function t3(e5, r3) {
              if (!(this instanceof t3)) return new t3(e5, r3);
              Object.defineProperty(this, "message", {
                get: function () {
                  return e5;
                }
              }), Error.captureStackTrace ? Error.captureStackTrace(this, t3) : Object.defineProperty(this, "stack", {
                value: new Error().stack || ""
              }), r3 && i2(this, r3);
            }
            return (t3.prototype = Object.create(Error.prototype)).constructor = t3, Object.defineProperty(t3.prototype, "name", {
              get: function () {
                return e4;
              }
            }), t3.prototype.toString = function () {
              return this.name + ": " + this.message;
            }, t3;
          }
          var o2 = t2;
          o2.asPromise = r2(17), o2.base64 = r2(38), o2.EventEmitter = r2(39), o2.float = r2(40), o2.inquire = r2(18), o2.utf8 = r2(41), o2.pool = r2(42), o2.LongBits = r2(43), o2.isNode = Boolean(void 0 !== e3 && e3 && e3.process && e3.process.versions && e3.process.versions.node), o2.global = o2.isNode && e3 || "undefined" != typeof window && window || "undefined" != typeof self && self || this, o2.emptyArray = Object.freeze ? Object.freeze([]) : [], o2.emptyObject = Object.freeze ? Object.freeze({}) : {}, o2.isInteger = Number.isInteger || function (e4) {
            return "number" == typeof e4 && isFinite(e4) && Math.floor(e4) === e4;
          }, o2.isString = function (e4) {
            return "string" == typeof e4 || e4 instanceof String;
          }, o2.isObject = function (e4) {
            return e4 && "object" == typeof e4;
          }, o2.isset = o2.isSet = function (e4, t3) {
            var r3 = e4[t3];
            return !(null == r3 || !e4.hasOwnProperty(t3)) && ("object" != typeof r3 || (Array.isArray(r3) ? r3.length : Object.keys(r3).length) > 0);
          }, o2.Buffer = function () {
            try {
              var e4 = o2.inquire("buffer").Buffer;
              return e4.prototype.utf8Write ? e4 : null;
            } catch (e5) {
              return null;
            }
          }(), o2._Buffer_from = null, o2._Buffer_allocUnsafe = null, o2.newBuffer = function (e4) {
            return "number" == typeof e4 ? o2.Buffer ? o2._Buffer_allocUnsafe(e4) : new o2.Array(e4) : o2.Buffer ? o2._Buffer_from(e4) : "undefined" == typeof Uint8Array ? e4 : new Uint8Array(e4);
          }, o2.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array, o2.Long = o2.global.dcodeIO && o2.global.dcodeIO.Long || o2.global.Long || o2.inquire("long"), o2.key2Re = /^true|false|0|1$/, o2.key32Re = /^-?(?:0|[1-9][0-9]*)$/, o2.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/, o2.longToHash = function (e4) {
            return e4 ? o2.LongBits.from(e4).toHash() : o2.LongBits.zeroHash;
          }, o2.longFromHash = function (e4, t3) {
            var r3 = o2.LongBits.fromHash(e4);
            return o2.Long ? o2.Long.fromBits(r3.lo, r3.hi, t3) : r3.toNumber(Boolean(t3));
          }, o2.merge = i2, o2.lcFirst = function (e4) {
            return e4.charAt(0).toLowerCase() + e4.substring(1);
          }, o2.newError = n2, o2.ProtocolError = n2("ProtocolError"), o2.oneOfGetter = function (e4) {
            for (var t3 = {}, r3 = 0; r3 < e4.length; ++r3) t3[e4[r3]] = 1;
            return function () {
              for (var e5 = Object.keys(this), r4 = e5.length - 1; r4 > -1; --r4) if (1 === t3[e5[r4]] && void 0 !== this[e5[r4]] && null !== this[e5[r4]]) return e5[r4];
            };
          }, o2.oneOfSetter = function (e4) {
            return function (t3) {
              for (var r3 = 0; r3 < e4.length; ++r3) e4[r3] !== t3 && delete this[e4[r3]];
            };
          }, o2.toJSONOptions = {
            longs: String,
            enums: String,
            bytes: String,
            json: true
          }, o2._configure = function () {
            var e4 = o2.Buffer;
            e4 ? (o2._Buffer_from = e4.from !== Uint8Array.from && e4.from || function (t3, r3) {
              return new e4(t3, r3);
            }, o2._Buffer_allocUnsafe = e4.allocUnsafe || function (t3) {
              return new e4(t3);
            }) : o2._Buffer_from = o2._Buffer_allocUnsafe = null;
          };
        }).call(this, r2(37));
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3, i3, o3) {
          if (n2.call(this, e3, r3), t3 && "object" != typeof t3) throw TypeError("values must be an object");
          if (this.valuesById = {}, this.values = Object.create(this.valuesById), this.comment = i3, this.comments = o3 || {}, this.reserved = void 0, t3) for (var s3 = Object.keys(t3), a2 = 0; a2 < s3.length; ++a2) "number" == typeof t3[s3[a2]] && (this.valuesById[this.values[s3[a2]] = t3[s3[a2]]] = s3[a2]);
        }
        e2.exports = i2;
        var n2 = r2(3);
        ((i2.prototype = Object.create(n2.prototype)).constructor = i2).className = "Enum";
        var o2 = r2(6),
          s2 = r2(0);
        i2.fromJSON = function (e3, t3) {
          var r3 = new i2(e3, t3.values, t3.options, t3.comment, t3.comments);
          return r3.reserved = t3.reserved, r3;
        }, i2.prototype.toJSON = function (e3) {
          var t3 = !!e3 && Boolean(e3.keepComments);
          return s2.toObject(["options", this.options, "values", this.values, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "comment", t3 ? this.comment : void 0, "comments", t3 ? this.comments : void 0]);
        }, i2.prototype.add = function (e3, t3, r3) {
          if (!s2.isString(e3)) throw TypeError("name must be a string");
          if (!s2.isInteger(t3)) throw TypeError("id must be an integer");
          if (void 0 !== this.values[e3]) throw Error("duplicate name '" + e3 + "' in " + this);
          if (this.isReservedId(t3)) throw Error("id " + t3 + " is reserved in " + this);
          if (this.isReservedName(e3)) throw Error("name '" + e3 + "' is reserved in " + this);
          if (void 0 !== this.valuesById[t3]) {
            if (!this.options || !this.options.allow_alias) throw Error("duplicate id " + t3 + " in " + this);
            this.values[e3] = t3;
          } else this.valuesById[this.values[e3] = t3] = e3;
          return this.comments[e3] = r3 || null, this;
        }, i2.prototype.remove = function (e3) {
          if (!s2.isString(e3)) throw TypeError("name must be a string");
          var t3 = this.values[e3];
          if (null == t3) throw Error("name '" + e3 + "' does not exist in " + this);
          return delete this.valuesById[t3], delete this.values[e3], delete this.comments[e3], this;
        }, i2.prototype.isReservedId = function (e3) {
          return o2.isReservedId(this.reserved, e3);
        }, i2.prototype.isReservedName = function (e3) {
          return o2.isReservedName(this.reserved, e3);
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          if (!o2.isString(e3)) throw TypeError("name must be a string");
          if (t3 && !o2.isObject(t3)) throw TypeError("options must be an object");
          this.options = t3, this.parsedOptions = null, this.name = e3, this.parent = null, this.resolved = false, this.comment = null, this.filename = null;
        }
        e2.exports = i2, i2.className = "ReflectionObject";
        var n2,
          o2 = r2(0);
        Object.defineProperties(i2.prototype, {
          root: {
            get: function () {
              for (var e3 = this; null !== e3.parent;) e3 = e3.parent;
              return e3;
            }
          },
          fullName: {
            get: function () {
              for (var e3 = [this.name], t3 = this.parent; t3;) e3.unshift(t3.name), t3 = t3.parent;
              return e3.join(".");
            }
          }
        }), i2.prototype.toJSON = function () {
          throw Error();
        }, i2.prototype.onAdd = function (e3) {
          this.parent && this.parent !== e3 && this.parent.remove(this), this.parent = e3, this.resolved = false;
          var t3 = e3.root;
          t3 instanceof n2 && t3._handleAdd(this);
        }, i2.prototype.onRemove = function (e3) {
          var t3 = e3.root;
          t3 instanceof n2 && t3._handleRemove(this), this.parent = null, this.resolved = false;
        }, i2.prototype.resolve = function () {
          return this.resolved ? this : (this.root instanceof n2 && (this.resolved = true), this);
        }, i2.prototype.getOption = function (e3) {
          if (this.options) return this.options[e3];
        }, i2.prototype.setOption = function (e3, t3, r3) {
          return r3 && this.options && void 0 !== this.options[e3] || ((this.options || (this.options = {}))[e3] = t3), this;
        }, i2.prototype.setParsedOption = function (e3, t3, r3) {
          this.parsedOptions || (this.parsedOptions = []);
          var i3 = this.parsedOptions;
          if (r3) {
            var n3 = i3.find(function (t4) {
              return Object.prototype.hasOwnProperty.call(t4, e3);
            });
            if (n3) {
              var s2 = n3[e3];
              o2.setProperty(s2, r3, t3);
            } else (n3 = {})[e3] = o2.setProperty({}, r3, t3), i3.push(n3);
          } else {
            var a2 = {};
            a2[e3] = t3, i3.push(a2);
          }
          return this;
        }, i2.prototype.setOptions = function (e3, t3) {
          if (e3) for (var r3 = Object.keys(e3), i3 = 0; i3 < r3.length; ++i3) this.setOption(r3[i3], e3[r3[i3]], t3);
          return this;
        }, i2.prototype.toString = function () {
          var e3 = this.constructor.className,
            t3 = this.fullName;
          return t3.length ? e3 + " " + t3 : e3;
        }, i2._configure = function (e3) {
          n2 = e3;
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3, i3, o3, s3, u2) {
          if (f2.isObject(i3) ? (u2 = o3, s3 = i3, i3 = o3 = void 0) : f2.isObject(o3) && (u2 = s3, s3 = o3, o3 = void 0), n2.call(this, e3, s3), !f2.isInteger(t3) || t3 < 0) throw TypeError("id must be a non-negative integer");
          if (!f2.isString(r3)) throw TypeError("type must be a string");
          if (void 0 !== i3 && !l2.test(i3 = i3.toString().toLowerCase())) throw TypeError("rule must be a string rule");
          if (void 0 !== o3 && !f2.isString(o3)) throw TypeError("extend must be a string");
          this.rule = i3 && "optional" !== i3 ? i3 : void 0, this.type = r3, this.id = t3, this.extend = o3 || void 0, this.required = "required" === i3, this.optional = !this.required, this.repeated = "repeated" === i3, this.map = false, this.message = null, this.partOf = null, this.typeDefault = null, this.defaultValue = null, this.long = !!f2.Long && void 0 !== a2.long[r3], this.bytes = "bytes" === r3, this.resolvedType = null, this.extensionField = null, this.declaringField = null, this._packed = null, this.comment = u2;
        }
        e2.exports = i2;
        var n2 = r2(3);
        ((i2.prototype = Object.create(n2.prototype)).constructor = i2).className = "Field";
        var o2,
          s2 = r2(2),
          a2 = r2(7),
          f2 = r2(0),
          l2 = /^required|optional|repeated$/;
        i2.fromJSON = function (e3, t3) {
          return new i2(e3, t3.id, t3.type, t3.rule, t3.extend, t3.options, t3.comment);
        }, Object.defineProperty(i2.prototype, "packed", {
          get: function () {
            return null === this._packed && (this._packed = false !== this.getOption("packed")), this._packed;
          }
        }), i2.prototype.setOption = function (e3, t3, r3) {
          return "packed" === e3 && (this._packed = null), n2.prototype.setOption.call(this, e3, t3, r3);
        }, i2.prototype.toJSON = function (e3) {
          var t3 = !!e3 && Boolean(e3.keepComments);
          return f2.toObject(["rule", "optional" !== this.rule && this.rule || void 0, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", t3 ? this.comment : void 0]);
        }, i2.prototype.resolve = function () {
          if (this.resolved) return this;
          if (void 0 === (this.typeDefault = a2.defaults[this.type]) && (this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type), this.resolvedType instanceof o2 ? this.typeDefault = null : this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]), this.options && null != this.options.default && (this.typeDefault = this.options.default, this.resolvedType instanceof s2 && "string" == typeof this.typeDefault && (this.typeDefault = this.resolvedType.values[this.typeDefault])), this.options && (true !== this.options.packed && (void 0 === this.options.packed || !this.resolvedType || this.resolvedType instanceof s2) || delete this.options.packed, Object.keys(this.options).length || (this.options = void 0)), this.long) this.typeDefault = f2.Long.fromNumber(this.typeDefault, "u" === this.type.charAt(0)), Object.freeze && Object.freeze(this.typeDefault);else if (this.bytes && "string" == typeof this.typeDefault) {
            var e3;
            f2.base64.test(this.typeDefault) ? f2.base64.decode(this.typeDefault, e3 = f2.newBuffer(f2.base64.length(this.typeDefault)), 0) : f2.utf8.write(this.typeDefault, e3 = f2.newBuffer(f2.utf8.length(this.typeDefault)), 0), this.typeDefault = e3;
          }
          return this.map ? this.defaultValue = f2.emptyObject : this.repeated ? this.defaultValue = f2.emptyArray : this.defaultValue = this.typeDefault, this.parent instanceof o2 && (this.parent.ctor.prototype[this.name] = this.defaultValue), n2.prototype.resolve.call(this);
        }, i2.d = function (e3, t3, r3, n3) {
          return "function" == typeof t3 ? t3 = f2.decorateType(t3).name : t3 && "object" == typeof t3 && (t3 = f2.decorateEnum(t3).name), function (o3, s3) {
            f2.decorateType(o3.constructor).add(new i2(s3, e3, t3, r3, {
              default: n3
            }));
          };
        }, i2._configure = function (e3) {
          o2 = e3;
        };
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.BezierPath = function e3(t3, r3, i2) {
          (function (e4, t4) {
            if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
          })(this, e3), this._d = t3, this._transform = r3, this._styles = i2;
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          if (e3 && e3.length) {
            for (var r3 = {}, i3 = 0; i3 < e3.length; ++i3) r3[e3[i3].name] = e3[i3].toJSON(t3);
            return r3;
          }
        }
        function n2(e3, t3) {
          s2.call(this, e3, t3), this.nested = void 0, this._nestedArray = null;
        }
        function o2(e3) {
          return e3._nestedArray = null, e3;
        }
        e2.exports = n2;
        var s2 = r2(3);
        ((n2.prototype = Object.create(s2.prototype)).constructor = n2).className = "Namespace";
        var a2,
          f2,
          l2,
          u2 = r2(4),
          h2 = r2(0);
        n2.fromJSON = function (e3, t3) {
          return new n2(e3, t3.options).addJSON(t3.nested);
        }, n2.arrayToJSON = i2, n2.isReservedId = function (e3, t3) {
          if (e3) {
            for (var r3 = 0; r3 < e3.length; ++r3) if ("string" != typeof e3[r3] && e3[r3][0] <= t3 && e3[r3][1] > t3) return true;
          }
          return false;
        }, n2.isReservedName = function (e3, t3) {
          if (e3) {
            for (var r3 = 0; r3 < e3.length; ++r3) if (e3[r3] === t3) return true;
          }
          return false;
        }, Object.defineProperty(n2.prototype, "nestedArray", {
          get: function () {
            return this._nestedArray || (this._nestedArray = h2.toArray(this.nested));
          }
        }), n2.prototype.toJSON = function (e3) {
          return h2.toObject(["options", this.options, "nested", i2(this.nestedArray, e3)]);
        }, n2.prototype.addJSON = function (e3) {
          if (e3) for (var t3, r3 = Object.keys(e3), i3 = 0; i3 < r3.length; ++i3) t3 = e3[r3[i3]], this.add((void 0 !== t3.fields ? a2.fromJSON : void 0 !== t3.values ? l2.fromJSON : void 0 !== t3.methods ? f2.fromJSON : void 0 !== t3.id ? u2.fromJSON : n2.fromJSON)(r3[i3], t3));
          return this;
        }, n2.prototype.get = function (e3) {
          return this.nested && this.nested[e3] || null;
        }, n2.prototype.getEnum = function (e3) {
          if (this.nested && this.nested[e3] instanceof l2) return this.nested[e3].values;
          throw Error("no such enum: " + e3);
        }, n2.prototype.add = function (e3) {
          if (!(e3 instanceof u2 && void 0 !== e3.extend || e3 instanceof a2 || e3 instanceof l2 || e3 instanceof f2 || e3 instanceof n2)) throw TypeError("object must be a valid nested object");
          if (this.nested) {
            var t3 = this.get(e3.name);
            if (t3) {
              if (!(t3 instanceof n2 && e3 instanceof n2) || t3 instanceof a2 || t3 instanceof f2) throw Error("duplicate name '" + e3.name + "' in " + this);
              for (var r3 = t3.nestedArray, i3 = 0; i3 < r3.length; ++i3) e3.add(r3[i3]);
              this.remove(t3), this.nested || (this.nested = {}), e3.setOptions(t3.options, true);
            }
          } else this.nested = {};
          return this.nested[e3.name] = e3, e3.onAdd(this), o2(this);
        }, n2.prototype.remove = function (e3) {
          if (!(e3 instanceof s2)) throw TypeError("object must be a ReflectionObject");
          if (e3.parent !== this) throw Error(e3 + " is not a member of " + this);
          return delete this.nested[e3.name], Object.keys(this.nested).length || (this.nested = void 0), e3.onRemove(this), o2(this);
        }, n2.prototype.define = function (e3, t3) {
          if (h2.isString(e3)) e3 = e3.split(".");else if (!Array.isArray(e3)) throw TypeError("illegal path");
          if (e3 && e3.length && "" === e3[0]) throw Error("path must be relative");
          for (var r3 = this; e3.length > 0;) {
            var i3 = e3.shift();
            if (r3.nested && r3.nested[i3]) {
              if (!((r3 = r3.nested[i3]) instanceof n2)) throw Error("path conflicts with non-namespace objects");
            } else r3.add(r3 = new n2(i3));
          }
          return t3 && r3.addJSON(t3), r3;
        }, n2.prototype.resolveAll = function () {
          for (var e3 = this.nestedArray, t3 = 0; t3 < e3.length;) e3[t3] instanceof n2 ? e3[t3++].resolveAll() : e3[t3++].resolve();
          return this.resolve();
        }, n2.prototype.lookup = function (e3, t3, r3) {
          if ("boolean" == typeof t3 ? (r3 = t3, t3 = void 0) : t3 && !Array.isArray(t3) && (t3 = [t3]), h2.isString(e3) && e3.length) {
            if ("." === e3) return this.root;
            e3 = e3.split(".");
          } else if (!e3.length) return this;
          if ("" === e3[0]) return this.root.lookup(e3.slice(1), t3);
          var i3 = this.get(e3[0]);
          if (i3) {
            if (1 === e3.length) {
              if (!t3 || t3.indexOf(i3.constructor) > -1) return i3;
            } else if (i3 instanceof n2 && (i3 = i3.lookup(e3.slice(1), t3, true))) return i3;
          } else for (var o3 = 0; o3 < this.nestedArray.length; ++o3) if (this._nestedArray[o3] instanceof n2 && (i3 = this._nestedArray[o3].lookup(e3, t3, true))) return i3;
          return null === this.parent || r3 ? null : this.parent.lookup(e3, t3);
        }, n2.prototype.lookupType = function (e3) {
          var t3 = this.lookup(e3, [a2]);
          if (!t3) throw Error("no such type: " + e3);
          return t3;
        }, n2.prototype.lookupEnum = function (e3) {
          var t3 = this.lookup(e3, [l2]);
          if (!t3) throw Error("no such Enum '" + e3 + "' in " + this);
          return t3;
        }, n2.prototype.lookupTypeOrEnum = function (e3) {
          var t3 = this.lookup(e3, [a2, l2]);
          if (!t3) throw Error("no such Type or Enum '" + e3 + "' in " + this);
          return t3;
        }, n2.prototype.lookupService = function (e3) {
          var t3 = this.lookup(e3, [f2]);
          if (!t3) throw Error("no such Service '" + e3 + "' in " + this);
          return t3;
        }, n2._configure = function (e3, t3, r3) {
          a2 = e3, f2 = t3, l2 = r3;
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          var r3 = 0,
            i3 = {};
          for (t3 |= 0; r3 < e3.length;) i3[s2[r3 + t3]] = e3[r3++];
          return i3;
        }
        var n2 = t2,
          o2 = r2(0),
          s2 = ["double", "float", "int32", "uint32", "sint32", "fixed32", "sfixed32", "int64", "uint64", "sint64", "fixed64", "sfixed64", "bool", "string", "bytes"];
        n2.basic = i2([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2]), n2.defaults = i2([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, "", o2.emptyArray, null]), n2.long = i2([0, 0, 0, 1, 1], 7), n2.mapKey = i2([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2), n2.packed = i2([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0]);
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          return Object.prototype.hasOwnProperty.call(e3, t3);
        }
        var n2 = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
        t2.assign = function (e3) {
          for (var t3 = Array.prototype.slice.call(arguments, 1); t3.length;) {
            var r3 = t3.shift();
            if (r3) {
              if ("object" != typeof r3) throw new TypeError(r3 + "must be non-object");
              for (var n3 in r3) i2(r3, n3) && (e3[n3] = r3[n3]);
            }
          }
          return e3;
        }, t2.shrinkBuf = function (e3, t3) {
          return e3.length === t3 ? e3 : e3.subarray ? e3.subarray(0, t3) : (e3.length = t3, e3);
        };
        var o2 = {
            arraySet: function (e3, t3, r3, i3, n3) {
              if (t3.subarray && e3.subarray) e3.set(t3.subarray(r3, r3 + i3), n3);else for (var o3 = 0; o3 < i3; o3++) e3[n3 + o3] = t3[r3 + o3];
            },
            flattenChunks: function (e3) {
              var t3, r3, i3, n3, o3, s3;
              for (i3 = 0, t3 = 0, r3 = e3.length; t3 < r3; t3++) i3 += e3[t3].length;
              for (s3 = new Uint8Array(i3), n3 = 0, t3 = 0, r3 = e3.length; t3 < r3; t3++) o3 = e3[t3], s3.set(o3, n3), n3 += o3.length;
              return s3;
            }
          },
          s2 = {
            arraySet: function (e3, t3, r3, i3, n3) {
              for (var o3 = 0; o3 < i3; o3++) e3[n3 + o3] = t3[r3 + o3];
            },
            flattenChunks: function (e3) {
              return [].concat.apply([], e3);
            }
          };
        t2.setTyped = function (e3) {
          e3 ? (t2.Buf8 = Uint8Array, t2.Buf16 = Uint16Array, t2.Buf32 = Int32Array, t2.assign(t2, o2)) : (t2.Buf8 = Array, t2.Buf16 = Array, t2.Buf32 = Array, t2.assign(t2, s2));
        }, t2.setTyped(n2);
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3) {
          this.fn = e3, this.len = t3, this.next = void 0, this.val = r3;
        }
        function n2() {}
        function o2(e3) {
          this.head = e3.head, this.tail = e3.tail, this.len = e3.len, this.next = e3.states;
        }
        function s2() {
          this.len = 0, this.head = new i2(n2, 0, 0), this.tail = this.head, this.states = null;
        }
        function a2(e3, t3, r3) {
          t3[r3] = 255 & e3;
        }
        function f2(e3, t3) {
          this.len = e3, this.next = void 0, this.val = t3;
        }
        function l2(e3, t3, r3) {
          for (; e3.hi;) t3[r3++] = 127 & e3.lo | 128, e3.lo = (e3.lo >>> 7 | e3.hi << 25) >>> 0, e3.hi >>>= 7;
          for (; e3.lo > 127;) t3[r3++] = 127 & e3.lo | 128, e3.lo = e3.lo >>> 7;
          t3[r3++] = e3.lo;
        }
        function u2(e3, t3, r3) {
          t3[r3] = 255 & e3, t3[r3 + 1] = e3 >>> 8 & 255, t3[r3 + 2] = e3 >>> 16 & 255, t3[r3 + 3] = e3 >>> 24;
        }
        e2.exports = s2;
        var h2,
          c2 = r2(1),
          d2 = c2.LongBits,
          p2 = c2.base64,
          y2 = c2.utf8,
          m2 = function () {
            return c2.Buffer ? function () {
              return (s2.create = function () {
                return new h2();
              })();
            } : function () {
              return new s2();
            };
          };
        s2.create = m2(), s2.alloc = function (e3) {
          return new c2.Array(e3);
        }, c2.Array !== Array && (s2.alloc = c2.pool(s2.alloc, c2.Array.prototype.subarray)), s2.prototype._push = function (e3, t3, r3) {
          return this.tail = this.tail.next = new i2(e3, t3, r3), this.len += t3, this;
        }, f2.prototype = Object.create(i2.prototype), f2.prototype.fn = function (e3, t3, r3) {
          for (; e3 > 127;) t3[r3++] = 127 & e3 | 128, e3 >>>= 7;
          t3[r3] = e3;
        }, s2.prototype.uint32 = function (e3) {
          return this.len += (this.tail = this.tail.next = new f2((e3 >>>= 0) < 128 ? 1 : e3 < 16384 ? 2 : e3 < 2097152 ? 3 : e3 < 268435456 ? 4 : 5, e3)).len, this;
        }, s2.prototype.int32 = function (e3) {
          return e3 < 0 ? this._push(l2, 10, d2.fromNumber(e3)) : this.uint32(e3);
        }, s2.prototype.sint32 = function (e3) {
          return this.uint32((e3 << 1 ^ e3 >> 31) >>> 0);
        }, s2.prototype.uint64 = function (e3) {
          var t3 = d2.from(e3);
          return this._push(l2, t3.length(), t3);
        }, s2.prototype.int64 = s2.prototype.uint64, s2.prototype.sint64 = function (e3) {
          var t3 = d2.from(e3).zzEncode();
          return this._push(l2, t3.length(), t3);
        }, s2.prototype.bool = function (e3) {
          return this._push(a2, 1, e3 ? 1 : 0);
        }, s2.prototype.fixed32 = function (e3) {
          return this._push(u2, 4, e3 >>> 0);
        }, s2.prototype.sfixed32 = s2.prototype.fixed32, s2.prototype.fixed64 = function (e3) {
          var t3 = d2.from(e3);
          return this._push(u2, 4, t3.lo)._push(u2, 4, t3.hi);
        }, s2.prototype.sfixed64 = s2.prototype.fixed64, s2.prototype.float = function (e3) {
          return this._push(c2.float.writeFloatLE, 4, e3);
        }, s2.prototype.double = function (e3) {
          return this._push(c2.float.writeDoubleLE, 8, e3);
        };
        var v2 = c2.Array.prototype.set ? function (e3, t3, r3) {
          t3.set(e3, r3);
        } : function (e3, t3, r3) {
          for (var i3 = 0; i3 < e3.length; ++i3) t3[r3 + i3] = e3[i3];
        };
        s2.prototype.bytes = function (e3) {
          var t3 = e3.length >>> 0;
          if (!t3) return this._push(a2, 1, 0);
          if (c2.isString(e3)) {
            var r3 = s2.alloc(t3 = p2.length(e3));
            p2.decode(e3, r3, 0), e3 = r3;
          }
          return this.uint32(t3)._push(v2, t3, e3);
        }, s2.prototype.string = function (e3) {
          var t3 = y2.length(e3);
          return t3 ? this.uint32(t3)._push(y2.write, t3, e3) : this._push(a2, 1, 0);
        }, s2.prototype.fork = function () {
          return this.states = new o2(this), this.head = this.tail = new i2(n2, 0, 0), this.len = 0, this;
        }, s2.prototype.reset = function () {
          return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new i2(n2, 0, 0), this.len = 0), this;
        }, s2.prototype.ldelim = function () {
          var e3 = this.head,
            t3 = this.tail,
            r3 = this.len;
          return this.reset().uint32(r3), r3 && (this.tail.next = e3.next, this.tail = t3, this.len += r3), this;
        }, s2.prototype.finish = function () {
          for (var e3 = this.head.next, t3 = this.constructor.alloc(this.len), r3 = 0; e3;) e3.fn(e3.val, t3, r3), r3 += e3.len, e3 = e3.next;
          return t3;
        }, s2._configure = function (e3) {
          h2 = e3, s2.create = m2(), h2._configure();
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          return RangeError("index out of range: " + e3.pos + " + " + (t3 || 1) + " > " + e3.len);
        }
        function n2(e3) {
          this.buf = e3, this.pos = 0, this.len = e3.length;
        }
        function o2() {
          var e3 = new u2(0, 0),
            t3 = 0;
          if (!(this.len - this.pos > 4)) {
            for (; t3 < 3; ++t3) {
              if (this.pos >= this.len) throw i2(this);
              if (e3.lo = (e3.lo | (127 & this.buf[this.pos]) << 7 * t3) >>> 0, this.buf[this.pos++] < 128) return e3;
            }
            return e3.lo = (e3.lo | (127 & this.buf[this.pos++]) << 7 * t3) >>> 0, e3;
          }
          for (; t3 < 4; ++t3) if (e3.lo = (e3.lo | (127 & this.buf[this.pos]) << 7 * t3) >>> 0, this.buf[this.pos++] < 128) return e3;
          if (e3.lo = (e3.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e3.hi = (e3.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return e3;
          if (t3 = 0, this.len - this.pos > 4) {
            for (; t3 < 5; ++t3) if (e3.hi = (e3.hi | (127 & this.buf[this.pos]) << 7 * t3 + 3) >>> 0, this.buf[this.pos++] < 128) return e3;
          } else for (; t3 < 5; ++t3) {
            if (this.pos >= this.len) throw i2(this);
            if (e3.hi = (e3.hi | (127 & this.buf[this.pos]) << 7 * t3 + 3) >>> 0, this.buf[this.pos++] < 128) return e3;
          }
          throw Error("invalid varint encoding");
        }
        function s2(e3, t3) {
          return (e3[t3 - 4] | e3[t3 - 3] << 8 | e3[t3 - 2] << 16 | e3[t3 - 1] << 24) >>> 0;
        }
        function a2() {
          if (this.pos + 8 > this.len) throw i2(this, 8);
          return new u2(s2(this.buf, this.pos += 4), s2(this.buf, this.pos += 4));
        }
        e2.exports = n2;
        var f2,
          l2 = r2(1),
          u2 = l2.LongBits,
          h2 = l2.utf8,
          c2 = "undefined" != typeof Uint8Array ? function (e3) {
            if (e3 instanceof Uint8Array || Array.isArray(e3)) return new n2(e3);
            throw Error("illegal buffer");
          } : function (e3) {
            if (Array.isArray(e3)) return new n2(e3);
            throw Error("illegal buffer");
          },
          d2 = function () {
            return l2.Buffer ? function (e3) {
              return (n2.create = function (e4) {
                return l2.Buffer.isBuffer(e4) ? new f2(e4) : c2(e4);
              })(e3);
            } : c2;
          };
        n2.create = d2(), n2.prototype._slice = l2.Array.prototype.subarray || l2.Array.prototype.slice, n2.prototype.uint32 = function () {
          var e3 = 4294967295;
          return function () {
            if (e3 = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return e3;
            if (e3 = (e3 | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return e3;
            if (e3 = (e3 | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return e3;
            if (e3 = (e3 | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return e3;
            if (e3 = (e3 | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return e3;
            if ((this.pos += 5) > this.len) throw this.pos = this.len, i2(this, 10);
            return e3;
          };
        }(), n2.prototype.int32 = function () {
          return 0 | this.uint32();
        }, n2.prototype.sint32 = function () {
          var e3 = this.uint32();
          return e3 >>> 1 ^ -(1 & e3) | 0;
        }, n2.prototype.bool = function () {
          return 0 !== this.uint32();
        }, n2.prototype.fixed32 = function () {
          if (this.pos + 4 > this.len) throw i2(this, 4);
          return s2(this.buf, this.pos += 4);
        }, n2.prototype.sfixed32 = function () {
          if (this.pos + 4 > this.len) throw i2(this, 4);
          return 0 | s2(this.buf, this.pos += 4);
        }, n2.prototype.float = function () {
          if (this.pos + 4 > this.len) throw i2(this, 4);
          var e3 = l2.float.readFloatLE(this.buf, this.pos);
          return this.pos += 4, e3;
        }, n2.prototype.double = function () {
          if (this.pos + 8 > this.len) throw i2(this, 4);
          var e3 = l2.float.readDoubleLE(this.buf, this.pos);
          return this.pos += 8, e3;
        }, n2.prototype.bytes = function () {
          var e3 = this.uint32(),
            t3 = this.pos,
            r3 = this.pos + e3;
          if (r3 > this.len) throw i2(this, e3);
          return this.pos += e3, Array.isArray(this.buf) ? this.buf.slice(t3, r3) : t3 === r3 ? new this.buf.constructor(0) : this._slice.call(this.buf, t3, r3);
        }, n2.prototype.string = function () {
          var e3 = this.bytes();
          return h2.read(e3, 0, e3.length);
        }, n2.prototype.skip = function (e3) {
          if ("number" == typeof e3) {
            if (this.pos + e3 > this.len) throw i2(this, e3);
            this.pos += e3;
          } else do {
            if (this.pos >= this.len) throw i2(this);
          } while (128 & this.buf[this.pos++]);
          return this;
        }, n2.prototype.skipType = function (e3) {
          switch (e3) {
            case 0:
              this.skip();
              break;
            case 1:
              this.skip(8);
              break;
            case 2:
              this.skip(this.uint32());
              break;
            case 3:
              for (; 4 != (e3 = 7 & this.uint32());) this.skipType(e3);
              break;
            case 5:
              this.skip(4);
              break;
            default:
              throw Error("invalid wire type " + e3 + " at offset " + this.pos);
          }
          return this;
        }, n2._configure = function (e3) {
          f2 = e3, n2.create = d2(), f2._configure();
          var t3 = l2.Long ? "toLong" : "toNumber";
          l2.merge(n2.prototype, {
            int64: function () {
              return o2.call(this)[t3](false);
            },
            uint64: function () {
              return o2.call(this)[t3](true);
            },
            sint64: function () {
              return o2.call(this).zzDecode()[t3](false);
            },
            fixed64: function () {
              return a2.call(this)[t3](true);
            },
            sfixed64: function () {
              return a2.call(this)[t3](false);
            }
          });
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3, i3) {
          if (Array.isArray(t3) || (r3 = t3, t3 = void 0), o2.call(this, e3, r3), void 0 !== t3 && !Array.isArray(t3)) throw TypeError("fieldNames must be an Array");
          this.oneof = t3 || [], this.fieldsArray = [], this.comment = i3;
        }
        function n2(e3) {
          if (e3.parent) for (var t3 = 0; t3 < e3.fieldsArray.length; ++t3) e3.fieldsArray[t3].parent || e3.parent.add(e3.fieldsArray[t3]);
        }
        e2.exports = i2;
        var o2 = r2(3);
        ((i2.prototype = Object.create(o2.prototype)).constructor = i2).className = "OneOf";
        var s2 = r2(4),
          a2 = r2(0);
        i2.fromJSON = function (e3, t3) {
          return new i2(e3, t3.oneof, t3.options, t3.comment);
        }, i2.prototype.toJSON = function (e3) {
          var t3 = !!e3 && Boolean(e3.keepComments);
          return a2.toObject(["options", this.options, "oneof", this.oneof, "comment", t3 ? this.comment : void 0]);
        }, i2.prototype.add = function (e3) {
          if (!(e3 instanceof s2)) throw TypeError("field must be a Field");
          return e3.parent && e3.parent !== this.parent && e3.parent.remove(e3), this.oneof.push(e3.name), this.fieldsArray.push(e3), e3.partOf = this, n2(this), this;
        }, i2.prototype.remove = function (e3) {
          if (!(e3 instanceof s2)) throw TypeError("field must be a Field");
          var t3 = this.fieldsArray.indexOf(e3);
          if (t3 < 0) throw Error(e3 + " is not a member of " + this);
          return this.fieldsArray.splice(t3, 1), (t3 = this.oneof.indexOf(e3.name)) > -1 && this.oneof.splice(t3, 1), e3.partOf = null, this;
        }, i2.prototype.onAdd = function (e3) {
          o2.prototype.onAdd.call(this, e3);
          for (var t3 = 0; t3 < this.oneof.length; ++t3) {
            var r3 = e3.get(this.oneof[t3]);
            r3 && !r3.partOf && (r3.partOf = this, this.fieldsArray.push(r3));
          }
          n2(this);
        }, i2.prototype.onRemove = function (e3) {
          for (var t3, r3 = 0; r3 < this.fieldsArray.length; ++r3) (t3 = this.fieldsArray[r3]).parent && t3.parent.remove(t3);
          o2.prototype.onRemove.call(this, e3);
        }, i2.d = function () {
          for (var e3 = new Array(arguments.length), t3 = 0; t3 < arguments.length;) e3[t3] = arguments[t3++];
          return function (t4, r3) {
            a2.decorateType(t4.constructor).add(new i2(r3, e3)), Object.defineProperty(t4, r3, {
              get: a2.oneOfGetter(e3),
              set: a2.oneOfSetter(e3)
            });
          };
        };
      }, function (e2, t2, r2) {
        function i2(e3) {
          if (e3) for (var t3 = Object.keys(e3), r3 = 0; r3 < t3.length; ++r3) this[t3[r3]] = e3[t3[r3]];
        }
        e2.exports = i2;
        var n2 = r2(1);
        i2.create = function (e3) {
          return this.$type.create(e3);
        }, i2.encode = function (e3, t3) {
          return this.$type.encode(e3, t3);
        }, i2.encodeDelimited = function (e3, t3) {
          return this.$type.encodeDelimited(e3, t3);
        }, i2.decode = function (e3) {
          return this.$type.decode(e3);
        }, i2.decodeDelimited = function (e3) {
          return this.$type.decodeDelimited(e3);
        }, i2.verify = function (e3) {
          return this.$type.verify(e3);
        }, i2.fromObject = function (e3) {
          return this.$type.fromObject(e3);
        }, i2.toObject = function (e3, t3) {
          return this.$type.toObject(e3, t3);
        }, i2.prototype.toJSON = function () {
          return this.$type.toObject(this, n2.toJSONOptions);
        };
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.Parser = void 0;
        var i2 = function () {
            function e3(e4, t3) {
              for (var r3 = 0; r3 < t3.length; r3++) {
                var i3 = t3[r3];
                i3.enumerable = i3.enumerable || false, i3.configurable = true, "value" in i3 && (i3.writable = true), Object.defineProperty(e4, i3.key, i3);
              }
            }
            return function (t3, r3, i3) {
              return r3 && e3(t3.prototype, r3), i3 && e3(t3, i3), t3;
            };
          }(),
          n2 = r2(31),
          o2 = function (e3) {
            return e3 && e3.__esModule ? e3 : {
              default: e3
            };
          }(r2(50));
        t2.Parser = function () {
          function e3() {
            !function (e4, t3) {
              if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
            }(this, e3);
          }
          return i2(e3, [{
            key: "load",
            value: function (e4, t3, r3) {
              this.loadViaWorker(e4, t3, r3);
            }
          }, {
            key: "loadViaWorker",
            value: function (e4, t3, r3) {
              (0, o2.default)(e4, function (e5) {
                var r4 = e5.movie;
                r4.version = e5.ver;
                var i3 = e5.images,
                  o3 = new n2.VideoEntity(r4, i3);
                t3(o3);
              }, r3);
            }
          }]), e3;
        }();
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.RectPath = void 0;
        var i2 = r2(5);
        t2.RectPath = function (e3) {
          function t3(e4, r3, i3, n2, o2, s2, a2) {
            !function (e5, t4) {
              if (!(e5 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            }(this, t3);
            var f2 = function (e5, t4) {
              if (!e5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return !t4 || "object" != typeof t4 && "function" != typeof t4 ? e5 : t4;
            }(this, (t3.__proto__ || Object.getPrototypeOf(t3)).call(this));
            return f2._x = e4, f2._y = r3, f2._width = i3, f2._height = n2, f2._cornerRadius = o2, f2._transform = s2, f2._styles = a2, f2;
          }
          return function (e4, t4) {
            if ("function" != typeof t4 && null !== t4) throw new TypeError("Super expression must either be null or a function, not " + typeof t4);
            e4.prototype = Object.create(t4 && t4.prototype, {
              constructor: {
                value: e4,
                enumerable: false,
                writable: true,
                configurable: true
              }
            }), t4 && (Object.setPrototypeOf ? Object.setPrototypeOf(e4, t4) : e4.__proto__ = t4);
          }(t3, e3), t3;
        }(i2.BezierPath);
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.EllipsePath = void 0;
        var i2 = r2(5);
        t2.EllipsePath = function (e3) {
          function t3(e4, r3, i3, n2, o2, s2) {
            !function (e5, t4) {
              if (!(e5 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            }(this, t3);
            var a2 = function (e5, t4) {
              if (!e5) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return !t4 || "object" != typeof t4 && "function" != typeof t4 ? e5 : t4;
            }(this, (t3.__proto__ || Object.getPrototypeOf(t3)).call(this));
            return a2._x = e4, a2._y = r3, a2._radiusX = i3, a2._radiusY = n2, a2._transform = o2, a2._styles = s2, a2;
          }
          return function (e4, t4) {
            if ("function" != typeof t4 && null !== t4) throw new TypeError("Super expression must either be null or a function, not " + typeof t4);
            e4.prototype = Object.create(t4 && t4.prototype, {
              constructor: {
                value: e4,
                enumerable: false,
                writable: true,
                configurable: true
              }
            }), t4 && (Object.setPrototypeOf ? Object.setPrototypeOf(e4, t4) : e4.__proto__ = t4);
          }(t3, e3), t3;
        }(i2.BezierPath);
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        });
        var i2 = r2(34),
          n2 = JSON.parse('{"nested":{"com":{"nested":{"opensource":{"nested":{"svga":{"options":{"objc_class_prefix":"SVGAProto","java_package":"com.opensource.svgaplayer.proto"},"nested":{"MovieParams":{"fields":{"viewBoxWidth":{"type":"float","id":1},"viewBoxHeight":{"type":"float","id":2},"fps":{"type":"int32","id":3},"frames":{"type":"int32","id":4}}},"SpriteEntity":{"fields":{"imageKey":{"type":"string","id":1},"frames":{"rule":"repeated","type":"FrameEntity","id":2},"matteKey":{"type":"string","id":3}}},"AudioEntity":{"fields":{"audioKey":{"type":"string","id":1},"startFrame":{"type":"int32","id":2},"endFrame":{"type":"int32","id":3},"startTime":{"type":"int32","id":4},"totalTime":{"type":"int32","id":5}}},"Layout":{"fields":{"x":{"type":"float","id":1},"y":{"type":"float","id":2},"width":{"type":"float","id":3},"height":{"type":"float","id":4}}},"Transform":{"fields":{"a":{"type":"float","id":1},"b":{"type":"float","id":2},"c":{"type":"float","id":3},"d":{"type":"float","id":4},"tx":{"type":"float","id":5},"ty":{"type":"float","id":6}}},"ShapeEntity":{"oneofs":{"args":{"oneof":["shape","rect","ellipse"]}},"fields":{"type":{"type":"ShapeType","id":1},"shape":{"type":"ShapeArgs","id":2},"rect":{"type":"RectArgs","id":3},"ellipse":{"type":"EllipseArgs","id":4},"styles":{"type":"ShapeStyle","id":10},"transform":{"type":"Transform","id":11}},"nested":{"ShapeType":{"values":{"SHAPE":0,"RECT":1,"ELLIPSE":2,"KEEP":3}},"ShapeArgs":{"fields":{"d":{"type":"string","id":1}}},"RectArgs":{"fields":{"x":{"type":"float","id":1},"y":{"type":"float","id":2},"width":{"type":"float","id":3},"height":{"type":"float","id":4},"cornerRadius":{"type":"float","id":5}}},"EllipseArgs":{"fields":{"x":{"type":"float","id":1},"y":{"type":"float","id":2},"radiusX":{"type":"float","id":3},"radiusY":{"type":"float","id":4}}},"ShapeStyle":{"fields":{"fill":{"type":"RGBAColor","id":1},"stroke":{"type":"RGBAColor","id":2},"strokeWidth":{"type":"float","id":3},"lineCap":{"type":"LineCap","id":4},"lineJoin":{"type":"LineJoin","id":5},"miterLimit":{"type":"float","id":6},"lineDashI":{"type":"float","id":7},"lineDashII":{"type":"float","id":8},"lineDashIII":{"type":"float","id":9}},"nested":{"RGBAColor":{"fields":{"r":{"type":"float","id":1},"g":{"type":"float","id":2},"b":{"type":"float","id":3},"a":{"type":"float","id":4}}},"LineCap":{"values":{"LineCap_BUTT":0,"LineCap_ROUND":1,"LineCap_SQUARE":2}},"LineJoin":{"values":{"LineJoin_MITER":0,"LineJoin_ROUND":1,"LineJoin_BEVEL":2}}}}}},"FrameEntity":{"fields":{"alpha":{"type":"float","id":1},"layout":{"type":"Layout","id":2},"transform":{"type":"Transform","id":3},"clipPath":{"type":"string","id":4},"shapes":{"rule":"repeated","type":"ShapeEntity","id":5}}},"MovieEntity":{"fields":{"version":{"type":"string","id":1},"params":{"type":"MovieParams","id":2},"images":{"keyType":"string","type":"bytes","id":3},"sprites":{"rule":"repeated","type":"SpriteEntity","id":4},"audios":{"rule":"repeated","type":"AudioEntity","id":5}}}}}}}}}}}'),
          o2 = t2.proto = i2.Root.fromJSON(n2);
        t2.ProtoMovieEntity = o2.lookupType("com.opensource.svga.MovieEntity");
      }, function (e2, t2, r2) {
        e2.exports = function (e3, t3) {
          for (var r3 = new Array(arguments.length - 1), i2 = 0, n2 = 2, o2 = true; n2 < arguments.length;) r3[i2++] = arguments[n2++];
          return new Promise(function (n3, s2) {
            r3[i2] = function (e4) {
              if (o2) if (o2 = false, e4) s2(e4);else {
                for (var t4 = new Array(arguments.length - 1), r4 = 0; r4 < t4.length;) t4[r4++] = arguments[r4];
                n3.apply(null, t4);
              }
            };
            try {
              e3.apply(t3 || null, r3);
            } catch (e4) {
              o2 && (o2 = false, s2(e4));
            }
          });
        };
      }, function (module, exports, __webpack_require__) {
        function inquire(moduleName) {
          try {
            var mod = eval("quire".replace(/^/, "re"))(moduleName);
            if (mod && (mod.length || Object.keys(mod).length)) return mod;
          } catch (e2) {}
          return null;
        }
        module.exports = inquire;
      }, function (e2, t2, r2) {
        t2.Service = r2(46);
      }, function (e2, t2, r2) {
        e2.exports = {};
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3, i3) {
          return t3.resolvedType.group ? e3("types[%i].encode(%s,w.uint32(%i)).uint32(%i)", r3, i3, (t3.id << 3 | 3) >>> 0, (t3.id << 3 | 4) >>> 0) : e3("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()", r3, i3, (t3.id << 3 | 2) >>> 0);
        }
        e2.exports = function (e3) {
          for (var t3, r3 = s2.codegen(["m", "w"], e3.name + "$encode")("if(!w)")("w=Writer.create()"), a2 = e3.fieldsArray.slice().sort(s2.compareFieldsById), f2 = 0; f2 < a2.length; ++f2) {
            var l2 = a2[f2].resolve(),
              u2 = e3._fieldsArray.indexOf(l2),
              h2 = l2.resolvedType instanceof n2 ? "int32" : l2.type,
              c2 = o2.basic[h2];
            t3 = "m" + s2.safeProp(l2.name), l2.map ? (r3("if(%s!=null&&Object.hasOwnProperty.call(m,%j)){", t3, l2.name)("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){", t3)("w.uint32(%i).fork().uint32(%i).%s(ks[i])", (l2.id << 3 | 2) >>> 0, 8 | o2.mapKey[l2.keyType], l2.keyType), void 0 === c2 ? r3("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()", u2, t3) : r3(".uint32(%i).%s(%s[ks[i]]).ldelim()", 16 | c2, h2, t3), r3("}")("}")) : l2.repeated ? (r3("if(%s!=null&&%s.length){", t3, t3), l2.packed && void 0 !== o2.packed[h2] ? r3("w.uint32(%i).fork()", (l2.id << 3 | 2) >>> 0)("for(var i=0;i<%s.length;++i)", t3)("w.%s(%s[i])", h2, t3)("w.ldelim()") : (r3("for(var i=0;i<%s.length;++i)", t3), void 0 === c2 ? i2(r3, l2, u2, t3 + "[i]") : r3("w.uint32(%i).%s(%s[i])", (l2.id << 3 | c2) >>> 0, h2, t3)), r3("}")) : (l2.optional && r3("if(%s!=null&&Object.hasOwnProperty.call(m,%j))", t3, l2.name), void 0 === c2 ? i2(r3, l2, u2, t3) : r3("w.uint32(%i).%s(%s)", (l2.id << 3 | c2) >>> 0, h2, t3));
          }
          return r3("return w");
        };
        var n2 = r2(2),
          o2 = r2(7),
          s2 = r2(0);
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          o2.call(this, e3, t3), this.fields = {}, this.oneofs = void 0, this.extensions = void 0, this.reserved = void 0, this.group = void 0, this._fieldsById = null, this._fieldsArray = null, this._oneofsArray = null, this._ctor = null;
        }
        function n2(e3) {
          return e3._fieldsById = e3._fieldsArray = e3._oneofsArray = null, delete e3.encode, delete e3.decode, delete e3.verify, e3;
        }
        e2.exports = i2;
        var o2 = r2(6);
        ((i2.prototype = Object.create(o2.prototype)).constructor = i2).className = "Type";
        var s2 = r2(2),
          a2 = r2(11),
          f2 = r2(4),
          l2 = r2(23),
          u2 = r2(24),
          h2 = r2(12),
          c2 = r2(10),
          d2 = r2(9),
          p2 = r2(0),
          y2 = r2(21),
          m2 = r2(26),
          v2 = r2(27),
          g2 = r2(28),
          b2 = r2(29);
        Object.defineProperties(i2.prototype, {
          fieldsById: {
            get: function () {
              if (this._fieldsById) return this._fieldsById;
              this._fieldsById = {};
              for (var e3 = Object.keys(this.fields), t3 = 0; t3 < e3.length; ++t3) {
                var r3 = this.fields[e3[t3]],
                  i3 = r3.id;
                if (this._fieldsById[i3]) throw Error("duplicate id " + i3 + " in " + this);
                this._fieldsById[i3] = r3;
              }
              return this._fieldsById;
            }
          },
          fieldsArray: {
            get: function () {
              return this._fieldsArray || (this._fieldsArray = p2.toArray(this.fields));
            }
          },
          oneofsArray: {
            get: function () {
              return this._oneofsArray || (this._oneofsArray = p2.toArray(this.oneofs));
            }
          },
          ctor: {
            get: function () {
              return this._ctor || (this.ctor = i2.generateConstructor(this)());
            },
            set: function (e3) {
              var t3 = e3.prototype;
              t3 instanceof h2 || ((e3.prototype = new h2()).constructor = e3, p2.merge(e3.prototype, t3)), e3.$type = e3.prototype.$type = this, p2.merge(e3, h2, true), this._ctor = e3;
              for (var r3 = 0; r3 < this.fieldsArray.length; ++r3) this._fieldsArray[r3].resolve();
              var i3 = {};
              for (r3 = 0; r3 < this.oneofsArray.length; ++r3) i3[this._oneofsArray[r3].resolve().name] = {
                get: p2.oneOfGetter(this._oneofsArray[r3].oneof),
                set: p2.oneOfSetter(this._oneofsArray[r3].oneof)
              };
              r3 && Object.defineProperties(e3.prototype, i3);
            }
          }
        }), i2.generateConstructor = function (e3) {
          for (var t3, r3 = p2.codegen(["p"], e3.name), i3 = 0; i3 < e3.fieldsArray.length; ++i3) (t3 = e3._fieldsArray[i3]).map ? r3("this%s={}", p2.safeProp(t3.name)) : t3.repeated && r3("this%s=[]", p2.safeProp(t3.name));
          return r3("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)")("this[ks[i]]=p[ks[i]]");
        }, i2.fromJSON = function (e3, t3) {
          var r3 = new i2(e3, t3.options);
          r3.extensions = t3.extensions, r3.reserved = t3.reserved;
          for (var n3 = Object.keys(t3.fields), h3 = 0; h3 < n3.length; ++h3) r3.add((void 0 !== t3.fields[n3[h3]].keyType ? l2.fromJSON : f2.fromJSON)(n3[h3], t3.fields[n3[h3]]));
          if (t3.oneofs) for (n3 = Object.keys(t3.oneofs), h3 = 0; h3 < n3.length; ++h3) r3.add(a2.fromJSON(n3[h3], t3.oneofs[n3[h3]]));
          if (t3.nested) for (n3 = Object.keys(t3.nested), h3 = 0; h3 < n3.length; ++h3) {
            var c3 = t3.nested[n3[h3]];
            r3.add((void 0 !== c3.id ? f2.fromJSON : void 0 !== c3.fields ? i2.fromJSON : void 0 !== c3.values ? s2.fromJSON : void 0 !== c3.methods ? u2.fromJSON : o2.fromJSON)(n3[h3], c3));
          }
          return t3.extensions && t3.extensions.length && (r3.extensions = t3.extensions), t3.reserved && t3.reserved.length && (r3.reserved = t3.reserved), t3.group && (r3.group = true), t3.comment && (r3.comment = t3.comment), r3;
        }, i2.prototype.toJSON = function (e3) {
          var t3 = o2.prototype.toJSON.call(this, e3),
            r3 = !!e3 && Boolean(e3.keepComments);
          return p2.toObject(["options", t3 && t3.options || void 0, "oneofs", o2.arrayToJSON(this.oneofsArray, e3), "fields", o2.arrayToJSON(this.fieldsArray.filter(function (e4) {
            return !e4.declaringField;
          }), e3) || {}, "extensions", this.extensions && this.extensions.length ? this.extensions : void 0, "reserved", this.reserved && this.reserved.length ? this.reserved : void 0, "group", this.group || void 0, "nested", t3 && t3.nested || void 0, "comment", r3 ? this.comment : void 0]);
        }, i2.prototype.resolveAll = function () {
          for (var e3 = this.fieldsArray, t3 = 0; t3 < e3.length;) e3[t3++].resolve();
          var r3 = this.oneofsArray;
          for (t3 = 0; t3 < r3.length;) r3[t3++].resolve();
          return o2.prototype.resolveAll.call(this);
        }, i2.prototype.get = function (e3) {
          return this.fields[e3] || this.oneofs && this.oneofs[e3] || this.nested && this.nested[e3] || null;
        }, i2.prototype.add = function (e3) {
          if (this.get(e3.name)) throw Error("duplicate name '" + e3.name + "' in " + this);
          if (e3 instanceof f2 && void 0 === e3.extend) {
            if (this._fieldsById ? this._fieldsById[e3.id] : this.fieldsById[e3.id]) throw Error("duplicate id " + e3.id + " in " + this);
            if (this.isReservedId(e3.id)) throw Error("id " + e3.id + " is reserved in " + this);
            if (this.isReservedName(e3.name)) throw Error("name '" + e3.name + "' is reserved in " + this);
            return e3.parent && e3.parent.remove(e3), this.fields[e3.name] = e3, e3.message = this, e3.onAdd(this), n2(this);
          }
          return e3 instanceof a2 ? (this.oneofs || (this.oneofs = {}), this.oneofs[e3.name] = e3, e3.onAdd(this), n2(this)) : o2.prototype.add.call(this, e3);
        }, i2.prototype.remove = function (e3) {
          if (e3 instanceof f2 && void 0 === e3.extend) {
            if (!this.fields || this.fields[e3.name] !== e3) throw Error(e3 + " is not a member of " + this);
            return delete this.fields[e3.name], e3.parent = null, e3.onRemove(this), n2(this);
          }
          if (e3 instanceof a2) {
            if (!this.oneofs || this.oneofs[e3.name] !== e3) throw Error(e3 + " is not a member of " + this);
            return delete this.oneofs[e3.name], e3.parent = null, e3.onRemove(this), n2(this);
          }
          return o2.prototype.remove.call(this, e3);
        }, i2.prototype.isReservedId = function (e3) {
          return o2.isReservedId(this.reserved, e3);
        }, i2.prototype.isReservedName = function (e3) {
          return o2.isReservedName(this.reserved, e3);
        }, i2.prototype.create = function (e3) {
          return new this.ctor(e3);
        }, i2.prototype.setup = function () {
          for (var e3 = this.fullName, t3 = [], r3 = 0; r3 < this.fieldsArray.length; ++r3) t3.push(this._fieldsArray[r3].resolve().resolvedType);
          this.encode = y2(this)({
            Writer: d2,
            types: t3,
            util: p2
          }), this.decode = m2(this)({
            Reader: c2,
            types: t3,
            util: p2
          }), this.verify = v2(this)({
            types: t3,
            util: p2
          }), this.fromObject = g2.fromObject(this)({
            types: t3,
            util: p2
          }), this.toObject = g2.toObject(this)({
            types: t3,
            util: p2
          });
          var i3 = b2[e3];
          if (i3) {
            var n3 = Object.create(this);
            n3.fromObject = this.fromObject, this.fromObject = i3.fromObject.bind(n3), n3.toObject = this.toObject, this.toObject = i3.toObject.bind(n3);
          }
          return this;
        }, i2.prototype.encode = function (e3, t3) {
          return this.setup().encode(e3, t3);
        }, i2.prototype.encodeDelimited = function (e3, t3) {
          return this.encode(e3, t3 && t3.len ? t3.fork() : t3).ldelim();
        }, i2.prototype.decode = function (e3, t3) {
          return this.setup().decode(e3, t3);
        }, i2.prototype.decodeDelimited = function (e3) {
          return e3 instanceof c2 || (e3 = c2.create(e3)), this.decode(e3, e3.uint32());
        }, i2.prototype.verify = function (e3) {
          return this.setup().verify(e3);
        }, i2.prototype.fromObject = function (e3) {
          return this.setup().fromObject(e3);
        }, i2.prototype.toObject = function (e3, t3) {
          return this.setup().toObject(e3, t3);
        }, i2.d = function (e3) {
          return function (t3) {
            p2.decorateType(t3, e3);
          };
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3, i3, o3, a2) {
          if (n2.call(this, e3, t3, i3, void 0, void 0, o3, a2), !s2.isString(r3)) throw TypeError("keyType must be a string");
          this.keyType = r3, this.resolvedKeyType = null, this.map = true;
        }
        e2.exports = i2;
        var n2 = r2(4);
        ((i2.prototype = Object.create(n2.prototype)).constructor = i2).className = "MapField";
        var o2 = r2(7),
          s2 = r2(0);
        i2.fromJSON = function (e3, t3) {
          return new i2(e3, t3.id, t3.keyType, t3.type, t3.options, t3.comment);
        }, i2.prototype.toJSON = function (e3) {
          var t3 = !!e3 && Boolean(e3.keepComments);
          return s2.toObject(["keyType", this.keyType, "type", this.type, "id", this.id, "extend", this.extend, "options", this.options, "comment", t3 ? this.comment : void 0]);
        }, i2.prototype.resolve = function () {
          if (this.resolved) return this;
          if (void 0 === o2.mapKey[this.keyType]) throw Error("invalid key type: " + this.keyType);
          return n2.prototype.resolve.call(this);
        }, i2.d = function (e3, t3, r3) {
          return "function" == typeof r3 ? r3 = s2.decorateType(r3).name : r3 && "object" == typeof r3 && (r3 = s2.decorateEnum(r3).name), function (n3, o3) {
            s2.decorateType(n3.constructor).add(new i2(o3, e3, t3, r3));
          };
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          o2.call(this, e3, t3), this.methods = {}, this._methodsArray = null;
        }
        function n2(e3) {
          return e3._methodsArray = null, e3;
        }
        e2.exports = i2;
        var o2 = r2(6);
        ((i2.prototype = Object.create(o2.prototype)).constructor = i2).className = "Service";
        var s2 = r2(25),
          a2 = r2(0),
          f2 = r2(19);
        i2.fromJSON = function (e3, t3) {
          var r3 = new i2(e3, t3.options);
          if (t3.methods) for (var n3 = Object.keys(t3.methods), o3 = 0; o3 < n3.length; ++o3) r3.add(s2.fromJSON(n3[o3], t3.methods[n3[o3]]));
          return t3.nested && r3.addJSON(t3.nested), r3.comment = t3.comment, r3;
        }, i2.prototype.toJSON = function (e3) {
          var t3 = o2.prototype.toJSON.call(this, e3),
            r3 = !!e3 && Boolean(e3.keepComments);
          return a2.toObject(["options", t3 && t3.options || void 0, "methods", o2.arrayToJSON(this.methodsArray, e3) || {}, "nested", t3 && t3.nested || void 0, "comment", r3 ? this.comment : void 0]);
        }, Object.defineProperty(i2.prototype, "methodsArray", {
          get: function () {
            return this._methodsArray || (this._methodsArray = a2.toArray(this.methods));
          }
        }), i2.prototype.get = function (e3) {
          return this.methods[e3] || o2.prototype.get.call(this, e3);
        }, i2.prototype.resolveAll = function () {
          for (var e3 = this.methodsArray, t3 = 0; t3 < e3.length; ++t3) e3[t3].resolve();
          return o2.prototype.resolve.call(this);
        }, i2.prototype.add = function (e3) {
          if (this.get(e3.name)) throw Error("duplicate name '" + e3.name + "' in " + this);
          return e3 instanceof s2 ? (this.methods[e3.name] = e3, e3.parent = this, n2(this)) : o2.prototype.add.call(this, e3);
        }, i2.prototype.remove = function (e3) {
          if (e3 instanceof s2) {
            if (this.methods[e3.name] !== e3) throw Error(e3 + " is not a member of " + this);
            return delete this.methods[e3.name], e3.parent = null, n2(this);
          }
          return o2.prototype.remove.call(this, e3);
        }, i2.prototype.create = function (e3, t3, r3) {
          for (var i3, n3 = new f2.Service(e3, t3, r3), o3 = 0; o3 < this.methodsArray.length; ++o3) {
            var s3 = a2.lcFirst((i3 = this._methodsArray[o3]).resolve().name).replace(/[^$\w_]/g, "");
            n3[s3] = a2.codegen(["r", "c"], a2.isReserved(s3) ? s3 + "_" : s3)("return this.rpcCall(m,q,s,r,c)")({
              m: i3,
              q: i3.resolvedRequestType.ctor,
              s: i3.resolvedResponseType.ctor
            });
          }
          return n3;
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3, i3, s2, a2, f2, l2, u2) {
          if (o2.isObject(s2) ? (f2 = s2, s2 = a2 = void 0) : o2.isObject(a2) && (f2 = a2, a2 = void 0), void 0 !== t3 && !o2.isString(t3)) throw TypeError("type must be a string");
          if (!o2.isString(r3)) throw TypeError("requestType must be a string");
          if (!o2.isString(i3)) throw TypeError("responseType must be a string");
          n2.call(this, e3, f2), this.type = t3 || "rpc", this.requestType = r3, this.requestStream = !!s2 || void 0, this.responseType = i3, this.responseStream = !!a2 || void 0, this.resolvedRequestType = null, this.resolvedResponseType = null, this.comment = l2, this.parsedOptions = u2;
        }
        e2.exports = i2;
        var n2 = r2(3);
        ((i2.prototype = Object.create(n2.prototype)).constructor = i2).className = "Method";
        var o2 = r2(0);
        i2.fromJSON = function (e3, t3) {
          return new i2(e3, t3.type, t3.requestType, t3.responseType, t3.requestStream, t3.responseStream, t3.options, t3.comment, t3.parsedOptions);
        }, i2.prototype.toJSON = function (e3) {
          var t3 = !!e3 && Boolean(e3.keepComments);
          return o2.toObject(["type", "rpc" !== this.type && this.type || void 0, "requestType", this.requestType, "requestStream", this.requestStream, "responseType", this.responseType, "responseStream", this.responseStream, "options", this.options, "comment", t3 ? this.comment : void 0, "parsedOptions", this.parsedOptions]);
        }, i2.prototype.resolve = function () {
          return this.resolved ? this : (this.resolvedRequestType = this.parent.lookupType(this.requestType), this.resolvedResponseType = this.parent.lookupType(this.responseType), n2.prototype.resolve.call(this));
        };
      }, function (e2, t2, r2) {
        function i2(e3) {
          return "missing required '" + e3.name + "'";
        }
        e2.exports = function (e3) {
          var t3 = s2.codegen(["r", "l"], e3.name + "$decode")("if(!(r instanceof Reader))")("r=Reader.create(r)")("var c=l===undefined?r.len:r.pos+l,m=new this.ctor" + (e3.fieldsArray.filter(function (e4) {
            return e4.map;
          }).length ? ",k,value" : ""))("while(r.pos<c){")("var t=r.uint32()");
          e3.group && t3("if((t&7)===4)")("break"), t3("switch(t>>>3){");
          for (var r3 = 0; r3 < e3.fieldsArray.length; ++r3) {
            var a2 = e3._fieldsArray[r3].resolve(),
              f2 = a2.resolvedType instanceof n2 ? "int32" : a2.type,
              l2 = "m" + s2.safeProp(a2.name);
            t3("case %i:", a2.id), a2.map ? (t3("if(%s===util.emptyObject)", l2)("%s={}", l2)("var c2 = r.uint32()+r.pos"), void 0 !== o2.defaults[a2.keyType] ? t3("k=%j", o2.defaults[a2.keyType]) : t3("k=null"), void 0 !== o2.defaults[f2] ? t3("value=%j", o2.defaults[f2]) : t3("value=null"), t3("while(r.pos<c2){")("var tag2=r.uint32()")("switch(tag2>>>3){")("case 1: k=r.%s(); break", a2.keyType)("case 2:"), void 0 === o2.basic[f2] ? t3("value=types[%i].decode(r,r.uint32())", r3) : t3("value=r.%s()", f2), t3("break")("default:")("r.skipType(tag2&7)")("break")("}")("}"), void 0 !== o2.long[a2.keyType] ? t3('%s[typeof k==="object"?util.longToHash(k):k]=value', l2) : t3("%s[k]=value", l2)) : a2.repeated ? (t3("if(!(%s&&%s.length))", l2, l2)("%s=[]", l2), void 0 !== o2.packed[f2] && t3("if((t&7)===2){")("var c2=r.uint32()+r.pos")("while(r.pos<c2)")("%s.push(r.%s())", l2, f2)("}else"), void 0 === o2.basic[f2] ? t3(a2.resolvedType.group ? "%s.push(types[%i].decode(r))" : "%s.push(types[%i].decode(r,r.uint32()))", l2, r3) : t3("%s.push(r.%s())", l2, f2)) : void 0 === o2.basic[f2] ? t3(a2.resolvedType.group ? "%s=types[%i].decode(r)" : "%s=types[%i].decode(r,r.uint32())", l2, r3) : t3("%s=r.%s()", l2, f2), t3("break");
          }
          for (t3("default:")("r.skipType(t&7)")("break")("}")("}"), r3 = 0; r3 < e3._fieldsArray.length; ++r3) {
            var u2 = e3._fieldsArray[r3];
            u2.required && t3("if(!m.hasOwnProperty(%j))", u2.name)("throw util.ProtocolError(%j,{instance:m})", i2(u2));
          }
          return t3("return m");
        };
        var n2 = r2(2),
          o2 = r2(7),
          s2 = r2(0);
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          return e3.name + ": " + t3 + (e3.repeated && "array" !== t3 ? "[]" : e3.map && "object" !== t3 ? "{k:" + e3.keyType + "}" : "") + " expected";
        }
        function n2(e3, t3, r3, n3) {
          if (t3.resolvedType) {
            if (t3.resolvedType instanceof s2) {
              e3("switch(%s){", n3)("default:")("return%j", i2(t3, "enum value"));
              for (var o3 = Object.keys(t3.resolvedType.values), a3 = 0; a3 < o3.length; ++a3) e3("case %i:", t3.resolvedType.values[o3[a3]]);
              e3("break")("}");
            } else e3("{")("var e=types[%i].verify(%s);", r3, n3)("if(e)")("return%j+e", t3.name + ".")("}");
          } else switch (t3.type) {
            case "int32":
            case "uint32":
            case "sint32":
            case "fixed32":
            case "sfixed32":
              e3("if(!util.isInteger(%s))", n3)("return%j", i2(t3, "integer"));
              break;
            case "int64":
            case "uint64":
            case "sint64":
            case "fixed64":
            case "sfixed64":
              e3("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))", n3, n3, n3, n3)("return%j", i2(t3, "integer|Long"));
              break;
            case "float":
            case "double":
              e3('if(typeof %s!=="number")', n3)("return%j", i2(t3, "number"));
              break;
            case "bool":
              e3('if(typeof %s!=="boolean")', n3)("return%j", i2(t3, "boolean"));
              break;
            case "string":
              e3("if(!util.isString(%s))", n3)("return%j", i2(t3, "string"));
              break;
            case "bytes":
              e3('if(!(%s&&typeof %s.length==="number"||util.isString(%s)))', n3, n3, n3)("return%j", i2(t3, "buffer"));
          }
          return e3;
        }
        function o2(e3, t3, r3) {
          switch (t3.keyType) {
            case "int32":
            case "uint32":
            case "sint32":
            case "fixed32":
            case "sfixed32":
              e3("if(!util.key32Re.test(%s))", r3)("return%j", i2(t3, "integer key"));
              break;
            case "int64":
            case "uint64":
            case "sint64":
            case "fixed64":
            case "sfixed64":
              e3("if(!util.key64Re.test(%s))", r3)("return%j", i2(t3, "integer|Long key"));
              break;
            case "bool":
              e3("if(!util.key2Re.test(%s))", r3)("return%j", i2(t3, "boolean key"));
          }
          return e3;
        }
        e2.exports = function (e3) {
          var t3 = a2.codegen(["m"], e3.name + "$verify")('if(typeof m!=="object"||m===null)')("return%j", "object expected"),
            r3 = {};
          e3.oneofsArray.length && t3("var p={}");
          for (var s3 = 0; s3 < e3.fieldsArray.length; ++s3) {
            var f2 = e3._fieldsArray[s3].resolve(),
              l2 = "m" + a2.safeProp(f2.name);
            if (f2.optional && t3("if(%s!=null&&m.hasOwnProperty(%j)){", l2, f2.name), f2.map) t3("if(!util.isObject(%s))", l2)("return%j", i2(f2, "object"))("var k=Object.keys(%s)", l2)("for(var i=0;i<k.length;++i){"), o2(t3, f2, "k[i]"), n2(t3, f2, s3, l2 + "[k[i]]")("}");else if (f2.repeated) t3("if(!Array.isArray(%s))", l2)("return%j", i2(f2, "array"))("for(var i=0;i<%s.length;++i){", l2), n2(t3, f2, s3, l2 + "[i]")("}");else {
              if (f2.partOf) {
                var u2 = a2.safeProp(f2.partOf.name);
                1 === r3[f2.partOf.name] && t3("if(p%s===1)", u2)("return%j", f2.partOf.name + ": multiple values"), r3[f2.partOf.name] = 1, t3("p%s=1", u2);
              }
              n2(t3, f2, s3, l2);
            }
            f2.optional && t3("}");
          }
          return t3("return null");
        };
        var s2 = r2(2),
          a2 = r2(0);
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3, i3) {
          if (t3.resolvedType) {
            if (t3.resolvedType instanceof s2) {
              e3("switch(d%s){", i3);
              for (var n3 = t3.resolvedType.values, o3 = Object.keys(n3), a3 = 0; a3 < o3.length; ++a3) t3.repeated && n3[o3[a3]] === t3.typeDefault && e3("default:"), e3("case%j:", o3[a3])("case %i:", n3[o3[a3]])("m%s=%j", i3, n3[o3[a3]])("break");
              e3("}");
            } else e3('if(typeof d%s!=="object")', i3)("throw TypeError(%j)", t3.fullName + ": object expected")("m%s=types[%i].fromObject(d%s)", i3, r3, i3);
          } else {
            var f2 = false;
            switch (t3.type) {
              case "double":
              case "float":
                e3("m%s=Number(d%s)", i3, i3);
                break;
              case "uint32":
              case "fixed32":
                e3("m%s=d%s>>>0", i3, i3);
                break;
              case "int32":
              case "sint32":
              case "sfixed32":
                e3("m%s=d%s|0", i3, i3);
                break;
              case "uint64":
                f2 = true;
              case "int64":
              case "sint64":
              case "fixed64":
              case "sfixed64":
                e3("if(util.Long)")("(m%s=util.Long.fromValue(d%s)).unsigned=%j", i3, i3, f2)('else if(typeof d%s==="string")', i3)("m%s=parseInt(d%s,10)", i3, i3)('else if(typeof d%s==="number")', i3)("m%s=d%s", i3, i3)('else if(typeof d%s==="object")', i3)("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)", i3, i3, i3, f2 ? "true" : "");
                break;
              case "bytes":
                e3('if(typeof d%s==="string")', i3)("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)", i3, i3, i3)("else if(d%s.length)", i3)("m%s=d%s", i3, i3);
                break;
              case "string":
                e3("m%s=String(d%s)", i3, i3);
                break;
              case "bool":
                e3("m%s=Boolean(d%s)", i3, i3);
            }
          }
          return e3;
        }
        function n2(e3, t3, r3, i3) {
          if (t3.resolvedType) t3.resolvedType instanceof s2 ? e3("d%s=o.enums===String?types[%i].values[m%s]:m%s", i3, r3, i3, i3) : e3("d%s=types[%i].toObject(m%s,o)", i3, r3, i3);else {
            var n3 = false;
            switch (t3.type) {
              case "double":
              case "float":
                e3("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s", i3, i3, i3, i3);
                break;
              case "uint64":
                n3 = true;
              case "int64":
              case "sint64":
              case "fixed64":
              case "sfixed64":
                e3('if(typeof m%s==="number")', i3)("d%s=o.longs===String?String(m%s):m%s", i3, i3, i3)("else")("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s", i3, i3, i3, i3, n3 ? "true" : "", i3);
                break;
              case "bytes":
                e3("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s", i3, i3, i3, i3, i3);
                break;
              default:
                e3("d%s=m%s", i3, i3);
            }
          }
          return e3;
        }
        var o2 = t2,
          s2 = r2(2),
          a2 = r2(0);
        o2.fromObject = function (e3) {
          var t3 = e3.fieldsArray,
            r3 = a2.codegen(["d"], e3.name + "$fromObject")("if(d instanceof this.ctor)")("return d");
          if (!t3.length) return r3("return new this.ctor");
          r3("var m=new this.ctor");
          for (var n3 = 0; n3 < t3.length; ++n3) {
            var o3 = t3[n3].resolve(),
              f2 = a2.safeProp(o3.name);
            o3.map ? (r3("if(d%s){", f2)('if(typeof d%s!=="object")', f2)("throw TypeError(%j)", o3.fullName + ": object expected")("m%s={}", f2)("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){", f2), i2(r3, o3, n3, f2 + "[ks[i]]")("}")("}")) : o3.repeated ? (r3("if(d%s){", f2)("if(!Array.isArray(d%s))", f2)("throw TypeError(%j)", o3.fullName + ": array expected")("m%s=[]", f2)("for(var i=0;i<d%s.length;++i){", f2), i2(r3, o3, n3, f2 + "[i]")("}")("}")) : (o3.resolvedType instanceof s2 || r3("if(d%s!=null){", f2), i2(r3, o3, n3, f2), o3.resolvedType instanceof s2 || r3("}"));
          }
          return r3("return m");
        }, o2.toObject = function (e3) {
          var t3 = e3.fieldsArray.slice().sort(a2.compareFieldsById);
          if (!t3.length) return a2.codegen()("return {}");
          for (var r3 = a2.codegen(["m", "o"], e3.name + "$toObject")("if(!o)")("o={}")("var d={}"), i3 = [], o3 = [], f2 = [], l2 = 0; l2 < t3.length; ++l2) t3[l2].partOf || (t3[l2].resolve().repeated ? i3 : t3[l2].map ? o3 : f2).push(t3[l2]);
          if (i3.length) {
            for (r3("if(o.arrays||o.defaults){"), l2 = 0; l2 < i3.length; ++l2) r3("d%s=[]", a2.safeProp(i3[l2].name));
            r3("}");
          }
          if (o3.length) {
            for (r3("if(o.objects||o.defaults){"), l2 = 0; l2 < o3.length; ++l2) r3("d%s={}", a2.safeProp(o3[l2].name));
            r3("}");
          }
          if (f2.length) {
            for (r3("if(o.defaults){"), l2 = 0; l2 < f2.length; ++l2) {
              var u2 = f2[l2],
                h2 = a2.safeProp(u2.name);
              if (u2.resolvedType instanceof s2) r3("d%s=o.enums===String?%j:%j", h2, u2.resolvedType.valuesById[u2.typeDefault], u2.typeDefault);else if (u2.long) r3("if(util.Long){")("var n=new util.Long(%i,%i,%j)", u2.typeDefault.low, u2.typeDefault.high, u2.typeDefault.unsigned)("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n", h2)("}else")("d%s=o.longs===String?%j:%i", h2, u2.typeDefault.toString(), u2.typeDefault.toNumber());else if (u2.bytes) {
                var c2 = "[" + Array.prototype.slice.call(u2.typeDefault).join(",") + "]";
                r3("if(o.bytes===String)d%s=%j", h2, String.fromCharCode.apply(String, u2.typeDefault))("else{")("d%s=%s", h2, c2)("if(o.bytes!==Array)d%s=util.newBuffer(d%s)", h2, h2)("}");
              } else r3("d%s=%j", h2, u2.typeDefault);
            }
            r3("}");
          }
          var d2 = false;
          for (l2 = 0; l2 < t3.length; ++l2) {
            u2 = t3[l2];
            var p2 = e3._fieldsArray.indexOf(u2);
            h2 = a2.safeProp(u2.name);
            u2.map ? (d2 || (d2 = true, r3("var ks2")), r3("if(m%s&&(ks2=Object.keys(m%s)).length){", h2, h2)("d%s={}", h2)("for(var j=0;j<ks2.length;++j){"), n2(r3, u2, p2, h2 + "[ks2[j]]")("}")) : u2.repeated ? (r3("if(m%s&&m%s.length){", h2, h2)("d%s=[]", h2)("for(var j=0;j<m%s.length;++j){", h2), n2(r3, u2, p2, h2 + "[j]")("}")) : (r3("if(m%s!=null&&m.hasOwnProperty(%j)){", h2, u2.name), n2(r3, u2, p2, h2), u2.partOf && r3("if(o.oneofs)")("d%s=%j", a2.safeProp(u2.partOf.name), u2.name)), r3("}");
          }
          return r3("return d");
        };
      }, function (e2, t2, r2) {
        var i2 = t2,
          n2 = r2(12);
        i2[".google.protobuf.Any"] = {
          fromObject: function (e3) {
            if (e3 && e3["@type"]) {
              var t3 = e3["@type"].substring(e3["@type"].lastIndexOf("/") + 1),
                r3 = this.lookup(t3);
              if (r3) {
                var i3 = "." === e3["@type"].charAt(0) ? e3["@type"].substr(1) : e3["@type"];
                return -1 === i3.indexOf("/") && (i3 = "/" + i3), this.create({
                  type_url: i3,
                  value: r3.encode(r3.fromObject(e3)).finish()
                });
              }
            }
            return this.fromObject(e3);
          },
          toObject: function (e3, t3) {
            var r3 = "",
              i3 = "";
            if (t3 && t3.json && e3.type_url && e3.value) {
              i3 = e3.type_url.substring(e3.type_url.lastIndexOf("/") + 1), r3 = e3.type_url.substring(0, e3.type_url.lastIndexOf("/") + 1);
              var o2 = this.lookup(i3);
              o2 && (e3 = o2.decode(e3.value));
            }
            if (!(e3 instanceof this.ctor) && e3 instanceof n2) {
              var s2 = e3.$type.toObject(e3, t3);
              return "" === r3 && (r3 = "type.googleapis.com/"), i3 = r3 + ("." === e3.$type.fullName[0] ? e3.$type.fullName.substr(1) : e3.$type.fullName), s2["@type"] = i3, s2;
            }
            return this.toObject(e3, t3);
          }
        };
      }, function (e2, t2, r2) {
        function i2(e3) {
          s2.call(this, "", e3), this.deferred = [], this.files = [];
        }
        function n2() {}
        function o2(e3, t3) {
          var r3 = t3.parent.lookup(t3.extend);
          if (r3) {
            var i3 = new u2(t3.fullName, t3.id, t3.type, t3.rule, void 0, t3.options);
            return i3.declaringField = t3, t3.extensionField = i3, r3.add(i3), true;
          }
          return false;
        }
        e2.exports = i2;
        var s2 = r2(6);
        ((i2.prototype = Object.create(s2.prototype)).constructor = i2).className = "Root";
        var a2,
          f2,
          l2,
          u2 = r2(4),
          h2 = r2(2),
          c2 = r2(11),
          d2 = r2(0);
        i2.fromJSON = function (e3, t3) {
          return t3 || (t3 = new i2()), e3.options && t3.setOptions(e3.options), t3.addJSON(e3.nested);
        }, i2.prototype.resolvePath = d2.path.resolve, i2.prototype.fetch = d2.fetch, i2.prototype.load = function e3(t3, r3, i3) {
          function o3(e4, t4) {
            if (i3) {
              var r4 = i3;
              if (i3 = null, c3) throw e4;
              r4(e4, t4);
            }
          }
          function s3(e4) {
            var t4 = e4.lastIndexOf("google/protobuf/");
            if (t4 > -1) {
              var r4 = e4.substring(t4);
              if (r4 in l2) return r4;
            }
            return null;
          }
          function a3(e4, t4) {
            try {
              if (d2.isString(t4) && "{" === t4.charAt(0) && (t4 = JSON.parse(t4)), d2.isString(t4)) {
                f2.filename = e4;
                var i4,
                  n3 = f2(t4, h3, r3),
                  a4 = 0;
                if (n3.imports) for (; a4 < n3.imports.length; ++a4) (i4 = s3(n3.imports[a4]) || h3.resolvePath(e4, n3.imports[a4])) && u3(i4);
                if (n3.weakImports) for (a4 = 0; a4 < n3.weakImports.length; ++a4) (i4 = s3(n3.weakImports[a4]) || h3.resolvePath(e4, n3.weakImports[a4])) && u3(i4, true);
              } else h3.setOptions(t4.options).addJSON(t4.nested);
            } catch (e5) {
              o3(e5);
            }
            c3 || p3 || o3(null, h3);
          }
          function u3(e4, t4) {
            if (!(h3.files.indexOf(e4) > -1)) {
              if (h3.files.push(e4), e4 in l2) return void (c3 ? a3(e4, l2[e4]) : (++p3, setTimeout(function () {
                --p3, a3(e4, l2[e4]);
              })));
              if (c3) {
                var r4;
                try {
                  r4 = d2.fs.readFileSync(e4).toString("utf8");
                } catch (e5) {
                  return void (t4 || o3(e5));
                }
                a3(e4, r4);
              } else ++p3, h3.fetch(e4, function (r5, n3) {
                if (--p3, i3) return r5 ? void (t4 ? p3 || o3(null, h3) : o3(r5)) : void a3(e4, n3);
              });
            }
          }
          "function" == typeof r3 && (i3 = r3, r3 = void 0);
          var h3 = this;
          if (!i3) return d2.asPromise(e3, h3, t3, r3);
          var c3 = i3 === n2,
            p3 = 0;
          d2.isString(t3) && (t3 = [t3]);
          for (var y2, m2 = 0; m2 < t3.length; ++m2) (y2 = h3.resolvePath("", t3[m2])) && u3(y2);
          if (c3) return h3;
          p3 || o3(null, h3);
        }, i2.prototype.loadSync = function (e3, t3) {
          if (!d2.isNode) throw Error("not supported");
          return this.load(e3, t3, n2);
        }, i2.prototype.resolveAll = function () {
          if (this.deferred.length) throw Error("unresolvable extensions: " + this.deferred.map(function (e3) {
            return "'extend " + e3.extend + "' in " + e3.parent.fullName;
          }).join(", "));
          return s2.prototype.resolveAll.call(this);
        };
        var p2 = /^[A-Z]/;
        i2.prototype._handleAdd = function (e3) {
          if (e3 instanceof u2) void 0 === e3.extend || e3.extensionField || o2(0, e3) || this.deferred.push(e3);else if (e3 instanceof h2) p2.test(e3.name) && (e3.parent[e3.name] = e3.values);else if (!(e3 instanceof c2)) {
            if (e3 instanceof a2) for (var t3 = 0; t3 < this.deferred.length;) o2(0, this.deferred[t3]) ? this.deferred.splice(t3, 1) : ++t3;
            for (var r3 = 0; r3 < e3.nestedArray.length; ++r3) this._handleAdd(e3._nestedArray[r3]);
            p2.test(e3.name) && (e3.parent[e3.name] = e3);
          }
        }, i2.prototype._handleRemove = function (e3) {
          if (e3 instanceof u2) {
            if (void 0 !== e3.extend) if (e3.extensionField) e3.extensionField.parent.remove(e3.extensionField), e3.extensionField = null;else {
              var t3 = this.deferred.indexOf(e3);
              t3 > -1 && this.deferred.splice(t3, 1);
            }
          } else if (e3 instanceof h2) p2.test(e3.name) && delete e3.parent[e3.name];else if (e3 instanceof s2) {
            for (var r3 = 0; r3 < e3.nestedArray.length; ++r3) this._handleRemove(e3._nestedArray[r3]);
            p2.test(e3.name) && delete e3.parent[e3.name];
          }
        }, i2._configure = function (e3, t3, r3) {
          a2 = e3, f2 = t3, l2 = r3;
        };
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.VideoEntity = void 0;
        var i2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e3) {
            return typeof e3;
          } : function (e3) {
            return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
          },
          n2 = function () {
            function e3(e4, t3) {
              for (var r3 = 0; r3 < t3.length; r3++) {
                var i3 = t3[r3];
                i3.enumerable = i3.enumerable || false, i3.configurable = true, "value" in i3 && (i3.writable = true), Object.defineProperty(e4, i3.key, i3);
              }
            }
            return function (t3, r3, i3) {
              return r3 && e3(t3.prototype, r3), i3 && e3(t3, i3), t3;
            };
          }(),
          o2 = r2(32),
          s2 = r2(16).ProtoMovieEntity;
        t2.VideoEntity = function () {
          function e3(t3, r3) {
            (function (e4, t4) {
              if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            })(this, e3), this.version = "", this.videoSize = {
              width: 0,
              height: 0
            }, this.FPS = 20, this.frames = 0, this.images = {}, this.sprites = [], this.audios = [], "object" === (void 0 === t3 ? "undefined" : i2(t3)) && t3.$type == s2 ? ("object" === i2(t3.params) && (this.version = t3.ver, this.videoSize.width = t3.params.viewBoxWidth || 0, this.videoSize.height = t3.params.viewBoxHeight || 0, this.FPS = t3.params.fps || 20, this.frames = t3.params.frames || 0), this.resetSprites(t3), this.audios = t3.audios) : t3 && (t3.movie && (t3.movie.viewBox && (this.videoSize.width = parseFloat(t3.movie.viewBox.width) || 0, this.videoSize.height = parseFloat(t3.movie.viewBox.height) || 0), this.version = t3.ver, this.FPS = parseInt(t3.movie.fps) || 20, this.frames = parseInt(t3.movie.frames) || 0), this.resetSprites(t3)), r3 && (this.images = r3);
          }
          return n2(e3, [{
            key: "resetSprites",
            value: function (e4) {
              e4.sprites instanceof Array && (this.sprites = e4.sprites.map(function (e5) {
                return new o2.SpriteEntity(e5);
              }));
            }
          }]), e3;
        }();
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.SpriteEntity = void 0;
        var i2 = r2(33);
        r2(5), r2(14), r2(15), t2.SpriteEntity = function e3(t3) {
          (function (e4, t4) {
            if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
          })(this, e3), this.matteKey = null, this.imageKey = null, this.frames = [], this.matteKey = t3.matteKey, this.imageKey = t3.imageKey, t3.frames && (this.frames = t3.frames.map(function (e4) {
            return new i2.FrameEntity(e4);
          }));
        };
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.FrameEntity = void 0;
        var i2 = r2(5);
        t2.FrameEntity = function e3(t3) {
          (function (e4, t4) {
            if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
          })(this, e3), this.alpha = 0, this.transform = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            tx: 0,
            ty: 0
          }, this.layout = {
            x: 0,
            y: 0,
            width: 0,
            height: 0
          }, this.nx = 0, this.ny = 0, this.maskPath = null, this.shapes = [], this.alpha = parseFloat(t3.alpha) || 0, t3.layout && (this.layout.x = parseFloat(t3.layout.x) || 0, this.layout.y = parseFloat(t3.layout.y) || 0, this.layout.width = parseFloat(t3.layout.width) || 0, this.layout.height = parseFloat(t3.layout.height) || 0), t3.transform && (this.transform.a = parseFloat(t3.transform.a) || 1, this.transform.b = parseFloat(t3.transform.b) || 0, this.transform.c = parseFloat(t3.transform.c) || 0, this.transform.d = parseFloat(t3.transform.d) || 1, this.transform.tx = parseFloat(t3.transform.tx) || 0, this.transform.ty = parseFloat(t3.transform.ty) || 0), t3.clipPath && t3.clipPath.length > 0 && (this.maskPath = new i2.BezierPath(t3.clipPath, void 0, {
            fill: "#000000"
          })), t3.shapes && (t3.shapes instanceof Array && t3.shapes.forEach(function (e4) {
            switch (e4.pathArgs = e4.args, e4.type) {
              case 0:
                e4.type = "shape", e4.pathArgs = e4.shape;
                break;
              case 1:
                e4.type = "rect", e4.pathArgs = e4.rect;
                break;
              case 2:
                e4.type = "ellipse", e4.pathArgs = e4.ellipse;
                break;
              case 3:
                e4.type = "keep";
            }
            if (e4.styles) {
              e4.styles.fill && ("number" == typeof e4.styles.fill.r && (e4.styles.fill[0] = e4.styles.fill.r), "number" == typeof e4.styles.fill.g && (e4.styles.fill[1] = e4.styles.fill.g), "number" == typeof e4.styles.fill.b && (e4.styles.fill[2] = e4.styles.fill.b), "number" == typeof e4.styles.fill.a && (e4.styles.fill[3] = e4.styles.fill.a)), e4.styles.stroke && ("number" == typeof e4.styles.stroke.r && (e4.styles.stroke[0] = e4.styles.stroke.r), "number" == typeof e4.styles.stroke.g && (e4.styles.stroke[1] = e4.styles.stroke.g), "number" == typeof e4.styles.stroke.b && (e4.styles.stroke[2] = e4.styles.stroke.b), "number" == typeof e4.styles.stroke.a && (e4.styles.stroke[3] = e4.styles.stroke.a));
              var t4 = e4.styles.lineDash || [];
              switch (e4.styles.lineDashI > 0 && t4.push(e4.styles.lineDashI), e4.styles.lineDashII > 0 && (t4.length < 1 && t4.push(0), t4.push(e4.styles.lineDashII), t4.push(0)), e4.styles.lineDashIII > 0 && (t4.length < 2 && (t4.push(0), t4.push(0)), t4[2] = e4.styles.lineDashIII), e4.styles.lineDash = t4, e4.styles.lineJoin) {
                case 0:
                  e4.styles.lineJoin = "miter";
                  break;
                case 1:
                  e4.styles.lineJoin = "round";
                  break;
                case 2:
                  e4.styles.lineJoin = "bevel";
              }
              switch (e4.styles.lineCap) {
                case 0:
                  e4.styles.lineCap = "butt";
                  break;
                case 1:
                  e4.styles.lineCap = "round";
                  break;
                case 2:
                  e4.styles.lineCap = "square";
              }
            }
          }), t3.shapes[0] && "keep" === t3.shapes[0].type ? this.shapes = e3.lastShapes : (this.shapes = t3.shapes, e3.lastShapes = t3.shapes));
          var r3 = this.transform.a * this.layout.x + this.transform.c * this.layout.y + this.transform.tx,
            n2 = this.transform.a * (this.layout.x + this.layout.width) + this.transform.c * this.layout.y + this.transform.tx,
            o2 = this.transform.a * this.layout.x + this.transform.c * (this.layout.y + this.layout.height) + this.transform.tx,
            s2 = this.transform.a * (this.layout.x + this.layout.width) + this.transform.c * (this.layout.y + this.layout.height) + this.transform.tx,
            a2 = this.transform.b * this.layout.x + this.transform.d * this.layout.y + this.transform.ty,
            f2 = this.transform.b * (this.layout.x + this.layout.width) + this.transform.d * this.layout.y + this.transform.ty,
            l2 = this.transform.b * this.layout.x + this.transform.d * (this.layout.y + this.layout.height) + this.transform.ty,
            u2 = this.transform.b * (this.layout.x + this.layout.width) + this.transform.d * (this.layout.y + this.layout.height) + this.transform.ty;
          this.nx = Math.min(Math.min(o2, s2), Math.min(r3, n2)), this.ny = Math.min(Math.min(l2, u2), Math.min(a2, f2));
        };
      }, function (e2, t2, r2) {
        e2.exports = r2(35);
      }, function (e2, t2, r2) {
        var i2 = e2.exports = r2(36);
        i2.build = "light", i2.load = function (e3, t3, r3) {
          return "function" == typeof t3 ? (r3 = t3, t3 = new i2.Root()) : t3 || (t3 = new i2.Root()), t3.load(e3, r3);
        }, i2.loadSync = function (e3, t3) {
          return t3 || (t3 = new i2.Root()), t3.loadSync(e3);
        }, i2.encoder = r2(21), i2.decoder = r2(26), i2.verifier = r2(27), i2.converter = r2(28), i2.ReflectionObject = r2(3), i2.Namespace = r2(6), i2.Root = r2(30), i2.Enum = r2(2), i2.Type = r2(22), i2.Field = r2(4), i2.OneOf = r2(11), i2.MapField = r2(23), i2.Service = r2(24), i2.Method = r2(25), i2.Message = r2(12), i2.wrappers = r2(29), i2.types = r2(7), i2.util = r2(0), i2.ReflectionObject._configure(i2.Root), i2.Namespace._configure(i2.Type, i2.Service, i2.Enum), i2.Root._configure(i2.Type), i2.Field._configure(i2.Type);
      }, function (e2, t2, r2) {
        function i2() {
          n2.util._configure(), n2.Writer._configure(n2.BufferWriter), n2.Reader._configure(n2.BufferReader);
        }
        var n2 = t2;
        n2.build = "minimal", n2.Writer = r2(9), n2.BufferWriter = r2(44), n2.Reader = r2(10), n2.BufferReader = r2(45), n2.util = r2(1), n2.rpc = r2(19), n2.roots = r2(20), n2.configure = i2, i2();
      }, function (e2, t2) {
        var r2;
        r2 = function () {
          return this;
        }();
        try {
          r2 = r2 || new Function("return this")();
        } catch (e3) {
          "object" == typeof window && (r2 = window);
        }
        e2.exports = r2;
      }, function (e2, t2, r2) {
        var i2 = t2;
        i2.length = function (e3) {
          var t3 = e3.length;
          if (!t3) return 0;
          for (var r3 = 0; --t3 % 4 > 1 && "=" === e3.charAt(t3);) ++r3;
          return Math.ceil(3 * e3.length) / 4 - r3;
        };
        for (var n2 = new Array(64), o2 = new Array(123), s2 = 0; s2 < 64;) o2[n2[s2] = s2 < 26 ? s2 + 65 : s2 < 52 ? s2 + 71 : s2 < 62 ? s2 - 4 : s2 - 59 | 43] = s2++;
        i2.encode = function (e3, t3, r3) {
          for (var i3, o3 = null, s3 = [], a2 = 0, f2 = 0; t3 < r3;) {
            var l2 = e3[t3++];
            switch (f2) {
              case 0:
                s3[a2++] = n2[l2 >> 2], i3 = (3 & l2) << 4, f2 = 1;
                break;
              case 1:
                s3[a2++] = n2[i3 | l2 >> 4], i3 = (15 & l2) << 2, f2 = 2;
                break;
              case 2:
                s3[a2++] = n2[i3 | l2 >> 6], s3[a2++] = n2[63 & l2], f2 = 0;
            }
            a2 > 8191 && ((o3 || (o3 = [])).push(String.fromCharCode.apply(String, s3)), a2 = 0);
          }
          return f2 && (s3[a2++] = n2[i3], s3[a2++] = 61, 1 === f2 && (s3[a2++] = 61)), o3 ? (a2 && o3.push(String.fromCharCode.apply(String, s3.slice(0, a2))), o3.join("")) : String.fromCharCode.apply(String, s3.slice(0, a2));
        }, i2.decode = function (e3, t3, r3) {
          for (var i3, n3 = r3, s3 = 0, a2 = 0; a2 < e3.length;) {
            var f2 = e3.charCodeAt(a2++);
            if (61 === f2 && s3 > 1) break;
            if (void 0 === (f2 = o2[f2])) throw Error("invalid encoding");
            switch (s3) {
              case 0:
                i3 = f2, s3 = 1;
                break;
              case 1:
                t3[r3++] = i3 << 2 | (48 & f2) >> 4, i3 = f2, s3 = 2;
                break;
              case 2:
                t3[r3++] = (15 & i3) << 4 | (60 & f2) >> 2, i3 = f2, s3 = 3;
                break;
              case 3:
                t3[r3++] = (3 & i3) << 6 | f2, s3 = 0;
            }
          }
          if (1 === s3) throw Error("invalid encoding");
          return r3 - n3;
        }, i2.test = function (e3) {
          return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e3);
        };
      }, function (e2, t2, r2) {
        function i2() {
          this._listeners = {};
        }
        e2.exports = i2, i2.prototype.on = function (e3, t3, r3) {
          return (this._listeners[e3] || (this._listeners[e3] = [])).push({
            fn: t3,
            ctx: r3 || this
          }), this;
        }, i2.prototype.off = function (e3, t3) {
          if (void 0 === e3) this._listeners = {};else if (void 0 === t3) this._listeners[e3] = [];else for (var r3 = this._listeners[e3], i3 = 0; i3 < r3.length;) r3[i3].fn === t3 ? r3.splice(i3, 1) : ++i3;
          return this;
        }, i2.prototype.emit = function (e3) {
          var t3 = this._listeners[e3];
          if (t3) {
            for (var r3 = [], i3 = 1; i3 < arguments.length;) r3.push(arguments[i3++]);
            for (i3 = 0; i3 < t3.length;) t3[i3].fn.apply(t3[i3++].ctx, r3);
          }
          return this;
        };
      }, function (e2, t2, r2) {
        function i2(e3) {
          return "undefined" != typeof Float32Array ? function () {
            function t3(e4, t4, r4) {
              o3[0] = e4, t4[r4] = s3[0], t4[r4 + 1] = s3[1], t4[r4 + 2] = s3[2], t4[r4 + 3] = s3[3];
            }
            function r3(e4, t4, r4) {
              o3[0] = e4, t4[r4] = s3[3], t4[r4 + 1] = s3[2], t4[r4 + 2] = s3[1], t4[r4 + 3] = s3[0];
            }
            function i3(e4, t4) {
              return s3[0] = e4[t4], s3[1] = e4[t4 + 1], s3[2] = e4[t4 + 2], s3[3] = e4[t4 + 3], o3[0];
            }
            function n3(e4, t4) {
              return s3[3] = e4[t4], s3[2] = e4[t4 + 1], s3[1] = e4[t4 + 2], s3[0] = e4[t4 + 3], o3[0];
            }
            var o3 = new Float32Array([-0]),
              s3 = new Uint8Array(o3.buffer),
              a3 = 128 === s3[3];
            e3.writeFloatLE = a3 ? t3 : r3, e3.writeFloatBE = a3 ? r3 : t3, e3.readFloatLE = a3 ? i3 : n3, e3.readFloatBE = a3 ? n3 : i3;
          }() : function () {
            function t3(e4, t4, r4, i3) {
              var n3 = t4 < 0 ? 1 : 0;
              if (n3 && (t4 = -t4), 0 === t4) e4(1 / t4 > 0 ? 0 : 2147483648, r4, i3);else if (isNaN(t4)) e4(2143289344, r4, i3);else if (t4 > 34028234663852886e22) e4((n3 << 31 | 2139095040) >>> 0, r4, i3);else if (t4 < 11754943508222875e-54) e4((n3 << 31 | Math.round(t4 / 1401298464324817e-60)) >>> 0, r4, i3);else {
                var o3 = Math.floor(Math.log(t4) / Math.LN2);
                e4((n3 << 31 | o3 + 127 << 23 | 8388607 & Math.round(t4 * Math.pow(2, -o3) * 8388608)) >>> 0, r4, i3);
              }
            }
            function r3(e4, t4, r4) {
              var i3 = e4(t4, r4),
                n3 = 2 * (i3 >> 31) + 1,
                o3 = i3 >>> 23 & 255,
                s3 = 8388607 & i3;
              return 255 === o3 ? s3 ? NaN : n3 * (1 / 0) : 0 === o3 ? 1401298464324817e-60 * n3 * s3 : n3 * Math.pow(2, o3 - 150) * (s3 + 8388608);
            }
            e3.writeFloatLE = t3.bind(null, n2), e3.writeFloatBE = t3.bind(null, o2), e3.readFloatLE = r3.bind(null, s2), e3.readFloatBE = r3.bind(null, a2);
          }(), "undefined" != typeof Float64Array ? function () {
            function t3(e4, t4, r4) {
              o3[0] = e4, t4[r4] = s3[0], t4[r4 + 1] = s3[1], t4[r4 + 2] = s3[2], t4[r4 + 3] = s3[3], t4[r4 + 4] = s3[4], t4[r4 + 5] = s3[5], t4[r4 + 6] = s3[6], t4[r4 + 7] = s3[7];
            }
            function r3(e4, t4, r4) {
              o3[0] = e4, t4[r4] = s3[7], t4[r4 + 1] = s3[6], t4[r4 + 2] = s3[5], t4[r4 + 3] = s3[4], t4[r4 + 4] = s3[3], t4[r4 + 5] = s3[2], t4[r4 + 6] = s3[1], t4[r4 + 7] = s3[0];
            }
            function i3(e4, t4) {
              return s3[0] = e4[t4], s3[1] = e4[t4 + 1], s3[2] = e4[t4 + 2], s3[3] = e4[t4 + 3], s3[4] = e4[t4 + 4], s3[5] = e4[t4 + 5], s3[6] = e4[t4 + 6], s3[7] = e4[t4 + 7], o3[0];
            }
            function n3(e4, t4) {
              return s3[7] = e4[t4], s3[6] = e4[t4 + 1], s3[5] = e4[t4 + 2], s3[4] = e4[t4 + 3], s3[3] = e4[t4 + 4], s3[2] = e4[t4 + 5], s3[1] = e4[t4 + 6], s3[0] = e4[t4 + 7], o3[0];
            }
            var o3 = new Float64Array([-0]),
              s3 = new Uint8Array(o3.buffer),
              a3 = 128 === s3[7];
            e3.writeDoubleLE = a3 ? t3 : r3, e3.writeDoubleBE = a3 ? r3 : t3, e3.readDoubleLE = a3 ? i3 : n3, e3.readDoubleBE = a3 ? n3 : i3;
          }() : function () {
            function t3(e4, t4, r4, i3, n3, o3) {
              var s3 = i3 < 0 ? 1 : 0;
              if (s3 && (i3 = -i3), 0 === i3) e4(0, n3, o3 + t4), e4(1 / i3 > 0 ? 0 : 2147483648, n3, o3 + r4);else if (isNaN(i3)) e4(0, n3, o3 + t4), e4(2146959360, n3, o3 + r4);else if (i3 > 17976931348623157e292) e4(0, n3, o3 + t4), e4((s3 << 31 | 2146435072) >>> 0, n3, o3 + r4);else {
                var a3;
                if (i3 < 22250738585072014e-324) e4((a3 = i3 / 5e-324) >>> 0, n3, o3 + t4), e4((s3 << 31 | a3 / 4294967296) >>> 0, n3, o3 + r4);else {
                  var f2 = Math.floor(Math.log(i3) / Math.LN2);
                  1024 === f2 && (f2 = 1023), e4(4503599627370496 * (a3 = i3 * Math.pow(2, -f2)) >>> 0, n3, o3 + t4), e4((s3 << 31 | f2 + 1023 << 20 | 1048576 * a3 & 1048575) >>> 0, n3, o3 + r4);
                }
              }
            }
            function r3(e4, t4, r4, i3, n3) {
              var o3 = e4(i3, n3 + t4),
                s3 = e4(i3, n3 + r4),
                a3 = 2 * (s3 >> 31) + 1,
                f2 = s3 >>> 20 & 2047,
                l2 = 4294967296 * (1048575 & s3) + o3;
              return 2047 === f2 ? l2 ? NaN : a3 * (1 / 0) : 0 === f2 ? 5e-324 * a3 * l2 : a3 * Math.pow(2, f2 - 1075) * (l2 + 4503599627370496);
            }
            e3.writeDoubleLE = t3.bind(null, n2, 0, 4), e3.writeDoubleBE = t3.bind(null, o2, 4, 0), e3.readDoubleLE = r3.bind(null, s2, 0, 4), e3.readDoubleBE = r3.bind(null, a2, 4, 0);
          }(), e3;
        }
        function n2(e3, t3, r3) {
          t3[r3] = 255 & e3, t3[r3 + 1] = e3 >>> 8 & 255, t3[r3 + 2] = e3 >>> 16 & 255, t3[r3 + 3] = e3 >>> 24;
        }
        function o2(e3, t3, r3) {
          t3[r3] = e3 >>> 24, t3[r3 + 1] = e3 >>> 16 & 255, t3[r3 + 2] = e3 >>> 8 & 255, t3[r3 + 3] = 255 & e3;
        }
        function s2(e3, t3) {
          return (e3[t3] | e3[t3 + 1] << 8 | e3[t3 + 2] << 16 | e3[t3 + 3] << 24) >>> 0;
        }
        function a2(e3, t3) {
          return (e3[t3] << 24 | e3[t3 + 1] << 16 | e3[t3 + 2] << 8 | e3[t3 + 3]) >>> 0;
        }
        e2.exports = i2(i2);
      }, function (e2, t2, r2) {
        var i2 = t2;
        i2.length = function (e3) {
          for (var t3 = 0, r3 = 0, i3 = 0; i3 < e3.length; ++i3) (r3 = e3.charCodeAt(i3)) < 128 ? t3 += 1 : r3 < 2048 ? t3 += 2 : 55296 == (64512 & r3) && 56320 == (64512 & e3.charCodeAt(i3 + 1)) ? (++i3, t3 += 4) : t3 += 3;
          return t3;
        }, i2.read = function (e3, t3, r3) {
          if (r3 - t3 < 1) return "";
          for (var i3, n2 = null, o2 = [], s2 = 0; t3 < r3;) (i3 = e3[t3++]) < 128 ? o2[s2++] = i3 : i3 > 191 && i3 < 224 ? o2[s2++] = (31 & i3) << 6 | 63 & e3[t3++] : i3 > 239 && i3 < 365 ? (i3 = ((7 & i3) << 18 | (63 & e3[t3++]) << 12 | (63 & e3[t3++]) << 6 | 63 & e3[t3++]) - 65536, o2[s2++] = 55296 + (i3 >> 10), o2[s2++] = 56320 + (1023 & i3)) : o2[s2++] = (15 & i3) << 12 | (63 & e3[t3++]) << 6 | 63 & e3[t3++], s2 > 8191 && ((n2 || (n2 = [])).push(String.fromCharCode.apply(String, o2)), s2 = 0);
          return n2 ? (s2 && n2.push(String.fromCharCode.apply(String, o2.slice(0, s2))), n2.join("")) : String.fromCharCode.apply(String, o2.slice(0, s2));
        }, i2.write = function (e3, t3, r3) {
          for (var i3, n2, o2 = r3, s2 = 0; s2 < e3.length; ++s2) (i3 = e3.charCodeAt(s2)) < 128 ? t3[r3++] = i3 : i3 < 2048 ? (t3[r3++] = i3 >> 6 | 192, t3[r3++] = 63 & i3 | 128) : 55296 == (64512 & i3) && 56320 == (64512 & (n2 = e3.charCodeAt(s2 + 1))) ? (i3 = 65536 + ((1023 & i3) << 10) + (1023 & n2), ++s2, t3[r3++] = i3 >> 18 | 240, t3[r3++] = i3 >> 12 & 63 | 128, t3[r3++] = i3 >> 6 & 63 | 128, t3[r3++] = 63 & i3 | 128) : (t3[r3++] = i3 >> 12 | 224, t3[r3++] = i3 >> 6 & 63 | 128, t3[r3++] = 63 & i3 | 128);
          return r3 - o2;
        };
      }, function (e2, t2, r2) {
        e2.exports = function (e3, t3, r3) {
          var i2 = r3 || 8192,
            n2 = i2 >>> 1,
            o2 = null,
            s2 = i2;
          return function (r4) {
            if (r4 < 1 || r4 > n2) return e3(r4);
            s2 + r4 > i2 && (o2 = e3(i2), s2 = 0);
            var a2 = t3.call(o2, s2, s2 += r4);
            return 7 & s2 && (s2 = 1 + (7 | s2)), a2;
          };
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          this.lo = e3 >>> 0, this.hi = t3 >>> 0;
        }
        e2.exports = i2;
        var n2 = r2(1),
          o2 = i2.zero = new i2(0, 0);
        o2.toNumber = function () {
          return 0;
        }, o2.zzEncode = o2.zzDecode = function () {
          return this;
        }, o2.length = function () {
          return 1;
        };
        var s2 = i2.zeroHash = "\0\0\0\0\0\0\0\0";
        i2.fromNumber = function (e3) {
          if (0 === e3) return o2;
          var t3 = e3 < 0;
          t3 && (e3 = -e3);
          var r3 = e3 >>> 0,
            n3 = (e3 - r3) / 4294967296 >>> 0;
          return t3 && (n3 = ~n3 >>> 0, r3 = ~r3 >>> 0, ++r3 > 4294967295 && (r3 = 0, ++n3 > 4294967295 && (n3 = 0))), new i2(r3, n3);
        }, i2.from = function (e3) {
          if ("number" == typeof e3) return i2.fromNumber(e3);
          if (n2.isString(e3)) {
            if (!n2.Long) return i2.fromNumber(parseInt(e3, 10));
            e3 = n2.Long.fromString(e3);
          }
          return e3.low || e3.high ? new i2(e3.low >>> 0, e3.high >>> 0) : o2;
        }, i2.prototype.toNumber = function (e3) {
          if (!e3 && this.hi >>> 31) {
            var t3 = 1 + ~this.lo >>> 0,
              r3 = ~this.hi >>> 0;
            return t3 || (r3 = r3 + 1 >>> 0), -(t3 + 4294967296 * r3);
          }
          return this.lo + 4294967296 * this.hi;
        }, i2.prototype.toLong = function (e3) {
          return n2.Long ? new n2.Long(0 | this.lo, 0 | this.hi, Boolean(e3)) : {
            low: 0 | this.lo,
            high: 0 | this.hi,
            unsigned: Boolean(e3)
          };
        };
        var a2 = String.prototype.charCodeAt;
        i2.fromHash = function (e3) {
          return e3 === s2 ? o2 : new i2((a2.call(e3, 0) | a2.call(e3, 1) << 8 | a2.call(e3, 2) << 16 | a2.call(e3, 3) << 24) >>> 0, (a2.call(e3, 4) | a2.call(e3, 5) << 8 | a2.call(e3, 6) << 16 | a2.call(e3, 7) << 24) >>> 0);
        }, i2.prototype.toHash = function () {
          return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);
        }, i2.prototype.zzEncode = function () {
          var e3 = this.hi >> 31;
          return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e3) >>> 0, this.lo = (this.lo << 1 ^ e3) >>> 0, this;
        }, i2.prototype.zzDecode = function () {
          var e3 = -(1 & this.lo);
          return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e3) >>> 0, this.hi = (this.hi >>> 1 ^ e3) >>> 0, this;
        }, i2.prototype.length = function () {
          var e3 = this.lo,
            t3 = (this.lo >>> 28 | this.hi << 4) >>> 0,
            r3 = this.hi >>> 24;
          return 0 === r3 ? 0 === t3 ? e3 < 16384 ? e3 < 128 ? 1 : 2 : e3 < 2097152 ? 3 : 4 : t3 < 16384 ? t3 < 128 ? 5 : 6 : t3 < 2097152 ? 7 : 8 : r3 < 128 ? 9 : 10;
        };
      }, function (e2, t2, r2) {
        function i2() {
          o2.call(this);
        }
        function n2(e3, t3, r3) {
          e3.length < 40 ? s2.utf8.write(e3, t3, r3) : t3.utf8Write ? t3.utf8Write(e3, r3) : t3.write(e3, r3);
        }
        e2.exports = i2;
        var o2 = r2(9);
        (i2.prototype = Object.create(o2.prototype)).constructor = i2;
        var s2 = r2(1);
        i2._configure = function () {
          i2.alloc = s2._Buffer_allocUnsafe, i2.writeBytesBuffer = s2.Buffer && s2.Buffer.prototype instanceof Uint8Array && "set" === s2.Buffer.prototype.set.name ? function (e3, t3, r3) {
            t3.set(e3, r3);
          } : function (e3, t3, r3) {
            if (e3.copy) e3.copy(t3, r3, 0, e3.length);else for (var i3 = 0; i3 < e3.length;) t3[r3++] = e3[i3++];
          };
        }, i2.prototype.bytes = function (e3) {
          s2.isString(e3) && (e3 = s2._Buffer_from(e3, "base64"));
          var t3 = e3.length >>> 0;
          return this.uint32(t3), t3 && this._push(i2.writeBytesBuffer, t3, e3), this;
        }, i2.prototype.string = function (e3) {
          var t3 = s2.Buffer.byteLength(e3);
          return this.uint32(t3), t3 && this._push(n2, t3, e3), this;
        }, i2._configure();
      }, function (e2, t2, r2) {
        function i2(e3) {
          n2.call(this, e3);
        }
        e2.exports = i2;
        var n2 = r2(10);
        (i2.prototype = Object.create(n2.prototype)).constructor = i2;
        var o2 = r2(1);
        i2._configure = function () {
          o2.Buffer && (i2.prototype._slice = o2.Buffer.prototype.slice);
        }, i2.prototype.string = function () {
          var e3 = this.uint32();
          return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + e3, this.len)) : this.buf.toString("utf-8", this.pos, this.pos = Math.min(this.pos + e3, this.len));
        }, i2._configure();
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3) {
          if ("function" != typeof e3) throw TypeError("rpcImpl must be a function");
          n2.EventEmitter.call(this), this.rpcImpl = e3, this.requestDelimited = Boolean(t3), this.responseDelimited = Boolean(r3);
        }
        e2.exports = i2;
        var n2 = r2(1);
        (i2.prototype = Object.create(n2.EventEmitter.prototype)).constructor = i2, i2.prototype.rpcCall = function e3(t3, r3, i3, o2, s2) {
          if (!o2) throw TypeError("request must be specified");
          var a2 = this;
          if (!s2) return n2.asPromise(e3, a2, t3, r3, i3, o2);
          if (a2.rpcImpl) try {
            return a2.rpcImpl(t3, r3[a2.requestDelimited ? "encodeDelimited" : "encode"](o2).finish(), function (e4, r4) {
              if (e4) return a2.emit("error", e4, t3), s2(e4);
              if (null !== r4) {
                if (!(r4 instanceof i3)) try {
                  r4 = i3[a2.responseDelimited ? "decodeDelimited" : "decode"](r4);
                } catch (e5) {
                  return a2.emit("error", e5, t3), s2(e5);
                }
                return a2.emit("data", r4, t3), s2(null, r4);
              }
              a2.end(true);
            });
          } catch (e4) {
            return a2.emit("error", e4, t3), void setTimeout(function () {
              s2(e4);
            }, 0);
          } else setTimeout(function () {
            s2(Error("already ended"));
          }, 0);
        }, i2.prototype.end = function (e3) {
          return this.rpcImpl && (e3 || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit("end").off()), this;
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          function r3(e4) {
            if ("string" != typeof e4) {
              var t4 = n2();
              if (i2.verbose && console.log("codegen: " + t4), t4 = "return " + t4, e4) {
                for (var s2 = Object.keys(e4), a2 = new Array(s2.length + 1), f2 = new Array(s2.length), l2 = 0; l2 < s2.length;) a2[l2] = s2[l2], f2[l2] = e4[s2[l2++]];
                return a2[l2] = t4, Function.apply(null, a2).apply(null, f2);
              }
              return Function(t4)();
            }
            for (var u2 = new Array(arguments.length - 1), h2 = 0; h2 < u2.length;) u2[h2] = arguments[++h2];
            if (h2 = 0, e4 = e4.replace(/%([%dfijs])/g, function (e5, t5) {
              var r4 = u2[h2++];
              switch (t5) {
                case "d":
                case "f":
                  return String(Number(r4));
                case "i":
                  return String(Math.floor(r4));
                case "j":
                  return JSON.stringify(r4);
                case "s":
                  return String(r4);
              }
              return "%";
            }), h2 !== u2.length) throw Error("parameter count mismatch");
            return o2.push(e4), r3;
          }
          function n2(r4) {
            return "function " + (r4 || t3 || "") + "(" + (e3 && e3.join(",") || "") + "){\n  " + o2.join("\n  ") + "\n}";
          }
          "string" == typeof e3 && (t3 = e3, e3 = void 0);
          var o2 = [];
          return r3.toString = n2, r3;
        }
        e2.exports = i2, i2.verbose = false;
      }, function (e2, t2, r2) {
        function i2(e3, t3, r3) {
          return "function" == typeof t3 ? (r3 = t3, t3 = {}) : t3 || (t3 = {}), r3 ? !t3.xhr && o2 && o2.readFile ? o2.readFile(e3, function (n3, o3) {
            return n3 && "undefined" != typeof XMLHttpRequest ? i2.xhr(e3, t3, r3) : n3 ? r3(n3) : r3(null, t3.binary ? o3 : o3.toString("utf8"));
          }) : i2.xhr(e3, t3, r3) : n2(i2, this, e3, t3);
        }
        e2.exports = i2;
        var n2 = r2(17),
          o2 = r2(18)("fs");
        i2.xhr = function (e3, t3, r3) {
          var i3 = new XMLHttpRequest();
          i3.onreadystatechange = function () {
            if (4 === i3.readyState) {
              if (0 !== i3.status && 200 !== i3.status) return r3(Error("status " + i3.status));
              if (t3.binary) {
                var e4 = i3.response;
                if (!e4) {
                  e4 = [];
                  for (var n3 = 0; n3 < i3.responseText.length; ++n3) e4.push(255 & i3.responseText.charCodeAt(n3));
                }
                return r3(null, "undefined" != typeof Uint8Array ? new Uint8Array(e4) : e4);
              }
              return r3(null, i3.responseText);
            }
          }, t3.binary && ("overrideMimeType" in i3 && i3.overrideMimeType("text/plain; charset=x-user-defined"), i3.responseType = "arraybuffer"), i3.open("GET", e3), i3.send();
        };
      }, function (e2, t2, r2) {
        var i2 = t2,
          n2 = i2.isAbsolute = function (e3) {
            return /^(?:\/|\w+:)/.test(e3);
          },
          o2 = i2.normalize = function (e3) {
            var t3 = (e3 = e3.replace(/\\/g, "/").replace(/\/{2,}/g, "/")).split("/"),
              r3 = n2(e3),
              i3 = "";
            r3 && (i3 = t3.shift() + "/");
            for (var o3 = 0; o3 < t3.length;) ".." === t3[o3] ? o3 > 0 && ".." !== t3[o3 - 1] ? t3.splice(--o3, 2) : r3 ? t3.splice(o3, 1) : ++o3 : "." === t3[o3] ? t3.splice(o3, 1) : ++o3;
            return i3 + t3.join("/");
          };
        i2.resolve = function (e3, t3, r3) {
          return r3 || (t3 = o2(t3)), n2(t3) ? t3 : (r3 || (e3 = o2(e3)), (e3 = e3.replace(/(?:\/|^)[^/]+$/, "")).length ? o2(e3 + "/" + t3) : t3);
        };
      }, function (e2, t2, r2) {
        var i2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e3) {
            return typeof e3;
          } : function (e3) {
            return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
          },
          n2 = r2(16).ProtoMovieEntity,
          o2 = r2(8).assign,
          s2 = r2(51),
          a2 = {};
        o2(a2, s2);
        var f2 = function (e3) {
            for (var t3 = [], r3 = 0; r3 < e3.length; r3 += 32768) t3.push(String.fromCharCode.apply(null, e3.subarray(r3, r3 + 32768)));
            return t3.join("");
          },
          l2 = {
            loadAssets: function (e3, t3, r3) {
              if ("object" === ("undefined" == typeof JSZipUtils ? "undefined" : i2(JSZipUtils)) && "function" == typeof JSZip) {
                if ("[object File]" == e3.toString()) l2._readBlobAsArrayBuffer(e3, function (e4) {
                  var i3 = new Uint8Array(e4, 0, 4);
                  80 == i3[0] && 75 == i3[1] && 3 == i3[2] && 4 == i3[3] ? JSZip.loadAsync(e4).then(function (e5) {
                    l2._decodeAssets(e5, t3);
                  }) : l2.load_viaProto(e4, t3, r3);
                });else if (e3.indexOf("data:svga/1.0;base64,") >= 0) {
                  var n3 = l2._base64ToArrayBuffer(e3.substring(21));
                  JSZip.loadAsync(n3).then(function (e4) {
                    l2._decodeAssets(e4, t3);
                  });
                } else if (e3.indexOf("data:svga/2.0;base64,") >= 0) {
                  n3 = l2._base64ToArrayBuffer(e3.substring(21));
                  l2.load_viaProto(n3, t3, r3);
                } else JSZipUtils.getBinaryContent(e3, function (e4, i3) {
                  if (e4) throw r3 && r3(e4), console.error(e4), e4;
                  var n4 = new Uint8Array(i3, 0, 4);
                  80 == n4[0] && 75 == n4[1] && 3 == n4[2] && 4 == n4[3] ? JSZip.loadAsync(i3).then(function (e5) {
                    l2._decodeAssets(e5, t3);
                  }) : l2.load_viaProto(i3, t3, r3);
                });
              } else {
                var o3 = new XMLHttpRequest();
                o3.open("GET", e3, true), o3.responseType = "arraybuffer", o3.onload = function () {
                  l2.load_viaProto(o3.response, t3, r3);
                }, o3.onerror = function (e4) {
                  if (!r3) throw console.error(e4), e4;
                  r3(e4);
                }, o3.send();
              }
            },
            load_viaProto: function (e3, t3, r3) {
              try {
                var i3 = a2.inflate(e3),
                  o3 = n2.decode(i3),
                  s3 = {};
                l2._loadImages(s3, void 0, o3, function () {
                  o3.ver = "2.0", t3({
                    movie: o3,
                    images: s3
                  });
                });
              } catch (e4) {
                if (r3) return void r3(e4);
                throw console.error(e4), e4;
              }
            },
            _decodeAssets: function (e3, t3) {
              var r3 = "1.0";
              e3.file("movie.binary") && (r3 = "1.5"), e3.file("movie.spec").async("string").then(function (i3) {
                var n3 = JSON.parse(i3),
                  o3 = {};
                n3.ver = r3, l2._loadImages(o3, e3, n3, function () {
                  t3({
                    movie: n3,
                    images: o3
                  });
                });
              });
            },
            _loadImages: function (e3, t3, r3, o3) {
              var s3 = this;
              if ("object" === (void 0 === r3 ? "undefined" : i2(r3)) && r3.$type == n2) {
                var a3 = true;
                if (t3) e: for (var u2 in r3.images) {
                  switch (function (i3) {
                    if (r3.images.hasOwnProperty(i3)) {
                      var n3 = r3.images[i3],
                        u3 = f2(n3);
                      return e3.hasOwnProperty(i3) ? "continue" : (a3 = false, t3.file(u3 + ".png").async("base64").then(function (n4) {
                        e3[i3] = n4, l2._loadImages(e3, t3, r3, o3);
                      }.bind(s3)), "break");
                    }
                  }(u2)) {
                    case "continue":
                      continue;
                    case "break":
                      break e;
                  }
                } else for (var h2 in r3.images) if (r3.images.hasOwnProperty(h2)) {
                  var c2 = r3.images[h2],
                    d2 = void 0;
                  try {
                    d2 = f2(c2);
                  } catch (e4) {
                    d2 = f2(c2);
                  }
                  e3[h2] = btoa(d2);
                }
                a3 && o3.call(this);
              } else {
                a3 = true;
                for (var p2 in r3.images) if (r3.images.hasOwnProperty(p2)) {
                  var y2 = r3.images[p2];
                  if (e3.hasOwnProperty(p2)) continue;
                  a3 = false, t3.file(y2 + ".png").async("base64").then(function (i3) {
                    e3[p2] = i3, l2._loadImages(e3, t3, r3, o3);
                  }.bind(this));
                  break;
                }
                a3 && o3.call(this);
              }
            },
            _base64ToArrayBuffer: function (e3) {
              for (var t3 = window.atob(e3), r3 = t3.length, i3 = new Uint8Array(r3), n3 = 0; n3 < r3; n3++) i3[n3] = t3.charCodeAt(n3);
              return i3.buffer;
            },
            _readBlobAsArrayBuffer: function (e3, t3) {
              var r3 = new FileReader();
              r3.onload = function (e4) {
                t3(e4.target.result);
              }, r3.readAsArrayBuffer(e3);
            }
          };
        e2.exports = function (e3, t3, r3) {
          l2.loadAssets(e3, t3, r3);
        };
      }, function (e2, t2, r2) {
        function i2(e3) {
          if (!(this instanceof i2)) return new i2(e3);
          this.options = s2.assign({
            chunkSize: 16384,
            windowBits: 0,
            to: ""
          }, e3 || {});
          var t3 = this.options;
          t3.raw && t3.windowBits >= 0 && t3.windowBits < 16 && (t3.windowBits = -t3.windowBits, 0 === t3.windowBits && (t3.windowBits = -15)), !(t3.windowBits >= 0 && t3.windowBits < 16) || e3 && e3.windowBits || (t3.windowBits += 32), t3.windowBits > 15 && t3.windowBits < 48 && 0 == (15 & t3.windowBits) && (t3.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new u2(), this.strm.avail_out = 0;
          var r3 = o2.inflateInit2(this.strm, t3.windowBits);
          if (r3 !== f2.Z_OK) throw new Error(l2[r3]);
          if (this.header = new h2(), o2.inflateGetHeader(this.strm, this.header), t3.dictionary && ("string" == typeof t3.dictionary ? t3.dictionary = a2.string2buf(t3.dictionary) : "[object ArrayBuffer]" === c2.call(t3.dictionary) && (t3.dictionary = new Uint8Array(t3.dictionary)), t3.raw && (r3 = o2.inflateSetDictionary(this.strm, t3.dictionary)) !== f2.Z_OK)) throw new Error(l2[r3]);
        }
        function n2(e3, t3) {
          var r3 = new i2(t3);
          if (r3.push(e3, true), r3.err) throw r3.msg || l2[r3.err];
          return r3.result;
        }
        var o2 = r2(52),
          s2 = r2(8),
          a2 = r2(57),
          f2 = r2(58),
          l2 = r2(59),
          u2 = r2(60),
          h2 = r2(61),
          c2 = Object.prototype.toString;
        i2.prototype.push = function (e3, t3) {
          var r3,
            i3,
            n3,
            l3,
            u3,
            h3 = this.strm,
            d2 = this.options.chunkSize,
            p2 = this.options.dictionary,
            y2 = false;
          if (this.ended) return false;
          i3 = t3 === ~~t3 ? t3 : true === t3 ? f2.Z_FINISH : f2.Z_NO_FLUSH, "string" == typeof e3 ? h3.input = a2.binstring2buf(e3) : "[object ArrayBuffer]" === c2.call(e3) ? h3.input = new Uint8Array(e3) : h3.input = e3, h3.next_in = 0, h3.avail_in = h3.input.length;
          do {
            if (0 === h3.avail_out && (h3.output = new s2.Buf8(d2), h3.next_out = 0, h3.avail_out = d2), (r3 = o2.inflate(h3, f2.Z_NO_FLUSH)) === f2.Z_NEED_DICT && p2 && (r3 = o2.inflateSetDictionary(this.strm, p2)), r3 === f2.Z_BUF_ERROR && true === y2 && (r3 = f2.Z_OK, y2 = false), r3 !== f2.Z_STREAM_END && r3 !== f2.Z_OK) return this.onEnd(r3), this.ended = true, false;
            h3.next_out && (0 !== h3.avail_out && r3 !== f2.Z_STREAM_END && (0 !== h3.avail_in || i3 !== f2.Z_FINISH && i3 !== f2.Z_SYNC_FLUSH) || ("string" === this.options.to ? (n3 = a2.utf8border(h3.output, h3.next_out), l3 = h3.next_out - n3, u3 = a2.buf2string(h3.output, n3), h3.next_out = l3, h3.avail_out = d2 - l3, l3 && s2.arraySet(h3.output, h3.output, n3, l3, 0), this.onData(u3)) : this.onData(s2.shrinkBuf(h3.output, h3.next_out)))), 0 === h3.avail_in && 0 === h3.avail_out && (y2 = true);
          } while ((h3.avail_in > 0 || 0 === h3.avail_out) && r3 !== f2.Z_STREAM_END);
          return r3 === f2.Z_STREAM_END && (i3 = f2.Z_FINISH), i3 === f2.Z_FINISH ? (r3 = o2.inflateEnd(this.strm), this.onEnd(r3), this.ended = true, r3 === f2.Z_OK) : i3 !== f2.Z_SYNC_FLUSH || (this.onEnd(f2.Z_OK), h3.avail_out = 0, true);
        }, i2.prototype.onData = function (e3) {
          this.chunks.push(e3);
        }, i2.prototype.onEnd = function (e3) {
          e3 === f2.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = s2.flattenChunks(this.chunks)), this.chunks = [], this.err = e3, this.msg = this.strm.msg;
        }, t2.Inflate = i2, t2.inflate = n2, t2.inflateRaw = function (e3, t3) {
          return (t3 = t3 || {}).raw = true, n2(e3, t3);
        }, t2.ungzip = n2;
      }, function (e2, t2, r2) {
        function i2(e3) {
          return (e3 >>> 24 & 255) + (e3 >>> 8 & 65280) + ((65280 & e3) << 8) + ((255 & e3) << 24);
        }
        function n2() {
          this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new d2.Buf16(320), this.work = new d2.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
        }
        function o2(e3) {
          var t3;
          return e3 && e3.state ? (t3 = e3.state, e3.total_in = e3.total_out = t3.total = 0, e3.msg = "", t3.wrap && (e3.adler = 1 & t3.wrap), t3.mode = C2, t3.last = 0, t3.havedict = 0, t3.dmax = 32768, t3.head = null, t3.hold = 0, t3.bits = 0, t3.lencode = t3.lendyn = new d2.Buf32(ue2), t3.distcode = t3.distdyn = new d2.Buf32(he2), t3.sane = 1, t3.back = -1, O2) : j2;
        }
        function s2(e3) {
          var t3;
          return e3 && e3.state ? ((t3 = e3.state).wsize = 0, t3.whave = 0, t3.wnext = 0, o2(e3)) : j2;
        }
        function a2(e3, t3) {
          var r3, i3;
          return e3 && e3.state ? (i3 = e3.state, t3 < 0 ? (r3 = 0, t3 = -t3) : (r3 = 1 + (t3 >> 4), t3 < 48 && (t3 &= 15)), t3 && (t3 < 8 || t3 > 15) ? j2 : (null !== i3.window && i3.wbits !== t3 && (i3.window = null), i3.wrap = r3, i3.wbits = t3, s2(e3))) : j2;
        }
        function f2(e3, t3) {
          var r3, i3;
          return e3 ? (i3 = new n2(), e3.state = i3, i3.window = null, (r3 = a2(e3, t3)) !== O2 && (e3.state = null), r3) : j2;
        }
        function l2(e3) {
          if (de2) {
            var t3;
            for (h2 = new d2.Buf32(512), c2 = new d2.Buf32(32), t3 = 0; t3 < 144;) e3.lens[t3++] = 8;
            for (; t3 < 256;) e3.lens[t3++] = 9;
            for (; t3 < 280;) e3.lens[t3++] = 7;
            for (; t3 < 288;) e3.lens[t3++] = 8;
            for (v2(b2, e3.lens, 0, 288, h2, 0, e3.work, {
              bits: 9
            }), t3 = 0; t3 < 32;) e3.lens[t3++] = 5;
            v2(_2, e3.lens, 0, 32, c2, 0, e3.work, {
              bits: 5
            }), de2 = false;
          }
          e3.lencode = h2, e3.lenbits = 9, e3.distcode = c2, e3.distbits = 5;
        }
        function u2(e3, t3, r3, i3) {
          var n3,
            o3 = e3.state;
          return null === o3.window && (o3.wsize = 1 << o3.wbits, o3.wnext = 0, o3.whave = 0, o3.window = new d2.Buf8(o3.wsize)), i3 >= o3.wsize ? (d2.arraySet(o3.window, t3, r3 - o3.wsize, o3.wsize, 0), o3.wnext = 0, o3.whave = o3.wsize) : ((n3 = o3.wsize - o3.wnext) > i3 && (n3 = i3), d2.arraySet(o3.window, t3, r3 - i3, n3, o3.wnext), (i3 -= n3) ? (d2.arraySet(o3.window, t3, r3 - i3, i3, 0), o3.wnext = i3, o3.whave = o3.wsize) : (o3.wnext += n3, o3.wnext === o3.wsize && (o3.wnext = 0), o3.whave < o3.wsize && (o3.whave += n3))), 0;
        }
        var h2,
          c2,
          d2 = r2(8),
          p2 = r2(53),
          y2 = r2(54),
          m2 = r2(55),
          v2 = r2(56),
          g2 = 0,
          b2 = 1,
          _2 = 2,
          w2 = 4,
          k2 = 5,
          x2 = 6,
          O2 = 0,
          A2 = 1,
          S2 = 2,
          j2 = -2,
          T2 = -3,
          E2 = -4,
          N2 = -5,
          F2 = 8,
          C2 = 1,
          B2 = 2,
          I2 = 3,
          P2 = 4,
          R2 = 5,
          D2 = 6,
          M2 = 7,
          L2 = 8,
          z2 = 9,
          J2 = 10,
          U2 = 11,
          Z2 = 12,
          K2 = 13,
          q2 = 14,
          $2 = 15,
          V2 = 16,
          H2 = 17,
          W2 = 18,
          G2 = 19,
          Y2 = 20,
          Q2 = 21,
          X2 = 22,
          ee2 = 23,
          te2 = 24,
          re2 = 25,
          ie2 = 26,
          ne2 = 27,
          oe2 = 28,
          se2 = 29,
          ae2 = 30,
          fe2 = 31,
          le2 = 32,
          ue2 = 852,
          he2 = 592,
          ce2 = 15,
          de2 = true;
        t2.inflateReset = s2, t2.inflateReset2 = a2, t2.inflateResetKeep = o2, t2.inflateInit = function (e3) {
          return f2(e3, ce2);
        }, t2.inflateInit2 = f2, t2.inflate = function (e3, t3) {
          var r3,
            n3,
            o3,
            s3,
            a3,
            f3,
            h3,
            c3,
            ue3,
            he3,
            ce3,
            de3,
            pe2,
            ye2,
            me2,
            ve2,
            ge2,
            be2,
            _e2,
            we2,
            ke2,
            xe2,
            Oe2,
            Ae2,
            Se2 = 0,
            je2 = new d2.Buf8(4),
            Te2 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!e3 || !e3.state || !e3.output || !e3.input && 0 !== e3.avail_in) return j2;
          (r3 = e3.state).mode === Z2 && (r3.mode = K2), a3 = e3.next_out, o3 = e3.output, h3 = e3.avail_out, s3 = e3.next_in, n3 = e3.input, f3 = e3.avail_in, c3 = r3.hold, ue3 = r3.bits, he3 = f3, ce3 = h3, xe2 = O2;
          e: for (;;) switch (r3.mode) {
            case C2:
              if (0 === r3.wrap) {
                r3.mode = K2;
                break;
              }
              for (; ue3 < 16;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              if (2 & r3.wrap && 35615 === c3) {
                r3.check = 0, je2[0] = 255 & c3, je2[1] = c3 >>> 8 & 255, r3.check = y2(r3.check, je2, 2, 0), c3 = 0, ue3 = 0, r3.mode = B2;
                break;
              }
              if (r3.flags = 0, r3.head && (r3.head.done = false), !(1 & r3.wrap) || (((255 & c3) << 8) + (c3 >> 8)) % 31) {
                e3.msg = "incorrect header check", r3.mode = ae2;
                break;
              }
              if ((15 & c3) !== F2) {
                e3.msg = "unknown compression method", r3.mode = ae2;
                break;
              }
              if (ue3 -= 4, ke2 = 8 + (15 & (c3 >>>= 4)), 0 === r3.wbits) r3.wbits = ke2;else if (ke2 > r3.wbits) {
                e3.msg = "invalid window size", r3.mode = ae2;
                break;
              }
              r3.dmax = 1 << ke2, e3.adler = r3.check = 1, r3.mode = 512 & c3 ? J2 : Z2, c3 = 0, ue3 = 0;
              break;
            case B2:
              for (; ue3 < 16;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              if (r3.flags = c3, (255 & r3.flags) !== F2) {
                e3.msg = "unknown compression method", r3.mode = ae2;
                break;
              }
              if (57344 & r3.flags) {
                e3.msg = "unknown header flags set", r3.mode = ae2;
                break;
              }
              r3.head && (r3.head.text = c3 >> 8 & 1), 512 & r3.flags && (je2[0] = 255 & c3, je2[1] = c3 >>> 8 & 255, r3.check = y2(r3.check, je2, 2, 0)), c3 = 0, ue3 = 0, r3.mode = I2;
            case I2:
              for (; ue3 < 32;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              r3.head && (r3.head.time = c3), 512 & r3.flags && (je2[0] = 255 & c3, je2[1] = c3 >>> 8 & 255, je2[2] = c3 >>> 16 & 255, je2[3] = c3 >>> 24 & 255, r3.check = y2(r3.check, je2, 4, 0)), c3 = 0, ue3 = 0, r3.mode = P2;
            case P2:
              for (; ue3 < 16;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              r3.head && (r3.head.xflags = 255 & c3, r3.head.os = c3 >> 8), 512 & r3.flags && (je2[0] = 255 & c3, je2[1] = c3 >>> 8 & 255, r3.check = y2(r3.check, je2, 2, 0)), c3 = 0, ue3 = 0, r3.mode = R2;
            case R2:
              if (1024 & r3.flags) {
                for (; ue3 < 16;) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                r3.length = c3, r3.head && (r3.head.extra_len = c3), 512 & r3.flags && (je2[0] = 255 & c3, je2[1] = c3 >>> 8 & 255, r3.check = y2(r3.check, je2, 2, 0)), c3 = 0, ue3 = 0;
              } else r3.head && (r3.head.extra = null);
              r3.mode = D2;
            case D2:
              if (1024 & r3.flags && ((de3 = r3.length) > f3 && (de3 = f3), de3 && (r3.head && (ke2 = r3.head.extra_len - r3.length, r3.head.extra || (r3.head.extra = new Array(r3.head.extra_len)), d2.arraySet(r3.head.extra, n3, s3, de3, ke2)), 512 & r3.flags && (r3.check = y2(r3.check, n3, de3, s3)), f3 -= de3, s3 += de3, r3.length -= de3), r3.length)) break e;
              r3.length = 0, r3.mode = M2;
            case M2:
              if (2048 & r3.flags) {
                if (0 === f3) break e;
                de3 = 0;
                do {
                  ke2 = n3[s3 + de3++], r3.head && ke2 && r3.length < 65536 && (r3.head.name += String.fromCharCode(ke2));
                } while (ke2 && de3 < f3);
                if (512 & r3.flags && (r3.check = y2(r3.check, n3, de3, s3)), f3 -= de3, s3 += de3, ke2) break e;
              } else r3.head && (r3.head.name = null);
              r3.length = 0, r3.mode = L2;
            case L2:
              if (4096 & r3.flags) {
                if (0 === f3) break e;
                de3 = 0;
                do {
                  ke2 = n3[s3 + de3++], r3.head && ke2 && r3.length < 65536 && (r3.head.comment += String.fromCharCode(ke2));
                } while (ke2 && de3 < f3);
                if (512 & r3.flags && (r3.check = y2(r3.check, n3, de3, s3)), f3 -= de3, s3 += de3, ke2) break e;
              } else r3.head && (r3.head.comment = null);
              r3.mode = z2;
            case z2:
              if (512 & r3.flags) {
                for (; ue3 < 16;) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                if (c3 !== (65535 & r3.check)) {
                  e3.msg = "header crc mismatch", r3.mode = ae2;
                  break;
                }
                c3 = 0, ue3 = 0;
              }
              r3.head && (r3.head.hcrc = r3.flags >> 9 & 1, r3.head.done = true), e3.adler = r3.check = 0, r3.mode = Z2;
              break;
            case J2:
              for (; ue3 < 32;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              e3.adler = r3.check = i2(c3), c3 = 0, ue3 = 0, r3.mode = U2;
            case U2:
              if (0 === r3.havedict) return e3.next_out = a3, e3.avail_out = h3, e3.next_in = s3, e3.avail_in = f3, r3.hold = c3, r3.bits = ue3, S2;
              e3.adler = r3.check = 1, r3.mode = Z2;
            case Z2:
              if (t3 === k2 || t3 === x2) break e;
            case K2:
              if (r3.last) {
                c3 >>>= 7 & ue3, ue3 -= 7 & ue3, r3.mode = ne2;
                break;
              }
              for (; ue3 < 3;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              switch (r3.last = 1 & c3, ue3 -= 1, 3 & (c3 >>>= 1)) {
                case 0:
                  r3.mode = q2;
                  break;
                case 1:
                  if (l2(r3), r3.mode = Y2, t3 === x2) {
                    c3 >>>= 2, ue3 -= 2;
                    break e;
                  }
                  break;
                case 2:
                  r3.mode = H2;
                  break;
                case 3:
                  e3.msg = "invalid block type", r3.mode = ae2;
              }
              c3 >>>= 2, ue3 -= 2;
              break;
            case q2:
              for (c3 >>>= 7 & ue3, ue3 -= 7 & ue3; ue3 < 32;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              if ((65535 & c3) != (c3 >>> 16 ^ 65535)) {
                e3.msg = "invalid stored block lengths", r3.mode = ae2;
                break;
              }
              if (r3.length = 65535 & c3, c3 = 0, ue3 = 0, r3.mode = $2, t3 === x2) break e;
            case $2:
              r3.mode = V2;
            case V2:
              if (de3 = r3.length) {
                if (de3 > f3 && (de3 = f3), de3 > h3 && (de3 = h3), 0 === de3) break e;
                d2.arraySet(o3, n3, s3, de3, a3), f3 -= de3, s3 += de3, h3 -= de3, a3 += de3, r3.length -= de3;
                break;
              }
              r3.mode = Z2;
              break;
            case H2:
              for (; ue3 < 14;) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              if (r3.nlen = 257 + (31 & c3), c3 >>>= 5, ue3 -= 5, r3.ndist = 1 + (31 & c3), c3 >>>= 5, ue3 -= 5, r3.ncode = 4 + (15 & c3), c3 >>>= 4, ue3 -= 4, r3.nlen > 286 || r3.ndist > 30) {
                e3.msg = "too many length or distance symbols", r3.mode = ae2;
                break;
              }
              r3.have = 0, r3.mode = W2;
            case W2:
              for (; r3.have < r3.ncode;) {
                for (; ue3 < 3;) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                r3.lens[Te2[r3.have++]] = 7 & c3, c3 >>>= 3, ue3 -= 3;
              }
              for (; r3.have < 19;) r3.lens[Te2[r3.have++]] = 0;
              if (r3.lencode = r3.lendyn, r3.lenbits = 7, Oe2 = {
                bits: r3.lenbits
              }, xe2 = v2(g2, r3.lens, 0, 19, r3.lencode, 0, r3.work, Oe2), r3.lenbits = Oe2.bits, xe2) {
                e3.msg = "invalid code lengths set", r3.mode = ae2;
                break;
              }
              r3.have = 0, r3.mode = G2;
            case G2:
              for (; r3.have < r3.nlen + r3.ndist;) {
                for (; ve2 = (Se2 = r3.lencode[c3 & (1 << r3.lenbits) - 1]) >>> 16 & 255, ge2 = 65535 & Se2, !((me2 = Se2 >>> 24) <= ue3);) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                if (ge2 < 16) c3 >>>= me2, ue3 -= me2, r3.lens[r3.have++] = ge2;else {
                  if (16 === ge2) {
                    for (Ae2 = me2 + 2; ue3 < Ae2;) {
                      if (0 === f3) break e;
                      f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                    }
                    if (c3 >>>= me2, ue3 -= me2, 0 === r3.have) {
                      e3.msg = "invalid bit length repeat", r3.mode = ae2;
                      break;
                    }
                    ke2 = r3.lens[r3.have - 1], de3 = 3 + (3 & c3), c3 >>>= 2, ue3 -= 2;
                  } else if (17 === ge2) {
                    for (Ae2 = me2 + 3; ue3 < Ae2;) {
                      if (0 === f3) break e;
                      f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                    }
                    ue3 -= me2, ke2 = 0, de3 = 3 + (7 & (c3 >>>= me2)), c3 >>>= 3, ue3 -= 3;
                  } else {
                    for (Ae2 = me2 + 7; ue3 < Ae2;) {
                      if (0 === f3) break e;
                      f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                    }
                    ue3 -= me2, ke2 = 0, de3 = 11 + (127 & (c3 >>>= me2)), c3 >>>= 7, ue3 -= 7;
                  }
                  if (r3.have + de3 > r3.nlen + r3.ndist) {
                    e3.msg = "invalid bit length repeat", r3.mode = ae2;
                    break;
                  }
                  for (; de3--;) r3.lens[r3.have++] = ke2;
                }
              }
              if (r3.mode === ae2) break;
              if (0 === r3.lens[256]) {
                e3.msg = "invalid code -- missing end-of-block", r3.mode = ae2;
                break;
              }
              if (r3.lenbits = 9, Oe2 = {
                bits: r3.lenbits
              }, xe2 = v2(b2, r3.lens, 0, r3.nlen, r3.lencode, 0, r3.work, Oe2), r3.lenbits = Oe2.bits, xe2) {
                e3.msg = "invalid literal/lengths set", r3.mode = ae2;
                break;
              }
              if (r3.distbits = 6, r3.distcode = r3.distdyn, Oe2 = {
                bits: r3.distbits
              }, xe2 = v2(_2, r3.lens, r3.nlen, r3.ndist, r3.distcode, 0, r3.work, Oe2), r3.distbits = Oe2.bits, xe2) {
                e3.msg = "invalid distances set", r3.mode = ae2;
                break;
              }
              if (r3.mode = Y2, t3 === x2) break e;
            case Y2:
              r3.mode = Q2;
            case Q2:
              if (f3 >= 6 && h3 >= 258) {
                e3.next_out = a3, e3.avail_out = h3, e3.next_in = s3, e3.avail_in = f3, r3.hold = c3, r3.bits = ue3, m2(e3, ce3), a3 = e3.next_out, o3 = e3.output, h3 = e3.avail_out, s3 = e3.next_in, n3 = e3.input, f3 = e3.avail_in, c3 = r3.hold, ue3 = r3.bits, r3.mode === Z2 && (r3.back = -1);
                break;
              }
              for (r3.back = 0; ve2 = (Se2 = r3.lencode[c3 & (1 << r3.lenbits) - 1]) >>> 16 & 255, ge2 = 65535 & Se2, !((me2 = Se2 >>> 24) <= ue3);) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              if (ve2 && 0 == (240 & ve2)) {
                for (be2 = me2, _e2 = ve2, we2 = ge2; ve2 = (Se2 = r3.lencode[we2 + ((c3 & (1 << be2 + _e2) - 1) >> be2)]) >>> 16 & 255, ge2 = 65535 & Se2, !(be2 + (me2 = Se2 >>> 24) <= ue3);) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                c3 >>>= be2, ue3 -= be2, r3.back += be2;
              }
              if (c3 >>>= me2, ue3 -= me2, r3.back += me2, r3.length = ge2, 0 === ve2) {
                r3.mode = ie2;
                break;
              }
              if (32 & ve2) {
                r3.back = -1, r3.mode = Z2;
                break;
              }
              if (64 & ve2) {
                e3.msg = "invalid literal/length code", r3.mode = ae2;
                break;
              }
              r3.extra = 15 & ve2, r3.mode = X2;
            case X2:
              if (r3.extra) {
                for (Ae2 = r3.extra; ue3 < Ae2;) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                r3.length += c3 & (1 << r3.extra) - 1, c3 >>>= r3.extra, ue3 -= r3.extra, r3.back += r3.extra;
              }
              r3.was = r3.length, r3.mode = ee2;
            case ee2:
              for (; ve2 = (Se2 = r3.distcode[c3 & (1 << r3.distbits) - 1]) >>> 16 & 255, ge2 = 65535 & Se2, !((me2 = Se2 >>> 24) <= ue3);) {
                if (0 === f3) break e;
                f3--, c3 += n3[s3++] << ue3, ue3 += 8;
              }
              if (0 == (240 & ve2)) {
                for (be2 = me2, _e2 = ve2, we2 = ge2; ve2 = (Se2 = r3.distcode[we2 + ((c3 & (1 << be2 + _e2) - 1) >> be2)]) >>> 16 & 255, ge2 = 65535 & Se2, !(be2 + (me2 = Se2 >>> 24) <= ue3);) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                c3 >>>= be2, ue3 -= be2, r3.back += be2;
              }
              if (c3 >>>= me2, ue3 -= me2, r3.back += me2, 64 & ve2) {
                e3.msg = "invalid distance code", r3.mode = ae2;
                break;
              }
              r3.offset = ge2, r3.extra = 15 & ve2, r3.mode = te2;
            case te2:
              if (r3.extra) {
                for (Ae2 = r3.extra; ue3 < Ae2;) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                r3.offset += c3 & (1 << r3.extra) - 1, c3 >>>= r3.extra, ue3 -= r3.extra, r3.back += r3.extra;
              }
              if (r3.offset > r3.dmax) {
                e3.msg = "invalid distance too far back", r3.mode = ae2;
                break;
              }
              r3.mode = re2;
            case re2:
              if (0 === h3) break e;
              if (de3 = ce3 - h3, r3.offset > de3) {
                if ((de3 = r3.offset - de3) > r3.whave && r3.sane) {
                  e3.msg = "invalid distance too far back", r3.mode = ae2;
                  break;
                }
                de3 > r3.wnext ? (de3 -= r3.wnext, pe2 = r3.wsize - de3) : pe2 = r3.wnext - de3, de3 > r3.length && (de3 = r3.length), ye2 = r3.window;
              } else ye2 = o3, pe2 = a3 - r3.offset, de3 = r3.length;
              de3 > h3 && (de3 = h3), h3 -= de3, r3.length -= de3;
              do {
                o3[a3++] = ye2[pe2++];
              } while (--de3);
              0 === r3.length && (r3.mode = Q2);
              break;
            case ie2:
              if (0 === h3) break e;
              o3[a3++] = r3.length, h3--, r3.mode = Q2;
              break;
            case ne2:
              if (r3.wrap) {
                for (; ue3 < 32;) {
                  if (0 === f3) break e;
                  f3--, c3 |= n3[s3++] << ue3, ue3 += 8;
                }
                if (ce3 -= h3, e3.total_out += ce3, r3.total += ce3, ce3 && (e3.adler = r3.check = r3.flags ? y2(r3.check, o3, ce3, a3 - ce3) : p2(r3.check, o3, ce3, a3 - ce3)), ce3 = h3, (r3.flags ? c3 : i2(c3)) !== r3.check) {
                  e3.msg = "incorrect data check", r3.mode = ae2;
                  break;
                }
                c3 = 0, ue3 = 0;
              }
              r3.mode = oe2;
            case oe2:
              if (r3.wrap && r3.flags) {
                for (; ue3 < 32;) {
                  if (0 === f3) break e;
                  f3--, c3 += n3[s3++] << ue3, ue3 += 8;
                }
                if (c3 !== (4294967295 & r3.total)) {
                  e3.msg = "incorrect length check", r3.mode = ae2;
                  break;
                }
                c3 = 0, ue3 = 0;
              }
              r3.mode = se2;
            case se2:
              xe2 = A2;
              break e;
            case ae2:
              xe2 = T2;
              break e;
            case fe2:
              return E2;
            case le2:
            default:
              return j2;
          }
          return e3.next_out = a3, e3.avail_out = h3, e3.next_in = s3, e3.avail_in = f3, r3.hold = c3, r3.bits = ue3, (r3.wsize || ce3 !== e3.avail_out && r3.mode < ae2 && (r3.mode < ne2 || t3 !== w2)) && u2(e3, e3.output, e3.next_out, ce3 - e3.avail_out) ? (r3.mode = fe2, E2) : (he3 -= e3.avail_in, ce3 -= e3.avail_out, e3.total_in += he3, e3.total_out += ce3, r3.total += ce3, r3.wrap && ce3 && (e3.adler = r3.check = r3.flags ? y2(r3.check, o3, ce3, e3.next_out - ce3) : p2(r3.check, o3, ce3, e3.next_out - ce3)), e3.data_type = r3.bits + (r3.last ? 64 : 0) + (r3.mode === Z2 ? 128 : 0) + (r3.mode === Y2 || r3.mode === $2 ? 256 : 0), (0 === he3 && 0 === ce3 || t3 === w2) && xe2 === O2 && (xe2 = N2), xe2);
        }, t2.inflateEnd = function (e3) {
          if (!e3 || !e3.state) return j2;
          var t3 = e3.state;
          return t3.window && (t3.window = null), e3.state = null, O2;
        }, t2.inflateGetHeader = function (e3, t3) {
          var r3;
          return e3 && e3.state ? 0 == (2 & (r3 = e3.state).wrap) ? j2 : (r3.head = t3, t3.done = false, O2) : j2;
        }, t2.inflateSetDictionary = function (e3, t3) {
          var r3,
            i3 = t3.length;
          return e3 && e3.state ? 0 !== (r3 = e3.state).wrap && r3.mode !== U2 ? j2 : r3.mode === U2 && p2(1, t3, i3, 0) !== r3.check ? T2 : u2(e3, t3, i3, i3) ? (r3.mode = fe2, E2) : (r3.havedict = 1, O2) : j2;
        }, t2.inflateInfo = "pako inflate (from Nodeca project)";
      }, function (e2, t2, r2) {
        e2.exports = function (e3, t3, r3, i2) {
          for (var n2 = 65535 & e3 | 0, o2 = e3 >>> 16 & 65535 | 0, s2 = 0; 0 !== r3;) {
            r3 -= s2 = r3 > 2e3 ? 2e3 : r3;
            do {
              o2 = o2 + (n2 = n2 + t3[i2++] | 0) | 0;
            } while (--s2);
            n2 %= 65521, o2 %= 65521;
          }
          return n2 | o2 << 16 | 0;
        };
      }, function (e2, t2, r2) {
        var i2 = function () {
          for (var e3, t3 = [], r3 = 0; r3 < 256; r3++) {
            e3 = r3;
            for (var i3 = 0; i3 < 8; i3++) e3 = 1 & e3 ? 3988292384 ^ e3 >>> 1 : e3 >>> 1;
            t3[r3] = e3;
          }
          return t3;
        }();
        e2.exports = function (e3, t3, r3, n2) {
          var o2 = i2,
            s2 = n2 + r3;
          e3 ^= -1;
          for (var a2 = n2; a2 < s2; a2++) e3 = e3 >>> 8 ^ o2[255 & (e3 ^ t3[a2])];
          return -1 ^ e3;
        };
      }, function (e2, t2, r2) {
        e2.exports = function (e3, t3) {
          var r3, i2, n2, o2, s2, a2, f2, l2, u2, h2, c2, d2, p2, y2, m2, v2, g2, b2, _2, w2, k2, x2, O2, A2, S2;
          r3 = e3.state, i2 = e3.next_in, A2 = e3.input, n2 = i2 + (e3.avail_in - 5), o2 = e3.next_out, S2 = e3.output, s2 = o2 - (t3 - e3.avail_out), a2 = o2 + (e3.avail_out - 257), f2 = r3.dmax, l2 = r3.wsize, u2 = r3.whave, h2 = r3.wnext, c2 = r3.window, d2 = r3.hold, p2 = r3.bits, y2 = r3.lencode, m2 = r3.distcode, v2 = (1 << r3.lenbits) - 1, g2 = (1 << r3.distbits) - 1;
          e: do {
            p2 < 15 && (d2 += A2[i2++] << p2, p2 += 8, d2 += A2[i2++] << p2, p2 += 8), b2 = y2[d2 & v2];
            t: for (;;) {
              if (d2 >>>= _2 = b2 >>> 24, p2 -= _2, 0 == (_2 = b2 >>> 16 & 255)) S2[o2++] = 65535 & b2;else {
                if (!(16 & _2)) {
                  if (0 == (64 & _2)) {
                    b2 = y2[(65535 & b2) + (d2 & (1 << _2) - 1)];
                    continue t;
                  }
                  if (32 & _2) {
                    r3.mode = 12;
                    break e;
                  }
                  e3.msg = "invalid literal/length code", r3.mode = 30;
                  break e;
                }
                w2 = 65535 & b2, (_2 &= 15) && (p2 < _2 && (d2 += A2[i2++] << p2, p2 += 8), w2 += d2 & (1 << _2) - 1, d2 >>>= _2, p2 -= _2), p2 < 15 && (d2 += A2[i2++] << p2, p2 += 8, d2 += A2[i2++] << p2, p2 += 8), b2 = m2[d2 & g2];
                r: for (;;) {
                  if (d2 >>>= _2 = b2 >>> 24, p2 -= _2, !(16 & (_2 = b2 >>> 16 & 255))) {
                    if (0 == (64 & _2)) {
                      b2 = m2[(65535 & b2) + (d2 & (1 << _2) - 1)];
                      continue r;
                    }
                    e3.msg = "invalid distance code", r3.mode = 30;
                    break e;
                  }
                  if (k2 = 65535 & b2, p2 < (_2 &= 15) && (d2 += A2[i2++] << p2, (p2 += 8) < _2 && (d2 += A2[i2++] << p2, p2 += 8)), (k2 += d2 & (1 << _2) - 1) > f2) {
                    e3.msg = "invalid distance too far back", r3.mode = 30;
                    break e;
                  }
                  if (d2 >>>= _2, p2 -= _2, k2 > (_2 = o2 - s2)) {
                    if ((_2 = k2 - _2) > u2 && r3.sane) {
                      e3.msg = "invalid distance too far back", r3.mode = 30;
                      break e;
                    }
                    if (x2 = 0, O2 = c2, 0 === h2) {
                      if (x2 += l2 - _2, _2 < w2) {
                        w2 -= _2;
                        do {
                          S2[o2++] = c2[x2++];
                        } while (--_2);
                        x2 = o2 - k2, O2 = S2;
                      }
                    } else if (h2 < _2) {
                      if (x2 += l2 + h2 - _2, (_2 -= h2) < w2) {
                        w2 -= _2;
                        do {
                          S2[o2++] = c2[x2++];
                        } while (--_2);
                        if (x2 = 0, h2 < w2) {
                          w2 -= _2 = h2;
                          do {
                            S2[o2++] = c2[x2++];
                          } while (--_2);
                          x2 = o2 - k2, O2 = S2;
                        }
                      }
                    } else if (x2 += h2 - _2, _2 < w2) {
                      w2 -= _2;
                      do {
                        S2[o2++] = c2[x2++];
                      } while (--_2);
                      x2 = o2 - k2, O2 = S2;
                    }
                    for (; w2 > 2;) S2[o2++] = O2[x2++], S2[o2++] = O2[x2++], S2[o2++] = O2[x2++], w2 -= 3;
                    w2 && (S2[o2++] = O2[x2++], w2 > 1 && (S2[o2++] = O2[x2++]));
                  } else {
                    x2 = o2 - k2;
                    do {
                      S2[o2++] = S2[x2++], S2[o2++] = S2[x2++], S2[o2++] = S2[x2++], w2 -= 3;
                    } while (w2 > 2);
                    w2 && (S2[o2++] = S2[x2++], w2 > 1 && (S2[o2++] = S2[x2++]));
                  }
                  break;
                }
              }
              break;
            }
          } while (i2 < n2 && o2 < a2);
          i2 -= w2 = p2 >> 3, d2 &= (1 << (p2 -= w2 << 3)) - 1, e3.next_in = i2, e3.next_out = o2, e3.avail_in = i2 < n2 ? n2 - i2 + 5 : 5 - (i2 - n2), e3.avail_out = o2 < a2 ? a2 - o2 + 257 : 257 - (o2 - a2), r3.hold = d2, r3.bits = p2;
        };
      }, function (e2, t2, r2) {
        var i2 = r2(8),
          n2 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
          o2 = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
          s2 = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
          a2 = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        e2.exports = function (e3, t3, r3, f2, l2, u2, h2, c2) {
          var d2,
            p2,
            y2,
            m2,
            v2,
            g2,
            b2,
            _2,
            w2,
            k2 = c2.bits,
            x2 = 0,
            O2 = 0,
            A2 = 0,
            S2 = 0,
            j2 = 0,
            T2 = 0,
            E2 = 0,
            N2 = 0,
            F2 = 0,
            C2 = 0,
            B2 = null,
            I2 = 0,
            P2 = new i2.Buf16(16),
            R2 = new i2.Buf16(16),
            D2 = null,
            M2 = 0;
          for (x2 = 0; x2 <= 15; x2++) P2[x2] = 0;
          for (O2 = 0; O2 < f2; O2++) P2[t3[r3 + O2]]++;
          for (j2 = k2, S2 = 15; S2 >= 1 && 0 === P2[S2]; S2--);
          if (j2 > S2 && (j2 = S2), 0 === S2) return l2[u2++] = 20971520, l2[u2++] = 20971520, c2.bits = 1, 0;
          for (A2 = 1; A2 < S2 && 0 === P2[A2]; A2++);
          for (j2 < A2 && (j2 = A2), N2 = 1, x2 = 1; x2 <= 15; x2++) if (N2 <<= 1, (N2 -= P2[x2]) < 0) return -1;
          if (N2 > 0 && (0 === e3 || 1 !== S2)) return -1;
          for (R2[1] = 0, x2 = 1; x2 < 15; x2++) R2[x2 + 1] = R2[x2] + P2[x2];
          for (O2 = 0; O2 < f2; O2++) 0 !== t3[r3 + O2] && (h2[R2[t3[r3 + O2]]++] = O2);
          if (0 === e3 ? (B2 = D2 = h2, g2 = 19) : 1 === e3 ? (B2 = n2, I2 -= 257, D2 = o2, M2 -= 257, g2 = 256) : (B2 = s2, D2 = a2, g2 = -1), C2 = 0, O2 = 0, x2 = A2, v2 = u2, T2 = j2, E2 = 0, y2 = -1, m2 = (F2 = 1 << j2) - 1, 1 === e3 && F2 > 852 || 2 === e3 && F2 > 592) return 1;
          for (;;) {
            b2 = x2 - E2, h2[O2] < g2 ? (_2 = 0, w2 = h2[O2]) : h2[O2] > g2 ? (_2 = D2[M2 + h2[O2]], w2 = B2[I2 + h2[O2]]) : (_2 = 96, w2 = 0), d2 = 1 << x2 - E2, A2 = p2 = 1 << T2;
            do {
              l2[v2 + (C2 >> E2) + (p2 -= d2)] = b2 << 24 | _2 << 16 | w2 | 0;
            } while (0 !== p2);
            for (d2 = 1 << x2 - 1; C2 & d2;) d2 >>= 1;
            if (0 !== d2 ? (C2 &= d2 - 1, C2 += d2) : C2 = 0, O2++, 0 == --P2[x2]) {
              if (x2 === S2) break;
              x2 = t3[r3 + h2[O2]];
            }
            if (x2 > j2 && (C2 & m2) !== y2) {
              for (0 === E2 && (E2 = j2), v2 += A2, N2 = 1 << (T2 = x2 - E2); T2 + E2 < S2 && !((N2 -= P2[T2 + E2]) <= 0);) T2++, N2 <<= 1;
              if (F2 += 1 << T2, 1 === e3 && F2 > 852 || 2 === e3 && F2 > 592) return 1;
              l2[y2 = C2 & m2] = j2 << 24 | T2 << 16 | v2 - u2 | 0;
            }
          }
          return 0 !== C2 && (l2[v2 + C2] = x2 - E2 << 24 | 64 << 16 | 0), c2.bits = j2, 0;
        };
      }, function (e2, t2, r2) {
        function i2(e3, t3) {
          if (t3 < 65534 && (e3.subarray && s2 || !e3.subarray && o2)) return String.fromCharCode.apply(null, n2.shrinkBuf(e3, t3));
          for (var r3 = "", i3 = 0; i3 < t3; i3++) r3 += String.fromCharCode(e3[i3]);
          return r3;
        }
        var n2 = r2(8),
          o2 = true,
          s2 = true;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch (e3) {
          o2 = false;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (e3) {
          s2 = false;
        }
        for (var a2 = new n2.Buf8(256), f2 = 0; f2 < 256; f2++) a2[f2] = f2 >= 252 ? 6 : f2 >= 248 ? 5 : f2 >= 240 ? 4 : f2 >= 224 ? 3 : f2 >= 192 ? 2 : 1;
        a2[254] = a2[254] = 1, t2.string2buf = function (e3) {
          var t3,
            r3,
            i3,
            o3,
            s3,
            a3 = e3.length,
            f3 = 0;
          for (o3 = 0; o3 < a3; o3++) 55296 == (64512 & (r3 = e3.charCodeAt(o3))) && o3 + 1 < a3 && 56320 == (64512 & (i3 = e3.charCodeAt(o3 + 1))) && (r3 = 65536 + (r3 - 55296 << 10) + (i3 - 56320), o3++), f3 += r3 < 128 ? 1 : r3 < 2048 ? 2 : r3 < 65536 ? 3 : 4;
          for (t3 = new n2.Buf8(f3), s3 = 0, o3 = 0; s3 < f3; o3++) 55296 == (64512 & (r3 = e3.charCodeAt(o3))) && o3 + 1 < a3 && 56320 == (64512 & (i3 = e3.charCodeAt(o3 + 1))) && (r3 = 65536 + (r3 - 55296 << 10) + (i3 - 56320), o3++), r3 < 128 ? t3[s3++] = r3 : r3 < 2048 ? (t3[s3++] = 192 | r3 >>> 6, t3[s3++] = 128 | 63 & r3) : r3 < 65536 ? (t3[s3++] = 224 | r3 >>> 12, t3[s3++] = 128 | r3 >>> 6 & 63, t3[s3++] = 128 | 63 & r3) : (t3[s3++] = 240 | r3 >>> 18, t3[s3++] = 128 | r3 >>> 12 & 63, t3[s3++] = 128 | r3 >>> 6 & 63, t3[s3++] = 128 | 63 & r3);
          return t3;
        }, t2.buf2binstring = function (e3) {
          return i2(e3, e3.length);
        }, t2.binstring2buf = function (e3) {
          for (var t3 = new n2.Buf8(e3.length), r3 = 0, i3 = t3.length; r3 < i3; r3++) t3[r3] = e3.charCodeAt(r3);
          return t3;
        }, t2.buf2string = function (e3, t3) {
          var r3,
            n3,
            o3,
            s3,
            f3 = t3 || e3.length,
            l2 = new Array(2 * f3);
          for (n3 = 0, r3 = 0; r3 < f3;) if ((o3 = e3[r3++]) < 128) l2[n3++] = o3;else if ((s3 = a2[o3]) > 4) l2[n3++] = 65533, r3 += s3 - 1;else {
            for (o3 &= 2 === s3 ? 31 : 3 === s3 ? 15 : 7; s3 > 1 && r3 < f3;) o3 = o3 << 6 | 63 & e3[r3++], s3--;
            s3 > 1 ? l2[n3++] = 65533 : o3 < 65536 ? l2[n3++] = o3 : (o3 -= 65536, l2[n3++] = 55296 | o3 >> 10 & 1023, l2[n3++] = 56320 | 1023 & o3);
          }
          return i2(l2, n3);
        }, t2.utf8border = function (e3, t3) {
          var r3;
          for ((t3 = t3 || e3.length) > e3.length && (t3 = e3.length), r3 = t3 - 1; r3 >= 0 && 128 == (192 & e3[r3]);) r3--;
          return r3 < 0 ? t3 : 0 === r3 ? t3 : r3 + a2[e3[r3]] > t3 ? r3 : t3;
        };
      }, function (e2, t2, r2) {
        e2.exports = {
          Z_NO_FLUSH: 0,
          Z_PARTIAL_FLUSH: 1,
          Z_SYNC_FLUSH: 2,
          Z_FULL_FLUSH: 3,
          Z_FINISH: 4,
          Z_BLOCK: 5,
          Z_TREES: 6,
          Z_OK: 0,
          Z_STREAM_END: 1,
          Z_NEED_DICT: 2,
          Z_ERRNO: -1,
          Z_STREAM_ERROR: -2,
          Z_DATA_ERROR: -3,
          Z_BUF_ERROR: -5,
          Z_NO_COMPRESSION: 0,
          Z_BEST_SPEED: 1,
          Z_BEST_COMPRESSION: 9,
          Z_DEFAULT_COMPRESSION: -1,
          Z_FILTERED: 1,
          Z_HUFFMAN_ONLY: 2,
          Z_RLE: 3,
          Z_FIXED: 4,
          Z_DEFAULT_STRATEGY: 0,
          Z_BINARY: 0,
          Z_TEXT: 1,
          Z_UNKNOWN: 2,
          Z_DEFLATED: 8
        };
      }, function (e2, t2, r2) {
        e2.exports = {
          2: "need dictionary",
          1: "stream end",
          0: "",
          "-1": "file error",
          "-2": "stream error",
          "-3": "data error",
          "-4": "insufficient memory",
          "-5": "buffer error",
          "-6": "incompatible version"
        };
      }, function (e2, t2, r2) {
        e2.exports = function () {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
      }, function (e2, t2, r2) {
        e2.exports = function () {
          this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
        };
      }, function (e2, t2, r2) {
        e2.exports = function (e3) {
          function t3(i2) {
            if (r3[i2]) return r3[i2].exports;
            var n2 = r3[i2] = {
              i: i2,
              l: false,
              exports: {}
            };
            return e3[i2].call(n2.exports, n2, n2.exports, t3), n2.l = true, n2.exports;
          }
          var r3 = {};
          return t3.m = e3, t3.c = r3, t3.d = function (e4, r4, i2) {
            t3.o(e4, r4) || Object.defineProperty(e4, r4, {
              configurable: false,
              enumerable: true,
              get: i2
            });
          }, t3.n = function (e4) {
            var r4 = e4 && e4.__esModule ? function () {
              return e4.default;
            } : function () {
              return e4;
            };
            return t3.d(r4, "a", r4), r4;
          }, t3.o = function (e4, t4) {
            return Object.prototype.hasOwnProperty.call(e4, t4);
          }, t3.p = "", t3(t3.s = 0);
        }([function (e3, t3, r3) {
          Object.defineProperty(t3, "__esModule", {
            value: true
          });
          var i2 = r3(1);
          e3.exports = i2.ValueAnimator;
        }, function (e3, t3, r3) {
          Object.defineProperty(t3, "__esModule", {
            value: true
          });
          var i2 = function () {
            function e4() {
              this.startValue = 0, this.endValue = 0, this.duration = 0, this.loops = 1, this.fillRule = 0, this.onStart = function () {}, this.onUpdate = function () {}, this.onEnd = function () {}, this.mRunning = false, this.mStartTime = 0, this.mCurrentFrication = 0, this.mReverse = false;
            }
            return e4.prototype.start = function (e5) {
              void 0 === e5 && (e5 = void 0), this.doStart(false, e5);
            }, e4.prototype.reverse = function (e5) {
              void 0 === e5 && (e5 = void 0), this.doStart(true, e5);
            }, e4.prototype.stop = function () {
              this.doStop();
            }, Object.defineProperty(e4.prototype, "animatedValue", {
              get: function () {
                return (this.endValue - this.startValue) * this.mCurrentFrication + this.startValue;
              },
              enumerable: true,
              configurable: true
            }), e4.prototype.doStart = function (t4, r4) {
              void 0 === t4 && (t4 = false), void 0 === r4 && (r4 = void 0), this.mReverse = t4, this.mRunning = true, this.mStartTime = e4.currentTimeMillsecond(), r4 && (this.mStartTime -= t4 ? (1 - r4 / (this.endValue - this.startValue)) * this.duration : r4 / (this.endValue - this.startValue) * this.duration), this.mCurrentFrication = 0, this.onStart(), this.doFrame();
            }, e4.prototype.doStop = function () {
              this.mRunning = false;
            }, e4.prototype.doFrame = function () {
              this.mRunning && (this.doDeltaTime(e4.currentTimeMillsecond() - this.mStartTime), this.mRunning && e4.requestAnimationFrame(this.doFrame.bind(this)));
            }, e4.prototype.doDeltaTime = function (e5) {
              e5 >= this.duration * this.loops ? (this.mCurrentFrication = 1 === this.fillRule ? 0 : 1, this.mRunning = false) : (this.mCurrentFrication = e5 % this.duration / this.duration, this.mReverse && (this.mCurrentFrication = 1 - this.mCurrentFrication)), this.onUpdate(this.animatedValue), false === this.mRunning && this.onEnd();
            }, e4.currentTimeMillsecond = function () {
              return "undefined" == typeof performance ? (/* @__PURE__ */new Date()).getTime() : performance.now();
            }, e4.requestAnimationFrame = function (e5) {
              return "undefined" == typeof requestAnimationFrame ? setTimeout(e5, 16) : window.requestAnimationFrame(e5);
            }, e4;
          }();
          t3.ValueAnimator = i2;
        }]);
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.Player = void 0;
        var i2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e3) {
            return typeof e3;
          } : function (e3) {
            return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
          },
          n2 = function () {
            function e3(e4, t3) {
              for (var r3 = 0; r3 < t3.length; r3++) {
                var i3 = t3[r3];
                i3.enumerable = i3.enumerable || false, i3.configurable = true, "value" in i3 && (i3.writable = true), Object.defineProperty(e4, i3.key, i3);
              }
            }
            return function (t3, r3, i3) {
              return r3 && e3(t3.prototype, r3), i3 && e3(t3, i3), t3;
            };
          }(),
          o2 = r2(65),
          s2 = r2(62);
        t2.Player = function () {
          function e3(t3) {
            (function (e4, t4) {
              if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            })(this, e3), this.loops = 0, this.clearsAfterStop = true, this.fillMode = "Forward", this._asChild = false, this._container = void 0, this._renderer = void 0, this._animator = void 0, this._drawingCanvas = void 0, this._contentMode = "AspectFit", this._videoItem = void 0, this._forwardAnimating = false, this._currentFrame = 0, this._dynamicImage = {}, this._dynamicImageTransform = {}, this._dynamicText = {}, this._onFinished = void 0, this._onFrame = void 0, this._onPercentage = void 0, this._container = "string" == typeof t3 ? document.querySelector(t3) : t3, this._asChild = void 0 === t3, this._init();
          }
          return n2(e3, [{
            key: "setVideoItem",
            value: function (e4) {
              this._currentFrame = 0, this._videoItem = e4, this._renderer.prepare(), this.clear(), this._update();
            }
          }, {
            key: "setContentMode",
            value: function (e4) {
              this._contentMode = e4, this._update();
            }
          }, {
            key: "setClipsToBounds",
            value: function (e4) {
              this._container instanceof HTMLDivElement && (this._container.style.overflowX = this._container.style.overflowY = e4 ? "hidden" : void 0);
            }
          }, {
            key: "startAnimation",
            value: function (e4) {
              this.stopAnimation(false), this._doStart(void 0, e4, void 0);
            }
          }, {
            key: "startAnimationWithRange",
            value: function (e4, t3) {
              this.stopAnimation(false), this._doStart(e4, t3, void 0);
            }
          }, {
            key: "pauseAnimation",
            value: function () {
              this.stopAnimation(false);
            }
          }, {
            key: "stopAnimation",
            value: function (e4) {
              this._forwardAnimating = false, void 0 !== this._animator && this._animator.stop(), void 0 === e4 && (e4 = this.clearsAfterStop), e4 && this.clear();
            }
          }, {
            key: "clear",
            value: function () {
              this._renderer.clear(), this._renderer.clearAudios();
            }
          }, {
            key: "stepToFrame",
            value: function (e4, t3) {
              e4 >= this._videoItem.frames || e4 < 0 || (this.pauseAnimation(), this._currentFrame = e4, this._update(), t3 && this._doStart(void 0, false, this._currentFrame));
            }
          }, {
            key: "stepToPercentage",
            value: function (e4, t3) {
              var r3 = parseInt(e4 * this._videoItem.frames);
              r3 >= this._videoItem.frames && r3 > 0 && (r3 = this._videoItem.frames - 1), this.stepToFrame(r3, t3);
            }
          }, {
            key: "setImage",
            value: function (e4, t3, r3) {
              this._dynamicImage[t3] = e4, void 0 !== r3 && r3 instanceof Array && 6 == r3.length && (this._dynamicImageTransform[t3] = r3);
            }
          }, {
            key: "setText",
            value: function (e4, t3) {
              var r3 = "string" == typeof e4 ? e4 : e4.text,
                n3 = ("object" === (void 0 === e4 ? "undefined" : i2(e4)) ? e4.size : "14px") || "14px",
                o3 = ("object" === (void 0 === e4 ? "undefined" : i2(e4)) ? e4.family : "Arial") || "Arial",
                s3 = ("object" === (void 0 === e4 ? "undefined" : i2(e4)) ? e4.color : "#000000") || "#000000",
                a2 = ("object" === (void 0 === e4 ? "undefined" : i2(e4)) ? e4.offset : {
                  x: 0,
                  y: 0
                }) || {
                  x: 0,
                  y: 0
                };
              this._dynamicText[t3] = {
                text: r3,
                style: n3 + " " + o3,
                color: s3,
                offset: a2
              };
            }
          }, {
            key: "clearDynamicObjects",
            value: function () {
              this._dynamicImage = {}, this._dynamicImageTransform = {}, this._dynamicText = {};
            }
          }, {
            key: "onFinished",
            value: function (e4) {
              this._onFinished = e4;
            }
          }, {
            key: "onFrame",
            value: function (e4) {
              this._onFrame = e4;
            }
          }, {
            key: "onPercentage",
            value: function (e4) {
              this._onPercentage = e4;
            }
          }, {
            key: "drawOnContext",
            value: function (e4, t3, r3, i3, n3) {
              this._drawingCanvas && this._videoItem && e4.drawImage(this._drawingCanvas, t3, r3, i3 || this._videoItem.videoSize.width, n3 || this._videoItem.videoSize.height);
            }
          }, {
            key: "_init",
            value: function () {
              if (this._container instanceof HTMLDivElement || this._asChild) {
                if (this._container) for (var e4 = this._container.querySelectorAll("canvas"), t3 = 0; t3 < e4.length; t3++) {
                  var r3 = e4[t3];
                  void 0 !== r3 && r3.__isPlayer && this._container.removeChild(r3);
                }
                this._drawingCanvas = document.createElement("canvas"), this._drawingCanvas.__isPlayer = true, this._drawingCanvas.style.backgroundColor = "transparent", this._container && (this._container.appendChild(this._drawingCanvas), this._container.style.textAlign = "left");
              }
              this._renderer = new o2.Renderer(this);
            }
          }, {
            key: "_doStart",
            value: function (e4, t3, r3) {
              var i3 = this;
              this._animator = new s2(), void 0 !== e4 ? (this._animator.startValue = Math.max(0, e4.location), this._animator.endValue = Math.min(this._videoItem.frames - 1, e4.location + e4.length), this._animator.duration = (this._animator.endValue - this._animator.startValue + 1) * (1 / this._videoItem.FPS) * 1e3) : (this._animator.startValue = 0, this._animator.endValue = this._videoItem.frames - 1, this._animator.duration = this._videoItem.frames * (1 / this._videoItem.FPS) * 1e3), this._animator.loops = this.loops <= 0 ? 1 / 0 : this.loops, this._animator.fillRule = "Backward" === this.fillMode ? 1 : 0, this._animator.onUpdate = function (e5) {
                i3._currentFrame !== Math.floor(e5) && (i3._forwardAnimating && i3._currentFrame > Math.floor(e5) && i3._renderer.clearAudios(), i3._currentFrame = Math.floor(e5), i3._update(), "function" == typeof i3._onFrame && i3._onFrame(i3._currentFrame), "function" == typeof i3._onPercentage && i3._onPercentage(parseFloat(i3._currentFrame + 1) / parseFloat(i3._videoItem.frames)));
              }, this._animator.onEnd = function () {
                i3._forwardAnimating = false, true === i3.clearsAfterStop && i3.clear(), "function" == typeof i3._onFinished && i3._onFinished();
              }, true === t3 ? (this._animator.reverse(r3), this._forwardAnimating = false) : (this._animator.start(r3), this._forwardAnimating = true), this._currentFrame = this._animator.startValue, this._update();
            }
          }, {
            key: "_resize",
            value: function () {
              var e4 = false;
              if (this._drawingCanvas) {
                var t3;
                t3 = this._drawingCanvas.parentNode ? {
                  width: this._drawingCanvas.parentNode.clientWidth,
                  height: this._drawingCanvas.parentNode.clientHeight
                } : this._videoItem.videoSize;
                var r3 = this._videoItem.videoSize;
                if (t3.width >= r3.width && t3.height >= r3.height) this._drawingCanvas.width = t3.width, this._drawingCanvas.height = t3.height, this._drawingCanvas.style.webkitTransform = this._drawingCanvas.style.transform = "", e4 = true;else {
                  if (this._drawingCanvas.width = r3.width, this._drawingCanvas.height = r3.height, "Fill" === this._contentMode) {
                    var i3 = t3.width / r3.width,
                      n3 = t3.height / r3.height,
                      o3 = (r3.width * i3 - r3.width) / 2,
                      s3 = (r3.height * n3 - r3.height) / 2;
                    this._drawingCanvas.style.webkitTransform = this._drawingCanvas.style.transform = "matrix(" + i3 + ", 0.0, 0.0, " + n3 + ", " + o3 + ", " + s3 + ")";
                  } else if ("AspectFit" === this._contentMode || "AspectFill" === this._contentMode) {
                    var a2 = r3.width / r3.height,
                      f2 = t3.width / t3.height;
                    if (a2 >= f2 && "AspectFit" === this._contentMode || a2 <= f2 && "AspectFill" === this._contentMode) {
                      var l2 = t3.width / r3.width,
                        u2 = (r3.width * l2 - r3.width) / 2,
                        h2 = (r3.height * l2 - r3.height) / 2 + (t3.height - r3.height * l2) / 2;
                      this._drawingCanvas.style.webkitTransform = this._drawingCanvas.style.transform = "matrix(" + l2 + ", 0.0, 0.0, " + l2 + ", " + u2 + ", " + h2 + ")";
                    } else if (a2 < f2 && "AspectFit" === this._contentMode || a2 > f2 && "AspectFill" === this._contentMode) {
                      var c2 = t3.height / r3.height,
                        d2 = (r3.width * c2 - r3.width) / 2 + (t3.width - r3.width * c2) / 2,
                        p2 = (r3.height * c2 - r3.height) / 2;
                      this._drawingCanvas.style.webkitTransform = this._drawingCanvas.style.transform = "matrix(" + c2 + ", 0.0, 0.0, " + c2 + ", " + d2 + ", " + p2 + ")";
                    }
                  }
                  this._globalTransform = void 0;
                }
              }
              if (void 0 === this._drawingCanvas || true === e4) {
                var y2 = 1,
                  m2 = 1,
                  v2 = 0,
                  g2 = 0,
                  b2 = {
                    width: void 0 !== this._container ? this._container.clientWidth : 0,
                    height: void 0 !== this._container ? this._container.clientHeight : 0
                  },
                  _2 = this._videoItem.videoSize;
                if ("Fill" === this._contentMode) y2 = b2.width / _2.width, m2 = b2.height / _2.height;else if ("AspectFit" === this._contentMode || "AspectFill" === this._contentMode) {
                  var w2 = _2.width / _2.height,
                    k2 = b2.width / b2.height;
                  w2 >= k2 && "AspectFit" === this._contentMode || w2 <= k2 && "AspectFill" === this._contentMode ? (y2 = m2 = b2.width / _2.width, g2 = (b2.height - _2.height * m2) / 2) : (w2 < k2 && "AspectFit" === this._contentMode || w2 > k2 && "AspectFill" === this._contentMode) && (y2 = m2 = b2.height / _2.height, v2 = (b2.width - _2.width * y2) / 2);
                }
                this._globalTransform = {
                  a: y2,
                  b: 0,
                  c: 0,
                  d: m2,
                  tx: v2,
                  ty: g2
                };
              }
            }
          }, {
            key: "_update",
            value: function () {
              void 0 !== this._videoItem && (this._resize(), this._renderer.drawFrame(this._currentFrame), this._renderer.playAudio(this._currentFrame));
            }
          }]), e3;
        }();
      }, function (e2, t2, r2) {
        var i2 = r2(13),
          n2 = r2(63),
          o2 = r2(66);
        e2.exports = {
          Parser: i2.Parser,
          Player: n2.Player,
          autoload: o2.AutoLoader.autoload
        }, o2.AutoLoader.autoload();
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.Renderer = void 0;
        var i2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e3) {
            return typeof e3;
          } : function (e3) {
            return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
          },
          n2 = function () {
            function e3(e4, t3) {
              for (var r3 = 0; r3 < t3.length; r3++) {
                var i3 = t3[r3];
                i3.enumerable = i3.enumerable || false, i3.configurable = true, "value" in i3 && (i3.writable = true), Object.defineProperty(e4, i3.key, i3);
              }
            }
            return function (t3, r3, i3) {
              return r3 && e3(t3.prototype, r3), i3 && e3(t3, i3), t3;
            };
          }(),
          o2 = r2(5),
          s2 = r2(15),
          a2 = r2(14);
        t2.Renderer = function () {
          function e3(t3) {
            (function (e4, t4) {
              if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            })(this, e3), this._owner = void 0, this._prepared = false, this._undrawFrame = void 0, this._bitmapCache = void 0, this._soundsQueue = [], this._owner = t3;
          }
          return n2(e3, [{
            key: "dataURLtoBlob",
            value: function (e4) {
              for (var t3 = e4.split(","), r3 = t3[0].match(/:(.*?);/)[1], i3 = atob(t3[1]), n3 = i3.length, o3 = new Uint8Array(n3); n3--;) o3[n3] = i3.charCodeAt(n3);
              return new Blob([o3], {
                type: r3
              });
            }
          }, {
            key: "prepare",
            value: function () {
              var e4,
                t3,
                r3 = this;
              if (this._prepared = false, this._bitmapCache = void 0, void 0 === this._owner._videoItem.images || 0 == Object.keys(this._owner._videoItem.images).length) return this._bitmapCache = {}, void (this._prepared = true);
              void 0 === this._bitmapCache && function () {
                r3._bitmapCache = {};
                var i3 = 0,
                  n3 = 0;
                for (e4 in r3._owner._videoItem.images) {
                  var o3 = r3._owner._videoItem.images[e4];
                  if (0 === o3.indexOf("iVBO") || 0 === o3.indexOf("/9j/2w")) {
                    i3++;
                    var s3 = document.createElement("img");
                    s3.onload = function () {
                      ++n3 == i3 && (this._prepared = true, "number" == typeof this._undrawFrame && (this.drawFrame(this._undrawFrame), this._undrawFrame = void 0));
                    }.bind(r3), s3.src = "data:image/png;base64," + o3;
                    var a3 = e4.replace(".matte", "");
                    r3._bitmapCache[a3] = s3;
                  } else 0 === o3.indexOf("SUQz") && void 0 !== window.Howl && (i3++, (t3 = new Howl({
                    src: ["Google Inc." === navigator.vendor ? URL.createObjectURL(r3.dataURLtoBlob("data:audio/x-mpeg;base64," + o3)) : "data:audio/x-mpeg;base64," + o3],
                    html5: "Google Inc." === navigator.vendor || void 0,
                    preload: "Google Inc." === navigator.vendor || void 0,
                    format: "Google Inc." === navigator.vendor ? ["mp3"] : void 0
                  })).once("load", function () {
                    ++n3 == i3 && (this._prepared = true, "number" == typeof this._undrawFrame && (this.drawFrame(this._undrawFrame), this._undrawFrame = void 0));
                  }.bind(r3)), t3.on("loaderror", function (e5) {
                    console.error(e5);
                  }), r3._bitmapCache[e4] = t3);
                }
              }();
            }
          }, {
            key: "clear",
            value: function () {
              var e4 = (this._owner._drawingCanvas || this._owner._container).getContext("2d"),
                t3 = {
                  x: 0,
                  y: 0,
                  width: (this._owner._drawingCanvas || this._owner._container).width,
                  height: (this._owner._drawingCanvas || this._owner._container).height
                };
              e4.clearRect(t3.x, t3.y, t3.width, t3.height);
            }
          }, {
            key: "clearAudios",
            value: function () {
              this._soundsQueue.forEach(function (e4) {
                e4.player.stop(e4.playID);
              }), this._soundsQueue = [];
            }
          }, {
            key: "drawFrame",
            value: function (e4) {
              var t3 = this;
              if (this._prepared) {
                var r3 = (this._owner._drawingCanvas || this._owner._container).getContext("2d"),
                  i3 = {
                    x: 0,
                    y: 0,
                    width: (this._owner._drawingCanvas || this._owner._container).width,
                    height: (this._owner._drawingCanvas || this._owner._container).height
                  };
                r3.clearRect(i3.x, i3.y, i3.width, i3.height);
                var n3 = /* @__PURE__ */new Map(),
                  o3 = false,
                  s3 = this._owner._videoItem.sprites;
                s3.forEach(function (i4, a3) {
                  if (-1 != s3[0].imageKey.indexOf(".matte")) {
                    if (-1 == i4.imageKey.indexOf(".matte")) {
                      var f2 = s3[a3 - 1];
                      if (o3 && (null == i4.matteKey || 0 == i4.matteKey.length || i4.matteKey != f2.matteKey)) {
                        o3 = false;
                        var l2 = n3.get(i4.matteKey);
                        r3.globalCompositeOperation = "destination-in", t3.drawSprite(l2, r3, e4), r3.globalCompositeOperation = "source-over", r3.restore();
                      }
                      if (null == i4.matteKey || null != f2.matteKey && 0 != f2.matteKey.length && f2.matteKey == i4.matteKey || (o3 = true, r3.save()), t3.drawSprite(i4, r3, e4), o3 && a3 == s3.length - 1) {
                        l2 = n3.get(i4.matteKey);
                        r3.globalCompositeOperation = "destination-in", t3.drawSprite(l2, r3, e4), r3.globalCompositeOperation = "source-over", r3.restore();
                      }
                    } else n3.set(i4.imageKey, i4);
                  } else t3.drawSprite(i4, r3, e4);
                });
              } else this._undrawFrame = e4;
            }
          }, {
            key: "drawSprite",
            value: function (e4, t3, r3) {
              var n3 = this,
                f2 = e4.frames[this._owner._currentFrame];
              if (!(f2.alpha < 0.05)) {
                t3.save(), this._owner._globalTransform && t3.transform(this._owner._globalTransform.a, this._owner._globalTransform.b, this._owner._globalTransform.c, this._owner._globalTransform.d, this._owner._globalTransform.tx, this._owner._globalTransform.ty), t3.globalAlpha = f2.alpha, t3.transform(f2.transform.a, f2.transform.b, f2.transform.c, f2.transform.d, f2.transform.tx, f2.transform.ty);
                var l2 = e4.imageKey.replace(".matte", ""),
                  u2 = this._owner._dynamicImage[l2] || this._bitmapCache[l2] || this._owner._videoItem.images[l2];
                if ("string" == typeof u2) {
                  var h2 = this._bitmapCache[e4.imageKey] || document.createElement("img"),
                    c2 = void 0,
                    d2 = void 0;
                  if (0 === u2.indexOf("iVBO") || 0 === u2.indexOf("/9j/2w") ? h2.src = "data:image/png;base64," + u2 : (h2._svgaSrc !== u2 && (h2._svgaSrc = u2, h2.src = u2), c2 = f2.layout.width, d2 = f2.layout.height), this._bitmapCache[e4.imageKey] = h2, void 0 !== f2.maskPath && null !== f2.maskPath && (this.drawBezier(t3, f2.maskPath), t3.clip()), void 0 !== this._owner._dynamicImageTransform[e4.imageKey]) {
                    t3.save();
                    var p2 = this._owner._dynamicImageTransform[e4.imageKey];
                    t3.transform(p2[0], p2[1], p2[2], p2[3], p2[4], p2[5]);
                  }
                  c2 && d2 ? t3.drawImage(h2, 0, 0, c2, d2) : t3.drawImage(h2, 0, 0), void 0 !== this._owner._dynamicImageTransform[e4.imageKey] && t3.restore();
                } else if ("object" === (void 0 === u2 ? "undefined" : i2(u2))) {
                  if (void 0 !== f2.maskPath && null !== f2.maskPath && (f2.maskPath._styles = void 0, this.drawBezier(t3, f2.maskPath), t3.clip()), void 0 !== this._owner._dynamicImageTransform[e4.imageKey]) {
                    t3.save();
                    var y2 = this._owner._dynamicImageTransform[e4.imageKey];
                    t3.transform(y2[0], y2[1], y2[2], y2[3], y2[4], y2[5]);
                  }
                  t3.drawImage(u2, 0, 0), void 0 !== this._owner._dynamicImageTransform[e4.imageKey] && t3.restore();
                }
                f2.shapes && f2.shapes.forEach(function (e5) {
                  "shape" === e5.type && e5.pathArgs && e5.pathArgs.d && n3.drawBezier(t3, new o2.BezierPath(e5.pathArgs.d, e5.transform, e5.styles)), "ellipse" === e5.type && e5.pathArgs && n3.drawEllipse(t3, new s2.EllipsePath(parseFloat(e5.pathArgs.x) || 0, parseFloat(e5.pathArgs.y) || 0, parseFloat(e5.pathArgs.radiusX) || 0, parseFloat(e5.pathArgs.radiusY) || 0, e5.transform, e5.styles)), "rect" === e5.type && e5.pathArgs && n3.drawRect(t3, new a2.RectPath(parseFloat(e5.pathArgs.x) || 0, parseFloat(e5.pathArgs.y) || 0, parseFloat(e5.pathArgs.width) || 0, parseFloat(e5.pathArgs.height) || 0, parseFloat(e5.pathArgs.cornerRadius) || 0, e5.transform, e5.styles));
                });
                var m2 = this._owner._dynamicText[e4.imageKey];
                if (void 0 !== m2) {
                  t3.textBaseline = "middle", t3.font = m2.style;
                  var v2 = t3.measureText(m2.text).width;
                  t3.fillStyle = m2.color;
                  var g2 = void 0 !== m2.offset && void 0 !== m2.offset.x ? isNaN(parseFloat(m2.offset.x)) ? 0 : parseFloat(m2.offset.x) : 0,
                    b2 = void 0 !== m2.offset && void 0 !== m2.offset.y ? isNaN(parseFloat(m2.offset.y)) ? 0 : parseFloat(m2.offset.y) : 0;
                  t3.fillText(m2.text, (f2.layout.width - v2) / 2 + g2, f2.layout.height / 2 + b2);
                }
                t3.restore();
              }
            }
          }, {
            key: "playAudio",
            value: function (e4) {
              var t3 = this;
              if (this._owner._forwardAnimating && this._owner._videoItem.audios instanceof Array) {
                this._owner._videoItem.audios.forEach(function (r4) {
                  if (r4.startFrame === e4 && void 0 !== t3._bitmapCache[r4.audioKey] && "function" == typeof t3._bitmapCache[r4.audioKey].play) {
                    var i3 = {
                      playID: t3._bitmapCache[r4.audioKey].play(),
                      player: t3._bitmapCache[r4.audioKey],
                      endFrame: r4.endFrame
                    };
                    i3.player.seek(r4.startTime / 1e3, i3.playID), t3._soundsQueue.push(i3);
                  }
                });
                var r3 = false;
                this._soundsQueue.forEach(function (t4) {
                  e4 >= t4.endFrame && (r3 = true, t4.player.stop(t4.playID));
                }), r3 && (this._soundsQueue = this._soundsQueue.filter(function (t4) {
                  return e4 < t4.endFrame;
                }));
              }
            }
          }, {
            key: "resetShapeStyles",
            value: function (e4, t3) {
              var r3 = t3._styles;
              void 0 !== r3 && (r3 && r3.stroke ? e4.strokeStyle = "rgba(" + parseInt(255 * r3.stroke[0]) + ", " + parseInt(255 * r3.stroke[1]) + ", " + parseInt(255 * r3.stroke[2]) + ", " + r3.stroke[3] + ")" : e4.strokeStyle = "transparent", r3 && (e4.lineWidth = r3.strokeWidth || void 0, e4.lineCap = r3.lineCap || void 0, e4.lineJoin = r3.lineJoin || void 0, e4.miterLimit = r3.miterLimit || void 0), r3 && r3.fill ? e4.fillStyle = "rgba(" + parseInt(255 * r3.fill[0]) + ", " + parseInt(255 * r3.fill[1]) + ", " + parseInt(255 * r3.fill[2]) + ", " + r3.fill[3] + ")" : e4.fillStyle = "transparent", r3 && r3.lineDash && e4.setLineDash(r3.lineDash));
            }
          }, {
            key: "drawBezier",
            value: function (e4, t3) {
              var r3 = this;
              e4.save(), this.resetShapeStyles(e4, t3), void 0 !== t3._transform && null !== t3._transform && e4.transform(t3._transform.a, t3._transform.b, t3._transform.c, t3._transform.d, t3._transform.tx, t3._transform.ty);
              var i3 = {
                x: 0,
                y: 0,
                x1: 0,
                y1: 0,
                x2: 0,
                y2: 0
              };
              e4.beginPath(), t3._d.replace(/([a-zA-Z])/g, "|||$1 ").replace(/,/g, " ").split("|||").forEach(function (t4) {
                if (0 != t4.length) {
                  var n3 = t4.substr(0, 1);
                  if ("MLHVCSQRZmlhvcsqrz".indexOf(n3) >= 0) {
                    var o3 = t4.substr(1).trim().split(" ");
                    r3.drawBezierElement(e4, i3, n3, o3);
                  }
                }
              }), t3._styles && t3._styles.fill && e4.fill(), t3._styles && t3._styles.stroke && e4.stroke(), e4.restore();
            }
          }, {
            key: "drawBezierElement",
            value: function (e4, t3, r3, i3) {
              switch (r3) {
                case "M":
                  t3.x = Number(i3[0]), t3.y = Number(i3[1]), e4.moveTo(t3.x, t3.y);
                  break;
                case "m":
                  t3.x += Number(i3[0]), t3.y += Number(i3[1]), e4.moveTo(t3.x, t3.y);
                  break;
                case "L":
                  t3.x = Number(i3[0]), t3.y = Number(i3[1]), e4.lineTo(t3.x, t3.y);
                  break;
                case "l":
                  t3.x += Number(i3[0]), t3.y += Number(i3[1]), e4.lineTo(t3.x, t3.y);
                  break;
                case "H":
                  t3.x = Number(i3[0]), e4.lineTo(t3.x, t3.y);
                  break;
                case "h":
                  t3.x += Number(i3[0]), e4.lineTo(t3.x, t3.y);
                  break;
                case "V":
                  t3.y = Number(i3[0]), e4.lineTo(t3.x, t3.y);
                  break;
                case "v":
                  t3.y += Number(i3[0]), e4.lineTo(t3.x, t3.y);
                  break;
                case "C":
                  t3.x1 = Number(i3[0]), t3.y1 = Number(i3[1]), t3.x2 = Number(i3[2]), t3.y2 = Number(i3[3]), t3.x = Number(i3[4]), t3.y = Number(i3[5]), e4.bezierCurveTo(t3.x1, t3.y1, t3.x2, t3.y2, t3.x, t3.y);
                  break;
                case "c":
                  t3.x1 = t3.x + Number(i3[0]), t3.y1 = t3.y + Number(i3[1]), t3.x2 = t3.x + Number(i3[2]), t3.y2 = t3.y + Number(i3[3]), t3.x += Number(i3[4]), t3.y += Number(i3[5]), e4.bezierCurveTo(t3.x1, t3.y1, t3.x2, t3.y2, t3.x, t3.y);
                  break;
                case "S":
                  t3.x1 && t3.y1 && t3.x2 && t3.y2 ? (t3.x1 = t3.x - t3.x2 + t3.x, t3.y1 = t3.y - t3.y2 + t3.y, t3.x2 = Number(i3[0]), t3.y2 = Number(i3[1]), t3.x = Number(i3[2]), t3.y = Number(i3[3]), e4.bezierCurveTo(t3.x1, t3.y1, t3.x2, t3.y2, t3.x, t3.y)) : (t3.x1 = Number(i3[0]), t3.y1 = Number(i3[1]), t3.x = Number(i3[2]), t3.y = Number(i3[3]), e4.quadraticCurveTo(t3.x1, t3.y1, t3.x, t3.y));
                  break;
                case "s":
                  t3.x1 && t3.y1 && t3.x2 && t3.y2 ? (t3.x1 = t3.x - t3.x2 + t3.x, t3.y1 = t3.y - t3.y2 + t3.y, t3.x2 = t3.x + Number(i3[0]), t3.y2 = t3.y + Number(i3[1]), t3.x += Number(i3[2]), t3.y += Number(i3[3]), e4.bezierCurveTo(t3.x1, t3.y1, t3.x2, t3.y2, t3.x, t3.y)) : (t3.x1 = t3.x + Number(i3[0]), t3.y1 = t3.y + Number(i3[1]), t3.x += Number(i3[2]), t3.y += Number(i3[3]), e4.quadraticCurveTo(t3.x1, t3.y1, t3.x, t3.y));
                  break;
                case "Q":
                  t3.x1 = Number(i3[0]), t3.y1 = Number(i3[1]), t3.x = Number(i3[2]), t3.y = Number(i3[3]), e4.quadraticCurveTo(t3.x1, t3.y1, t3.x, t3.y);
                  break;
                case "q":
                  t3.x1 = t3.x + Number(i3[0]), t3.y1 = t3.y + Number(i3[1]), t3.x += Number(i3[2]), t3.y += Number(i3[3]), e4.quadraticCurveTo(t3.x1, t3.y1, t3.x, t3.y);
                  break;
                case "A":
                case "a":
                  break;
                case "Z":
                case "z":
                  e4.closePath();
              }
            }
          }, {
            key: "drawEllipse",
            value: function (e4, t3) {
              e4.save(), this.resetShapeStyles(e4, t3), void 0 !== t3._transform && null !== t3._transform && e4.transform(t3._transform.a, t3._transform.b, t3._transform.c, t3._transform.d, t3._transform.tx, t3._transform.ty);
              var r3 = t3._x - t3._radiusX,
                i3 = t3._y - t3._radiusY,
                n3 = 2 * t3._radiusX,
                o3 = 2 * t3._radiusY,
                s3 = n3 / 2 * 0.5522848,
                a3 = o3 / 2 * 0.5522848,
                f2 = r3 + n3,
                l2 = i3 + o3,
                u2 = r3 + n3 / 2,
                h2 = i3 + o3 / 2;
              e4.beginPath(), e4.moveTo(r3, h2), e4.bezierCurveTo(r3, h2 - a3, u2 - s3, i3, u2, i3), e4.bezierCurveTo(u2 + s3, i3, f2, h2 - a3, f2, h2), e4.bezierCurveTo(f2, h2 + a3, u2 + s3, l2, u2, l2), e4.bezierCurveTo(u2 - s3, l2, r3, h2 + a3, r3, h2), t3._styles && t3._styles.fill && e4.fill(), t3._styles && t3._styles.stroke && e4.stroke(), e4.restore();
            }
          }, {
            key: "drawRect",
            value: function (e4, t3) {
              e4.save(), this.resetShapeStyles(e4, t3), void 0 !== t3._transform && null !== t3._transform && e4.transform(t3._transform.a, t3._transform.b, t3._transform.c, t3._transform.d, t3._transform.tx, t3._transform.ty);
              var r3 = t3._x,
                i3 = t3._y,
                n3 = t3._width,
                o3 = t3._height,
                s3 = t3._cornerRadius;
              n3 < 2 * s3 && (s3 = n3 / 2), o3 < 2 * s3 && (s3 = o3 / 2), e4.beginPath(), e4.moveTo(r3 + s3, i3), e4.arcTo(r3 + n3, i3, r3 + n3, i3 + o3, s3), e4.arcTo(r3 + n3, i3 + o3, r3, i3 + o3, s3), e4.arcTo(r3, i3 + o3, r3, i3, s3), e4.arcTo(r3, i3, r3 + n3, i3, s3), e4.closePath(), t3._styles && t3._styles.fill && e4.fill(), t3._styles && t3._styles.stroke && e4.stroke(), e4.restore();
            }
          }]), e3;
        }();
      }, function (e2, t2, r2) {
        Object.defineProperty(t2, "__esModule", {
          value: true
        }), t2.AutoLoader = void 0;
        var i2 = r2(13),
          n2 = r2(63),
          o2 = t2.AutoLoader = function e3() {
            !function (e4, t3) {
              if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
            }(this, e3);
          };
        o2.sharedParser = new i2.Parser(), o2.autoload = function (e3, t3) {
          if ("undefined" != typeof window && "undefined" != typeof document) {
            var r3 = t3 || o2.sharedParser;
            if (e3) {
              if (("CANVAS" === e3.tagName || "DIV" === e3.tagName) && e3.attributes.src && e3.attributes.src.value.indexOf(".svga") === e3.attributes.src.value.length - 5) {
                var i3 = e3.attributes.src.value,
                  s2 = new n2.Player(e3);
                r3.load(i3, function (t4) {
                  if (e3.attributes.loops) {
                    var r4 = parseFloat(e3.attributes.loops.value) || 0;
                    s2.loops = r4;
                  }
                  if (e3.attributes.clearsAfterStop) {
                    var i4 = !("false" === e3.attributes.clearsAfterStop.value);
                    s2.clearsAfterStop = i4;
                  }
                  s2.setVideoItem(t4), s2.startAnimation();
                }), e3.player = s2;
              }
            } else for (var a2 = document.querySelectorAll('[src$=".svga"]'), f2 = 0; f2 < a2.length; f2++) {
              e3 = a2[f2];
              o2.autoload(e3);
            }
          }
        };
      }]);
    });
  })(svga_min);
  var svga_minExports = svga_min.exports;
  const SVGA = /* @__PURE__ */getDefaultExportFromCjs(svga_minExports);
  var render$2 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Modal", {
      class: "demoModal",
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      staticClass: "result-modal",
      staticStyle: {
        "display": "none"
      }
    }, [_vm.filterRes.length === 1 ? _c("OneResultModal", {
      attrs: {
        "res": _vm.filterRes,
        "config": this.options.config,
        "ativityId": this.options.ativityId,
        "lotteryId": this.options.lotteryId
      },
      on: {
        "close": _vm.close
      }
    }) : _vm._e(), _vm.filterRes.length > 1 ? _c("TenResultModal", {
      attrs: {
        "res": _vm.filterRes,
        "config": this.options.config,
        "ativityId": this.options.ativityId,
        "lotteryId": this.options.lotteryId
      },
      on: {
        "close": _vm.close
      }
    }) : _vm._e(), _vm.noWin ? _c("NoResultModal", {
      attrs: {
        "res": _vm.filterRes,
        "typeLen": this.options.times,
        "config": this.options.config
      },
      on: {
        "close": _vm.close
      }
    }) : _vm._e()], 1), !_vm.isGotten ? _c("canvas", {
      staticClass: "animation",
      attrs: {
        "id": "animation",
        "height": "1500"
      }
    }) : _vm._e()]) : _vm._e();
  };
  var staticRenderFns$2 = [];
  const DrawResultModal_vue_vue_type_style_index_0_scoped_true_lang = "";
  const stopTouch = e2 => {
    e2.stopPropagation();
  };
  const __vue2_script$2 = {
    components: {
      Modal,
      OneResultModal,
      TenResultModal,
      NoResultModal
    },
    data() {
      return {
        options: {},
        visible: false,
        isGotten: false,
        showRes: false,
        // 动画播放过程中不能关闭弹窗
        closeBtn: false
        //  是否中奖
        // noWin: false,
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
        setTimeout(() => {
          const wrapperEl = document.getElementsByClassName("demoModal")[0];
          wrapperEl.addEventListener("touchstart", stopTouch);
          wrapperEl.addEventListener("touchmove", stopTouch);
        });
        this.$nextTick(async () => {
          var _a2;
          const canvas = document.getElementById("animation");
          canvas.width = document.documentElement.clientWidth;
          canvas.height = document.documentElement.clientHeight;
          const player = new SVGA.Player("#animation");
          player.loops = 1;
          const parser = new SVGA.Parser("#animation");
          const self2 = this;
          player.onFinished(() => {
            this.isGotten = true;
            this.closeBtn = true;
            setTimeout(() => {
              gsapWithCSS.set(".result-modal", {
                display: "flex",
                opacity: 0.2
              });
              gsapWithCSS.to(".result-modal", {
                opacity: 1,
                duration: 0.2
              });
            }, 100);
          });
          const config = (_a2 = this.options) == null ? void 0 : _a2.config;
          const animation = config.animation || "https://i0.hdslb.com/bfs/activity-plat/static/20210907/6722eca0e7e896d265f956d00ca4ff06/mc16H8wAEF.svga";
          parser.load(animation,
          // 加载成功,播放动画
          function (item) {
            player.setVideoItem(item);
            player.startAnimation();
          }, function (err) {
            console.error(err);
            self2.isGotten = true;
            self2.closeBtn = true;
            setTimeout(() => {
              gsapWithCSS.set(".result-modal", {
                display: "flex",
                opacity: 0.2
              });
              gsapWithCSS.to(".result-modal", {
                opacity: 1,
                duration: 0.2
              });
            }, 0);
          });
        });
      },
      close() {
        var _a2;
        if (!this.closeBtn) {
          return;
        }
        (_a2 = this.options) == null ? void 0 : _a2.onClose();
        this.closeBtn = false;
        this.isGotten = false;
        this.visible = false;
        this.showRes = false;
        const wrapperEl = document.getElementsByClassName("demoModal")[0];
        wrapperEl.removeEventListener("touchstart", stopTouch);
        wrapperEl.removeEventListener("touchmove", stopTouch);
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
      },
      complete() {
        console.log("complete");
      }
    },
    computed: {
      filterRes() {
        return this.options.res && this.options.res.filter(item => item.award_sid !== "");
      },
      noWin() {
        var _a2;
        let count = 0;
        (_a2 = this.$data.options.res) == null ? void 0 : _a2.forEach(data2 => {
          data2.award_sid === "" ? count += 1 : "";
        });
        return this.$data.options.times === count;
      }
    }
  };
  const __cssModules$2 = {};
  var __component__$2 = /* @__PURE__ */normalizeComponent(__vue2_script$2, render$2, staticRenderFns$2, false, __vue2_injectStyles$2, "29bc6a68", null, null);
  function __vue2_injectStyles$2(context) {
    for (let o2 in __cssModules$2) {
      this[o2] = __cssModules$2[o2];
    }
  }
  const DrawResultModal = /* @__PURE__ */function () {
    return __component__$2.exports;
  }();
  var render$1 = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _vm.visible ? _c("Layer", {
      attrs: {
        "height": "40%",
        "layer-style": _vm.options.config
      },
      on: {
        "close": _vm.close
      }
    }, [_c("div", {
      ref: "header",
      staticClass: "header"
    }, [_c("span", [_vm._v("提示")]), _c("IconClose", {
      staticClass: "c",
      nativeOn: {
        "click": function ($event) {
          return _vm.close.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "content"
    }, [_c("div", {
      staticClass: "gift"
    }, [_c("div", {
      staticClass: "logo-wrap"
    }, [_c("PhImage", {
      staticClass: "logo",
      attrs: {
        "loading": "lazy",
        "src": [_vm.options.giftInfo.icon, 70, 70]
      }
    })], 1), _c("div", {
      staticClass: "name"
    }, [_vm._v(_vm._s(_vm.options.giftInfo.award_name))]), _c("div", {
      staticClass: "desc"
    }, [_vm._v(_vm._s(_vm.options.giftInfo.description))])])])]) : _vm._e();
  };
  var staticRenderFns$1 = [];
  const GiftDetailLayer_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __vue2_script$1 = {
    name: "GiftDetailLayer",
    components: {
      Layer: Layer$1,
      IconClose: IconClose$1,
      PhImage
    },
    data() {
      return {
        options: {},
        visible: false
      };
    },
    methods: {
      show() {
        this.visible = true;
        document.body.style.overflow = "hidden";
        document.documentElement.style.overflow = "hidden";
        if (window.__match_pull_refresh) {
          window.__match_pull_refresh.disable = true;
        }
      },
      close() {
        this.visible = false;
        document.body.style.removeProperty("overflow");
        document.documentElement.style.removeProperty("overflow");
      }
    }
  };
  const __cssModules$1 = {};
  var __component__$1 = /* @__PURE__ */normalizeComponent(__vue2_script$1, render$1, staticRenderFns$1, false, __vue2_injectStyles$1, "087c20dc", null, null);
  function __vue2_injectStyles$1(context) {
    for (let o2 in __cssModules$1) {
      this[o2] = __cssModules$1[o2];
    }
  }
  const GiftDetailLayer = /* @__PURE__ */function () {
    return __component__$1.exports;
  }();
  const layers = {
    GiftsLayer,
    RecordsLayer,
    PhoneLayer,
    AddressLayer,
    DrawResultModal,
    GiftDetailLayer
  };
  const instance = {};
  const openLayer = (name, options) => {
    if (!instance[name]) {
      instance[name] = new Vue(layers[name]);
      const el = document.createElement("div");
      document.body.appendChild(el);
      instance[name].$mount(el);
    }
    instance[name].$data.options = options || {};
    return instance[name].show();
  };
  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj2) {
        return typeof obj2;
      };
    } else {
      _typeof = function (obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      };
    }
    return _typeof(obj);
  }
  function _classCallCheck(instance2, Constructor) {
    if (!(instance2 instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i2 = 0; i2 < props.length; i2++) {
      var descriptor = props[i2];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  function _toConsumableArray(arr2) {
    return _arrayWithoutHoles(arr2) || _iterableToArray(arr2) || _nonIterableSpread();
  }
  function _arrayWithoutHoles(arr2) {
    if (Array.isArray(arr2)) {
      for (var i2 = 0, arr22 = new Array(arr2.length); i2 < arr2.length; i2++) arr22[i2] = arr2[i2];
      return arr22;
    }
  }
  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }
  function processOptions(value2) {
    var options;
    if (typeof value2 === "function") {
      options = {
        callback: value2
      };
    } else {
      options = value2;
    }
    return options;
  }
  function throttle(callback, delay) {
    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    var timeout2;
    var lastState;
    var currentArgs;
    var throttled = function throttled2(state) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      currentArgs = args;
      if (timeout2 && state === lastState) return;
      var leading = options.leading;
      if (typeof leading === "function") {
        leading = leading(state, lastState);
      }
      if ((!timeout2 || state !== lastState) && leading) {
        callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));
      }
      lastState = state;
      clearTimeout(timeout2);
      timeout2 = setTimeout(function () {
        callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));
        timeout2 = 0;
      }, delay);
    };
    throttled._clear = function () {
      clearTimeout(timeout2);
      timeout2 = null;
    };
    return throttled;
  }
  function deepEqual(val1, val2) {
    if (val1 === val2) return true;
    if (_typeof(val1) === "object") {
      for (var key in val1) {
        if (!deepEqual(val1[key], val2[key])) {
          return false;
        }
      }
      return true;
    }
    return false;
  }
  var VisibilityState = /* @__PURE__ */function () {
    function VisibilityState2(el, options, vnode) {
      _classCallCheck(this, VisibilityState2);
      this.el = el;
      this.observer = null;
      this.frozen = false;
      this.createObserver(options, vnode);
    }
    _createClass(VisibilityState2, [{
      key: "createObserver",
      value: function createObserver(options, vnode) {
        var _this = this;
        if (this.observer) {
          this.destroyObserver();
        }
        if (this.frozen) return;
        this.options = processOptions(options);
        this.callback = function (result, entry) {
          _this.options.callback(result, entry);
          if (result && _this.options.once) {
            _this.frozen = true;
            _this.destroyObserver();
          }
        };
        if (this.callback && this.options.throttle) {
          var _ref = this.options.throttleOptions || {},
            _leading = _ref.leading;
          this.callback = throttle(this.callback, this.options.throttle, {
            leading: function leading(state) {
              return _leading === "both" || _leading === "visible" && state || _leading === "hidden" && !state;
            }
          });
        }
        this.oldResult = void 0;
        this.observer = new IntersectionObserver(function (entries) {
          var entry = entries[0];
          if (entries.length > 1) {
            var intersectingEntry = entries.find(function (e2) {
              return e2.isIntersecting;
            });
            if (intersectingEntry) {
              entry = intersectingEntry;
            }
          }
          if (_this.callback) {
            var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;
            if (result === _this.oldResult) return;
            _this.oldResult = result;
            _this.callback(result, entry);
          }
        }, this.options.intersection);
        vnode.context.$nextTick(function () {
          if (_this.observer) {
            _this.observer.observe(_this.el);
          }
        });
      }
    }, {
      key: "destroyObserver",
      value: function destroyObserver() {
        if (this.observer) {
          this.observer.disconnect();
          this.observer = null;
        }
        if (this.callback && this.callback._clear) {
          this.callback._clear();
          this.callback = null;
        }
      }
    }, {
      key: "threshold",
      get: function get2() {
        return this.options.intersection && typeof this.options.intersection.threshold === "number" ? this.options.intersection.threshold : 0;
      }
    }]);
    return VisibilityState2;
  }();
  function bind(el, _ref2, vnode) {
    var value2 = _ref2.value;
    if (!value2) return;
    if (typeof IntersectionObserver === "undefined") {
      console.warn("[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill");
    } else {
      var state = new VisibilityState(el, value2, vnode);
      el._vue_visibilityState = state;
    }
  }
  function update(el, _ref3, vnode) {
    var value2 = _ref3.value,
      oldValue = _ref3.oldValue;
    if (deepEqual(value2, oldValue)) return;
    var state = el._vue_visibilityState;
    if (!value2) {
      unbind(el);
      return;
    }
    if (state) {
      state.createObserver(value2, vnode);
    } else {
      bind(el, {
        value: value2
      }, vnode);
    }
  }
  function unbind(el) {
    var state = el._vue_visibilityState;
    if (state) {
      state.destroyObserver();
      delete el._vue_visibilityState;
    }
  }
  var ObserveVisibility = {
    bind,
    update,
    unbind
  };
  function install(Vue2) {
    Vue2.directive("observe-visibility", ObserveVisibility);
  }
  var plugin = {
    // eslint-disable-next-line no-undef
    version: "1.0.0",
    install
  };
  var GlobalVue = null;
  if (typeof window !== "undefined") {
    GlobalVue = window.Vue;
  } else if (typeof global !== "undefined") {
    GlobalVue = global.Vue;
  }
  if (GlobalVue) {
    GlobalVue.use(plugin);
  }
  function converToUrlParam(obj) {
    var str = keys$4(obj).map(function (key) {
      return "".concat(key, "=").concat(obj[key]);
    }).join("&");
    return str;
  }
  function parseParamToObj(obj) {
    if (!obj) return;
    var str = obj.search;
    if (!str) {
      str = obj.hash;
    }
    var index2 = str.indexOf("?");
    str = str.substring(index2 + 1);
    var result = {};
    var paramArray = str.split("&");
    for (var i2 = 0, len = paramArray.length; i2 < len; i2++) {
      var pair = paramArray[i2].split("=");
      if (pair[1] === "") {
        pair.push("");
      }
      result[pair[0]] = pair[1];
    }
    return result;
  }
  function checkUrl(str) {
    if (!str) return false;
    var reg = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/;
    return reg.test(str);
  }
  function parseToHttps(url2) {
    if (!url2) return "";
    if (!/^(http:|https:)?\/\//.test(url2)) {
      return "https://".concat(url2);
    }
    return url2.replace(/^(http:|https:)?(?=\/\/)/i, "https:");
  }
  function getMetaTag(name) {
    var meta = document.head.querySelector("[name=".concat(name, "]"));
    if (meta) {
      return meta.content;
    }
    return "";
  }
  const url = {
    converToUrlParam,
    parseParamToObj,
    checkUrl,
    parseToHttps,
    getMetaTag
  };
  function logger(key, value2) {
    if (value2 === void 0) {
      value2 = 1;
    }
    var reportScript;
    var k2 = key.replace(/\./g, "-");
    var spmPrefix = url.getMetaTag("spm_prefix");
    var isBiliHttps = location.href.indexOf("bilihttps") === 0;
    if (!spmPrefix) {
      var meta = document.createElement("meta");
      meta.name = "spm_prefix";
      meta.content = "888.1";
      document.getElementsByTagName("head")[0].appendChild(meta);
    }
    if (!window.reportObserver) {
      window.reportMsgObj = {};
      window.reportConfig = {
        sample: 1,
        scrollTracker: false,
        msgObjects: "reportMsgObj",
        errorTracker: true
      };
      reportScript = document.createElement("script");
      reportScript.src = "".concat(isBiliHttps ? "bilihttps:" : "", "//s1.hdslb.com/bfs/seed/log/report/log-reporter.js");
      document.getElementsByTagName("body")[0].appendChild(reportScript);
    }
    var doReport = function () {
      try {
        window.reportMsgObj && window.reportObserver && (window.reportMsgObj[k2] = value2, window.reportObserver.forceCommit && window.reportObserver.forceCommit());
      } catch (error) {
        console.error("[logger]", error);
      }
    };
    if (reportScript) {
      reportScript.onload = doReport;
    } else {
      doReport();
    }
  }
  Vue.use(plugin);
  const __vue2_script = {
    name: "EraLottery",
    components: {
      IconRefresh: IconRefresh$1,
      IconArrowRight,
      FallbackStatus,
      PhImage
    },
    props: ["styleConfig", "config"],
    data() {
      return {
        isMounted: false,
        user: null,
        loadStatus: "",
        drawing: false,
        count: "-",
        refreshAnimation: false,
        gifts: [],
        winList: [],
        drawOneError: false,
        drawTenError: false,
        isLogin: false,
        lotteryId: "",
        ativityId: "",
        giftPic: "https://i0.hdslb.com/bfs/activity-plat/static/20230425/6319485c5f03766492e9daedb18d2697/Kd0OXrRUiU.png",
        gift_name: "奖品名称",
        lotteryType: 2,
        text: "",
        icon: "",
        points_per_time: 0,
        pointPic: "https://i0.hdslb.com/bfs/activity-plat/static/20230406/6319485c5f03766492e9daedb18d2697/cTh9BUbBtN.png"
      };
    },
    computed: {
      isTenBtn() {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.open_lottery_ten_btn) !== void 0 ? (_b2 = this.styleConfig) == null ? void 0 : _b2.open_lottery_ten_btn : true;
      },
      showOneBtn() {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.draw_one_pic) || ((_b2 = this.styleConfig) == null ? void 0 : _b2.btnColor);
      },
      showTenBtn() {
        var _a2, _b2;
        return (((_a2 = this.styleConfig) == null ? void 0 : _a2.draw_ten_pic) || ((_b2 = this.styleConfig) == null ? void 0 : _b2.btnColor)) && this.isTenBtn;
      },
      noBtnImg() {
        var _a2, _b2;
        return !((_a2 = this.styleConfig) == null ? void 0 : _a2.draw_ten_pic) && !((_b2 = this.styleConfig) == null ? void 0 : _b2.draw_one_pic);
      },
      twoBtnImg() {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.draw_ten_pic) && ((_b2 = this.styleConfig) == null ? void 0 : _b2.draw_one_pic);
      },
      drawOneStyle() {
        var _a2, _b2, _c, _d;
        if ((_a2 = this.styleConfig) == null ? void 0 : _a2.draw_one_pic) {
          return {
            background: `url(${(_b2 = this.styleConfig) == null ? void 0 : _b2.draw_one_pic}) center/contain no-repeat`
          };
        } else {
          return {
            background: (_c = this.styleConfig) == null ? void 0 : _c.btnColor,
            color: ((_d = this.styleConfig) == null ? void 0 : _d.btnTextColor) || "#fff"
          };
        }
      },
      drawTenStyle() {
        var _a2, _b2, _c, _d;
        if ((_a2 = this.styleConfig) == null ? void 0 : _a2.draw_ten_pic) {
          return {
            background: `url(${(_b2 = this.styleConfig) == null ? void 0 : _b2.draw_ten_pic}) center/contain no-repeat`
          };
        } else {
          return {
            background: (_c = this.styleConfig) == null ? void 0 : _c.btnColor,
            color: ((_d = this.styleConfig) == null ? void 0 : _d.btnTextColor) || "#fff"
          };
        }
      },
      drawOneText() {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.btnColor) && !((_b2 = this.styleConfig) == null ? void 0 : _b2.draw_one_pic) ? "抽一次" : "";
      },
      drawTenText() {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.btnColor) && !((_b2 = this.styleConfig) == null ? void 0 : _b2.draw_ten_pic) ? "抽十次" : "";
      },
      optionsStyle() {
        return !this.noBtnImg && !this.twoBtnImg ? "justify-content: center;" : "";
      },
      bgStyle() {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.bgColor) ? {
          backgroundColor: (_b2 = this.styleConfig) == null ? void 0 : _b2.bgColor
        } : {
          backgroundColor: "#3C3F69"
        };
      },
      majorTextColor() {
        var _a2;
        return {
          color: ((_a2 = this.styleConfig) == null ? void 0 : _a2.majorTextColor) || "#fff"
        };
      },
      textColor() {
        var _a2;
        return {
          color: (_a2 = this.styleConfig) == null ? void 0 : _a2.auxiliaryTextColor
        };
      },
      openWinList() {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.open_wlist) !== void 0 ? (_b2 = this.styleConfig) == null ? void 0 : _b2.open_wlist : true;
      },
      idAndGifts() {
        var _a2, _b2;
        return {
          id: (_a2 = this.config) == null ? void 0 : _a2.lottery_id,
          gifts: (_b2 = this.config) == null ? void 0 : _b2.gifts
        };
      }
    },
    watch: {
      "idAndGifts": {
        handler(newVal, oldVal) {
          var _a2, _b2, _c, _d, _e2, _f, _g, _h;
          const newIds = [];
          const newNames = [];
          const oldIds = [];
          const oldNames = [];
          newVal && ((_a2 = newVal == null ? void 0 : newVal.gifts) == null ? void 0 : _a2.forEach(data2 => {
            newIds.push(data2.id);
            newNames.push(data2.name);
          }));
          oldVal && ((_b2 = oldVal == null ? void 0 : oldVal.gifts) == null ? void 0 : _b2.forEach(data2 => {
            oldIds.push(data2.id);
            oldNames.push(data2.name);
          }));
          if (newVal && newVal.id !== oldVal.id) {
            this.fetchGifts(newVal.id);
            this.fetchWinList(newVal.id).then(() => this.winListAnimation());
            this.lotteryType = (_c = this.config) == null ? void 0 : _c.lottery_type;
            this.icon = ((_d = this.config) == null ? void 0 : _d.icon) || "https://i0.hdslb.com/bfs/activity-plat/static/20230406/6319485c5f03766492e9daedb18d2697/cTh9BUbBtN.png";
            this.points_per_time = (_e2 = this.config) == null ? void 0 : _e2.per_time;
            this.text = ((_f = this.config) == null ? void 0 : _f.lottery_type) === 2 ? "抽奖次数: -" : `${(_g = this.config) == null ? void 0 : _g.point_name}: -`;
          } else if (newVal && newVal.id === oldVal.id && (newNames.toString() !== oldNames.toString() || newIds.toString() !== oldIds.toString())) {
            this.fetchGifts((_h = this.config) == null ? void 0 : _h.lottery_id);
          }
        }
      }
    },
    async created() {
      const res = await checkLogin();
      this.isLogin = res.isLogin;
    },
    mounted() {
      var _a2, _b2, _c, _d, _e2, _f, _g, _h;
      logger("lottery_show");
      ((_a2 = this.config) == null ? void 0 : _a2.lottery_id) && this.reload((_b2 = this.config) == null ? void 0 : _b2.lottery_id);
      this.lotteryType = (_c = this.config) == null ? void 0 : _c.lottery_type;
      this.icon = ((_d = this.config) == null ? void 0 : _d.icon) || this.pointPic;
      this.points_per_time = (_e2 = this.config) == null ? void 0 : _e2.per_time;
      this.text = ((_f = this.config) == null ? void 0 : _f.lottery_type) ? ((_g = this.config) == null ? void 0 : _g.lottery_type) === 2 ? "抽奖次数: -" : `${(_h = this.config) == null ? void 0 : _h.point_name}: -` : "抽奖次数: -";
    },
    methods: {
      giftListName(item) {
        var _a2;
        return ((_a2 = item == null ? void 0 : item.award_info) == null ? void 0 : _a2.name) || (item == null ? void 0 : item.gift_name);
      },
      giftName(item) {
        var _a2;
        return ((_a2 = item == null ? void 0 : item.award_info) == null ? void 0 : _a2.name) || (item == null ? void 0 : item.name);
      },
      giftImg(item) {
        var _a2;
        return ((_a2 = item == null ? void 0 : item.award_info) == null ? void 0 : _a2.icon) || (item == null ? void 0 : item.img_url);
      },
      login() {
        var _a2, _b2;
        return (_b2 = (_a2 = window.__match_env_deps) == null ? void 0 : _a2.utils) == null ? void 0 : _b2.loginNa();
      },
      showBtn(type) {
        var _a2, _b2;
        return ((_a2 = this.styleConfig) == null ? void 0 : _a2.btnColor) && !((_b2 = this.styleConfig) == null ? void 0 : _b2[`draw_${type}_pic`]);
      },
      // pullRefresh() {
      //   return this.fetchDrawCount()
      // },
      fetchDrawCount(lottery_id) {
        return getUserTimes(lottery_id || "").then(res => {
          var _a2, _b2;
          if (res) {
            this.count = (res == null ? void 0 : res.lottery_type) === 2 ? res == null ? void 0 : res.times : res == null ? void 0 : res.points;
            this.lotteryType = res == null ? void 0 : res.lottery_type;
            this.icon = ((_a2 = res == null ? void 0 : res.intergral) == null ? void 0 : _a2.icon) || this.pointPic;
            this.points_per_time = res == null ? void 0 : res.points_per_time;
            this.text = (res == null ? void 0 : res.lottery_type) === 2 ? `抽奖次数: ${this.count}` : `${(_b2 = res == null ? void 0 : res.intergral) == null ? void 0 : _b2.name}: ${this.count}`;
          }
        }).catch(e2 => {
          this.count = "-";
        });
      },
      fetchGifts(lottery_id) {
        return getGiftsList(lottery_id).then(res => {
          this.gifts = res || [];
        });
      },
      fetchWinList(lottery_id) {
        return getWinList(lottery_id).then(res => {
          this.winList = (res || []).map((v2, i2) => ({
            ...v2,
            index: i2
          }));
        });
      },
      async refresh() {
        var _a2;
        this.handleReport("click", "unit_lottery_refresh_click");
        if (!this.isLogin) {
          this.refreshAnimation = false;
          return login();
        }
        if (this.refreshAnimation) {
          return;
        }
        this.refreshAnimation = true;
        Promise.all([this.fetchDrawCount((_a2 = this.config) == null ? void 0 : _a2.lottery_id), new Promise(r2 => setTimeout(r2, 500))]).finally(() => this.refreshAnimation = false);
      },
      viewGifts() {
        this.handleReport("click", "unit_lottery_jackpot_click");
        const config = {
          ...this.config,
          ...this.styleConfig
        };
        openLayer("GiftsLayer", {
          config,
          gifts: this.gifts
        });
      },
      viewRecords() {
        var _a2;
        openLink(`${recordLink}?activity_id=${(_a2 = this.config) == null ? void 0 : _a2.activity_id}`, this.isLogin);
      },
      async draw(times) {
        var _a2, _b2, _c;
        times === 1 ? logger("lottery1_click") : logger("lottery10_click");
        if (!this.isLogin) {
          return login();
        }
        if (this.drawing) {
          return;
        }
        this.drawing = true;
        try {
          const res = await doLottery((_a2 = this.config) == null ? void 0 : _a2.lottery_id, times);
          if (res) {
            this.count = isNaN(this.count - times) ? 0 : Math.max(0, this.count - times);
            const config = {
              ...this.config,
              ...this.styleConfig
            };
            openLayer("DrawResultModal", {
              config,
              ativityId: ((_b2 = this.config) == null ? void 0 : _b2.activity_id) || this.ativityId,
              lotteryId: ((_c = this.config) == null ? void 0 : _c.lottery_id) || this.lotteryId,
              times,
              res,
              onClose: () => {
                var _a3;
                this.fetchDrawCount(((_a3 = this.config) == null ? void 0 : _a3.lottery_id) || this.lotteryId);
              }
            });
          }
        } catch (e2) {
          console.error(e2);
          toast$2.info(e2.message);
        }
        this.drawing = false;
      },
      async handleReport(type, name, extra) {
        var _a2, _b2, _c, _d, _e2;
        if (type === "appear") {
          if (!window.__match_report_cache) {
            window.__match_report_cache = {};
          }
          const key = `${name}_${((_a2 = this.config) == null ? void 0 : _a2.sid) || ""}_${((_b2 = this.item) == null ? void 0 : _b2.id) || ""}`;
          if (window.__match_report_cache[key]) {
            return;
          }
          window.__match_report_cache[key] = true;
        }
        const from = (() => {
          var _a3, _b3, _c2;
          if ((_a3 = window.__initialState) == null ? void 0 : _a3["match-env-h5"]) {
            return "live";
          } else if ((_b3 = window.__initialState) == null ? void 0 : _b3["match-env-h5-topic"]) {
            return "project";
          } else if ((_c2 = window.__initialState) == null ? void 0 : _c2["match-env-pc"]) {
            return "web";
          } else {
            return "";
          }
        })();
        (_e2 = (_c = window.reportObserver) == null ? void 0 : _c.reportCustomData) == null ? void 0 : _e2.call(_c, type, {
          spm_id: `${window.__spm_prefix}.${name}`,
          msg: JSON.stringify({
            ...window.__match_report_base,
            lottery_id: (_d = this.config) == null ? void 0 : _d.lottery_id,
            from,
            ...extra
          })
        });
      },
      // 奖品列表轮播
      giftListAnimation() {
        if (this.gifts.length < 4) {
          return;
        }
        const container = this.$refs["rewards"];
        let c1 = container.children[0];
        const rem = Math.min(540, window.innerWidth) / 375 * 50;
        const space = rem * 0.21;
        container.scrollLeft = c1.clientWidth + space;
        let lastT = performance.now();
        let currentLeft = container.scrollLeft;
        const af = t2 => {
          const deltaT = t2 - lastT;
          lastT = t2;
          currentLeft += deltaT * 0.05;
          if (currentLeft + container.clientWidth >= container.scrollWidth) {
            currentLeft = c1.clientWidth + space - container.clientWidth;
          }
          container.scrollLeft = Math.round(currentLeft);
          requestAnimationFrame(af);
        };
        requestAnimationFrame(af);
      },
      // 中奖名单轮播
      winListAnimation() {
        if (this.raf) {
          cancelAnimationFrame(this.raf);
        }
        const container = this.$refs["w-content"];
        if (!container || container.children.length < 2) {
          return;
        }
        let c1 = container.children[0];
        let c2 = container.children[1];
        const height = c1.clientHeight;
        let ct2 = 0;
        let markt = 0;
        const af = t2 => {
          const p2 = ct2 * 0.03;
          if (p2 > height) {
            ct2 = 0;
            markt = t2;
            const temp = c1;
            c1 = c2;
            c2 = temp;
          } else {
            ct2 = t2 - markt;
          }
          c1.style.top = `${-p2}px`;
          c2.style.top = `${height - p2}px`;
          this.raf = requestAnimationFrame(af);
        };
        this.raf = requestAnimationFrame(af);
      },
      async reload(lottery_id) {
        this.fetchDrawCount(lottery_id);
        return Promise.all([this.fetchGifts(lottery_id), this.fetchWinList(lottery_id)]).then(async () => {
          this.loadStatus = "done";
          await this.$nextTick();
          this.giftListAnimation();
          this.winListAnimation();
        }).catch(e2 => {
          this.loadStatus = "error";
          console.error(e2);
        });
      },
      async openModal(times) {
        var _a2;
        if (this.drawing) {
          return;
        }
        this.drawing = true;
        try {
          const res = await doLottery((_a2 = this.config) == null ? void 0 : _a2.lottery_id, times);
          this.count = Math.max(0, this.count - times);
          const config = {
            ...this.config,
            ...this.styleConfig
          };
          if (times === 1) {
            openLayer("DrawResultModal", {
              config,
              res
            });
          } else {
            openLayer("DrawResultModal", {
              config,
              res
            });
          }
        } catch (e2) {
          console.error(e2);
          toast$2.info(e2.message);
        }
        this.drawing = false;
      },
      changeTheme() {
        if (document.documentElement.getAttribute("data-match-theme") === "dark") {
          document.documentElement.setAttribute("data-match-theme", "light");
        } else {
          document.documentElement.setAttribute("data-match-theme", "dark");
        }
      }
    }
  };
  var render = function () {
    var _vm = this;
    var _h = _vm.$createElement;
    var _c = _vm._self._c || _h;
    return _c("div", {
      staticClass: "root"
    }, [[_c("div", {
      staticClass: "st-header",
      style: _vm.bgStyle
    }, [_c("div", {
      staticClass: "left"
    }, [_c("div", {
      staticClass: "text",
      style: _vm.majorTextColor
    }, [_vm.lotteryType === 1 ? _c("img", {
      staticClass: "icon",
      attrs: {
        "src": this.icon,
        "alt": ""
      }
    }) : _vm._e(), _vm._v(" " + _vm._s(_vm.text) + " ")]), _c("IconRefresh", {
      staticClass: "i-refresh",
      attrs: {
        "textColor": _vm.styleConfig && _vm.styleConfig.majorTextColor || "#fff",
        "active": _vm.refreshAnimation
      },
      nativeOn: {
        "click": function ($event) {
          return _vm.refresh.apply(null, arguments);
        }
      }
    })], 1), _c("div", {
      staticClass: "right",
      on: {
        "click": _vm.viewGifts
      }
    }, [_c("div", {
      style: _vm.textColor
    }, [_vm._v("查看奖池")]), _c("IconArrowRight", {
      attrs: {
        "iconStyle": {
          width: "14px",
          height: "14px",
          color: _vm.styleConfig && _vm.styleConfig.auxiliaryTextColor || "#fff"
        }
      }
    })], 1)]), _c("div", {
      staticClass: "content normal",
      style: _vm.bgStyle
    }, [_vm.gifts.length !== 0 ? _c("div", {
      ref: "rewards",
      staticClass: "rewards",
      on: {
        "click": _vm.viewGifts
      }
    }, [_c("div", {
      staticClass: "r1"
    }, _vm._l(_vm.gifts, function (item, i2) {
      return _c("div", {
        key: i2,
        staticClass: "reward"
      }, [_c("div", {
        staticClass: "logo-wrap"
      }, [_c("PhImage", {
        staticClass: "logo-img",
        attrs: {
          "src": [_vm.giftImg(item), 80, 80]
        }
      })], 1), _c("div", {
        staticClass: "name",
        style: _vm.textColor
      }, [_vm._v(_vm._s(_vm.giftName(item)))])]);
    }), 0), _vm.gifts.length > 3 ? _c("div", {
      staticClass: "r2"
    }, _vm._l(_vm.gifts, function (item, i2) {
      return _c("div", {
        key: i2,
        staticClass: "reward"
      }, [_c("div", {
        staticClass: "logo-wrap"
      }, [_c("PhImage", {
        staticClass: "logo-img",
        attrs: {
          "src": [_vm.giftImg(item), 80, 80]
        }
      })], 1), _c("div", {
        staticClass: "name",
        style: _vm.textColor
      }, [_vm._v(_vm._s(_vm.giftName(item)))])]);
    }), 0) : _vm._e()]) : _c("div", {
      staticClass: "rewards"
    }, _vm._l(3, function (i2) {
      return _c("div", {
        key: i2,
        staticClass: "reward"
      }, [_c("div", {
        staticClass: "logo-wrap"
      }, [_c("PhImage", {
        staticClass: "logo-img",
        attrs: {
          "src": [_vm.giftPic, 80, 80]
        }
      })], 1), _c("div", {
        staticClass: "name",
        style: _vm.textColor
      }, [_vm._v(_vm._s(_vm.gift_name))])]);
    }), 0), _c("div", {
      staticClass: "options"
    }, [_vm.showOneBtn ? _c("div", {
      staticClass: "btn",
      style: _vm.drawOneStyle,
      on: {
        "click": function ($event) {
          return _vm.draw(1);
        }
      }
    }, [_vm._v(" " + _vm._s(_vm.drawOneText) + " ")]) : _vm._e(), _vm.showTenBtn ? _c("div", {
      staticClass: "btn",
      style: _vm.drawTenStyle,
      on: {
        "click": function ($event) {
          return _vm.draw(10);
        }
      }
    }, [_vm._v(" " + _vm._s(_vm.drawTenText) + " ")]) : _vm._e()]), _vm.lotteryType === 1 ? _c("div", {
      staticClass: "points"
    }, [_vm.showOneBtn ? _c("div", {
      staticClass: "point-icon",
      style: _vm.majorTextColor
    }, [_c("img", {
      attrs: {
        "src": this.icon,
        "alt": ""
      }
    }), _vm._v(" " + _vm._s(_vm.points_per_time) + " ")]) : _vm._e(), _vm.showTenBtn ? _c("div", {
      staticClass: "point-icon",
      style: _vm.majorTextColor
    }, [_c("img", {
      attrs: {
        "src": this.icon,
        "alt": ""
      }
    }), _vm._v(" " + _vm._s(_vm.points_per_time * 10) + " ")]) : _vm._e()]) : _vm._e(), _c("div", {
      staticClass: "my-records-container"
    }, [_c("div", {
      staticClass: "my-records",
      on: {
        "click": _vm.viewRecords
      }
    }, [_c("div", {
      staticClass: "text",
      style: _vm.textColor
    }, [_vm._v("我的中奖记录")]), _c("IconArrowRight", {
      attrs: {
        "iconStyle": {
          width: "14px",
          height: "14px",
          color: _vm.styleConfig && _vm.styleConfig.auxiliaryTextColor || "#fff"
        }
      }
    })], 1)])]), _vm.openWinList ? [_c("div", {
      staticClass: "st-header r2",
      style: _vm.bgStyle
    }, [_c("div", {
      staticClass: "left"
    }, [_c("div", {
      staticClass: "st-count",
      style: _vm.majorTextColor
    }, [_vm._v("中奖名单")])])]), _c("div", {
      staticClass: "w-list",
      style: _vm.bgStyle
    }, [_vm.winList.length ? _c("div", {
      ref: "w-content",
      staticClass: "w-content"
    }, [_c("div", {
      staticClass: "c1"
    }, _vm._l(_vm.winList, function (item, i2) {
      return _c("div", {
        key: i2,
        staticClass: "record",
        style: _vm.textColor
      }, [_vm._v(" " + _vm._s(item.name) + " "), _c("span", [_vm._v("通过抽奖获得了")]), _vm._v(" " + _vm._s(_vm.giftListName(item)) + " ")]);
    }), 0), _vm.winList.length >= 4 ? _c("div", {
      staticClass: "c2"
    }, _vm._l(_vm.winList, function (item, i2) {
      return _c("div", {
        key: `${i2}_t`,
        staticClass: "record",
        style: _vm.textColor
      }, [_vm._v(" " + _vm._s(item.name) + " "), _c("span", [_vm._v("通过抽奖获得了")]), _vm._v(" " + _vm._s(_vm.giftListName(item)) + " ")]);
    }), 0) : _vm._e()]) : _c("div", {
      staticClass: "w-content none",
      style: _vm.majorTextColor
    }, [_vm._v(" 还没有人中奖，快来试试吧 ")])])] : _vm._e()], _vm.loadStatus === "error" ? _c("div", {
      staticClass: "error"
    }, [_c("FallbackStatus", {
      attrs: {
        "type": "error",
        "text": "加载失败 请重试",
        "config": _vm.config,
        "refresh": _vm.reload
      }
    })], 1) : _vm._e()], 2);
  };
  var staticRenderFns = [];
  const index_vue_vue_type_style_index_0_scoped_true_lang = "";
  const __cssModules = {};
  var __component__ = /* @__PURE__ */normalizeComponent(__vue2_script, render, staticRenderFns, false, __vue2_injectStyles, "e7312a0a", null, null);
  function __vue2_injectStyles(context) {
    for (let o2 in __cssModules) {
      this[o2] = __cssModules[o2];
    }
  }
  const index = /* @__PURE__ */function () {
    return __component__.exports;
  }();
  var o$1 = i$1(function (i2, o2) {
      !function (e2, a2) {
        var r2 = "function",
          n2 = "undefined",
          t2 = "object",
          s2 = "string",
          b2 = "major",
          w2 = "model",
          d2 = "name",
          l2 = "type",
          c2 = "vendor",
          u2 = "version",
          p2 = "architecture",
          m2 = "console",
          h2 = "mobile",
          f2 = "tablet",
          v2 = "smarttv",
          g2 = "wearable",
          x2 = "embedded",
          k2 = "Amazon",
          y2 = "Apple",
          _2 = "ASUS",
          T2 = "BlackBerry",
          S2 = "Browser",
          q2 = "Chrome",
          z2 = "Firefox",
          N2 = "Google",
          A2 = "Huawei",
          E2 = "LG",
          O2 = "Microsoft",
          U2 = "Motorola",
          C2 = "Opera",
          P2 = "Samsung",
          j2 = "Sharp",
          B2 = "Sony",
          M2 = "Xiaomi",
          R2 = "Zebra",
          D2 = "Facebook",
          V2 = "Chromium OS",
          I2 = "Mac OS",
          G2 = " Browser",
          L2 = function (i3) {
            for (var e3 = {}, o3 = 0; o3 < i3.length; o3++) e3[i3[o3].toUpperCase()] = i3[o3];
            return e3;
          },
          F2 = function (i3, e3) {
            return typeof i3 === s2 && -1 !== H2(e3).indexOf(H2(i3));
          },
          H2 = function (i3) {
            return i3.toLowerCase();
          },
          Z2 = function (i3, e3) {
            if (typeof i3 === s2) return i3 = i3.replace(/^\s\s*/, ""), typeof e3 === n2 ? i3 : i3.substring(0, 500);
          },
          $2 = function (i3, e3) {
            for (var o3, n3, s3, b3, w3, d3, l3 = 0; l3 < e3.length && !w3;) {
              var c3 = e3[l3],
                u3 = e3[l3 + 1];
              for (o3 = n3 = 0; o3 < c3.length && !w3 && c3[o3];) if (w3 = c3[o3++].exec(i3)) for (s3 = 0; s3 < u3.length; s3++) d3 = w3[++n3], typeof (b3 = u3[s3]) === t2 && b3.length > 0 ? 2 === b3.length ? this[b3[0]] = typeof b3[1] == r2 ? b3[1].call(this, d3) : b3[1] : 3 === b3.length ? this[b3[0]] = typeof b3[1] !== r2 || b3[1].exec && b3[1].test ? d3 ? d3.replace(b3[1], b3[2]) : a2 : d3 ? b3[1].call(this, d3, b3[2]) : a2 : 4 === b3.length && (this[b3[0]] = d3 ? b3[3].call(this, d3.replace(b3[1], b3[2])) : a2) : this[b3] = d3 || a2;
              l3 += 2;
            }
          },
          W2 = function (i3, e3) {
            for (var o3 in e3) if (typeof e3[o3] === t2 && e3[o3].length > 0) {
              for (var r3 = 0; r3 < e3[o3].length; r3++) if (F2(e3[o3][r3], i3)) return "?" === o3 ? a2 : o3;
            } else if (F2(e3[o3], i3)) return "?" === o3 ? a2 : o3;
            return e3.hasOwnProperty("*") ? e3["*"] : i3;
          },
          X2 = {
            ME: "4.90",
            "NT 3.11": "NT3.51",
            "NT 4.0": "NT4.0",
            2e3: "NT 5.0",
            XP: ["NT 5.1", "NT 5.2"],
            Vista: "NT 6.0",
            7: "NT 6.1",
            8: "NT 6.2",
            8.1: "NT 6.3",
            10: ["NT 6.4", "NT 10.0"],
            RT: "ARM"
          },
          K2 = {
            browser: [[/\b(?:crmo|crios)\/([\w\.]+)/i], [u2, [d2, "Chrome"]], [/edg(?:e|ios|a)?\/([\w\.]+)/i], [u2, [d2, "Edge"]], [/(opera mini)\/([-\w\.]+)/i, /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i, /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i], [d2, u2], [/opios[\/ ]+([\w\.]+)/i], [u2, [d2, C2 + " Mini"]], [/\bop(?:rg)?x\/([\w\.]+)/i], [u2, [d2, C2 + " GX"]], [/\bopr\/([\w\.]+)/i], [u2, [d2, C2]], [/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i], [u2, [d2, "Baidu"]], [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i, /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i, /(?:ms|\()(ie) ([\w\.]+)/i, /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio)\/([-\w\.]+)/i, /(heytap|ovi)browser\/([\d\.]+)/i, /(weibo)__([\d\.]+)/i], [d2, u2], [/quark(?:pc)?\/([-\w\.]+)/i], [u2, [d2, "Quark"]], [/\bddg\/([\w\.]+)/i], [u2, [d2, "DuckDuckGo"]], [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i], [u2, [d2, "UC" + S2]], [/microm.+\bqbcore\/([\w\.]+)/i, /\bqbcore\/([\w\.]+).+microm/i, /micromessenger\/([\w\.]+)/i], [u2, [d2, "WeChat"]], [/konqueror\/([\w\.]+)/i], [u2, [d2, "Konqueror"]], [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i], [u2, [d2, "IE"]], [/ya(?:search)?browser\/([\w\.]+)/i], [u2, [d2, "Yandex"]], [/slbrowser\/([\w\.]+)/i], [u2, [d2, "Smart Lenovo " + S2]], [/(avast|avg)\/([\w\.]+)/i], [[d2, /(.+)/, "$1 Secure " + S2], u2], [/\bfocus\/([\w\.]+)/i], [u2, [d2, z2 + " Focus"]], [/\bopt\/([\w\.]+)/i], [u2, [d2, C2 + " Touch"]], [/coc_coc\w+\/([\w\.]+)/i], [u2, [d2, "Coc Coc"]], [/dolfin\/([\w\.]+)/i], [u2, [d2, "Dolphin"]], [/coast\/([\w\.]+)/i], [u2, [d2, C2 + " Coast"]], [/miuibrowser\/([\w\.]+)/i], [u2, [d2, "MIUI " + S2]], [/fxios\/([-\w\.]+)/i], [u2, [d2, z2]], [/\bqihu|(qi?ho?o?|360)browser/i], [[d2, "360" + G2]], [/\b(qq)\/([\w\.]+)/i], [[d2, /(.+)/, "$1Browser"], u2], [/(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i], [[d2, /(.+)/, "$1" + G2], u2], [/samsungbrowser\/([\w\.]+)/i], [u2, [d2, P2 + " Internet"]], [/(comodo_dragon)\/([\w\.]+)/i], [[d2, /_/g, " "], u2], [/metasr[\/ ]?([\d\.]+)/i], [u2, [d2, "Sogou Explorer"]], [/(sogou)mo\w+\/([\d\.]+)/i], [[d2, "Sogou Mobile"], u2], [/(electron)\/([\w\.]+) safari/i, /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i, /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i], [d2, u2], [/(lbbrowser|rekonq)/i, /\[(linkedin)app\]/i], [d2], [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i], [[d2, D2], u2], [/(Klarna)\/([\w\.]+)/i, /(kakao(?:talk|story))[\/ ]([\w\.]+)/i, /(naver)\(.*?(\d+\.[\w\.]+).*\)/i, /safari (line)\/([\w\.]+)/i, /\b(line)\/([\w\.]+)\/iab/i, /(alipay)client\/([\w\.]+)/i, /(twitter)(?:and| f.+e\/([\w\.]+))/i, /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i], [d2, u2], [/\bgsa\/([\w\.]+) .*safari\//i], [u2, [d2, "GSA"]], [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i], [u2, [d2, "TikTok"]], [/headlesschrome(?:\/([\w\.]+)| )/i], [u2, [d2, q2 + " Headless"]], [/ wv\).+(chrome)\/([\w\.]+)/i], [[d2, q2 + " WebView"], u2], [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i], [u2, [d2, "Android " + S2]], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i], [d2, u2], [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i], [u2, [d2, "Mobile Safari"]], [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i], [u2, d2], [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i], [d2, [u2, W2, {
              "1.0": "/8",
              1.2: "/1",
              1.3: "/3",
              "2.0": "/412",
              "2.0.2": "/416",
              "2.0.3": "/417",
              "2.0.4": "/419",
              "?": "/"
            }]], [/(webkit|khtml)\/([\w\.]+)/i], [d2, u2], [/(navigator|netscape\d?)\/([-\w\.]+)/i], [[d2, "Netscape"], u2], [/(wolvic)\/([\w\.]+)/i], [d2, u2], [/mobile vr; rv:([\w\.]+)\).+firefox/i], [u2, [d2, z2 + " Reality"]], [/ekiohf.+(flow)\/([\w\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i, /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i, /(firefox)\/([\w\.]+)/i, /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i, /(links) \(([\w\.]+)/i], [d2, [u2, /_/g, "."]], [/(cobalt)\/([\w\.]+)/i], [d2, [u2, /master.|lts./, ""]]],
            cpu: [[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i], [[p2, "amd64"]], [/(ia32(?=;))/i], [[p2, H2]], [/((?:i[346]|x)86)[;\)]/i], [[p2, "ia32"]], [/\b(aarch64|arm(v?8e?l?|_?64))\b/i], [[p2, "arm64"]], [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i], [[p2, "armhf"]], [/windows (ce|mobile); ppc;/i], [[p2, "arm"]], [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i], [[p2, /ower/, "", H2]], [/(sun4\w)[;\)]/i], [[p2, "sparc"]], [/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i], [[p2, H2]]],
            device: [[/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i], [w2, [c2, P2], [l2, f2]], [/\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i, /samsung[- ]((?!sm-[lr])[-\w]+)/i, /sec-(sgh\w+)/i], [w2, [c2, P2], [l2, h2]], [/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i], [w2, [c2, y2], [l2, h2]], [/\((ipad);[-\w\),; ]+apple/i, /applecoremedia\/[\w\.]+ \((ipad)/i, /\b(ipad)\d\d?,\d\d?[;\]].+ios/i], [w2, [c2, y2], [l2, f2]], [/(macintosh);/i], [w2, [c2, y2]], [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i], [w2, [c2, j2], [l2, h2]], [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i], [w2, [c2, A2], [l2, f2]], [/(?:huawei|honor)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i], [w2, [c2, A2], [l2, h2]], [/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i, /\b; (\w+) build\/hm\1/i, /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i, /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i, /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i, /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i], [[w2, /_/g, " "], [c2, M2], [l2, h2]], [/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i, /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i], [[w2, /_/g, " "], [c2, M2], [l2, f2]], [/; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i], [w2, [c2, "OPPO"], [l2, h2]], [/\b(opd2\d{3}a?) bui/i], [w2, [c2, "OPPO"], [l2, f2]], [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i], [w2, [c2, "Vivo"], [l2, h2]], [/\b(rmx[1-3]\d{3})(?: bui|;|\))/i], [w2, [c2, "Realme"], [l2, h2]], [/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i, /\bmot(?:orola)?[- ](\w*)/i, /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i], [w2, [c2, U2], [l2, h2]], [/\b(mz60\d|xoom[2 ]{0,2}) build\//i], [w2, [c2, U2], [l2, f2]], [/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i], [w2, [c2, E2], [l2, f2]], [/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i, /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i, /\blg-?([\d\w]+) bui/i], [w2, [c2, E2], [l2, h2]], [/(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i], [w2, [c2, "Lenovo"], [l2, f2]], [/(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i], [[w2, /_/g, " "], [c2, "Nokia"], [l2, h2]], [/(pixel c)\b/i], [w2, [c2, N2], [l2, f2]], [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i], [w2, [c2, N2], [l2, h2]], [/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i], [w2, [c2, B2], [l2, h2]], [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i], [[w2, "Xperia Tablet"], [c2, B2], [l2, f2]], [/ (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i], [w2, [c2, "OnePlus"], [l2, h2]], [/(alexa)webm/i, /(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i, /(kf[a-z]+)( bui|\)).+silk\//i], [w2, [c2, k2], [l2, f2]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i], [[w2, /(.+)/g, "Fire Phone $1"], [c2, k2], [l2, h2]], [/(playbook);[-\w\),; ]+(rim)/i], [w2, c2, [l2, f2]], [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i], [w2, [c2, T2], [l2, h2]], [/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i], [w2, [c2, _2], [l2, f2]], [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i], [w2, [c2, _2], [l2, h2]], [/(nexus 9)/i], [w2, [c2, "HTC"], [l2, f2]], [/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i, /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i], [c2, [w2, /_/g, " "], [l2, h2]], [/droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i], [w2, [c2, "TCL"], [l2, f2]], [/(itel) ((\w+))/i], [[c2, H2], w2, [l2, W2, {
              tablet: ["p10001l", "w7001"],
              "*": "mobile"
            }]], [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i], [w2, [c2, "Acer"], [l2, f2]], [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i], [w2, [c2, "Meizu"], [l2, h2]], [/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i], [w2, [c2, "Ulefone"], [l2, h2]], [/droid.+; (a(?:015|06[35]|142p?))/i], [w2, [c2, "Nothing"], [l2, h2]], [/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i, /(hp) ([\w ]+\w)/i, /(asus)-?(\w+)/i, /(microsoft); (lumia[\w ]+)/i, /(lenovo)[-_ ]?([-\w]+)/i, /(jolla)/i, /(oppo) ?([\w ]+) bui/i], [c2, w2, [l2, h2]], [/(kobo)\s(ereader|touch)/i, /(archos) (gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\/([\w\.]+)/i, /(nook)[\w ]+build\/(\w+)/i, /(dell) (strea[kpr\d ]*[\dko])/i, /(le[- ]+pan)[- ]+(\w{1,9}) bui/i, /(trinity)[- ]*(t\d{3}) bui/i, /(gigaset)[- ]+(q\w{1,9}) bui/i, /(vodafone) ([\w ]+)(?:\)| bui)/i], [c2, w2, [l2, f2]], [/(surface duo)/i], [w2, [c2, O2], [l2, f2]], [/droid [\d\.]+; (fp\du?)(?: b|\))/i], [w2, [c2, "Fairphone"], [l2, h2]], [/(u304aa)/i], [w2, [c2, "AT&T"], [l2, h2]], [/\bsie-(\w*)/i], [w2, [c2, "Siemens"], [l2, h2]], [/\b(rct\w+) b/i], [w2, [c2, "RCA"], [l2, f2]], [/\b(venue[\d ]{2,7}) b/i], [w2, [c2, "Dell"], [l2, f2]], [/\b(q(?:mv|ta)\w+) b/i], [w2, [c2, "Verizon"], [l2, f2]], [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i], [w2, [c2, "Barnes & Noble"], [l2, f2]], [/\b(tm\d{3}\w+) b/i], [w2, [c2, "NuVision"], [l2, f2]], [/\b(k88) b/i], [w2, [c2, "ZTE"], [l2, f2]], [/\b(nx\d{3}j) b/i], [w2, [c2, "ZTE"], [l2, h2]], [/\b(gen\d{3}) b.+49h/i], [w2, [c2, "Swiss"], [l2, h2]], [/\b(zur\d{3}) b/i], [w2, [c2, "Swiss"], [l2, f2]], [/\b((zeki)?tb.*\b) b/i], [w2, [c2, "Zeki"], [l2, f2]], [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i], [[c2, "Dragon Touch"], w2, [l2, f2]], [/\b(ns-?\w{0,9}) b/i], [w2, [c2, "Insignia"], [l2, f2]], [/\b((nxa|next)-?\w{0,9}) b/i], [w2, [c2, "NextBook"], [l2, f2]], [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i], [[c2, "Voice"], w2, [l2, h2]], [/\b(lvtel\-)?(v1[12]) b/i], [[c2, "LvTel"], w2, [l2, h2]], [/\b(ph-1) /i], [w2, [c2, "Essential"], [l2, h2]], [/\b(v(100md|700na|7011|917g).*\b) b/i], [w2, [c2, "Envizen"], [l2, f2]], [/\b(trio[-\w\. ]+) b/i], [w2, [c2, "MachSpeed"], [l2, f2]], [/\btu_(1491) b/i], [w2, [c2, "Rotor"], [l2, f2]], [/(shield[\w ]+) b/i], [w2, [c2, "Nvidia"], [l2, f2]], [/(sprint) (\w+)/i], [c2, w2, [l2, h2]], [/(kin\.[onetw]{3})/i], [[w2, /\./g, " "], [c2, O2], [l2, h2]], [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i], [w2, [c2, R2], [l2, f2]], [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i], [w2, [c2, R2], [l2, h2]], [/smart-tv.+(samsung)/i], [c2, [l2, v2]], [/hbbtv.+maple;(\d+)/i], [[w2, /^/, "SmartTV"], [c2, P2], [l2, v2]], [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i], [[c2, E2], [l2, v2]], [/(apple) ?tv/i], [c2, [w2, y2 + " TV"], [l2, v2]], [/crkey/i], [[w2, q2 + "cast"], [c2, N2], [l2, v2]], [/droid.+aft(\w+)( bui|\))/i], [w2, [c2, k2], [l2, v2]], [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i], [w2, [c2, j2], [l2, v2]], [/(bravia[\w ]+)( bui|\))/i], [w2, [c2, B2], [l2, v2]], [/(mitv-\w{5}) bui/i], [w2, [c2, M2], [l2, v2]], [/Hbbtv.*(technisat) (.*);/i], [c2, w2, [l2, v2]], [/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i, /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i], [[c2, Z2], [w2, Z2], [l2, v2]], [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i], [[l2, v2]], [/(ouya)/i, /(nintendo) ([wids3utch]+)/i], [c2, w2, [l2, m2]], [/droid.+; (shield) bui/i], [w2, [c2, "Nvidia"], [l2, m2]], [/(playstation [345portablevi]+)/i], [w2, [c2, B2], [l2, m2]], [/\b(xbox(?: one)?(?!; xbox))[\); ]/i], [w2, [c2, O2], [l2, m2]], [/\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i], [w2, [c2, P2], [l2, g2]], [/((pebble))app/i], [c2, w2, [l2, g2]], [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i], [w2, [c2, y2], [l2, g2]], [/droid.+; (glass) \d/i], [w2, [c2, N2], [l2, g2]], [/droid.+; (wt63?0{2,3})\)/i], [w2, [c2, R2], [l2, g2]], [/(quest( \d| pro)?)/i], [w2, [c2, D2], [l2, g2]], [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i], [c2, [l2, x2]], [/(aeobc)\b/i], [w2, [c2, k2], [l2, x2]], [/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i], [w2, [l2, h2]], [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i], [w2, [l2, f2]], [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i], [[l2, f2]], [/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i], [[l2, h2]], [/(android[-\w\. ]{0,9});.+buil/i], [w2, [c2, "Generic"]]],
            engine: [[/windows.+ edge\/([\w\.]+)/i], [u2, [d2, "EdgeHTML"]], [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i], [u2, [d2, "Blink"]], [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i, /ekioh(flow)\/([\w\.]+)/i, /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i, /(icab)[\/ ]([23]\.[\d\.]+)/i, /\b(libweb)/i], [d2, u2], [/rv\:([\w\.]{1,9})\b.+(gecko)/i], [u2, d2]],
            os: [[/microsoft (windows) (vista|xp)/i], [d2, u2], [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i], [d2, [u2, W2, X2]], [/windows nt 6\.2; (arm)/i, /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i, /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i], [[u2, W2, X2], [d2, "Windows"]], [/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i, /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i, /cfnetwork\/.+darwin/i], [[u2, /_/g, "."], [d2, "iOS"]], [/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i], [[d2, I2], [u2, /_/g, "."]], [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i], [u2, d2], [/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i, /(blackberry)\w*\/([\w\.]*)/i, /(tizen|kaios)[\/ ]([\w\.]+)/i, /\((series40);/i], [d2, u2], [/\(bb(10);/i], [u2, [d2, T2]], [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i], [u2, [d2, "Symbian"]], [/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i], [u2, [d2, z2 + " OS"]], [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i], [u2, [d2, "webOS"]], [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i], [u2, [d2, "watchOS"]], [/crkey\/([\d\.]+)/i], [u2, [d2, q2 + "cast"]], [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i], [[d2, V2], u2], [/panasonic;(viera)/i, /(netrange)mmh/i, /(nettv)\/(\d+\.[\w\.]+)/i, /(nintendo|playstation) ([wids345portablevuch]+)/i, /(xbox); +xbox ([^\);]+)/i, /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i, /(mint)[\/\(\) ]?(\w*)/i, /(mageia|vectorlinux)[; ]/i, /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i, /(hurd|linux) ?([\w\.]*)/i, /(gnu) ?([\w\.]*)/i, /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i, /(haiku) (\w+)/i], [d2, u2], [/(sunos) ?([\w\.\d]*)/i], [[d2, "Solaris"], u2], [/((?:open)?solaris)[-\/ ]?([\w\.]*)/i, /(aix) ((\d)(?=\.|\)| )[\w\.])*/i, /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, /(unix) ?([\w\.]*)/i], [d2, u2]]
          },
          Q2 = function (i3, o3) {
            if (typeof i3 === t2 && (o3 = i3, i3 = a2), !(this instanceof Q2)) return new Q2(i3, o3).getResult();
            var m3 = typeof e2 !== n2 && e2.navigator ? e2.navigator : a2,
              v3 = i3 || (m3 && m3.userAgent ? m3.userAgent : ""),
              g3 = m3 && m3.userAgentData ? m3.userAgentData : a2,
              x3 = o3 ? function (i4, e3) {
                var o4 = {};
                for (var a3 in i4) o4[a3] = e3[a3] && e3[a3].length % 2 == 0 ? e3[a3].concat(i4[a3]) : i4[a3];
                return o4;
              }(K2, o3) : K2,
              k3 = m3 && m3.userAgent == v3;
            return this.getBrowser = function () {
              var i4,
                e3 = {};
              return e3[d2] = a2, e3[u2] = a2, $2.call(e3, v3, x3.browser), e3[b2] = typeof (i4 = e3[u2]) === s2 ? i4.replace(/[^\d\.]/g, "").split(".")[0] : a2, k3 && m3 && m3.brave && typeof m3.brave.isBrave == r2 && (e3[d2] = "Brave"), e3;
            }, this.getCPU = function () {
              var i4 = {};
              return i4[p2] = a2, $2.call(i4, v3, x3.cpu), i4;
            }, this.getDevice = function () {
              var i4 = {};
              return i4[c2] = a2, i4[w2] = a2, i4[l2] = a2, $2.call(i4, v3, x3.device), k3 && !i4[l2] && g3 && g3.mobile && (i4[l2] = h2), k3 && "Macintosh" == i4[w2] && m3 && typeof m3.standalone !== n2 && m3.maxTouchPoints && m3.maxTouchPoints > 2 && (i4[w2] = "iPad", i4[l2] = f2), i4;
            }, this.getEngine = function () {
              var i4 = {};
              return i4[d2] = a2, i4[u2] = a2, $2.call(i4, v3, x3.engine), i4;
            }, this.getOS = function () {
              var i4 = {};
              return i4[d2] = a2, i4[u2] = a2, $2.call(i4, v3, x3.os), k3 && !i4[d2] && g3 && g3.platform && "Unknown" != g3.platform && (i4[d2] = g3.platform.replace(/chrome os/i, V2).replace(/macos/i, I2)), i4;
            }, this.getResult = function () {
              return {
                ua: this.getUA(),
                browser: this.getBrowser(),
                engine: this.getEngine(),
                os: this.getOS(),
                device: this.getDevice(),
                cpu: this.getCPU()
              };
            }, this.getUA = function () {
              return v3;
            }, this.setUA = function (i4) {
              return v3 = typeof i4 === s2 && i4.length > 500 ? Z2(i4, 500) : i4, this;
            }, this.setUA(v3), this;
          };
        Q2.VERSION = "0.7.39", Q2.BROWSER = L2([d2, u2, b2]), Q2.CPU = L2([p2]), Q2.DEVICE = L2([w2, c2, l2, m2, h2, v2, f2, g2, x2]), Q2.ENGINE = Q2.OS = L2([d2, u2]), i2.exports && (o2 = i2.exports = Q2), o2.UAParser = Q2;
        var Y2 = typeof e2 !== n2 && (e2.jQuery || e2.Zepto);
        if (Y2 && !Y2.ua) {
          var J2 = new Q2();
          Y2.ua = J2.getResult(), Y2.ua.get = function () {
            return J2.getUA();
          }, Y2.ua.set = function (i3) {
            J2.setUA(i3);
            var e3 = J2.getResult();
            for (var o3 in e3) Y2.ua[o3] = e3[o3];
          };
        }
      }("object" == typeof window ? window : r$1);
    }),
    a$1 = o$1.UAParser;
  const uaParser77a586ef = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({
    __proto__: null,
    UAParser: a$1,
    __moduleExports: o$1,
    default: o$1
  }, Symbol.toStringTag, {
    value: "Module"
  }));
  var e = self && self.__spreadArray || function (e2, i2, r2) {
      if (r2 || 2 === arguments.length) for (var n2, t2 = 0, o2 = i2.length; t2 < o2; t2++) !n2 && t2 in i2 || (n2 || (n2 = Array.prototype.slice.call(i2, 0, t2)), n2[t2] = i2[t2]);
      return e2.concat(n2 || Array.prototype.slice.call(i2));
    },
    i = void 0;
  function r() {
    if (void 0 === i) {
      if ("object" != typeof window) return false;
      var e2 = window;
      if (!e2.biliBridgePc && window !== window.parent && window.top) try {
        e2.biliBridgePc = e2.top.biliBridgePc;
      } catch (e3) {}
      i = "object" == typeof e2.biliBridgePc;
    }
    return i;
  }
  function n(e2) {
    for (var i2, n2 = [], t2 = 1; t2 < arguments.length; t2++) n2[t2 - 1] = arguments[t2];
    return r() ? (i2 = window.biliBridgePc)[e2].apply(i2, n2) : Promise.reject(new Error("Not in biliPc!"));
  }
  function t(i2, r2) {
    for (var t2 = [], o2 = 2; o2 < arguments.length; o2++) t2[o2 - 2] = arguments[o2];
    return n.apply(void 0, e(["callNative", i2, r2], t2, false));
  }
  function o(i2, r2) {
    for (var t2 = [], o2 = 2; o2 < arguments.length; o2++) t2[o2 - 2] = arguments[o2];
    return n.apply(void 0, e(["callNativeSync", i2, r2], t2, false));
  }
  function l(e2, i2) {
    return n("once", e2, i2);
  }
  function c(e2, i2) {
    return n("addListener", e2, i2);
  }
  function a(e2) {
    return n("removeAllListeners", e2);
  }
  function p(e2) {
    e2 && e2.style && (e2.style.webkitAppRegion = "drag");
  }
  function d(e2) {
    e2 && e2.style && (e2.style.webkitAppRegion = "no-drag");
  }
  var f = {
    isInBiliPc: r,
    callNative: t,
    callNativeSync: o,
    once: l,
    addListener: c,
    removeAllListeners: a,
    setAppRegionDrag: p,
    setAppRegionNoDrag: d
  };
  const biliBridge216f4b00 = /* @__PURE__ */Object.freeze(/* @__PURE__ */Object.defineProperty({
    __proto__: null,
    addListener: c,
    callNative: t,
    callNativeSync: o,
    default: f,
    isInBiliPc: r,
    once: l,
    removeAllListeners: a,
    setAppRegionDrag: p,
    setAppRegionNoDrag: d
  }, Symbol.toStringTag, {
    value: "Module"
  }));
  return index;
});
